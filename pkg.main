
(function(l, r) { if (!l || l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (self.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(self.document);
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.app = factory());
})(this, (function () { 'use strict';

    (function() {
        const env = {"NODE_ENV":"production","SOME_OBJECT":{"one":1,"two":[1,2],"three":"3"},"UNUSED":null};
        try {
            if (process) {
                process.env = Object.assign({}, process.env);
                Object.assign(process.env, env);
                return;
            }
        } catch (e) {} // avoid ReferenceError: process is not defined
        globalThis.process = { env:env };
    })();

    function noop$4() { }
    function add_location(element, file, line, column, char) {
        element.__svelte_meta = {
            loc: { file, line, column, char }
        };
    }
    function run(fn) {
        return fn();
    }
    function blank_object() {
        return Object.create(null);
    }
    function run_all(fns) {
        fns.forEach(run);
    }
    function is_function(thing) {
        return typeof thing === 'function';
    }
    function safe_not_equal(a, b) {
        return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');
    }
    function is_empty(obj) {
        return Object.keys(obj).length === 0;
    }
    function validate_store(store, name) {
        if (store != null && typeof store.subscribe !== 'function') {
            throw new Error(`'${name}' is not a store with a 'subscribe' method`);
        }
    }
    function subscribe(store, ...callbacks) {
        if (store == null) {
            return noop$4;
        }
        const unsub = store.subscribe(...callbacks);
        return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
    }
    function component_subscribe(component, store, callback) {
        component.$$.on_destroy.push(subscribe(store, callback));
    }
    function null_to_empty(value) {
        return value == null ? '' : value;
    }
    function set_store_value(store, ret, value) {
        store.set(value);
        return ret;
    }
    function append$1(target, node) {
        target.appendChild(node);
    }
    function insert(target, node, anchor) {
        target.insertBefore(node, anchor || null);
    }
    function detach(node) {
        node.parentNode.removeChild(node);
    }
    function destroy_each(iterations, detaching) {
        for (let i = 0; i < iterations.length; i += 1) {
            if (iterations[i])
                iterations[i].d(detaching);
        }
    }
    function element(name) {
        return document.createElement(name);
    }
    function svg_element(name) {
        return document.createElementNS('http://www.w3.org/2000/svg', name);
    }
    function text$2(data) {
        return document.createTextNode(data);
    }
    function space() {
        return text$2(' ');
    }
    function empty$3() {
        return text$2('');
    }
    function listen(node, event, handler, options) {
        node.addEventListener(event, handler, options);
        return () => node.removeEventListener(event, handler, options);
    }
    function attr(node, attribute, value) {
        if (value == null)
            node.removeAttribute(attribute);
        else if (node.getAttribute(attribute) !== value)
            node.setAttribute(attribute, value);
    }
    function children$1(element) {
        return Array.from(element.childNodes);
    }
    function set_style(node, key, value, important) {
        if (value === null) {
            node.style.removeProperty(key);
        }
        else {
            node.style.setProperty(key, value, important ? 'important' : '');
        }
    }
    function select_option(select, value) {
        for (let i = 0; i < select.options.length; i += 1) {
            const option = select.options[i];
            if (option.__value === value) {
                option.selected = true;
                return;
            }
        }
        select.selectedIndex = -1; // no option should be selected
    }
    function select_value(select) {
        const selected_option = select.querySelector(':checked') || select.options[0];
        return selected_option && selected_option.__value;
    }
    function toggle_class(element, name, toggle) {
        element.classList[toggle ? 'add' : 'remove'](name);
    }
    function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {
        const e = document.createEvent('CustomEvent');
        e.initCustomEvent(type, bubbles, cancelable, detail);
        return e;
    }

    let current_component;
    function set_current_component(component) {
        current_component = component;
    }
    function get_current_component() {
        if (!current_component)
            throw new Error('Function called outside component initialization');
        return current_component;
    }
    function onMount(fn) {
        get_current_component().$$.on_mount.push(fn);
    }
    function onDestroy(fn) {
        get_current_component().$$.on_destroy.push(fn);
    }
    function createEventDispatcher() {
        const component = get_current_component();
        return (type, detail, { cancelable = false } = {}) => {
            const callbacks = component.$$.callbacks[type];
            if (callbacks) {
                // TODO are there situations where events could be dispatched
                // in a server (non-DOM) environment?
                const event = custom_event(type, detail, { cancelable });
                callbacks.slice().forEach(fn => {
                    fn.call(component, event);
                });
                return !event.defaultPrevented;
            }
            return true;
        };
    }
    // TODO figure out if we still want to support
    // shorthand events, or if we want to implement
    // a real bubbling mechanism
    function bubble(component, event) {
        const callbacks = component.$$.callbacks[event.type];
        if (callbacks) {
            // @ts-ignore
            callbacks.slice().forEach(fn => fn.call(this, event));
        }
    }

    const dirty_components = [];
    const binding_callbacks = [];
    const render_callbacks = [];
    const flush_callbacks = [];
    const resolved_promise = Promise.resolve();
    let update_scheduled = false;
    function schedule_update() {
        if (!update_scheduled) {
            update_scheduled = true;
            resolved_promise.then(flush);
        }
    }
    function add_render_callback(fn) {
        render_callbacks.push(fn);
    }
    function add_flush_callback(fn) {
        flush_callbacks.push(fn);
    }
    // flush() calls callbacks in this order:
    // 1. All beforeUpdate callbacks, in order: parents before children
    // 2. All bind:this callbacks, in reverse order: children before parents.
    // 3. All afterUpdate callbacks, in order: parents before children. EXCEPT
    //    for afterUpdates called during the initial onMount, which are called in
    //    reverse order: children before parents.
    // Since callbacks might update component values, which could trigger another
    // call to flush(), the following steps guard against this:
    // 1. During beforeUpdate, any updated components will be added to the
    //    dirty_components array and will cause a reentrant call to flush(). Because
    //    the flush index is kept outside the function, the reentrant call will pick
    //    up where the earlier call left off and go through all dirty components. The
    //    current_component value is saved and restored so that the reentrant call will
    //    not interfere with the "parent" flush() call.
    // 2. bind:this callbacks cannot trigger new flush() calls.
    // 3. During afterUpdate, any updated components will NOT have their afterUpdate
    //    callback called a second time; the seen_callbacks set, outside the flush()
    //    function, guarantees this behavior.
    const seen_callbacks = new Set();
    let flushidx = 0; // Do *not* move this inside the flush() function
    function flush() {
        const saved_component = current_component;
        do {
            // first, call beforeUpdate functions
            // and update components
            while (flushidx < dirty_components.length) {
                const component = dirty_components[flushidx];
                flushidx++;
                set_current_component(component);
                update(component.$$);
            }
            set_current_component(null);
            dirty_components.length = 0;
            flushidx = 0;
            while (binding_callbacks.length)
                binding_callbacks.pop()();
            // then, once components are updated, call
            // afterUpdate functions. This may cause
            // subsequent updates...
            for (let i = 0; i < render_callbacks.length; i += 1) {
                const callback = render_callbacks[i];
                if (!seen_callbacks.has(callback)) {
                    // ...so guard against infinite loops
                    seen_callbacks.add(callback);
                    callback();
                }
            }
            render_callbacks.length = 0;
        } while (dirty_components.length);
        while (flush_callbacks.length) {
            flush_callbacks.pop()();
        }
        update_scheduled = false;
        seen_callbacks.clear();
        set_current_component(saved_component);
    }
    function update($$) {
        if ($$.fragment !== null) {
            $$.update();
            run_all($$.before_update);
            const dirty = $$.dirty;
            $$.dirty = [-1];
            $$.fragment && $$.fragment.p($$.ctx, dirty);
            $$.after_update.forEach(add_render_callback);
        }
    }
    const outroing = new Set();
    let outros;
    function group_outros() {
        outros = {
            r: 0,
            c: [],
            p: outros // parent group
        };
    }
    function check_outros() {
        if (!outros.r) {
            run_all(outros.c);
        }
        outros = outros.p;
    }
    function transition_in(block, local) {
        if (block && block.i) {
            outroing.delete(block);
            block.i(local);
        }
    }
    function transition_out(block, local, detach, callback) {
        if (block && block.o) {
            if (outroing.has(block))
                return;
            outroing.add(block);
            outros.c.push(() => {
                outroing.delete(block);
                if (callback) {
                    if (detach)
                        block.d(1);
                    callback();
                }
            });
            block.o(local);
        }
        else if (callback) {
            callback();
        }
    }

    const globals = (typeof window !== 'undefined'
        ? window
        : typeof globalThis !== 'undefined'
            ? globalThis
            : global);
    function outro_and_destroy_block(block, lookup) {
        transition_out(block, 1, 1, () => {
            lookup.delete(block.key);
        });
    }
    function update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {
        let o = old_blocks.length;
        let n = list.length;
        let i = o;
        const old_indexes = {};
        while (i--)
            old_indexes[old_blocks[i].key] = i;
        const new_blocks = [];
        const new_lookup = new Map();
        const deltas = new Map();
        i = n;
        while (i--) {
            const child_ctx = get_context(ctx, list, i);
            const key = get_key(child_ctx);
            let block = lookup.get(key);
            if (!block) {
                block = create_each_block(key, child_ctx);
                block.c();
            }
            else if (dynamic) {
                block.p(child_ctx, dirty);
            }
            new_lookup.set(key, new_blocks[i] = block);
            if (key in old_indexes)
                deltas.set(key, Math.abs(i - old_indexes[key]));
        }
        const will_move = new Set();
        const did_move = new Set();
        function insert(block) {
            transition_in(block, 1);
            block.m(node, next);
            lookup.set(block.key, block);
            next = block.first;
            n--;
        }
        while (o && n) {
            const new_block = new_blocks[n - 1];
            const old_block = old_blocks[o - 1];
            const new_key = new_block.key;
            const old_key = old_block.key;
            if (new_block === old_block) {
                // do nothing
                next = new_block.first;
                o--;
                n--;
            }
            else if (!new_lookup.has(old_key)) {
                // remove old block
                destroy(old_block, lookup);
                o--;
            }
            else if (!lookup.has(new_key) || will_move.has(new_key)) {
                insert(new_block);
            }
            else if (did_move.has(old_key)) {
                o--;
            }
            else if (deltas.get(new_key) > deltas.get(old_key)) {
                did_move.add(new_key);
                insert(new_block);
            }
            else {
                will_move.add(old_key);
                o--;
            }
        }
        while (o--) {
            const old_block = old_blocks[o];
            if (!new_lookup.has(old_block.key))
                destroy(old_block, lookup);
        }
        while (n)
            insert(new_blocks[n - 1]);
        return new_blocks;
    }
    function validate_each_keys(ctx, list, get_context, get_key) {
        const keys = new Set();
        for (let i = 0; i < list.length; i++) {
            const key = get_key(get_context(ctx, list, i));
            if (keys.has(key)) {
                throw new Error('Cannot have duplicate keys in a keyed each');
            }
            keys.add(key);
        }
    }

    function bind(component, name, callback) {
        const index = component.$$.props[name];
        if (index !== undefined) {
            component.$$.bound[index] = callback;
            callback(component.$$.ctx[index]);
        }
    }
    function create_component(block) {
        block && block.c();
    }
    function mount_component(component, target, anchor, customElement) {
        const { fragment, on_mount, on_destroy, after_update } = component.$$;
        fragment && fragment.m(target, anchor);
        if (!customElement) {
            // onMount happens before the initial afterUpdate
            add_render_callback(() => {
                const new_on_destroy = on_mount.map(run).filter(is_function);
                if (on_destroy) {
                    on_destroy.push(...new_on_destroy);
                }
                else {
                    // Edge case - component was destroyed immediately,
                    // most likely as a result of a binding initialising
                    run_all(new_on_destroy);
                }
                component.$$.on_mount = [];
            });
        }
        after_update.forEach(add_render_callback);
    }
    function destroy_component(component, detaching) {
        const $$ = component.$$;
        if ($$.fragment !== null) {
            run_all($$.on_destroy);
            $$.fragment && $$.fragment.d(detaching);
            // TODO null out other refs, including component.$$ (but need to
            // preserve final state?)
            $$.on_destroy = $$.fragment = null;
            $$.ctx = [];
        }
    }
    function make_dirty(component, i) {
        if (component.$$.dirty[0] === -1) {
            dirty_components.push(component);
            schedule_update();
            component.$$.dirty.fill(0);
        }
        component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));
    }
    function init$1(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {
        const parent_component = current_component;
        set_current_component(component);
        const $$ = component.$$ = {
            fragment: null,
            ctx: null,
            // state
            props,
            update: noop$4,
            not_equal,
            bound: blank_object(),
            // lifecycle
            on_mount: [],
            on_destroy: [],
            on_disconnect: [],
            before_update: [],
            after_update: [],
            context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),
            // everything else
            callbacks: blank_object(),
            dirty,
            skip_bound: false,
            root: options.target || parent_component.$$.root
        };
        append_styles && append_styles($$.root);
        let ready = false;
        $$.ctx = instance
            ? instance(component, options.props || {}, (i, ret, ...rest) => {
                const value = rest.length ? rest[0] : ret;
                if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {
                    if (!$$.skip_bound && $$.bound[i])
                        $$.bound[i](value);
                    if (ready)
                        make_dirty(component, i);
                }
                return ret;
            })
            : [];
        $$.update();
        ready = true;
        run_all($$.before_update);
        // `false` as a special case of no DOM component
        $$.fragment = create_fragment ? create_fragment($$.ctx) : false;
        if (options.target) {
            if (options.hydrate) {
                const nodes = children$1(options.target);
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                $$.fragment && $$.fragment.l(nodes);
                nodes.forEach(detach);
            }
            else {
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                $$.fragment && $$.fragment.c();
            }
            if (options.intro)
                transition_in(component.$$.fragment);
            mount_component(component, options.target, options.anchor, options.customElement);
            flush();
        }
        set_current_component(parent_component);
    }
    /**
     * Base class for Svelte components. Used when dev=false.
     */
    class SvelteComponent {
        $destroy() {
            destroy_component(this, 1);
            this.$destroy = noop$4;
        }
        $on(type, callback) {
            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));
            callbacks.push(callback);
            return () => {
                const index = callbacks.indexOf(callback);
                if (index !== -1)
                    callbacks.splice(index, 1);
            };
        }
        $set($$props) {
            if (this.$$set && !is_empty($$props)) {
                this.$$.skip_bound = true;
                this.$$set($$props);
                this.$$.skip_bound = false;
            }
        }
    }

    function dispatch_dev(type, detail) {
        document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));
    }
    function append_dev(target, node) {
        dispatch_dev('SvelteDOMInsert', { target, node });
        append$1(target, node);
    }
    function insert_dev(target, node, anchor) {
        dispatch_dev('SvelteDOMInsert', { target, node, anchor });
        insert(target, node, anchor);
    }
    function detach_dev(node) {
        dispatch_dev('SvelteDOMRemove', { node });
        detach(node);
    }
    function listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {
        const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];
        if (has_prevent_default)
            modifiers.push('preventDefault');
        if (has_stop_propagation)
            modifiers.push('stopPropagation');
        dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });
        const dispose = listen(node, event, handler, options);
        return () => {
            dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });
            dispose();
        };
    }
    function attr_dev(node, attribute, value) {
        attr(node, attribute, value);
        if (value == null)
            dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });
        else
            dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });
    }
    function prop_dev(node, property, value) {
        node[property] = value;
        dispatch_dev('SvelteDOMSetProperty', { node, property, value });
    }
    function set_data_dev(text, data) {
        data = '' + data;
        if (text.wholeText === data)
            return;
        dispatch_dev('SvelteDOMSetData', { node: text, data });
        text.data = data;
    }
    function validate_each_argument(arg) {
        if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {
            let msg = '{#each} only iterates over array-like objects.';
            if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {
                msg += ' You can use a spread to convert this iterable into an array.';
            }
            throw new Error(msg);
        }
    }
    function validate_slots(name, slot, keys) {
        for (const slot_key of Object.keys(slot)) {
            if (!~keys.indexOf(slot_key)) {
                console.warn(`<${name}> received an unexpected slot "${slot_key}".`);
            }
        }
    }
    /**
     * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.
     */
    class SvelteComponentDev extends SvelteComponent {
        constructor(options) {
            if (!options || (!options.target && !options.$$inline)) {
                throw new Error("'target' is a required option");
            }
            super();
        }
        $destroy() {
            super.$destroy();
            this.$destroy = () => {
                console.warn('Component was already destroyed'); // eslint-disable-line no-console
            };
        }
        $capture_state() { }
        $inject_state() { }
    }

    /*

    Based off glamor's StyleSheet, thanks Sunil ❤️

    high performance StyleSheet for css-in-js systems

    - uses multiple style tags behind the scenes for millions of rules
    - uses `insertRule` for appending in production for *much* faster performance

    // usage

    import { StyleSheet } from '@emotion/sheet'

    let styleSheet = new StyleSheet({ key: '', container: document.head })

    styleSheet.insert('#box { border: 1px solid red; }')
    - appends a css rule into the stylesheet

    styleSheet.flush()
    - empties the stylesheet of all its contents

    */
    // $FlowFixMe
    function sheetForTag(tag) {
      if (tag.sheet) {
        // $FlowFixMe
        return tag.sheet;
      } // this weirdness brought to you by firefox

      /* istanbul ignore next */


      for (var i = 0; i < document.styleSheets.length; i++) {
        if (document.styleSheets[i].ownerNode === tag) {
          // $FlowFixMe
          return document.styleSheets[i];
        }
      }
    }

    function createStyleElement(options) {
      var tag = document.createElement('style');
      tag.setAttribute('data-emotion', options.key);

      if (options.nonce !== undefined) {
        tag.setAttribute('nonce', options.nonce);
      }

      tag.appendChild(document.createTextNode(''));
      tag.setAttribute('data-s', '');
      return tag;
    }

    var StyleSheet = /*#__PURE__*/function () {
      // Using Node instead of HTMLElement since container may be a ShadowRoot
      function StyleSheet(options) {
        var _this = this;

        this._insertTag = function (tag) {
          var before;

          if (_this.tags.length === 0) {
            if (_this.insertionPoint) {
              before = _this.insertionPoint.nextSibling;
            } else if (_this.prepend) {
              before = _this.container.firstChild;
            } else {
              before = _this.before;
            }
          } else {
            before = _this.tags[_this.tags.length - 1].nextSibling;
          }

          _this.container.insertBefore(tag, before);

          _this.tags.push(tag);
        };

        this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;
        this.tags = [];
        this.ctr = 0;
        this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets

        this.key = options.key;
        this.container = options.container;
        this.prepend = options.prepend;
        this.insertionPoint = options.insertionPoint;
        this.before = null;
      }

      var _proto = StyleSheet.prototype;

      _proto.hydrate = function hydrate(nodes) {
        nodes.forEach(this._insertTag);
      };

      _proto.insert = function insert(rule) {
        // the max length is how many rules we have per style tag, it's 65000 in speedy mode
        // it's 1 in dev because we insert source maps that map a single rule to a location
        // and you can only have one source map per style tag
        if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {
          this._insertTag(createStyleElement(this));
        }

        var tag = this.tags[this.tags.length - 1];

        if (process.env.NODE_ENV !== 'production') {
          var isImportRule = rule.charCodeAt(0) === 64 && rule.charCodeAt(1) === 105;

          if (isImportRule && this._alreadyInsertedOrderInsensitiveRule) {
            // this would only cause problem in speedy mode
            // but we don't want enabling speedy to affect the observable behavior
            // so we report this error at all times
            console.error("You're attempting to insert the following rule:\n" + rule + '\n\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules.');
          }
          this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !isImportRule;
        }

        if (this.isSpeedy) {
          var sheet = sheetForTag(tag);

          try {
            // this is the ultrafast version, works across browsers
            // the big drawback is that the css won't be editable in devtools
            sheet.insertRule(rule, sheet.cssRules.length);
          } catch (e) {
            if (process.env.NODE_ENV !== 'production' && !/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear){/.test(rule)) {
              console.error("There was a problem inserting the following rule: \"" + rule + "\"", e);
            }
          }
        } else {
          tag.appendChild(document.createTextNode(rule));
        }

        this.ctr++;
      };

      _proto.flush = function flush() {
        // $FlowFixMe
        this.tags.forEach(function (tag) {
          return tag.parentNode && tag.parentNode.removeChild(tag);
        });
        this.tags = [];
        this.ctr = 0;

        if (process.env.NODE_ENV !== 'production') {
          this._alreadyInsertedOrderInsensitiveRule = false;
        }
      };

      return StyleSheet;
    }();

    var MS = '-ms-';
    var MOZ = '-moz-';
    var WEBKIT = '-webkit-';

    var COMMENT = 'comm';
    var RULESET = 'rule';
    var DECLARATION = 'decl';
    var IMPORT = '@import';
    var KEYFRAMES = '@keyframes';

    /**
     * @param {number}
     * @return {number}
     */
    var abs$4 = Math.abs;

    /**
     * @param {number}
     * @return {string}
     */
    var from = String.fromCharCode;

    /**
     * @param {object}
     * @return {object}
     */
    var assign = Object.assign;

    /**
     * @param {string} value
     * @param {number} length
     * @return {number}
     */
    function hash (value, length) {
    	return (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3)
    }

    /**
     * @param {string} value
     * @return {string}
     */
    function trim (value) {
    	return value.trim()
    }

    /**
     * @param {string} value
     * @param {RegExp} pattern
     * @return {string?}
     */
    function match (value, pattern) {
    	return (value = pattern.exec(value)) ? value[0] : value
    }

    /**
     * @param {string} value
     * @param {(string|RegExp)} pattern
     * @param {string} replacement
     * @return {string}
     */
    function replace (value, pattern, replacement) {
    	return value.replace(pattern, replacement)
    }

    /**
     * @param {string} value
     * @param {string} search
     * @return {number}
     */
    function indexof (value, search) {
    	return value.indexOf(search)
    }

    /**
     * @param {string} value
     * @param {number} index
     * @return {number}
     */
    function charat (value, index) {
    	return value.charCodeAt(index) | 0
    }

    /**
     * @param {string} value
     * @param {number} begin
     * @param {number} end
     * @return {string}
     */
    function substr (value, begin, end) {
    	return value.slice(begin, end)
    }

    /**
     * @param {string} value
     * @return {number}
     */
    function strlen (value) {
    	return value.length
    }

    /**
     * @param {any[]} value
     * @return {number}
     */
    function sizeof (value) {
    	return value.length
    }

    /**
     * @param {any} value
     * @param {any[]} array
     * @return {any}
     */
    function append (value, array) {
    	return array.push(value), value
    }

    /**
     * @param {string[]} array
     * @param {function} callback
     * @return {string}
     */
    function combine (array, callback) {
    	return array.map(callback).join('')
    }

    var line$1 = 1;
    var column = 1;
    var length$4 = 0;
    var position = 0;
    var character = 0;
    var characters = '';

    /**
     * @param {string} value
     * @param {object | null} root
     * @param {object | null} parent
     * @param {string} type
     * @param {string[] | string} props
     * @param {object[] | string} children
     * @param {number} length
     */
    function node (value, root, parent, type, props, children, length) {
    	return {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line$1, column: column, length: length, return: ''}
    }

    /**
     * @param {object} root
     * @param {object} props
     * @return {object}
     */
    function copy$2 (root, props) {
    	return assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)
    }

    /**
     * @return {number}
     */
    function char () {
    	return character
    }

    /**
     * @return {number}
     */
    function prev () {
    	character = position > 0 ? charat(characters, --position) : 0;

    	if (column--, character === 10)
    		column = 1, line$1--;

    	return character
    }

    /**
     * @return {number}
     */
    function next () {
    	character = position < length$4 ? charat(characters, position++) : 0;

    	if (column++, character === 10)
    		column = 1, line$1++;

    	return character
    }

    /**
     * @return {number}
     */
    function peek () {
    	return charat(characters, position)
    }

    /**
     * @return {number}
     */
    function caret () {
    	return position
    }

    /**
     * @param {number} begin
     * @param {number} end
     * @return {string}
     */
    function slice$5 (begin, end) {
    	return substr(characters, begin, end)
    }

    /**
     * @param {number} type
     * @return {number}
     */
    function token (type) {
    	switch (type) {
    		// \0 \t \n \r \s whitespace token
    		case 0: case 9: case 10: case 13: case 32:
    			return 5
    		// ! + , / > @ ~ isolate token
    		case 33: case 43: case 44: case 47: case 62: case 64: case 126:
    		// ; { } breakpoint token
    		case 59: case 123: case 125:
    			return 4
    		// : accompanied token
    		case 58:
    			return 3
    		// " ' ( [ opening delimit token
    		case 34: case 39: case 40: case 91:
    			return 2
    		// ) ] closing delimit token
    		case 41: case 93:
    			return 1
    	}

    	return 0
    }

    /**
     * @param {string} value
     * @return {any[]}
     */
    function alloc (value) {
    	return line$1 = column = 1, length$4 = strlen(characters = value), position = 0, []
    }

    /**
     * @param {any} value
     * @return {any}
     */
    function dealloc (value) {
    	return characters = '', value
    }

    /**
     * @param {number} type
     * @return {string}
     */
    function delimit (type) {
    	return trim(slice$5(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))
    }

    /**
     * @param {number} type
     * @return {string}
     */
    function whitespace (type) {
    	while (character = peek())
    		if (character < 33)
    			next();
    		else
    			break

    	return token(type) > 2 || token(character) > 3 ? '' : ' '
    }

    /**
     * @param {number} index
     * @param {number} count
     * @return {string}
     */
    function escaping (index, count) {
    	while (--count && next())
    		// not 0-9 A-F a-f
    		if (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))
    			break

    	return slice$5(index, caret() + (count < 6 && peek() == 32 && next() == 32))
    }

    /**
     * @param {number} type
     * @return {number}
     */
    function delimiter (type) {
    	while (next())
    		switch (character) {
    			// ] ) " '
    			case type:
    				return position
    			// " '
    			case 34: case 39:
    				if (type !== 34 && type !== 39)
    					delimiter(character);
    				break
    			// (
    			case 40:
    				if (type === 41)
    					delimiter(type);
    				break
    			// \
    			case 92:
    				next();
    				break
    		}

    	return position
    }

    /**
     * @param {number} type
     * @param {number} index
     * @return {number}
     */
    function commenter (type, index) {
    	while (next())
    		// //
    		if (type + character === 47 + 10)
    			break
    		// /*
    		else if (type + character === 42 + 42 && peek() === 47)
    			break

    	return '/*' + slice$5(index, position - 1) + '*' + from(type === 47 ? type : next())
    }

    /**
     * @param {number} index
     * @return {string}
     */
    function identifier (index) {
    	while (!token(peek()))
    		next();

    	return slice$5(index, position)
    }

    /**
     * @param {string} value
     * @return {object[]}
     */
    function compile (value) {
    	return dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))
    }

    /**
     * @param {string} value
     * @param {object} root
     * @param {object?} parent
     * @param {string[]} rule
     * @param {string[]} rules
     * @param {string[]} rulesets
     * @param {number[]} pseudo
     * @param {number[]} points
     * @param {string[]} declarations
     * @return {object}
     */
    function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {
    	var index = 0;
    	var offset = 0;
    	var length = pseudo;
    	var atrule = 0;
    	var property = 0;
    	var previous = 0;
    	var variable = 1;
    	var scanning = 1;
    	var ampersand = 1;
    	var character = 0;
    	var type = '';
    	var props = rules;
    	var children = rulesets;
    	var reference = rule;
    	var characters = type;

    	while (scanning)
    		switch (previous = character, character = next()) {
    			// (
    			case 40:
    				if (previous != 108 && characters.charCodeAt(length - 1) == 58) {
    					if (indexof(characters += replace(delimit(character), '&', '&\f'), '&\f') != -1)
    						ampersand = -1;
    					break
    				}
    			// " ' [
    			case 34: case 39: case 91:
    				characters += delimit(character);
    				break
    			// \t \n \r \s
    			case 9: case 10: case 13: case 32:
    				characters += whitespace(previous);
    				break
    			// \
    			case 92:
    				characters += escaping(caret() - 1, 7);
    				continue
    			// /
    			case 47:
    				switch (peek()) {
    					case 42: case 47:
    						append(comment(commenter(next(), caret()), root, parent), declarations);
    						break
    					default:
    						characters += '/';
    				}
    				break
    			// {
    			case 123 * variable:
    				points[index++] = strlen(characters) * ampersand;
    			// } ; \0
    			case 125 * variable: case 59: case 0:
    				switch (character) {
    					// \0 }
    					case 0: case 125: scanning = 0;
    					// ;
    					case 59 + offset:
    						if (property > 0 && (strlen(characters) - length))
    							append(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations);
    						break
    					// @ ;
    					case 59: characters += ';';
    					// { rule/at-rule
    					default:
    						append(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets);

    						if (character === 123)
    							if (offset === 0)
    								parse(characters, root, reference, reference, props, rulesets, length, points, children);
    							else
    								switch (atrule) {
    									// d m s
    									case 100: case 109: case 115:
    										parse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children);
    										break
    									default:
    										parse(characters, reference, reference, reference, [''], children, 0, points, children);
    								}
    				}

    				index = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo;
    				break
    			// :
    			case 58:
    				length = 1 + strlen(characters), property = previous;
    			default:
    				if (variable < 1)
    					if (character == 123)
    						--variable;
    					else if (character == 125 && variable++ == 0 && prev() == 125)
    						continue

    				switch (characters += from(character), character * variable) {
    					// &
    					case 38:
    						ampersand = offset > 0 ? 1 : (characters += '\f', -1);
    						break
    					// ,
    					case 44:
    						points[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1;
    						break
    					// @
    					case 64:
    						// -
    						if (peek() === 45)
    							characters += delimit(next());

    						atrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++;
    						break
    					// -
    					case 45:
    						if (previous === 45 && strlen(characters) == 2)
    							variable = 0;
    				}
    		}

    	return rulesets
    }

    /**
     * @param {string} value
     * @param {object} root
     * @param {object?} parent
     * @param {number} index
     * @param {number} offset
     * @param {string[]} rules
     * @param {number[]} points
     * @param {string} type
     * @param {string[]} props
     * @param {string[]} children
     * @param {number} length
     * @return {object}
     */
    function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {
    	var post = offset - 1;
    	var rule = offset === 0 ? rules : [''];
    	var size = sizeof(rule);

    	for (var i = 0, j = 0, k = 0; i < index; ++i)
    		for (var x = 0, y = substr(value, post + 1, post = abs$4(j = points[i])), z = value; x < size; ++x)
    			if (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\f/g, rule[x])))
    				props[k++] = z;

    	return node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)
    }

    /**
     * @param {number} value
     * @param {object} root
     * @param {object?} parent
     * @return {object}
     */
    function comment (value, root, parent) {
    	return node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)
    }

    /**
     * @param {string} value
     * @param {object} root
     * @param {object?} parent
     * @param {number} length
     * @return {object}
     */
    function declaration (value, root, parent, length) {
    	return node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)
    }

    /**
     * @param {string} value
     * @param {number} length
     * @return {string}
     */
    function prefix (value, length) {
    	switch (hash(value, length)) {
    		// color-adjust
    		case 5103:
    			return WEBKIT + 'print-' + value + value
    		// animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)
    		case 5737: case 4201: case 3177: case 3433: case 1641: case 4457: case 2921:
    		// text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break
    		case 5572: case 6356: case 5844: case 3191: case 6645: case 3005:
    		// mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,
    		case 6391: case 5879: case 5623: case 6135: case 4599: case 4855:
    		// background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)
    		case 4215: case 6389: case 5109: case 5365: case 5621: case 3829:
    			return WEBKIT + value + value
    		// appearance, user-select, transform, hyphens, text-size-adjust
    		case 5349: case 4246: case 4810: case 6968: case 2756:
    			return WEBKIT + value + MOZ + value + MS + value + value
    		// flex, flex-direction
    		case 6828: case 4268:
    			return WEBKIT + value + MS + value + value
    		// order
    		case 6165:
    			return WEBKIT + value + MS + 'flex-' + value + value
    		// align-items
    		case 5187:
    			return WEBKIT + value + replace(value, /(\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value
    		// align-self
    		case 5443:
    			return WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value
    		// align-content
    		case 4675:
    			return WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value
    		// flex-shrink
    		case 5548:
    			return WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value
    		// flex-basis
    		case 5292:
    			return WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value
    		// flex-grow
    		case 6060:
    			return WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value
    		// transition
    		case 4554:
    			return WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value
    		// cursor
    		case 6187:
    			return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value
    		// background, background-image
    		case 5495: case 3959:
    			return replace(value, /(image-set\([^]*)/, WEBKIT + '$1' + '$`$1')
    		// justify-content
    		case 4968:
    			return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value
    		// (margin|padding)-inline-(start|end)
    		case 4095: case 3583: case 4068: case 2532:
    			return replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value
    		// (min|max)?(width|height|inline-size|block-size)
    		case 8116: case 7059: case 5753: case 5535:
    		case 5445: case 5701: case 4933: case 4677:
    		case 5533: case 5789: case 5021: case 4765:
    			// stretch, max-content, min-content, fill-available
    			if (strlen(value) - 1 - length > 6)
    				switch (charat(value, length + 1)) {
    					// (m)ax-content, (m)in-content
    					case 109:
    						// -
    						if (charat(value, length + 4) !== 45)
    							break
    					// (f)ill-available, (f)it-content
    					case 102:
    						return replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value
    					// (s)tretch
    					case 115:
    						return ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length) + value : value
    				}
    			break
    		// position: sticky
    		case 4949:
    			// (s)ticky?
    			if (charat(value, length + 1) !== 115)
    				break
    		// display: (flex|inline-flex)
    		case 6444:
    			switch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {
    				// stic(k)y
    				case 107:
    					return replace(value, ':', ':' + WEBKIT) + value
    				// (inline-)?fl(e)x
    				case 101:
    					return replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value
    			}
    			break
    		// writing-mode
    		case 5936:
    			switch (charat(value, length + 11)) {
    				// vertical-l(r)
    				case 114:
    					return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, 'tb') + value
    				// vertical-r(l)
    				case 108:
    					return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, 'tb-rl') + value
    				// horizontal(-)tb
    				case 45:
    					return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, 'lr') + value
    			}

    			return WEBKIT + value + MS + value + value
    	}

    	return value
    }

    /**
     * @param {object[]} children
     * @param {function} callback
     * @return {string}
     */
    function serialize (children, callback) {
    	var output = '';
    	var length = sizeof(children);

    	for (var i = 0; i < length; i++)
    		output += callback(children[i], i, children, callback) || '';

    	return output
    }

    /**
     * @param {object} element
     * @param {number} index
     * @param {object[]} children
     * @param {function} callback
     * @return {string}
     */
    function stringify (element, index, children, callback) {
    	switch (element.type) {
    		case IMPORT: case DECLARATION: return element.return = element.return || element.value
    		case COMMENT: return ''
    		case KEYFRAMES: return element.return = element.value + '{' + serialize(element.children, callback) + '}'
    		case RULESET: element.value = element.props.join(',');
    	}

    	return strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''
    }

    /**
     * @param {function[]} collection
     * @return {function}
     */
    function middleware (collection) {
    	var length = sizeof(collection);

    	return function (element, index, children, callback) {
    		var output = '';

    		for (var i = 0; i < length; i++)
    			output += collection[i](element, index, children, callback) || '';

    		return output
    	}
    }

    /**
     * @param {function} callback
     * @return {function}
     */
    function rulesheet (callback) {
    	return function (element) {
    		if (!element.root)
    			if (element = element.return)
    				callback(element);
    	}
    }

    /**
     * @param {object} element
     * @param {number} index
     * @param {object[]} children
     * @param {function} callback
     */
    function prefixer (element, index, children, callback) {
    	if (element.length > -1)
    		if (!element.return)
    			switch (element.type) {
    				case DECLARATION: element.return = prefix(element.value, element.length);
    					break
    				case KEYFRAMES:
    					return serialize([copy$2(element, {value: replace(element.value, '@', '@' + WEBKIT)})], callback)
    				case RULESET:
    					if (element.length)
    						return combine(element.props, function (value) {
    							switch (match(value, /(::plac\w+|:read-\w+)/)) {
    								// :read-(only|write)
    								case ':read-only': case ':read-write':
    									return serialize([copy$2(element, {props: [replace(value, /:(read-\w+)/, ':' + MOZ + '$1')]})], callback)
    								// :placeholder
    								case '::placeholder':
    									return serialize([
    										copy$2(element, {props: [replace(value, /:(plac\w+)/, ':' + WEBKIT + 'input-$1')]}),
    										copy$2(element, {props: [replace(value, /:(plac\w+)/, ':' + MOZ + '$1')]}),
    										copy$2(element, {props: [replace(value, /:(plac\w+)/, MS + 'input-$1')]})
    									], callback)
    							}

    							return ''
    						})
    			}
    }

    function memoize(fn) {
      var cache = Object.create(null);
      return function (arg) {
        if (cache[arg] === undefined) cache[arg] = fn(arg);
        return cache[arg];
      };
    }

    var last = function last(arr) {
      return arr.length ? arr[arr.length - 1] : null;
    }; // based on https://github.com/thysultan/stylis.js/blob/e6843c373ebcbbfade25ebcc23f540ed8508da0a/src/Tokenizer.js#L239-L244


    var identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {
      var previous = 0;
      var character = 0;

      while (true) {
        previous = character;
        character = peek(); // &\f

        if (previous === 38 && character === 12) {
          points[index] = 1;
        }

        if (token(character)) {
          break;
        }

        next();
      }

      return slice$5(begin, position);
    };

    var toRules = function toRules(parsed, points) {
      // pretend we've started with a comma
      var index = -1;
      var character = 44;

      do {
        switch (token(character)) {
          case 0:
            // &\f
            if (character === 38 && peek() === 12) {
              // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings
              // stylis inserts \f after & to know when & where it should replace this sequence with the context selector
              // and when it should just concatenate the outer and inner selectors
              // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here
              points[index] = 1;
            }

            parsed[index] += identifierWithPointTracking(position - 1, points, index);
            break;

          case 2:
            parsed[index] += delimit(character);
            break;

          case 4:
            // comma
            if (character === 44) {
              // colon
              parsed[++index] = peek() === 58 ? '&\f' : '';
              points[index] = parsed[index].length;
              break;
            }

          // fallthrough

          default:
            parsed[index] += from(character);
        }
      } while (character = next());

      return parsed;
    };

    var getRules = function getRules(value, points) {
      return dealloc(toRules(alloc(value), points));
    }; // WeakSet would be more appropriate, but only WeakMap is supported in IE11


    var fixedElements = /* #__PURE__ */new WeakMap();
    var compat = function compat(element) {
      if (element.type !== 'rule' || !element.parent || // positive .length indicates that this rule contains pseudo
      // negative .length indicates that this rule has been already prefixed
      element.length < 1) {
        return;
      }

      var value = element.value,
          parent = element.parent;
      var isImplicitRule = element.column === parent.column && element.line === parent.line;

      while (parent.type !== 'rule') {
        parent = parent.parent;
        if (!parent) return;
      } // short-circuit for the simplest case


      if (element.props.length === 1 && value.charCodeAt(0) !== 58
      /* colon */
      && !fixedElements.get(parent)) {
        return;
      } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)
      // then the props has already been manipulated beforehand as they that array is shared between it and its "rule parent"


      if (isImplicitRule) {
        return;
      }

      fixedElements.set(element, true);
      var points = [];
      var rules = getRules(value, points);
      var parentRules = parent.props;

      for (var i = 0, k = 0; i < rules.length; i++) {
        for (var j = 0; j < parentRules.length; j++, k++) {
          element.props[k] = points[i] ? rules[i].replace(/&\f/g, parentRules[j]) : parentRules[j] + " " + rules[i];
        }
      }
    };
    var removeLabel = function removeLabel(element) {
      if (element.type === 'decl') {
        var value = element.value;

        if ( // charcode for l
        value.charCodeAt(0) === 108 && // charcode for b
        value.charCodeAt(2) === 98) {
          // this ignores label
          element["return"] = '';
          element.value = '';
        }
      }
    };
    var ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';

    var isIgnoringComment = function isIgnoringComment(element) {
      return !!element && element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;
    };

    var createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {
      return function (element, index, children) {
        if (element.type !== 'rule') return;
        var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);

        if (unsafePseudoClasses && cache.compat !== true) {
          var prevElement = index > 0 ? children[index - 1] : null;

          if (prevElement && isIgnoringComment(last(prevElement.children))) {
            return;
          }

          unsafePseudoClasses.forEach(function (unsafePseudoClass) {
            console.error("The pseudo class \"" + unsafePseudoClass + "\" is potentially unsafe when doing server-side rendering. Try changing it to \"" + unsafePseudoClass.split('-child')[0] + "-of-type\".");
          });
        }
      };
    };

    var isImportRule = function isImportRule(element) {
      return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;
    };

    var isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {
      for (var i = index - 1; i >= 0; i--) {
        if (!isImportRule(children[i])) {
          return true;
        }
      }

      return false;
    }; // use this to remove incorrect elements from further processing
    // so they don't get handed to the `sheet` (or anything else)
    // as that could potentially lead to additional logs which in turn could be overhelming to the user


    var nullifyElement = function nullifyElement(element) {
      element.type = '';
      element.value = '';
      element["return"] = '';
      element.children = '';
      element.props = '';
    };

    var incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {
      if (!isImportRule(element)) {
        return;
      }

      if (element.parent) {
        console.error("`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.");
        nullifyElement(element);
      } else if (isPrependedWithRegularRules(index, children)) {
        console.error("`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.");
        nullifyElement(element);
      }
    };

    var defaultStylisPlugins = [prefixer];

    var createCache = function createCache(options) {
      var key = options.key;

      if (process.env.NODE_ENV !== 'production' && !key) {
        throw new Error("You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\n" + "If multiple caches share the same key they might \"fight\" for each other's style elements.");
      }

      if ( key === 'css') {
        var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])"); // get SSRed styles out of the way of React's hydration
        // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)
        // note this very very intentionally targets all style elements regardless of the key to ensure
        // that creating a cache works inside of render of a React component

        Array.prototype.forEach.call(ssrStyles, function (node) {
          // we want to only move elements which have a space in the data-emotion attribute value
          // because that indicates that it is an Emotion 11 server-side rendered style elements
          // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector
          // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)
          // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles
          // will not result in the Emotion 10 styles being destroyed
          var dataEmotionAttribute = node.getAttribute('data-emotion');

          if (dataEmotionAttribute.indexOf(' ') === -1) {
            return;
          }
          document.head.appendChild(node);
          node.setAttribute('data-s', '');
        });
      }

      var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;

      if (process.env.NODE_ENV !== 'production') {
        // $FlowFixMe
        if (/[^a-z-]/.test(key)) {
          throw new Error("Emotion key must only contain lower case alphabetical characters and - but \"" + key + "\" was passed");
        }
      }

      var inserted = {};
      var container;
      var nodesToHydrate = [];

      {
        container = options.container || document.head;
        Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which
        // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
        document.querySelectorAll("style[data-emotion^=\"" + key + " \"]"), function (node) {
          var attrib = node.getAttribute("data-emotion").split(' '); // $FlowFixMe

          for (var i = 1; i < attrib.length; i++) {
            inserted[attrib[i]] = true;
          }

          nodesToHydrate.push(node);
        });
      }

      var _insert;

      var omnipresentPlugins = [compat, removeLabel];

      if (process.env.NODE_ENV !== 'production') {
        omnipresentPlugins.push(createUnsafeSelectorsAlarm({
          get compat() {
            return cache.compat;
          }

        }), incorrectImportAlarm);
      }

      {
        var currentSheet;
        var finalizingPlugins = [stringify, process.env.NODE_ENV !== 'production' ? function (element) {
          if (!element.root) {
            if (element["return"]) {
              currentSheet.insert(element["return"]);
            } else if (element.value && element.type !== COMMENT) {
              // insert empty rule in non-production environments
              // so @emotion/jest can grab `key` from the (JS)DOM for caches without any rules inserted yet
              currentSheet.insert(element.value + "{}");
            }
          }
        } : rulesheet(function (rule) {
          currentSheet.insert(rule);
        })];
        var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));

        var stylis = function stylis(styles) {
          return serialize(compile(styles), serializer);
        };

        _insert = function insert(selector, serialized, sheet, shouldCache) {
          currentSheet = sheet;

          if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {
            currentSheet = {
              insert: function insert(rule) {
                sheet.insert(rule + serialized.map);
              }
            };
          }

          stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);

          if (shouldCache) {
            cache.inserted[serialized.name] = true;
          }
        };
      }

      var cache = {
        key: key,
        sheet: new StyleSheet({
          key: key,
          container: container,
          nonce: options.nonce,
          speedy: options.speedy,
          prepend: options.prepend,
          insertionPoint: options.insertionPoint
        }),
        nonce: options.nonce,
        inserted: inserted,
        registered: {},
        insert: _insert
      };
      cache.sheet.hydrate(nodesToHydrate);
      return cache;
    };

    /* eslint-disable */
    // Inspired by https://github.com/garycourt/murmurhash-js
    // Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86
    function murmur2(str) {
      // 'm' and 'r' are mixing constants generated offline.
      // They're not really 'magic', they just happen to work well.
      // const m = 0x5bd1e995;
      // const r = 24;
      // Initialize the hash
      var h = 0; // Mix 4 bytes at a time into the hash

      var k,
          i = 0,
          len = str.length;

      for (; len >= 4; ++i, len -= 4) {
        k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;
        k =
        /* Math.imul(k, m): */
        (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);
        k ^=
        /* k >>> r: */
        k >>> 24;
        h =
        /* Math.imul(k, m): */
        (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^
        /* Math.imul(h, m): */
        (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
      } // Handle the last few bytes of the input array


      switch (len) {
        case 3:
          h ^= (str.charCodeAt(i + 2) & 0xff) << 16;

        case 2:
          h ^= (str.charCodeAt(i + 1) & 0xff) << 8;

        case 1:
          h ^= str.charCodeAt(i) & 0xff;
          h =
          /* Math.imul(h, m): */
          (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
      } // Do a few final mixes of the hash to ensure the last few
      // bytes are well-incorporated.


      h ^= h >>> 13;
      h =
      /* Math.imul(h, m): */
      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
      return ((h ^ h >>> 15) >>> 0).toString(36);
    }

    var unitlessKeys = {
      animationIterationCount: 1,
      borderImageOutset: 1,
      borderImageSlice: 1,
      borderImageWidth: 1,
      boxFlex: 1,
      boxFlexGroup: 1,
      boxOrdinalGroup: 1,
      columnCount: 1,
      columns: 1,
      flex: 1,
      flexGrow: 1,
      flexPositive: 1,
      flexShrink: 1,
      flexNegative: 1,
      flexOrder: 1,
      gridRow: 1,
      gridRowEnd: 1,
      gridRowSpan: 1,
      gridRowStart: 1,
      gridColumn: 1,
      gridColumnEnd: 1,
      gridColumnSpan: 1,
      gridColumnStart: 1,
      msGridRow: 1,
      msGridRowSpan: 1,
      msGridColumn: 1,
      msGridColumnSpan: 1,
      fontWeight: 1,
      lineHeight: 1,
      opacity: 1,
      order: 1,
      orphans: 1,
      tabSize: 1,
      widows: 1,
      zIndex: 1,
      zoom: 1,
      WebkitLineClamp: 1,
      // SVG-related properties
      fillOpacity: 1,
      floodOpacity: 1,
      stopOpacity: 1,
      strokeDasharray: 1,
      strokeDashoffset: 1,
      strokeMiterlimit: 1,
      strokeOpacity: 1,
      strokeWidth: 1
    };

    var ILLEGAL_ESCAPE_SEQUENCE_ERROR = "You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";
    var UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).";
    var hyphenateRegex = /[A-Z]|^ms/g;
    var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;

    var isCustomProperty = function isCustomProperty(property) {
      return property.charCodeAt(1) === 45;
    };

    var isProcessableValue = function isProcessableValue(value) {
      return value != null && typeof value !== 'boolean';
    };

    var processStyleName = /* #__PURE__ */memoize(function (styleName) {
      return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();
    });

    var processStyleValue = function processStyleValue(key, value) {
      switch (key) {
        case 'animation':
        case 'animationName':
          {
            if (typeof value === 'string') {
              return value.replace(animationRegex, function (match, p1, p2) {
                cursor = {
                  name: p1,
                  styles: p2,
                  next: cursor
                };
                return p1;
              });
            }
          }
      }

      if (unitlessKeys[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {
        return value + 'px';
      }

      return value;
    };

    if (process.env.NODE_ENV !== 'production') {
      var contentValuePattern = /(var|attr|counters?|url|(((repeating-)?(linear|radial))|conic)-gradient)\(|(no-)?(open|close)-quote/;
      var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];
      var oldProcessStyleValue = processStyleValue;
      var msPattern = /^-ms-/;
      var hyphenPattern = /-(.)/g;
      var hyphenatedCache = {};

      processStyleValue = function processStyleValue(key, value) {
        if (key === 'content') {
          if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '"' && value.charAt(0) !== "'")) {
            throw new Error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" + value + "\"'`");
          }
        }

        var processed = oldProcessStyleValue(key, value);

        if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {
          hyphenatedCache[key] = true;
          console.error("Using kebab-case for css properties in objects is not supported. Did you mean " + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {
            return _char.toUpperCase();
          }) + "?");
        }

        return processed;
      };
    }

    var noComponentSelectorMessage = 'Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.';

    function handleInterpolation(mergedProps, registered, interpolation) {
      if (interpolation == null) {
        return '';
      }

      if (interpolation.__emotion_styles !== undefined) {
        if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {
          throw new Error(noComponentSelectorMessage);
        }

        return interpolation;
      }

      switch (typeof interpolation) {
        case 'boolean':
          {
            return '';
          }

        case 'object':
          {
            if (interpolation.anim === 1) {
              cursor = {
                name: interpolation.name,
                styles: interpolation.styles,
                next: cursor
              };
              return interpolation.name;
            }

            if (interpolation.styles !== undefined) {
              var next = interpolation.next;

              if (next !== undefined) {
                // not the most efficient thing ever but this is a pretty rare case
                // and there will be very few iterations of this generally
                while (next !== undefined) {
                  cursor = {
                    name: next.name,
                    styles: next.styles,
                    next: cursor
                  };
                  next = next.next;
                }
              }

              var styles = interpolation.styles + ";";

              if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {
                styles += interpolation.map;
              }

              return styles;
            }

            return createStringFromObject(mergedProps, registered, interpolation);
          }

        case 'function':
          {
            if (mergedProps !== undefined) {
              var previousCursor = cursor;
              var result = interpolation(mergedProps);
              cursor = previousCursor;
              return handleInterpolation(mergedProps, registered, result);
            } else if (process.env.NODE_ENV !== 'production') {
              console.error('Functions that are interpolated in css calls will be stringified.\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\n' + 'It can be called directly with props or interpolated in a styled call like this\n' + "let SomeComponent = styled('div')`${dynamicStyle}`");
            }

            break;
          }

        case 'string':
          if (process.env.NODE_ENV !== 'production') {
            var matched = [];
            var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {
              var fakeVarName = "animation" + matched.length;
              matched.push("const " + fakeVarName + " = keyframes`" + p2.replace(/^@keyframes animation-\w+/, '') + "`");
              return "${" + fakeVarName + "}";
            });

            if (matched.length) {
              console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\n\n' + 'Instead of doing this:\n\n' + [].concat(matched, ["`" + replaced + "`"]).join('\n') + '\n\nYou should wrap it with `css` like this:\n\n' + ("css`" + replaced + "`"));
            }
          }

          break;
      } // finalize string values (regular strings and functions interpolated into css calls)


      if (registered == null) {
        return interpolation;
      }

      var cached = registered[interpolation];
      return cached !== undefined ? cached : interpolation;
    }

    function createStringFromObject(mergedProps, registered, obj) {
      var string = '';

      if (Array.isArray(obj)) {
        for (var i = 0; i < obj.length; i++) {
          string += handleInterpolation(mergedProps, registered, obj[i]) + ";";
        }
      } else {
        for (var _key in obj) {
          var value = obj[_key];

          if (typeof value !== 'object') {
            if (registered != null && registered[value] !== undefined) {
              string += _key + "{" + registered[value] + "}";
            } else if (isProcessableValue(value)) {
              string += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
            }
          } else {
            if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {
              throw new Error(noComponentSelectorMessage);
            }

            if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {
              for (var _i = 0; _i < value.length; _i++) {
                if (isProcessableValue(value[_i])) {
                  string += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";
                }
              }
            } else {
              var interpolated = handleInterpolation(mergedProps, registered, value);

              switch (_key) {
                case 'animation':
                case 'animationName':
                  {
                    string += processStyleName(_key) + ":" + interpolated + ";";
                    break;
                  }

                default:
                  {
                    if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {
                      console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);
                    }

                    string += _key + "{" + interpolated + "}";
                  }
              }
            }
          }
        }
      }

      return string;
    }

    var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
    var sourceMapPattern;

    if (process.env.NODE_ENV !== 'production') {
      sourceMapPattern = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//g;
    } // this is the cursor for keyframes
    // keyframes are stored on the SerializedStyles object as a linked list


    var cursor;
    var serializeStyles = function serializeStyles(args, registered, mergedProps) {
      if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {
        return args[0];
      }

      var stringMode = true;
      var styles = '';
      cursor = undefined;
      var strings = args[0];

      if (strings == null || strings.raw === undefined) {
        stringMode = false;
        styles += handleInterpolation(mergedProps, registered, strings);
      } else {
        if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {
          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
        }

        styles += strings[0];
      } // we start at 1 since we've already handled the first arg


      for (var i = 1; i < args.length; i++) {
        styles += handleInterpolation(mergedProps, registered, args[i]);

        if (stringMode) {
          if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {
            console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
          }

          styles += strings[i];
        }
      }

      var sourceMap;

      if (process.env.NODE_ENV !== 'production') {
        styles = styles.replace(sourceMapPattern, function (match) {
          sourceMap = match;
          return '';
        });
      } // using a global regex with .exec is stateful so lastIndex has to be reset each time


      labelPattern.lastIndex = 0;
      var identifierName = '';
      var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5

      while ((match = labelPattern.exec(styles)) !== null) {
        identifierName += '-' + // $FlowFixMe we know it's not null
        match[1];
      }

      var name = murmur2(styles) + identifierName;

      if (process.env.NODE_ENV !== 'production') {
        // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)
        return {
          name: name,
          styles: styles,
          map: sourceMap,
          next: cursor,
          toString: function toString() {
            return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
          }
        };
      }

      return {
        name: name,
        styles: styles,
        next: cursor
      };
    };

    var isBrowser = "object" !== 'undefined';
    function getRegisteredStyles(registered, registeredStyles, classNames) {
      var rawClassName = '';
      classNames.split(' ').forEach(function (className) {
        if (registered[className] !== undefined) {
          registeredStyles.push(registered[className] + ";");
        } else {
          rawClassName += className + " ";
        }
      });
      return rawClassName;
    }
    var registerStyles = function registerStyles(cache, serialized, isStringTag) {
      var className = cache.key + "-" + serialized.name;

      if ( // we only need to add the styles to the registered cache if the
      // class name could be used further down
      // the tree but if it's a string tag, we know it won't
      // so we don't have to add it to registered cache.
      // this improves memory usage since we can avoid storing the whole style string
      (isStringTag === false || // we need to always store it if we're in compat mode and
      // in node since emotion-server relies on whether a style is in
      // the registered cache to know whether a style is global or not
      // also, note that this check will be dead code eliminated in the browser
      isBrowser === false ) && cache.registered[className] === undefined) {
        cache.registered[className] = serialized.styles;
      }
    };
    var insertStyles = function insertStyles(cache, serialized, isStringTag) {
      registerStyles(cache, serialized, isStringTag);
      var className = cache.key + "-" + serialized.name;

      if (cache.inserted[serialized.name] === undefined) {
        var current = serialized;

        do {
          cache.insert(serialized === current ? "." + className : '', current, cache.sheet, true);

          current = current.next;
        } while (current !== undefined);
      }
    };

    function insertWithoutScoping(cache, serialized) {
      if (cache.inserted[serialized.name] === undefined) {
        return cache.insert('', serialized, cache.sheet, true);
      }
    }

    function merge$1(registered, css, className) {
      var registeredStyles = [];
      var rawClassName = getRegisteredStyles(registered, registeredStyles, className);

      if (registeredStyles.length < 2) {
        return className;
      }

      return rawClassName + css(registeredStyles);
    }

    var createEmotion = function createEmotion(options) {
      var cache = createCache(options); // $FlowFixMe

      cache.sheet.speedy = function (value) {
        if (process.env.NODE_ENV !== 'production' && this.ctr !== 0) {
          throw new Error('speedy must be changed before any rules are inserted');
        }

        this.isSpeedy = value;
      };

      cache.compat = true;

      var css = function css() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        var serialized = serializeStyles(args, cache.registered, undefined);
        insertStyles(cache, serialized, false);
        return cache.key + "-" + serialized.name;
      };

      var keyframes = function keyframes() {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        var serialized = serializeStyles(args, cache.registered);
        var animation = "animation-" + serialized.name;
        insertWithoutScoping(cache, {
          name: serialized.name,
          styles: "@keyframes " + animation + "{" + serialized.styles + "}"
        });
        return animation;
      };

      var injectGlobal = function injectGlobal() {
        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
          args[_key3] = arguments[_key3];
        }

        var serialized = serializeStyles(args, cache.registered);
        insertWithoutScoping(cache, serialized);
      };

      var cx = function cx() {
        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }

        return merge$1(cache.registered, css, classnames(args));
      };

      return {
        css: css,
        cx: cx,
        injectGlobal: injectGlobal,
        keyframes: keyframes,
        hydrate: function hydrate(ids) {
          ids.forEach(function (key) {
            cache.inserted[key] = true;
          });
        },
        flush: function flush() {
          cache.registered = {};
          cache.inserted = {};
          cache.sheet.flush();
        },
        // $FlowFixMe
        sheet: cache.sheet,
        cache: cache,
        getRegisteredStyles: getRegisteredStyles.bind(null, cache.registered),
        merge: merge$1.bind(null, cache.registered, css)
      };
    };

    var classnames = function classnames(args) {
      var cls = '';

      for (var i = 0; i < args.length; i++) {
        var arg = args[i];
        if (arg == null) continue;
        var toAdd = void 0;

        switch (typeof arg) {
          case 'boolean':
            break;

          case 'object':
            {
              if (Array.isArray(arg)) {
                toAdd = classnames(arg);
              } else {
                toAdd = '';

                for (var k in arg) {
                  if (arg[k] && k) {
                    toAdd && (toAdd += ' ');
                    toAdd += k;
                  }
                }
              }

              break;
            }

          default:
            {
              toAdd = arg;
            }
        }

        if (toAdd) {
          cls && (cls += ' ');
          cls += toAdd;
        }
      }

      return cls;
    };

    var _createEmotion = createEmotion({
      key: 'css'
    }),
        cx = _createEmotion.cx,
        css = _createEmotion.css;

    var version = "6.7.0";

    function ascending$3(a, b) {
      return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
    }

    function bisector(f) {
      let delta = f;
      let compare = f;

      if (f.length === 1) {
        delta = (d, x) => f(d) - x;
        compare = ascendingComparator(f);
      }

      function left(a, x, lo, hi) {
        if (lo == null) lo = 0;
        if (hi == null) hi = a.length;
        while (lo < hi) {
          const mid = (lo + hi) >>> 1;
          if (compare(a[mid], x) < 0) lo = mid + 1;
          else hi = mid;
        }
        return lo;
      }

      function right(a, x, lo, hi) {
        if (lo == null) lo = 0;
        if (hi == null) hi = a.length;
        while (lo < hi) {
          const mid = (lo + hi) >>> 1;
          if (compare(a[mid], x) > 0) hi = mid;
          else lo = mid + 1;
        }
        return lo;
      }

      function center(a, x, lo, hi) {
        if (lo == null) lo = 0;
        if (hi == null) hi = a.length;
        const i = left(a, x, lo, hi - 1);
        return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;
      }

      return {left, center, right};
    }

    function ascendingComparator(f) {
      return (d, x) => ascending$3(f(d), x);
    }

    function number$3(x) {
      return x === null ? NaN : +x;
    }

    function* numbers(values, valueof) {
      if (valueof === undefined) {
        for (let value of values) {
          if (value != null && (value = +value) >= value) {
            yield value;
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
            yield value;
          }
        }
      }
    }

    const ascendingBisect = bisector(ascending$3);
    const bisectRight = ascendingBisect.right;
    const bisectLeft = ascendingBisect.left;
    const bisectCenter = bisector(number$3).center;
    var bisect = bisectRight;

    function count$1(values, valueof) {
      let count = 0;
      if (valueof === undefined) {
        for (let value of values) {
          if (value != null && (value = +value) >= value) {
            ++count;
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
            ++count;
          }
        }
      }
      return count;
    }

    function length$3(array) {
      return array.length | 0;
    }

    function empty$2(length) {
      return !(length > 0);
    }

    function arrayify(values) {
      return typeof values !== "object" || "length" in values ? values : Array.from(values);
    }

    function reducer(reduce) {
      return values => reduce(...values);
    }

    function cross$2(...values) {
      const reduce = typeof values[values.length - 1] === "function" && reducer(values.pop());
      values = values.map(arrayify);
      const lengths = values.map(length$3);
      const j = values.length - 1;
      const index = new Array(j + 1).fill(0);
      const product = [];
      if (j < 0 || lengths.some(empty$2)) return product;
      while (true) {
        product.push(index.map((j, i) => values[i][j]));
        let i = j;
        while (++index[i] === lengths[i]) {
          if (i === 0) return reduce ? product.map(reduce) : product;
          index[i--] = 0;
        }
      }
    }

    function cumsum(values, valueof) {
      var sum = 0, index = 0;
      return Float64Array.from(values, valueof === undefined
        ? v => (sum += +v || 0)
        : v => (sum += +valueof(v, index++, values) || 0));
    }

    function descending$2(a, b) {
      return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
    }

    function variance(values, valueof) {
      let count = 0;
      let delta;
      let mean = 0;
      let sum = 0;
      if (valueof === undefined) {
        for (let value of values) {
          if (value != null && (value = +value) >= value) {
            delta = value - mean;
            mean += delta / ++count;
            sum += delta * (value - mean);
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
            delta = value - mean;
            mean += delta / ++count;
            sum += delta * (value - mean);
          }
        }
      }
      if (count > 1) return sum / (count - 1);
    }

    function deviation(values, valueof) {
      const v = variance(values, valueof);
      return v ? Math.sqrt(v) : v;
    }

    function extent$1(values, valueof) {
      let min;
      let max;
      if (valueof === undefined) {
        for (const value of values) {
          if (value != null) {
            if (min === undefined) {
              if (value >= value) min = max = value;
            } else {
              if (min > value) min = value;
              if (max < value) max = value;
            }
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null) {
            if (min === undefined) {
              if (value >= value) min = max = value;
            } else {
              if (min > value) min = value;
              if (max < value) max = value;
            }
          }
        }
      }
      return [min, max];
    }

    // https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423
    class Adder {
      constructor() {
        this._partials = new Float64Array(32);
        this._n = 0;
      }
      add(x) {
        const p = this._partials;
        let i = 0;
        for (let j = 0; j < this._n && j < 32; j++) {
          const y = p[j],
            hi = x + y,
            lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);
          if (lo) p[i++] = lo;
          x = hi;
        }
        p[i] = x;
        this._n = i + 1;
        return this;
      }
      valueOf() {
        const p = this._partials;
        let n = this._n, x, y, lo, hi = 0;
        if (n > 0) {
          hi = p[--n];
          while (n > 0) {
            x = hi;
            y = p[--n];
            hi = x + y;
            lo = y - (hi - x);
            if (lo) break;
          }
          if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {
            y = lo * 2;
            x = hi + y;
            if (y == x - hi) hi = x;
          }
        }
        return hi;
      }
    }

    function fsum(values, valueof) {
      const adder = new Adder();
      if (valueof === undefined) {
        for (let value of values) {
          if (value = +value) {
            adder.add(value);
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if (value = +valueof(value, ++index, values)) {
            adder.add(value);
          }
        }
      }
      return +adder;
    }

    function fcumsum(values, valueof) {
      const adder = new Adder();
      let index = -1;
      return Float64Array.from(values, valueof === undefined
          ? v => adder.add(+v || 0)
          : v => adder.add(+valueof(v, ++index, values) || 0)
      );
    }

    class InternMap extends Map {
      constructor(entries, key = keyof) {
        super();
        Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});
        if (entries != null) for (const [key, value] of entries) this.set(key, value);
      }
      get(key) {
        return super.get(intern_get(this, key));
      }
      has(key) {
        return super.has(intern_get(this, key));
      }
      set(key, value) {
        return super.set(intern_set(this, key), value);
      }
      delete(key) {
        return super.delete(intern_delete(this, key));
      }
    }

    class InternSet extends Set {
      constructor(values, key = keyof) {
        super();
        Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});
        if (values != null) for (const value of values) this.add(value);
      }
      has(value) {
        return super.has(intern_get(this, value));
      }
      add(value) {
        return super.add(intern_set(this, value));
      }
      delete(value) {
        return super.delete(intern_delete(this, value));
      }
    }

    function intern_get({_intern, _key}, value) {
      const key = _key(value);
      return _intern.has(key) ? _intern.get(key) : value;
    }

    function intern_set({_intern, _key}, value) {
      const key = _key(value);
      if (_intern.has(key)) return _intern.get(key);
      _intern.set(key, value);
      return value;
    }

    function intern_delete({_intern, _key}, value) {
      const key = _key(value);
      if (_intern.has(key)) {
        value = _intern.get(value);
        _intern.delete(key);
      }
      return value;
    }

    function keyof(value) {
      return value !== null && typeof value === "object" ? value.valueOf() : value;
    }

    function identity$9(x) {
      return x;
    }

    function group(values, ...keys) {
      return nest(values, identity$9, identity$9, keys);
    }

    function groups(values, ...keys) {
      return nest(values, Array.from, identity$9, keys);
    }

    function rollup(values, reduce, ...keys) {
      return nest(values, identity$9, reduce, keys);
    }

    function rollups(values, reduce, ...keys) {
      return nest(values, Array.from, reduce, keys);
    }

    function index$4(values, ...keys) {
      return nest(values, identity$9, unique, keys);
    }

    function indexes(values, ...keys) {
      return nest(values, Array.from, unique, keys);
    }

    function unique(values) {
      if (values.length !== 1) throw new Error("duplicate key");
      return values[0];
    }

    function nest(values, map, reduce, keys) {
      return (function regroup(values, i) {
        if (i >= keys.length) return reduce(values);
        const groups = new InternMap();
        const keyof = keys[i++];
        let index = -1;
        for (const value of values) {
          const key = keyof(value, ++index, values);
          const group = groups.get(key);
          if (group) group.push(value);
          else groups.set(key, [value]);
        }
        for (const [key, values] of groups) {
          groups.set(key, regroup(values, i));
        }
        return map(groups);
      })(values, 0);
    }

    function permute(source, keys) {
      return Array.from(keys, key => source[key]);
    }

    function sort(values, ...F) {
      if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
      values = Array.from(values);
      let [f = ascending$3] = F;
      if (f.length === 1 || F.length > 1) {
        const index = Uint32Array.from(values, (d, i) => i);
        if (F.length > 1) {
          F = F.map(f => values.map(f));
          index.sort((i, j) => {
            for (const f of F) {
              const c = ascending$3(f[i], f[j]);
              if (c) return c;
            }
          });
        } else {
          f = values.map(f);
          index.sort((i, j) => ascending$3(f[i], f[j]));
        }
        return permute(values, index);
      }
      return values.sort(f);
    }

    function groupSort(values, reduce, key) {
      return (reduce.length === 1
        ? sort(rollup(values, reduce, key), (([ak, av], [bk, bv]) => ascending$3(av, bv) || ascending$3(ak, bk)))
        : sort(group(values, key), (([ak, av], [bk, bv]) => reduce(av, bv) || ascending$3(ak, bk))))
        .map(([key]) => key);
    }

    var array$5 = Array.prototype;

    var slice$4 = array$5.slice;

    function constant$b(x) {
      return function() {
        return x;
      };
    }

    var e10 = Math.sqrt(50),
        e5 = Math.sqrt(10),
        e2 = Math.sqrt(2);

    function ticks(start, stop, count) {
      var reverse,
          i = -1,
          n,
          ticks,
          step;

      stop = +stop, start = +start, count = +count;
      if (start === stop && count > 0) return [start];
      if (reverse = stop < start) n = start, start = stop, stop = n;
      if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

      if (step > 0) {
        let r0 = Math.round(start / step), r1 = Math.round(stop / step);
        if (r0 * step < start) ++r0;
        if (r1 * step > stop) --r1;
        ticks = new Array(n = r1 - r0 + 1);
        while (++i < n) ticks[i] = (r0 + i) * step;
      } else {
        step = -step;
        let r0 = Math.round(start * step), r1 = Math.round(stop * step);
        if (r0 / step < start) ++r0;
        if (r1 / step > stop) --r1;
        ticks = new Array(n = r1 - r0 + 1);
        while (++i < n) ticks[i] = (r0 + i) / step;
      }

      if (reverse) ticks.reverse();

      return ticks;
    }

    function tickIncrement(start, stop, count) {
      var step = (stop - start) / Math.max(0, count),
          power = Math.floor(Math.log(step) / Math.LN10),
          error = step / Math.pow(10, power);
      return power >= 0
          ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)
          : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
    }

    function tickStep(start, stop, count) {
      var step0 = Math.abs(stop - start) / Math.max(0, count),
          step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
          error = step0 / step1;
      if (error >= e10) step1 *= 10;
      else if (error >= e5) step1 *= 5;
      else if (error >= e2) step1 *= 2;
      return stop < start ? -step1 : step1;
    }

    function nice$1(start, stop, count) {
      let prestep;
      while (true) {
        const step = tickIncrement(start, stop, count);
        if (step === prestep || step === 0 || !isFinite(step)) {
          return [start, stop];
        } else if (step > 0) {
          start = Math.floor(start / step) * step;
          stop = Math.ceil(stop / step) * step;
        } else if (step < 0) {
          start = Math.ceil(start * step) / step;
          stop = Math.floor(stop * step) / step;
        }
        prestep = step;
      }
    }

    function thresholdSturges(values) {
      return Math.ceil(Math.log(count$1(values)) / Math.LN2) + 1;
    }

    function bin() {
      var value = identity$9,
          domain = extent$1,
          threshold = thresholdSturges;

      function histogram(data) {
        if (!Array.isArray(data)) data = Array.from(data);

        var i,
            n = data.length,
            x,
            values = new Array(n);

        for (i = 0; i < n; ++i) {
          values[i] = value(data[i], i, data);
        }

        var xz = domain(values),
            x0 = xz[0],
            x1 = xz[1],
            tz = threshold(values, x0, x1);

        // Convert number of thresholds into uniform thresholds, and nice the
        // default domain accordingly.
        if (!Array.isArray(tz)) {
          const max = x1, tn = +tz;
          if (domain === extent$1) [x0, x1] = nice$1(x0, x1, tn);
          tz = ticks(x0, x1, tn);

          // If the last threshold is coincident with the domain’s upper bound, the
          // last bin will be zero-width. If the default domain is used, and this
          // last threshold is coincident with the maximum input value, we can
          // extend the niced upper bound by one tick to ensure uniform bin widths;
          // otherwise, we simply remove the last threshold. Note that we don’t
          // coerce values or the domain to numbers, and thus must be careful to
          // compare order (>=) rather than strict equality (===)!
          if (tz[tz.length - 1] >= x1) {
            if (max >= x1 && domain === extent$1) {
              const step = tickIncrement(x0, x1, tn);
              if (isFinite(step)) {
                if (step > 0) {
                  x1 = (Math.floor(x1 / step) + 1) * step;
                } else if (step < 0) {
                  x1 = (Math.ceil(x1 * -step) + 1) / -step;
                }
              }
            } else {
              tz.pop();
            }
          }
        }

        // Remove any thresholds outside the domain.
        var m = tz.length;
        while (tz[0] <= x0) tz.shift(), --m;
        while (tz[m - 1] > x1) tz.pop(), --m;

        var bins = new Array(m + 1),
            bin;

        // Initialize bins.
        for (i = 0; i <= m; ++i) {
          bin = bins[i] = [];
          bin.x0 = i > 0 ? tz[i - 1] : x0;
          bin.x1 = i < m ? tz[i] : x1;
        }

        // Assign data to bins by value, ignoring any outside the domain.
        for (i = 0; i < n; ++i) {
          x = values[i];
          if (x0 <= x && x <= x1) {
            bins[bisect(tz, x, 0, m)].push(data[i]);
          }
        }

        return bins;
      }

      histogram.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : constant$b(_), histogram) : value;
      };

      histogram.domain = function(_) {
        return arguments.length ? (domain = typeof _ === "function" ? _ : constant$b([_[0], _[1]]), histogram) : domain;
      };

      histogram.thresholds = function(_) {
        return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? constant$b(slice$4.call(_)) : constant$b(_), histogram) : threshold;
      };

      return histogram;
    }

    function max$3(values, valueof) {
      let max;
      if (valueof === undefined) {
        for (const value of values) {
          if (value != null
              && (max < value || (max === undefined && value >= value))) {
            max = value;
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null
              && (max < value || (max === undefined && value >= value))) {
            max = value;
          }
        }
      }
      return max;
    }

    function min$2(values, valueof) {
      let min;
      if (valueof === undefined) {
        for (const value of values) {
          if (value != null
              && (min > value || (min === undefined && value >= value))) {
            min = value;
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null
              && (min > value || (min === undefined && value >= value))) {
            min = value;
          }
        }
      }
      return min;
    }

    // Based on https://github.com/mourner/quickselect
    // ISC license, Copyright 2018 Vladimir Agafonkin.
    function quickselect(array, k, left = 0, right = array.length - 1, compare = ascending$3) {
      while (right > left) {
        if (right - left > 600) {
          const n = right - left + 1;
          const m = k - left + 1;
          const z = Math.log(n);
          const s = 0.5 * Math.exp(2 * z / 3);
          const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);
          const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));
          const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));
          quickselect(array, k, newLeft, newRight, compare);
        }

        const t = array[k];
        let i = left;
        let j = right;

        swap$1(array, left, k);
        if (compare(array[right], t) > 0) swap$1(array, left, right);

        while (i < j) {
          swap$1(array, i, j), ++i, --j;
          while (compare(array[i], t) < 0) ++i;
          while (compare(array[j], t) > 0) --j;
        }

        if (compare(array[left], t) === 0) swap$1(array, left, j);
        else ++j, swap$1(array, j, right);

        if (j <= k) left = j + 1;
        if (k <= j) right = j - 1;
      }
      return array;
    }

    function swap$1(array, i, j) {
      const t = array[i];
      array[i] = array[j];
      array[j] = t;
    }

    function quantile$1(values, p, valueof) {
      values = Float64Array.from(numbers(values, valueof));
      if (!(n = values.length)) return;
      if ((p = +p) <= 0 || n < 2) return min$2(values);
      if (p >= 1) return max$3(values);
      var n,
          i = (n - 1) * p,
          i0 = Math.floor(i),
          value0 = max$3(quickselect(values, i0).subarray(0, i0 + 1)),
          value1 = min$2(values.subarray(i0 + 1));
      return value0 + (value1 - value0) * (i - i0);
    }

    function quantileSorted(values, p, valueof = number$3) {
      if (!(n = values.length)) return;
      if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
      if (p >= 1) return +valueof(values[n - 1], n - 1, values);
      var n,
          i = (n - 1) * p,
          i0 = Math.floor(i),
          value0 = +valueof(values[i0], i0, values),
          value1 = +valueof(values[i0 + 1], i0 + 1, values);
      return value0 + (value1 - value0) * (i - i0);
    }

    function freedmanDiaconis(values, min, max) {
      return Math.ceil((max - min) / (2 * (quantile$1(values, 0.75) - quantile$1(values, 0.25)) * Math.pow(count$1(values), -1 / 3)));
    }

    function scott(values, min, max) {
      return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(count$1(values), -1 / 3)));
    }

    function maxIndex(values, valueof) {
      let max;
      let maxIndex = -1;
      let index = -1;
      if (valueof === undefined) {
        for (const value of values) {
          ++index;
          if (value != null
              && (max < value || (max === undefined && value >= value))) {
            max = value, maxIndex = index;
          }
        }
      } else {
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null
              && (max < value || (max === undefined && value >= value))) {
            max = value, maxIndex = index;
          }
        }
      }
      return maxIndex;
    }

    function mean$1(values, valueof) {
      let count = 0;
      let sum = 0;
      if (valueof === undefined) {
        for (let value of values) {
          if (value != null && (value = +value) >= value) {
            ++count, sum += value;
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
            ++count, sum += value;
          }
        }
      }
      if (count) return sum / count;
    }

    function median(values, valueof) {
      return quantile$1(values, 0.5, valueof);
    }

    function* flatten(arrays) {
      for (const array of arrays) {
        yield* array;
      }
    }

    function merge(arrays) {
      return Array.from(flatten(arrays));
    }

    function minIndex(values, valueof) {
      let min;
      let minIndex = -1;
      let index = -1;
      if (valueof === undefined) {
        for (const value of values) {
          ++index;
          if (value != null
              && (min > value || (min === undefined && value >= value))) {
            min = value, minIndex = index;
          }
        }
      } else {
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null
              && (min > value || (min === undefined && value >= value))) {
            min = value, minIndex = index;
          }
        }
      }
      return minIndex;
    }

    function pairs(values, pairof = pair) {
      const pairs = [];
      let previous;
      let first = false;
      for (const value of values) {
        if (first) pairs.push(pairof(previous, value));
        previous = value;
        first = true;
      }
      return pairs;
    }

    function pair(a, b) {
      return [a, b];
    }

    function sequence(start, stop, step) {
      start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;

      var i = -1,
          n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
          range = new Array(n);

      while (++i < n) {
        range[i] = start + i * step;
      }

      return range;
    }

    function least(values, compare = ascending$3) {
      let min;
      let defined = false;
      if (compare.length === 1) {
        let minValue;
        for (const element of values) {
          const value = compare(element);
          if (defined
              ? ascending$3(value, minValue) < 0
              : ascending$3(value, value) === 0) {
            min = element;
            minValue = value;
            defined = true;
          }
        }
      } else {
        for (const value of values) {
          if (defined
              ? compare(value, min) < 0
              : compare(value, value) === 0) {
            min = value;
            defined = true;
          }
        }
      }
      return min;
    }

    function leastIndex(values, compare = ascending$3) {
      if (compare.length === 1) return minIndex(values, compare);
      let minValue;
      let min = -1;
      let index = -1;
      for (const value of values) {
        ++index;
        if (min < 0
            ? compare(value, value) === 0
            : compare(value, minValue) < 0) {
          minValue = value;
          min = index;
        }
      }
      return min;
    }

    function greatest(values, compare = ascending$3) {
      let max;
      let defined = false;
      if (compare.length === 1) {
        let maxValue;
        for (const element of values) {
          const value = compare(element);
          if (defined
              ? ascending$3(value, maxValue) > 0
              : ascending$3(value, value) === 0) {
            max = element;
            maxValue = value;
            defined = true;
          }
        }
      } else {
        for (const value of values) {
          if (defined
              ? compare(value, max) > 0
              : compare(value, value) === 0) {
            max = value;
            defined = true;
          }
        }
      }
      return max;
    }

    function greatestIndex(values, compare = ascending$3) {
      if (compare.length === 1) return maxIndex(values, compare);
      let maxValue;
      let max = -1;
      let index = -1;
      for (const value of values) {
        ++index;
        if (max < 0
            ? compare(value, value) === 0
            : compare(value, maxValue) > 0) {
          maxValue = value;
          max = index;
        }
      }
      return max;
    }

    function scan(values, compare) {
      const index = leastIndex(values, compare);
      return index < 0 ? undefined : index;
    }

    var shuffle$1 = shuffler(Math.random);

    function shuffler(random) {
      return function shuffle(array, i0 = 0, i1 = array.length) {
        let m = i1 - (i0 = +i0);
        while (m) {
          const i = random() * m-- | 0, t = array[m + i0];
          array[m + i0] = array[i + i0];
          array[i + i0] = t;
        }
        return array;
      };
    }

    function sum$1(values, valueof) {
      let sum = 0;
      if (valueof === undefined) {
        for (let value of values) {
          if (value = +value) {
            sum += value;
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if (value = +valueof(value, ++index, values)) {
            sum += value;
          }
        }
      }
      return sum;
    }

    function transpose(matrix) {
      if (!(n = matrix.length)) return [];
      for (var i = -1, m = min$2(matrix, length$2), transpose = new Array(m); ++i < m;) {
        for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
          row[j] = matrix[j][i];
        }
      }
      return transpose;
    }

    function length$2(d) {
      return d.length;
    }

    function zip() {
      return transpose(arguments);
    }

    function every(values, test) {
      if (typeof test !== "function") throw new TypeError("test is not a function");
      let index = -1;
      for (const value of values) {
        if (!test(value, ++index, values)) {
          return false;
        }
      }
      return true;
    }

    function some(values, test) {
      if (typeof test !== "function") throw new TypeError("test is not a function");
      let index = -1;
      for (const value of values) {
        if (test(value, ++index, values)) {
          return true;
        }
      }
      return false;
    }

    function filter$1(values, test) {
      if (typeof test !== "function") throw new TypeError("test is not a function");
      const array = [];
      let index = -1;
      for (const value of values) {
        if (test(value, ++index, values)) {
          array.push(value);
        }
      }
      return array;
    }

    function map$1(values, mapper) {
      if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
      if (typeof mapper !== "function") throw new TypeError("mapper is not a function");
      return Array.from(values, (value, index) => mapper(value, index, values));
    }

    function reduce(values, reducer, value) {
      if (typeof reducer !== "function") throw new TypeError("reducer is not a function");
      const iterator = values[Symbol.iterator]();
      let done, next, index = -1;
      if (arguments.length < 3) {
        ({done, value} = iterator.next());
        if (done) return;
        ++index;
      }
      while (({done, value: next} = iterator.next()), !done) {
        value = reducer(value, next, ++index, values);
      }
      return value;
    }

    function reverse$1(values) {
      if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
      return Array.from(values).reverse();
    }

    function difference(values, ...others) {
      values = new Set(values);
      for (const other of others) {
        for (const value of other) {
          values.delete(value);
        }
      }
      return values;
    }

    function disjoint(values, other) {
      const iterator = other[Symbol.iterator](), set = new Set();
      for (const v of values) {
        if (set.has(v)) return false;
        let value, done;
        while (({value, done} = iterator.next())) {
          if (done) break;
          if (Object.is(v, value)) return false;
          set.add(value);
        }
      }
      return true;
    }

    function set$2(values) {
      return values instanceof Set ? values : new Set(values);
    }

    function intersection(values, ...others) {
      values = new Set(values);
      others = others.map(set$2);
      out: for (const value of values) {
        for (const other of others) {
          if (!other.has(value)) {
            values.delete(value);
            continue out;
          }
        }
      }
      return values;
    }

    function superset(values, other) {
      const iterator = values[Symbol.iterator](), set = new Set();
      for (const o of other) {
        if (set.has(o)) continue;
        let value, done;
        while (({value, done} = iterator.next())) {
          if (done) return false;
          set.add(value);
          if (Object.is(o, value)) break;
        }
      }
      return true;
    }

    function subset(values, other) {
      return superset(other, values);
    }

    function union(...others) {
      const set = new Set();
      for (const other of others) {
        for (const o of other) {
          set.add(o);
        }
      }
      return set;
    }

    var slice$3 = Array.prototype.slice;

    function identity$8(x) {
      return x;
    }

    var top = 1,
        right = 2,
        bottom = 3,
        left = 4,
        epsilon$5 = 1e-6;

    function translateX(x) {
      return "translate(" + x + ",0)";
    }

    function translateY(y) {
      return "translate(0," + y + ")";
    }

    function number$2(scale) {
      return d => +scale(d);
    }

    function center$1(scale, offset) {
      offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;
      if (scale.round()) offset = Math.round(offset);
      return d => +scale(d) + offset;
    }

    function entering() {
      return !this.__axis;
    }

    function axis(orient, scale) {
      var tickArguments = [],
          tickValues = null,
          tickFormat = null,
          tickSizeInner = 6,
          tickSizeOuter = 6,
          tickPadding = 3,
          offset = typeof window !== "undefined" && window.devicePixelRatio > 1 ? 0 : 0.5,
          k = orient === top || orient === left ? -1 : 1,
          x = orient === left || orient === right ? "x" : "y",
          transform = orient === top || orient === bottom ? translateX : translateY;

      function axis(context) {
        var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,
            format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$8) : tickFormat,
            spacing = Math.max(tickSizeInner, 0) + tickPadding,
            range = scale.range(),
            range0 = +range[0] + offset,
            range1 = +range[range.length - 1] + offset,
            position = (scale.bandwidth ? center$1 : number$2)(scale.copy(), offset),
            selection = context.selection ? context.selection() : context,
            path = selection.selectAll(".domain").data([null]),
            tick = selection.selectAll(".tick").data(values, scale).order(),
            tickExit = tick.exit(),
            tickEnter = tick.enter().append("g").attr("class", "tick"),
            line = tick.select("line"),
            text = tick.select("text");

        path = path.merge(path.enter().insert("path", ".tick")
            .attr("class", "domain")
            .attr("stroke", "currentColor"));

        tick = tick.merge(tickEnter);

        line = line.merge(tickEnter.append("line")
            .attr("stroke", "currentColor")
            .attr(x + "2", k * tickSizeInner));

        text = text.merge(tickEnter.append("text")
            .attr("fill", "currentColor")
            .attr(x, k * spacing)
            .attr("dy", orient === top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));

        if (context !== selection) {
          path = path.transition(context);
          tick = tick.transition(context);
          line = line.transition(context);
          text = text.transition(context);

          tickExit = tickExit.transition(context)
              .attr("opacity", epsilon$5)
              .attr("transform", function(d) { return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute("transform"); });

          tickEnter
              .attr("opacity", epsilon$5)
              .attr("transform", function(d) { var p = this.parentNode.__axis; return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset); });
        }

        tickExit.remove();

        path
            .attr("d", orient === left || orient === right
                ? (tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H" + offset + "V" + range1 + "H" + k * tickSizeOuter : "M" + offset + "," + range0 + "V" + range1)
                : (tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V" + offset + "H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + "," + offset + "H" + range1));

        tick
            .attr("opacity", 1)
            .attr("transform", function(d) { return transform(position(d) + offset); });

        line
            .attr(x + "2", k * tickSizeInner);

        text
            .attr(x, k * spacing)
            .text(format);

        selection.filter(entering)
            .attr("fill", "none")
            .attr("font-size", 10)
            .attr("font-family", "sans-serif")
            .attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");

        selection
            .each(function() { this.__axis = position; });
      }

      axis.scale = function(_) {
        return arguments.length ? (scale = _, axis) : scale;
      };

      axis.ticks = function() {
        return tickArguments = slice$3.call(arguments), axis;
      };

      axis.tickArguments = function(_) {
        return arguments.length ? (tickArguments = _ == null ? [] : slice$3.call(_), axis) : tickArguments.slice();
      };

      axis.tickValues = function(_) {
        return arguments.length ? (tickValues = _ == null ? null : slice$3.call(_), axis) : tickValues && tickValues.slice();
      };

      axis.tickFormat = function(_) {
        return arguments.length ? (tickFormat = _, axis) : tickFormat;
      };

      axis.tickSize = function(_) {
        return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
      };

      axis.tickSizeInner = function(_) {
        return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
      };

      axis.tickSizeOuter = function(_) {
        return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
      };

      axis.tickPadding = function(_) {
        return arguments.length ? (tickPadding = +_, axis) : tickPadding;
      };

      axis.offset = function(_) {
        return arguments.length ? (offset = +_, axis) : offset;
      };

      return axis;
    }

    function axisTop(scale) {
      return axis(top, scale);
    }

    function axisRight(scale) {
      return axis(right, scale);
    }

    function axisBottom(scale) {
      return axis(bottom, scale);
    }

    function axisLeft(scale) {
      return axis(left, scale);
    }

    var noop$3 = {value: () => {}};

    function dispatch() {
      for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
        if (!(t = arguments[i] + "") || (t in _) || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
        _[t] = [];
      }
      return new Dispatch(_);
    }

    function Dispatch(_) {
      this._ = _;
    }

    function parseTypenames$1(typenames, types) {
      return typenames.trim().split(/^|\s+/).map(function(t) {
        var name = "", i = t.indexOf(".");
        if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
        if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
        return {type: t, name: name};
      });
    }

    Dispatch.prototype = dispatch.prototype = {
      constructor: Dispatch,
      on: function(typename, callback) {
        var _ = this._,
            T = parseTypenames$1(typename + "", _),
            t,
            i = -1,
            n = T.length;

        // If no callback was specified, return the callback of the given type and name.
        if (arguments.length < 2) {
          while (++i < n) if ((t = (typename = T[i]).type) && (t = get$1(_[t], typename.name))) return t;
          return;
        }

        // If a type was specified, set the callback for the given type and name.
        // Otherwise, if a null callback was specified, remove callbacks of the given name.
        if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
        while (++i < n) {
          if (t = (typename = T[i]).type) _[t] = set$1(_[t], typename.name, callback);
          else if (callback == null) for (t in _) _[t] = set$1(_[t], typename.name, null);
        }

        return this;
      },
      copy: function() {
        var copy = {}, _ = this._;
        for (var t in _) copy[t] = _[t].slice();
        return new Dispatch(copy);
      },
      call: function(type, that) {
        if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
        if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
        for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
      },
      apply: function(type, that, args) {
        if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
        for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
      }
    };

    function get$1(type, name) {
      for (var i = 0, n = type.length, c; i < n; ++i) {
        if ((c = type[i]).name === name) {
          return c.value;
        }
      }
    }

    function set$1(type, name, callback) {
      for (var i = 0, n = type.length; i < n; ++i) {
        if (type[i].name === name) {
          type[i] = noop$3, type = type.slice(0, i).concat(type.slice(i + 1));
          break;
        }
      }
      if (callback != null) type.push({name: name, value: callback});
      return type;
    }

    var xhtml = "http://www.w3.org/1999/xhtml";

    var namespaces = {
      svg: "http://www.w3.org/2000/svg",
      xhtml: xhtml,
      xlink: "http://www.w3.org/1999/xlink",
      xml: "http://www.w3.org/XML/1998/namespace",
      xmlns: "http://www.w3.org/2000/xmlns/"
    };

    function namespace(name) {
      var prefix = name += "", i = prefix.indexOf(":");
      if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
      return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins
    }

    function creatorInherit(name) {
      return function() {
        var document = this.ownerDocument,
            uri = this.namespaceURI;
        return uri === xhtml && document.documentElement.namespaceURI === xhtml
            ? document.createElement(name)
            : document.createElementNS(uri, name);
      };
    }

    function creatorFixed(fullname) {
      return function() {
        return this.ownerDocument.createElementNS(fullname.space, fullname.local);
      };
    }

    function creator(name) {
      var fullname = namespace(name);
      return (fullname.local
          ? creatorFixed
          : creatorInherit)(fullname);
    }

    function none$2() {}

    function selector(selector) {
      return selector == null ? none$2 : function() {
        return this.querySelector(selector);
      };
    }

    function selection_select(select) {
      if (typeof select !== "function") select = selector(select);

      for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
          if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
            if ("__data__" in node) subnode.__data__ = node.__data__;
            subgroup[i] = subnode;
          }
        }
      }

      return new Selection$1(subgroups, this._parents);
    }

    function array$4(x) {
      return typeof x === "object" && "length" in x
        ? x // Array, TypedArray, NodeList, array-like
        : Array.from(x); // Map, Set, iterable, string, or anything else
    }

    function empty$1() {
      return [];
    }

    function selectorAll(selector) {
      return selector == null ? empty$1 : function() {
        return this.querySelectorAll(selector);
      };
    }

    function arrayAll(select) {
      return function() {
        var group = select.apply(this, arguments);
        return group == null ? [] : array$4(group);
      };
    }

    function selection_selectAll(select) {
      if (typeof select === "function") select = arrayAll(select);
      else select = selectorAll(select);

      for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            subgroups.push(select.call(node, node.__data__, i, group));
            parents.push(node);
          }
        }
      }

      return new Selection$1(subgroups, parents);
    }

    function matcher(selector) {
      return function() {
        return this.matches(selector);
      };
    }

    function childMatcher(selector) {
      return function(node) {
        return node.matches(selector);
      };
    }

    var find$1 = Array.prototype.find;

    function childFind(match) {
      return function() {
        return find$1.call(this.children, match);
      };
    }

    function childFirst() {
      return this.firstElementChild;
    }

    function selection_selectChild(match) {
      return this.select(match == null ? childFirst
          : childFind(typeof match === "function" ? match : childMatcher(match)));
    }

    var filter = Array.prototype.filter;

    function children() {
      return this.children;
    }

    function childrenFilter(match) {
      return function() {
        return filter.call(this.children, match);
      };
    }

    function selection_selectChildren(match) {
      return this.selectAll(match == null ? children
          : childrenFilter(typeof match === "function" ? match : childMatcher(match)));
    }

    function selection_filter(match) {
      if (typeof match !== "function") match = matcher(match);

      for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
          if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
            subgroup.push(node);
          }
        }
      }

      return new Selection$1(subgroups, this._parents);
    }

    function sparse(update) {
      return new Array(update.length);
    }

    function selection_enter() {
      return new Selection$1(this._enter || this._groups.map(sparse), this._parents);
    }

    function EnterNode(parent, datum) {
      this.ownerDocument = parent.ownerDocument;
      this.namespaceURI = parent.namespaceURI;
      this._next = null;
      this._parent = parent;
      this.__data__ = datum;
    }

    EnterNode.prototype = {
      constructor: EnterNode,
      appendChild: function(child) { return this._parent.insertBefore(child, this._next); },
      insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },
      querySelector: function(selector) { return this._parent.querySelector(selector); },
      querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }
    };

    function constant$a(x) {
      return function() {
        return x;
      };
    }

    function bindIndex(parent, group, enter, update, exit, data) {
      var i = 0,
          node,
          groupLength = group.length,
          dataLength = data.length;

      // Put any non-null nodes that fit into update.
      // Put any null nodes into enter.
      // Put any remaining data into enter.
      for (; i < dataLength; ++i) {
        if (node = group[i]) {
          node.__data__ = data[i];
          update[i] = node;
        } else {
          enter[i] = new EnterNode(parent, data[i]);
        }
      }

      // Put any non-null nodes that don’t fit into exit.
      for (; i < groupLength; ++i) {
        if (node = group[i]) {
          exit[i] = node;
        }
      }
    }

    function bindKey(parent, group, enter, update, exit, data, key) {
      var i,
          node,
          nodeByKeyValue = new Map,
          groupLength = group.length,
          dataLength = data.length,
          keyValues = new Array(groupLength),
          keyValue;

      // Compute the key for each node.
      // If multiple nodes have the same key, the duplicates are added to exit.
      for (i = 0; i < groupLength; ++i) {
        if (node = group[i]) {
          keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + "";
          if (nodeByKeyValue.has(keyValue)) {
            exit[i] = node;
          } else {
            nodeByKeyValue.set(keyValue, node);
          }
        }
      }

      // Compute the key for each datum.
      // If there a node associated with this key, join and add it to update.
      // If there is not (or the key is a duplicate), add it to enter.
      for (i = 0; i < dataLength; ++i) {
        keyValue = key.call(parent, data[i], i, data) + "";
        if (node = nodeByKeyValue.get(keyValue)) {
          update[i] = node;
          node.__data__ = data[i];
          nodeByKeyValue.delete(keyValue);
        } else {
          enter[i] = new EnterNode(parent, data[i]);
        }
      }

      // Add any remaining nodes that were not bound to data to exit.
      for (i = 0; i < groupLength; ++i) {
        if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {
          exit[i] = node;
        }
      }
    }

    function datum(node) {
      return node.__data__;
    }

    function selection_data(value, key) {
      if (!arguments.length) return Array.from(this, datum);

      var bind = key ? bindKey : bindIndex,
          parents = this._parents,
          groups = this._groups;

      if (typeof value !== "function") value = constant$a(value);

      for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
        var parent = parents[j],
            group = groups[j],
            groupLength = group.length,
            data = array$4(value.call(parent, parent && parent.__data__, j, parents)),
            dataLength = data.length,
            enterGroup = enter[j] = new Array(dataLength),
            updateGroup = update[j] = new Array(dataLength),
            exitGroup = exit[j] = new Array(groupLength);

        bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);

        // Now connect the enter nodes to their following update node, such that
        // appendChild can insert the materialized enter node before this node,
        // rather than at the end of the parent node.
        for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
          if (previous = enterGroup[i0]) {
            if (i0 >= i1) i1 = i0 + 1;
            while (!(next = updateGroup[i1]) && ++i1 < dataLength);
            previous._next = next || null;
          }
        }
      }

      update = new Selection$1(update, parents);
      update._enter = enter;
      update._exit = exit;
      return update;
    }

    function selection_exit() {
      return new Selection$1(this._exit || this._groups.map(sparse), this._parents);
    }

    function selection_join(onenter, onupdate, onexit) {
      var enter = this.enter(), update = this, exit = this.exit();
      enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
      if (onupdate != null) update = onupdate(update);
      if (onexit == null) exit.remove(); else onexit(exit);
      return enter && update ? enter.merge(update).order() : update;
    }

    function selection_merge(selection) {
      if (!(selection instanceof Selection$1)) throw new Error("invalid merge");

      for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
        for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
          if (node = group0[i] || group1[i]) {
            merge[i] = node;
          }
        }
      }

      for (; j < m0; ++j) {
        merges[j] = groups0[j];
      }

      return new Selection$1(merges, this._parents);
    }

    function selection_order() {

      for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
        for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
          if (node = group[i]) {
            if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
            next = node;
          }
        }
      }

      return this;
    }

    function selection_sort(compare) {
      if (!compare) compare = ascending$2;

      function compareNode(a, b) {
        return a && b ? compare(a.__data__, b.__data__) : !a - !b;
      }

      for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            sortgroup[i] = node;
          }
        }
        sortgroup.sort(compareNode);
      }

      return new Selection$1(sortgroups, this._parents).order();
    }

    function ascending$2(a, b) {
      return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
    }

    function selection_call() {
      var callback = arguments[0];
      arguments[0] = this;
      callback.apply(null, arguments);
      return this;
    }

    function selection_nodes() {
      return Array.from(this);
    }

    function selection_node() {

      for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
        for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
          var node = group[i];
          if (node) return node;
        }
      }

      return null;
    }

    function selection_size() {
      let size = 0;
      for (const node of this) ++size; // eslint-disable-line no-unused-vars
      return size;
    }

    function selection_empty() {
      return !this.node();
    }

    function selection_each(callback) {

      for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
        for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
          if (node = group[i]) callback.call(node, node.__data__, i, group);
        }
      }

      return this;
    }

    function attrRemove$1(name) {
      return function() {
        this.removeAttribute(name);
      };
    }

    function attrRemoveNS$1(fullname) {
      return function() {
        this.removeAttributeNS(fullname.space, fullname.local);
      };
    }

    function attrConstant$1(name, value) {
      return function() {
        this.setAttribute(name, value);
      };
    }

    function attrConstantNS$1(fullname, value) {
      return function() {
        this.setAttributeNS(fullname.space, fullname.local, value);
      };
    }

    function attrFunction$1(name, value) {
      return function() {
        var v = value.apply(this, arguments);
        if (v == null) this.removeAttribute(name);
        else this.setAttribute(name, v);
      };
    }

    function attrFunctionNS$1(fullname, value) {
      return function() {
        var v = value.apply(this, arguments);
        if (v == null) this.removeAttributeNS(fullname.space, fullname.local);
        else this.setAttributeNS(fullname.space, fullname.local, v);
      };
    }

    function selection_attr(name, value) {
      var fullname = namespace(name);

      if (arguments.length < 2) {
        var node = this.node();
        return fullname.local
            ? node.getAttributeNS(fullname.space, fullname.local)
            : node.getAttribute(fullname);
      }

      return this.each((value == null
          ? (fullname.local ? attrRemoveNS$1 : attrRemove$1) : (typeof value === "function"
          ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)
          : (fullname.local ? attrConstantNS$1 : attrConstant$1)))(fullname, value));
    }

    function defaultView(node) {
      return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node
          || (node.document && node) // node is a Window
          || node.defaultView; // node is a Document
    }

    function styleRemove$1(name) {
      return function() {
        this.style.removeProperty(name);
      };
    }

    function styleConstant$1(name, value, priority) {
      return function() {
        this.style.setProperty(name, value, priority);
      };
    }

    function styleFunction$1(name, value, priority) {
      return function() {
        var v = value.apply(this, arguments);
        if (v == null) this.style.removeProperty(name);
        else this.style.setProperty(name, v, priority);
      };
    }

    function selection_style(name, value, priority) {
      return arguments.length > 1
          ? this.each((value == null
                ? styleRemove$1 : typeof value === "function"
                ? styleFunction$1
                : styleConstant$1)(name, value, priority == null ? "" : priority))
          : styleValue(this.node(), name);
    }

    function styleValue(node, name) {
      return node.style.getPropertyValue(name)
          || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);
    }

    function propertyRemove(name) {
      return function() {
        delete this[name];
      };
    }

    function propertyConstant(name, value) {
      return function() {
        this[name] = value;
      };
    }

    function propertyFunction(name, value) {
      return function() {
        var v = value.apply(this, arguments);
        if (v == null) delete this[name];
        else this[name] = v;
      };
    }

    function selection_property(name, value) {
      return arguments.length > 1
          ? this.each((value == null
              ? propertyRemove : typeof value === "function"
              ? propertyFunction
              : propertyConstant)(name, value))
          : this.node()[name];
    }

    function classArray(string) {
      return string.trim().split(/^|\s+/);
    }

    function classList(node) {
      return node.classList || new ClassList(node);
    }

    function ClassList(node) {
      this._node = node;
      this._names = classArray(node.getAttribute("class") || "");
    }

    ClassList.prototype = {
      add: function(name) {
        var i = this._names.indexOf(name);
        if (i < 0) {
          this._names.push(name);
          this._node.setAttribute("class", this._names.join(" "));
        }
      },
      remove: function(name) {
        var i = this._names.indexOf(name);
        if (i >= 0) {
          this._names.splice(i, 1);
          this._node.setAttribute("class", this._names.join(" "));
        }
      },
      contains: function(name) {
        return this._names.indexOf(name) >= 0;
      }
    };

    function classedAdd(node, names) {
      var list = classList(node), i = -1, n = names.length;
      while (++i < n) list.add(names[i]);
    }

    function classedRemove(node, names) {
      var list = classList(node), i = -1, n = names.length;
      while (++i < n) list.remove(names[i]);
    }

    function classedTrue(names) {
      return function() {
        classedAdd(this, names);
      };
    }

    function classedFalse(names) {
      return function() {
        classedRemove(this, names);
      };
    }

    function classedFunction(names, value) {
      return function() {
        (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
      };
    }

    function selection_classed(name, value) {
      var names = classArray(name + "");

      if (arguments.length < 2) {
        var list = classList(this.node()), i = -1, n = names.length;
        while (++i < n) if (!list.contains(names[i])) return false;
        return true;
      }

      return this.each((typeof value === "function"
          ? classedFunction : value
          ? classedTrue
          : classedFalse)(names, value));
    }

    function textRemove() {
      this.textContent = "";
    }

    function textConstant$1(value) {
      return function() {
        this.textContent = value;
      };
    }

    function textFunction$1(value) {
      return function() {
        var v = value.apply(this, arguments);
        this.textContent = v == null ? "" : v;
      };
    }

    function selection_text(value) {
      return arguments.length
          ? this.each(value == null
              ? textRemove : (typeof value === "function"
              ? textFunction$1
              : textConstant$1)(value))
          : this.node().textContent;
    }

    function htmlRemove() {
      this.innerHTML = "";
    }

    function htmlConstant(value) {
      return function() {
        this.innerHTML = value;
      };
    }

    function htmlFunction(value) {
      return function() {
        var v = value.apply(this, arguments);
        this.innerHTML = v == null ? "" : v;
      };
    }

    function selection_html(value) {
      return arguments.length
          ? this.each(value == null
              ? htmlRemove : (typeof value === "function"
              ? htmlFunction
              : htmlConstant)(value))
          : this.node().innerHTML;
    }

    function raise() {
      if (this.nextSibling) this.parentNode.appendChild(this);
    }

    function selection_raise() {
      return this.each(raise);
    }

    function lower() {
      if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
    }

    function selection_lower() {
      return this.each(lower);
    }

    function selection_append(name) {
      var create = typeof name === "function" ? name : creator(name);
      return this.select(function() {
        return this.appendChild(create.apply(this, arguments));
      });
    }

    function constantNull() {
      return null;
    }

    function selection_insert(name, before) {
      var create = typeof name === "function" ? name : creator(name),
          select = before == null ? constantNull : typeof before === "function" ? before : selector(before);
      return this.select(function() {
        return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
      });
    }

    function remove() {
      var parent = this.parentNode;
      if (parent) parent.removeChild(this);
    }

    function selection_remove() {
      return this.each(remove);
    }

    function selection_cloneShallow() {
      var clone = this.cloneNode(false), parent = this.parentNode;
      return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
    }

    function selection_cloneDeep() {
      var clone = this.cloneNode(true), parent = this.parentNode;
      return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
    }

    function selection_clone(deep) {
      return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
    }

    function selection_datum(value) {
      return arguments.length
          ? this.property("__data__", value)
          : this.node().__data__;
    }

    function contextListener(listener) {
      return function(event) {
        listener.call(this, event, this.__data__);
      };
    }

    function parseTypenames(typenames) {
      return typenames.trim().split(/^|\s+/).map(function(t) {
        var name = "", i = t.indexOf(".");
        if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
        return {type: t, name: name};
      });
    }

    function onRemove(typename) {
      return function() {
        var on = this.__on;
        if (!on) return;
        for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
          if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
            this.removeEventListener(o.type, o.listener, o.options);
          } else {
            on[++i] = o;
          }
        }
        if (++i) on.length = i;
        else delete this.__on;
      };
    }

    function onAdd(typename, value, options) {
      return function() {
        var on = this.__on, o, listener = contextListener(value);
        if (on) for (var j = 0, m = on.length; j < m; ++j) {
          if ((o = on[j]).type === typename.type && o.name === typename.name) {
            this.removeEventListener(o.type, o.listener, o.options);
            this.addEventListener(o.type, o.listener = listener, o.options = options);
            o.value = value;
            return;
          }
        }
        this.addEventListener(typename.type, listener, options);
        o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};
        if (!on) this.__on = [o];
        else on.push(o);
      };
    }

    function selection_on(typename, value, options) {
      var typenames = parseTypenames(typename + ""), i, n = typenames.length, t;

      if (arguments.length < 2) {
        var on = this.node().__on;
        if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
          for (i = 0, o = on[j]; i < n; ++i) {
            if ((t = typenames[i]).type === o.type && t.name === o.name) {
              return o.value;
            }
          }
        }
        return;
      }

      on = value ? onAdd : onRemove;
      for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));
      return this;
    }

    function dispatchEvent(node, type, params) {
      var window = defaultView(node),
          event = window.CustomEvent;

      if (typeof event === "function") {
        event = new event(type, params);
      } else {
        event = window.document.createEvent("Event");
        if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;
        else event.initEvent(type, false, false);
      }

      node.dispatchEvent(event);
    }

    function dispatchConstant(type, params) {
      return function() {
        return dispatchEvent(this, type, params);
      };
    }

    function dispatchFunction(type, params) {
      return function() {
        return dispatchEvent(this, type, params.apply(this, arguments));
      };
    }

    function selection_dispatch(type, params) {
      return this.each((typeof params === "function"
          ? dispatchFunction
          : dispatchConstant)(type, params));
    }

    function* selection_iterator() {
      for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
        for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
          if (node = group[i]) yield node;
        }
      }
    }

    var root$1 = [null];

    function Selection$1(groups, parents) {
      this._groups = groups;
      this._parents = parents;
    }

    function selection() {
      return new Selection$1([[document.documentElement]], root$1);
    }

    function selection_selection() {
      return this;
    }

    Selection$1.prototype = selection.prototype = {
      constructor: Selection$1,
      select: selection_select,
      selectAll: selection_selectAll,
      selectChild: selection_selectChild,
      selectChildren: selection_selectChildren,
      filter: selection_filter,
      data: selection_data,
      enter: selection_enter,
      exit: selection_exit,
      join: selection_join,
      merge: selection_merge,
      selection: selection_selection,
      order: selection_order,
      sort: selection_sort,
      call: selection_call,
      nodes: selection_nodes,
      node: selection_node,
      size: selection_size,
      empty: selection_empty,
      each: selection_each,
      attr: selection_attr,
      style: selection_style,
      property: selection_property,
      classed: selection_classed,
      text: selection_text,
      html: selection_html,
      raise: selection_raise,
      lower: selection_lower,
      append: selection_append,
      insert: selection_insert,
      remove: selection_remove,
      clone: selection_clone,
      datum: selection_datum,
      on: selection_on,
      dispatch: selection_dispatch,
      [Symbol.iterator]: selection_iterator
    };

    function select(selector) {
      return typeof selector === "string"
          ? new Selection$1([[document.querySelector(selector)]], [document.documentElement])
          : new Selection$1([[selector]], root$1);
    }

    function create$1(name) {
      return select(creator(name).call(document.documentElement));
    }

    var nextId = 0;

    function local$1() {
      return new Local;
    }

    function Local() {
      this._ = "@" + (++nextId).toString(36);
    }

    Local.prototype = local$1.prototype = {
      constructor: Local,
      get: function(node) {
        var id = this._;
        while (!(id in node)) if (!(node = node.parentNode)) return;
        return node[id];
      },
      set: function(node, value) {
        return node[this._] = value;
      },
      remove: function(node) {
        return this._ in node && delete node[this._];
      },
      toString: function() {
        return this._;
      }
    };

    function sourceEvent(event) {
      let sourceEvent;
      while (sourceEvent = event.sourceEvent) event = sourceEvent;
      return event;
    }

    function pointer(event, node) {
      event = sourceEvent(event);
      if (node === undefined) node = event.currentTarget;
      if (node) {
        var svg = node.ownerSVGElement || node;
        if (svg.createSVGPoint) {
          var point = svg.createSVGPoint();
          point.x = event.clientX, point.y = event.clientY;
          point = point.matrixTransform(node.getScreenCTM().inverse());
          return [point.x, point.y];
        }
        if (node.getBoundingClientRect) {
          var rect = node.getBoundingClientRect();
          return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
        }
      }
      return [event.pageX, event.pageY];
    }

    function pointers(events, node) {
      if (events.target) { // i.e., instanceof Event, not TouchList or iterable
        events = sourceEvent(events);
        if (node === undefined) node = events.currentTarget;
        events = events.touches || [events];
      }
      return Array.from(events, event => pointer(event, node));
    }

    function selectAll(selector) {
      return typeof selector === "string"
          ? new Selection$1([document.querySelectorAll(selector)], [document.documentElement])
          : new Selection$1([selector == null ? [] : array$4(selector)], root$1);
    }

    function nopropagation$2(event) {
      event.stopImmediatePropagation();
    }

    function noevent$2(event) {
      event.preventDefault();
      event.stopImmediatePropagation();
    }

    function dragDisable(view) {
      var root = view.document.documentElement,
          selection = select(view).on("dragstart.drag", noevent$2, true);
      if ("onselectstart" in root) {
        selection.on("selectstart.drag", noevent$2, true);
      } else {
        root.__noselect = root.style.MozUserSelect;
        root.style.MozUserSelect = "none";
      }
    }

    function yesdrag(view, noclick) {
      var root = view.document.documentElement,
          selection = select(view).on("dragstart.drag", null);
      if (noclick) {
        selection.on("click.drag", noevent$2, true);
        setTimeout(function() { selection.on("click.drag", null); }, 0);
      }
      if ("onselectstart" in root) {
        selection.on("selectstart.drag", null);
      } else {
        root.style.MozUserSelect = root.__noselect;
        delete root.__noselect;
      }
    }

    var constant$9 = x => () => x;

    function DragEvent(type, {
      sourceEvent,
      subject,
      target,
      identifier,
      active,
      x, y, dx, dy,
      dispatch
    }) {
      Object.defineProperties(this, {
        type: {value: type, enumerable: true, configurable: true},
        sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},
        subject: {value: subject, enumerable: true, configurable: true},
        target: {value: target, enumerable: true, configurable: true},
        identifier: {value: identifier, enumerable: true, configurable: true},
        active: {value: active, enumerable: true, configurable: true},
        x: {value: x, enumerable: true, configurable: true},
        y: {value: y, enumerable: true, configurable: true},
        dx: {value: dx, enumerable: true, configurable: true},
        dy: {value: dy, enumerable: true, configurable: true},
        _: {value: dispatch}
      });
    }

    DragEvent.prototype.on = function() {
      var value = this._.on.apply(this._, arguments);
      return value === this._ ? this : value;
    };

    // Ignore right-click, since that should open the context menu.
    function defaultFilter$2(event) {
      return !event.ctrlKey && !event.button;
    }

    function defaultContainer() {
      return this.parentNode;
    }

    function defaultSubject(event, d) {
      return d == null ? {x: event.x, y: event.y} : d;
    }

    function defaultTouchable$2() {
      return navigator.maxTouchPoints || ("ontouchstart" in this);
    }

    function drag() {
      var filter = defaultFilter$2,
          container = defaultContainer,
          subject = defaultSubject,
          touchable = defaultTouchable$2,
          gestures = {},
          listeners = dispatch("start", "drag", "end"),
          active = 0,
          mousedownx,
          mousedowny,
          mousemoving,
          touchending,
          clickDistance2 = 0;

      function drag(selection) {
        selection
            .on("mousedown.drag", mousedowned)
          .filter(touchable)
            .on("touchstart.drag", touchstarted)
            .on("touchmove.drag", touchmoved)
            .on("touchend.drag touchcancel.drag", touchended)
            .style("touch-action", "none")
            .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
      }

      function mousedowned(event, d) {
        if (touchending || !filter.call(this, event, d)) return;
        var gesture = beforestart(this, container.call(this, event, d), event, d, "mouse");
        if (!gesture) return;
        select(event.view).on("mousemove.drag", mousemoved, true).on("mouseup.drag", mouseupped, true);
        dragDisable(event.view);
        nopropagation$2(event);
        mousemoving = false;
        mousedownx = event.clientX;
        mousedowny = event.clientY;
        gesture("start", event);
      }

      function mousemoved(event) {
        noevent$2(event);
        if (!mousemoving) {
          var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;
          mousemoving = dx * dx + dy * dy > clickDistance2;
        }
        gestures.mouse("drag", event);
      }

      function mouseupped(event) {
        select(event.view).on("mousemove.drag mouseup.drag", null);
        yesdrag(event.view, mousemoving);
        noevent$2(event);
        gestures.mouse("end", event);
      }

      function touchstarted(event, d) {
        if (!filter.call(this, event, d)) return;
        var touches = event.changedTouches,
            c = container.call(this, event, d),
            n = touches.length, i, gesture;

        for (i = 0; i < n; ++i) {
          if (gesture = beforestart(this, c, event, d, touches[i].identifier, touches[i])) {
            nopropagation$2(event);
            gesture("start", event, touches[i]);
          }
        }
      }

      function touchmoved(event) {
        var touches = event.changedTouches,
            n = touches.length, i, gesture;

        for (i = 0; i < n; ++i) {
          if (gesture = gestures[touches[i].identifier]) {
            noevent$2(event);
            gesture("drag", event, touches[i]);
          }
        }
      }

      function touchended(event) {
        var touches = event.changedTouches,
            n = touches.length, i, gesture;

        if (touchending) clearTimeout(touchending);
        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!
        for (i = 0; i < n; ++i) {
          if (gesture = gestures[touches[i].identifier]) {
            nopropagation$2(event);
            gesture("end", event, touches[i]);
          }
        }
      }

      function beforestart(that, container, event, d, identifier, touch) {
        var dispatch = listeners.copy(),
            p = pointer(touch || event, container), dx, dy,
            s;

        if ((s = subject.call(that, new DragEvent("beforestart", {
            sourceEvent: event,
            target: drag,
            identifier,
            active,
            x: p[0],
            y: p[1],
            dx: 0,
            dy: 0,
            dispatch
          }), d)) == null) return;

        dx = s.x - p[0] || 0;
        dy = s.y - p[1] || 0;

        return function gesture(type, event, touch) {
          var p0 = p, n;
          switch (type) {
            case "start": gestures[identifier] = gesture, n = active++; break;
            case "end": delete gestures[identifier], --active; // nobreak
            case "drag": p = pointer(touch || event, container), n = active; break;
          }
          dispatch.call(
            type,
            that,
            new DragEvent(type, {
              sourceEvent: event,
              subject: s,
              target: drag,
              identifier,
              active: n,
              x: p[0] + dx,
              y: p[1] + dy,
              dx: p[0] - p0[0],
              dy: p[1] - p0[1],
              dispatch
            }),
            d
          );
        };
      }

      drag.filter = function(_) {
        return arguments.length ? (filter = typeof _ === "function" ? _ : constant$9(!!_), drag) : filter;
      };

      drag.container = function(_) {
        return arguments.length ? (container = typeof _ === "function" ? _ : constant$9(_), drag) : container;
      };

      drag.subject = function(_) {
        return arguments.length ? (subject = typeof _ === "function" ? _ : constant$9(_), drag) : subject;
      };

      drag.touchable = function(_) {
        return arguments.length ? (touchable = typeof _ === "function" ? _ : constant$9(!!_), drag) : touchable;
      };

      drag.on = function() {
        var value = listeners.on.apply(listeners, arguments);
        return value === listeners ? drag : value;
      };

      drag.clickDistance = function(_) {
        return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);
      };

      return drag;
    }

    function define(constructor, factory, prototype) {
      constructor.prototype = factory.prototype = prototype;
      prototype.constructor = constructor;
    }

    function extend(parent, definition) {
      var prototype = Object.create(parent.prototype);
      for (var key in definition) prototype[key] = definition[key];
      return prototype;
    }

    function Color() {}

    var darker = 0.7;
    var brighter = 1 / darker;

    var reI = "\\s*([+-]?\\d+)\\s*",
        reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
        reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
        reHex = /^#([0-9a-f]{3,8})$/,
        reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
        reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
        reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
        reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
        reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
        reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");

    var named = {
      aliceblue: 0xf0f8ff,
      antiquewhite: 0xfaebd7,
      aqua: 0x00ffff,
      aquamarine: 0x7fffd4,
      azure: 0xf0ffff,
      beige: 0xf5f5dc,
      bisque: 0xffe4c4,
      black: 0x000000,
      blanchedalmond: 0xffebcd,
      blue: 0x0000ff,
      blueviolet: 0x8a2be2,
      brown: 0xa52a2a,
      burlywood: 0xdeb887,
      cadetblue: 0x5f9ea0,
      chartreuse: 0x7fff00,
      chocolate: 0xd2691e,
      coral: 0xff7f50,
      cornflowerblue: 0x6495ed,
      cornsilk: 0xfff8dc,
      crimson: 0xdc143c,
      cyan: 0x00ffff,
      darkblue: 0x00008b,
      darkcyan: 0x008b8b,
      darkgoldenrod: 0xb8860b,
      darkgray: 0xa9a9a9,
      darkgreen: 0x006400,
      darkgrey: 0xa9a9a9,
      darkkhaki: 0xbdb76b,
      darkmagenta: 0x8b008b,
      darkolivegreen: 0x556b2f,
      darkorange: 0xff8c00,
      darkorchid: 0x9932cc,
      darkred: 0x8b0000,
      darksalmon: 0xe9967a,
      darkseagreen: 0x8fbc8f,
      darkslateblue: 0x483d8b,
      darkslategray: 0x2f4f4f,
      darkslategrey: 0x2f4f4f,
      darkturquoise: 0x00ced1,
      darkviolet: 0x9400d3,
      deeppink: 0xff1493,
      deepskyblue: 0x00bfff,
      dimgray: 0x696969,
      dimgrey: 0x696969,
      dodgerblue: 0x1e90ff,
      firebrick: 0xb22222,
      floralwhite: 0xfffaf0,
      forestgreen: 0x228b22,
      fuchsia: 0xff00ff,
      gainsboro: 0xdcdcdc,
      ghostwhite: 0xf8f8ff,
      gold: 0xffd700,
      goldenrod: 0xdaa520,
      gray: 0x808080,
      green: 0x008000,
      greenyellow: 0xadff2f,
      grey: 0x808080,
      honeydew: 0xf0fff0,
      hotpink: 0xff69b4,
      indianred: 0xcd5c5c,
      indigo: 0x4b0082,
      ivory: 0xfffff0,
      khaki: 0xf0e68c,
      lavender: 0xe6e6fa,
      lavenderblush: 0xfff0f5,
      lawngreen: 0x7cfc00,
      lemonchiffon: 0xfffacd,
      lightblue: 0xadd8e6,
      lightcoral: 0xf08080,
      lightcyan: 0xe0ffff,
      lightgoldenrodyellow: 0xfafad2,
      lightgray: 0xd3d3d3,
      lightgreen: 0x90ee90,
      lightgrey: 0xd3d3d3,
      lightpink: 0xffb6c1,
      lightsalmon: 0xffa07a,
      lightseagreen: 0x20b2aa,
      lightskyblue: 0x87cefa,
      lightslategray: 0x778899,
      lightslategrey: 0x778899,
      lightsteelblue: 0xb0c4de,
      lightyellow: 0xffffe0,
      lime: 0x00ff00,
      limegreen: 0x32cd32,
      linen: 0xfaf0e6,
      magenta: 0xff00ff,
      maroon: 0x800000,
      mediumaquamarine: 0x66cdaa,
      mediumblue: 0x0000cd,
      mediumorchid: 0xba55d3,
      mediumpurple: 0x9370db,
      mediumseagreen: 0x3cb371,
      mediumslateblue: 0x7b68ee,
      mediumspringgreen: 0x00fa9a,
      mediumturquoise: 0x48d1cc,
      mediumvioletred: 0xc71585,
      midnightblue: 0x191970,
      mintcream: 0xf5fffa,
      mistyrose: 0xffe4e1,
      moccasin: 0xffe4b5,
      navajowhite: 0xffdead,
      navy: 0x000080,
      oldlace: 0xfdf5e6,
      olive: 0x808000,
      olivedrab: 0x6b8e23,
      orange: 0xffa500,
      orangered: 0xff4500,
      orchid: 0xda70d6,
      palegoldenrod: 0xeee8aa,
      palegreen: 0x98fb98,
      paleturquoise: 0xafeeee,
      palevioletred: 0xdb7093,
      papayawhip: 0xffefd5,
      peachpuff: 0xffdab9,
      peru: 0xcd853f,
      pink: 0xffc0cb,
      plum: 0xdda0dd,
      powderblue: 0xb0e0e6,
      purple: 0x800080,
      rebeccapurple: 0x663399,
      red: 0xff0000,
      rosybrown: 0xbc8f8f,
      royalblue: 0x4169e1,
      saddlebrown: 0x8b4513,
      salmon: 0xfa8072,
      sandybrown: 0xf4a460,
      seagreen: 0x2e8b57,
      seashell: 0xfff5ee,
      sienna: 0xa0522d,
      silver: 0xc0c0c0,
      skyblue: 0x87ceeb,
      slateblue: 0x6a5acd,
      slategray: 0x708090,
      slategrey: 0x708090,
      snow: 0xfffafa,
      springgreen: 0x00ff7f,
      steelblue: 0x4682b4,
      tan: 0xd2b48c,
      teal: 0x008080,
      thistle: 0xd8bfd8,
      tomato: 0xff6347,
      turquoise: 0x40e0d0,
      violet: 0xee82ee,
      wheat: 0xf5deb3,
      white: 0xffffff,
      whitesmoke: 0xf5f5f5,
      yellow: 0xffff00,
      yellowgreen: 0x9acd32
    };

    define(Color, color, {
      copy: function(channels) {
        return Object.assign(new this.constructor, this, channels);
      },
      displayable: function() {
        return this.rgb().displayable();
      },
      hex: color_formatHex, // Deprecated! Use color.formatHex.
      formatHex: color_formatHex,
      formatHsl: color_formatHsl,
      formatRgb: color_formatRgb,
      toString: color_formatRgb
    });

    function color_formatHex() {
      return this.rgb().formatHex();
    }

    function color_formatHsl() {
      return hslConvert(this).formatHsl();
    }

    function color_formatRgb() {
      return this.rgb().formatRgb();
    }

    function color(format) {
      var m, l;
      format = (format + "").trim().toLowerCase();
      return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
          : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00
          : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
          : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000
          : null) // invalid hex
          : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
          : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
          : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
          : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
          : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
          : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
          : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
          : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
          : null;
    }

    function rgbn(n) {
      return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
    }

    function rgba(r, g, b, a) {
      if (a <= 0) r = g = b = NaN;
      return new Rgb(r, g, b, a);
    }

    function rgbConvert(o) {
      if (!(o instanceof Color)) o = color(o);
      if (!o) return new Rgb;
      o = o.rgb();
      return new Rgb(o.r, o.g, o.b, o.opacity);
    }

    function rgb(r, g, b, opacity) {
      return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
    }

    function Rgb(r, g, b, opacity) {
      this.r = +r;
      this.g = +g;
      this.b = +b;
      this.opacity = +opacity;
    }

    define(Rgb, rgb, extend(Color, {
      brighter: function(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
      },
      darker: function(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
      },
      rgb: function() {
        return this;
      },
      displayable: function() {
        return (-0.5 <= this.r && this.r < 255.5)
            && (-0.5 <= this.g && this.g < 255.5)
            && (-0.5 <= this.b && this.b < 255.5)
            && (0 <= this.opacity && this.opacity <= 1);
      },
      hex: rgb_formatHex, // Deprecated! Use color.formatHex.
      formatHex: rgb_formatHex,
      formatRgb: rgb_formatRgb,
      toString: rgb_formatRgb
    }));

    function rgb_formatHex() {
      return "#" + hex(this.r) + hex(this.g) + hex(this.b);
    }

    function rgb_formatRgb() {
      var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
      return (a === 1 ? "rgb(" : "rgba(")
          + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", "
          + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", "
          + Math.max(0, Math.min(255, Math.round(this.b) || 0))
          + (a === 1 ? ")" : ", " + a + ")");
    }

    function hex(value) {
      value = Math.max(0, Math.min(255, Math.round(value) || 0));
      return (value < 16 ? "0" : "") + value.toString(16);
    }

    function hsla(h, s, l, a) {
      if (a <= 0) h = s = l = NaN;
      else if (l <= 0 || l >= 1) h = s = NaN;
      else if (s <= 0) h = NaN;
      return new Hsl(h, s, l, a);
    }

    function hslConvert(o) {
      if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
      if (!(o instanceof Color)) o = color(o);
      if (!o) return new Hsl;
      if (o instanceof Hsl) return o;
      o = o.rgb();
      var r = o.r / 255,
          g = o.g / 255,
          b = o.b / 255,
          min = Math.min(r, g, b),
          max = Math.max(r, g, b),
          h = NaN,
          s = max - min,
          l = (max + min) / 2;
      if (s) {
        if (r === max) h = (g - b) / s + (g < b) * 6;
        else if (g === max) h = (b - r) / s + 2;
        else h = (r - g) / s + 4;
        s /= l < 0.5 ? max + min : 2 - max - min;
        h *= 60;
      } else {
        s = l > 0 && l < 1 ? 0 : h;
      }
      return new Hsl(h, s, l, o.opacity);
    }

    function hsl$2(h, s, l, opacity) {
      return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
    }

    function Hsl(h, s, l, opacity) {
      this.h = +h;
      this.s = +s;
      this.l = +l;
      this.opacity = +opacity;
    }

    define(Hsl, hsl$2, extend(Color, {
      brighter: function(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
      },
      darker: function(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
      },
      rgb: function() {
        var h = this.h % 360 + (this.h < 0) * 360,
            s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
            l = this.l,
            m2 = l + (l < 0.5 ? l : 1 - l) * s,
            m1 = 2 * l - m2;
        return new Rgb(
          hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
          hsl2rgb(h, m1, m2),
          hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
          this.opacity
        );
      },
      displayable: function() {
        return (0 <= this.s && this.s <= 1 || isNaN(this.s))
            && (0 <= this.l && this.l <= 1)
            && (0 <= this.opacity && this.opacity <= 1);
      },
      formatHsl: function() {
        var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
        return (a === 1 ? "hsl(" : "hsla(")
            + (this.h || 0) + ", "
            + (this.s || 0) * 100 + "%, "
            + (this.l || 0) * 100 + "%"
            + (a === 1 ? ")" : ", " + a + ")");
      }
    }));

    /* From FvD 13.37, CSS Color Module Level 3 */
    function hsl2rgb(h, m1, m2) {
      return (h < 60 ? m1 + (m2 - m1) * h / 60
          : h < 180 ? m2
          : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
          : m1) * 255;
    }

    const radians$1 = Math.PI / 180;
    const degrees$2 = 180 / Math.PI;

    // https://observablehq.com/@mbostock/lab-and-rgb
    const K = 18,
        Xn = 0.96422,
        Yn = 1,
        Zn = 0.82521,
        t0$1 = 4 / 29,
        t1$1 = 6 / 29,
        t2 = 3 * t1$1 * t1$1,
        t3 = t1$1 * t1$1 * t1$1;

    function labConvert(o) {
      if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
      if (o instanceof Hcl) return hcl2lab(o);
      if (!(o instanceof Rgb)) o = rgbConvert(o);
      var r = rgb2lrgb(o.r),
          g = rgb2lrgb(o.g),
          b = rgb2lrgb(o.b),
          y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;
      if (r === g && g === b) x = z = y; else {
        x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
        z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
      }
      return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
    }

    function gray(l, opacity) {
      return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
    }

    function lab$1(l, a, b, opacity) {
      return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
    }

    function Lab(l, a, b, opacity) {
      this.l = +l;
      this.a = +a;
      this.b = +b;
      this.opacity = +opacity;
    }

    define(Lab, lab$1, extend(Color, {
      brighter: function(k) {
        return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
      },
      darker: function(k) {
        return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
      },
      rgb: function() {
        var y = (this.l + 16) / 116,
            x = isNaN(this.a) ? y : y + this.a / 500,
            z = isNaN(this.b) ? y : y - this.b / 200;
        x = Xn * lab2xyz(x);
        y = Yn * lab2xyz(y);
        z = Zn * lab2xyz(z);
        return new Rgb(
          lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),
          lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),
          lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),
          this.opacity
        );
      }
    }));

    function xyz2lab(t) {
      return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0$1;
    }

    function lab2xyz(t) {
      return t > t1$1 ? t * t * t : t2 * (t - t0$1);
    }

    function lrgb2rgb(x) {
      return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
    }

    function rgb2lrgb(x) {
      return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
    }

    function hclConvert(o) {
      if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
      if (!(o instanceof Lab)) o = labConvert(o);
      if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);
      var h = Math.atan2(o.b, o.a) * degrees$2;
      return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
    }

    function lch(l, c, h, opacity) {
      return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
    }

    function hcl$2(h, c, l, opacity) {
      return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
    }

    function Hcl(h, c, l, opacity) {
      this.h = +h;
      this.c = +c;
      this.l = +l;
      this.opacity = +opacity;
    }

    function hcl2lab(o) {
      if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
      var h = o.h * radians$1;
      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
    }

    define(Hcl, hcl$2, extend(Color, {
      brighter: function(k) {
        return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
      },
      darker: function(k) {
        return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
      },
      rgb: function() {
        return hcl2lab(this).rgb();
      }
    }));

    var A = -0.14861,
        B = +1.78277,
        C = -0.29227,
        D = -0.90649,
        E = +1.97294,
        ED = E * D,
        EB = E * B,
        BC_DA = B * C - D * A;

    function cubehelixConvert(o) {
      if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
      if (!(o instanceof Rgb)) o = rgbConvert(o);
      var r = o.r / 255,
          g = o.g / 255,
          b = o.b / 255,
          l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
          bl = b - l,
          k = (E * (g - l) - C * bl) / D,
          s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1
          h = s ? Math.atan2(k, bl) * degrees$2 - 120 : NaN;
      return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
    }

    function cubehelix$3(h, s, l, opacity) {
      return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
    }

    function Cubehelix(h, s, l, opacity) {
      this.h = +h;
      this.s = +s;
      this.l = +l;
      this.opacity = +opacity;
    }

    define(Cubehelix, cubehelix$3, extend(Color, {
      brighter: function(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
      },
      darker: function(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
      },
      rgb: function() {
        var h = isNaN(this.h) ? 0 : (this.h + 120) * radians$1,
            l = +this.l,
            a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
            cosh = Math.cos(h),
            sinh = Math.sin(h);
        return new Rgb(
          255 * (l + a * (A * cosh + B * sinh)),
          255 * (l + a * (C * cosh + D * sinh)),
          255 * (l + a * (E * cosh)),
          this.opacity
        );
      }
    }));

    function basis$1(t1, v0, v1, v2, v3) {
      var t2 = t1 * t1, t3 = t2 * t1;
      return ((1 - 3 * t1 + 3 * t2 - t3) * v0
          + (4 - 6 * t2 + 3 * t3) * v1
          + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2
          + t3 * v3) / 6;
    }

    function basis$2(values) {
      var n = values.length - 1;
      return function(t) {
        var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
            v1 = values[i],
            v2 = values[i + 1],
            v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
            v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
        return basis$1((t - i / n) * n, v0, v1, v2, v3);
      };
    }

    function basisClosed$1(values) {
      var n = values.length;
      return function(t) {
        var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
            v0 = values[(i + n - 1) % n],
            v1 = values[i % n],
            v2 = values[(i + 1) % n],
            v3 = values[(i + 2) % n];
        return basis$1((t - i / n) * n, v0, v1, v2, v3);
      };
    }

    var constant$8 = x => () => x;

    function linear$2(a, d) {
      return function(t) {
        return a + t * d;
      };
    }

    function exponential$1(a, b, y) {
      return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
        return Math.pow(a + t * b, y);
      };
    }

    function hue$1(a, b) {
      var d = b - a;
      return d ? linear$2(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$8(isNaN(a) ? b : a);
    }

    function gamma$1(y) {
      return (y = +y) === 1 ? nogamma : function(a, b) {
        return b - a ? exponential$1(a, b, y) : constant$8(isNaN(a) ? b : a);
      };
    }

    function nogamma(a, b) {
      var d = b - a;
      return d ? linear$2(a, d) : constant$8(isNaN(a) ? b : a);
    }

    var interpolateRgb = (function rgbGamma(y) {
      var color = gamma$1(y);

      function rgb$1(start, end) {
        var r = color((start = rgb(start)).r, (end = rgb(end)).r),
            g = color(start.g, end.g),
            b = color(start.b, end.b),
            opacity = nogamma(start.opacity, end.opacity);
        return function(t) {
          start.r = r(t);
          start.g = g(t);
          start.b = b(t);
          start.opacity = opacity(t);
          return start + "";
        };
      }

      rgb$1.gamma = rgbGamma;

      return rgb$1;
    })(1);

    function rgbSpline(spline) {
      return function(colors) {
        var n = colors.length,
            r = new Array(n),
            g = new Array(n),
            b = new Array(n),
            i, color;
        for (i = 0; i < n; ++i) {
          color = rgb(colors[i]);
          r[i] = color.r || 0;
          g[i] = color.g || 0;
          b[i] = color.b || 0;
        }
        r = spline(r);
        g = spline(g);
        b = spline(b);
        color.opacity = 1;
        return function(t) {
          color.r = r(t);
          color.g = g(t);
          color.b = b(t);
          return color + "";
        };
      };
    }

    var rgbBasis = rgbSpline(basis$2);
    var rgbBasisClosed = rgbSpline(basisClosed$1);

    function numberArray(a, b) {
      if (!b) b = [];
      var n = a ? Math.min(b.length, a.length) : 0,
          c = b.slice(),
          i;
      return function(t) {
        for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;
        return c;
      };
    }

    function isNumberArray(x) {
      return ArrayBuffer.isView(x) && !(x instanceof DataView);
    }

    function array$3(a, b) {
      return (isNumberArray(b) ? numberArray : genericArray)(a, b);
    }

    function genericArray(a, b) {
      var nb = b ? b.length : 0,
          na = a ? Math.min(nb, a.length) : 0,
          x = new Array(na),
          c = new Array(nb),
          i;

      for (i = 0; i < na; ++i) x[i] = interpolate$2(a[i], b[i]);
      for (; i < nb; ++i) c[i] = b[i];

      return function(t) {
        for (i = 0; i < na; ++i) c[i] = x[i](t);
        return c;
      };
    }

    function date$1(a, b) {
      var d = new Date;
      return a = +a, b = +b, function(t) {
        return d.setTime(a * (1 - t) + b * t), d;
      };
    }

    function interpolateNumber(a, b) {
      return a = +a, b = +b, function(t) {
        return a * (1 - t) + b * t;
      };
    }

    function object$1(a, b) {
      var i = {},
          c = {},
          k;

      if (a === null || typeof a !== "object") a = {};
      if (b === null || typeof b !== "object") b = {};

      for (k in b) {
        if (k in a) {
          i[k] = interpolate$2(a[k], b[k]);
        } else {
          c[k] = b[k];
        }
      }

      return function(t) {
        for (k in i) c[k] = i[k](t);
        return c;
      };
    }

    var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
        reB = new RegExp(reA.source, "g");

    function zero(b) {
      return function() {
        return b;
      };
    }

    function one(b) {
      return function(t) {
        return b(t) + "";
      };
    }

    function interpolateString(a, b) {
      var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
          am, // current match in a
          bm, // current match in b
          bs, // string preceding current number in b, if any
          i = -1, // index in s
          s = [], // string constants and placeholders
          q = []; // number interpolators

      // Coerce inputs to strings.
      a = a + "", b = b + "";

      // Interpolate pairs of numbers in a & b.
      while ((am = reA.exec(a))
          && (bm = reB.exec(b))) {
        if ((bs = bm.index) > bi) { // a string precedes the next number in b
          bs = b.slice(bi, bs);
          if (s[i]) s[i] += bs; // coalesce with previous string
          else s[++i] = bs;
        }
        if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match
          if (s[i]) s[i] += bm; // coalesce with previous string
          else s[++i] = bm;
        } else { // interpolate non-matching numbers
          s[++i] = null;
          q.push({i: i, x: interpolateNumber(am, bm)});
        }
        bi = reB.lastIndex;
      }

      // Add remains of b.
      if (bi < b.length) {
        bs = b.slice(bi);
        if (s[i]) s[i] += bs; // coalesce with previous string
        else s[++i] = bs;
      }

      // Special optimization for only a single match.
      // Otherwise, interpolate each of the numbers and rejoin the string.
      return s.length < 2 ? (q[0]
          ? one(q[0].x)
          : zero(b))
          : (b = q.length, function(t) {
              for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
              return s.join("");
            });
    }

    function interpolate$2(a, b) {
      var t = typeof b, c;
      return b == null || t === "boolean" ? constant$8(b)
          : (t === "number" ? interpolateNumber
          : t === "string" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)
          : b instanceof color ? interpolateRgb
          : b instanceof Date ? date$1
          : isNumberArray(b) ? numberArray
          : Array.isArray(b) ? genericArray
          : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object$1
          : interpolateNumber)(a, b);
    }

    function discrete(range) {
      var n = range.length;
      return function(t) {
        return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
      };
    }

    function hue(a, b) {
      var i = hue$1(+a, +b);
      return function(t) {
        var x = i(t);
        return x - 360 * Math.floor(x / 360);
      };
    }

    function interpolateRound(a, b) {
      return a = +a, b = +b, function(t) {
        return Math.round(a * (1 - t) + b * t);
      };
    }

    var degrees$1 = 180 / Math.PI;

    var identity$7 = {
      translateX: 0,
      translateY: 0,
      rotate: 0,
      skewX: 0,
      scaleX: 1,
      scaleY: 1
    };

    function decompose(a, b, c, d, e, f) {
      var scaleX, scaleY, skewX;
      if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
      if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
      if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
      if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
      return {
        translateX: e,
        translateY: f,
        rotate: Math.atan2(b, a) * degrees$1,
        skewX: Math.atan(skewX) * degrees$1,
        scaleX: scaleX,
        scaleY: scaleY
      };
    }

    var svgNode;

    /* eslint-disable no-undef */
    function parseCss(value) {
      const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
      return m.isIdentity ? identity$7 : decompose(m.a, m.b, m.c, m.d, m.e, m.f);
    }

    function parseSvg(value) {
      if (value == null) return identity$7;
      if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
      svgNode.setAttribute("transform", value);
      if (!(value = svgNode.transform.baseVal.consolidate())) return identity$7;
      value = value.matrix;
      return decompose(value.a, value.b, value.c, value.d, value.e, value.f);
    }

    function interpolateTransform(parse, pxComma, pxParen, degParen) {

      function pop(s) {
        return s.length ? s.pop() + " " : "";
      }

      function translate(xa, ya, xb, yb, s, q) {
        if (xa !== xb || ya !== yb) {
          var i = s.push("translate(", null, pxComma, null, pxParen);
          q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});
        } else if (xb || yb) {
          s.push("translate(" + xb + pxComma + yb + pxParen);
        }
      }

      function rotate(a, b, s, q) {
        if (a !== b) {
          if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path
          q.push({i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: interpolateNumber(a, b)});
        } else if (b) {
          s.push(pop(s) + "rotate(" + b + degParen);
        }
      }

      function skewX(a, b, s, q) {
        if (a !== b) {
          q.push({i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: interpolateNumber(a, b)});
        } else if (b) {
          s.push(pop(s) + "skewX(" + b + degParen);
        }
      }

      function scale(xa, ya, xb, yb, s, q) {
        if (xa !== xb || ya !== yb) {
          var i = s.push(pop(s) + "scale(", null, ",", null, ")");
          q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});
        } else if (xb !== 1 || yb !== 1) {
          s.push(pop(s) + "scale(" + xb + "," + yb + ")");
        }
      }

      return function(a, b) {
        var s = [], // string constants and placeholders
            q = []; // number interpolators
        a = parse(a), b = parse(b);
        translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
        rotate(a.rotate, b.rotate, s, q);
        skewX(a.skewX, b.skewX, s, q);
        scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
        a = b = null; // gc
        return function(t) {
          var i = -1, n = q.length, o;
          while (++i < n) s[(o = q[i]).i] = o.x(t);
          return s.join("");
        };
      };
    }

    var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
    var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");

    var epsilon2$1 = 1e-12;

    function cosh(x) {
      return ((x = Math.exp(x)) + 1 / x) / 2;
    }

    function sinh(x) {
      return ((x = Math.exp(x)) - 1 / x) / 2;
    }

    function tanh(x) {
      return ((x = Math.exp(2 * x)) - 1) / (x + 1);
    }

    var interpolateZoom = (function zoomRho(rho, rho2, rho4) {

      // p0 = [ux0, uy0, w0]
      // p1 = [ux1, uy1, w1]
      function zoom(p0, p1) {
        var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],
            ux1 = p1[0], uy1 = p1[1], w1 = p1[2],
            dx = ux1 - ux0,
            dy = uy1 - uy0,
            d2 = dx * dx + dy * dy,
            i,
            S;

        // Special case for u0 ≅ u1.
        if (d2 < epsilon2$1) {
          S = Math.log(w1 / w0) / rho;
          i = function(t) {
            return [
              ux0 + t * dx,
              uy0 + t * dy,
              w0 * Math.exp(rho * t * S)
            ];
          };
        }

        // General case.
        else {
          var d1 = Math.sqrt(d2),
              b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
              b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
              r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
              r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
          S = (r1 - r0) / rho;
          i = function(t) {
            var s = t * S,
                coshr0 = cosh(r0),
                u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
            return [
              ux0 + u * dx,
              uy0 + u * dy,
              w0 * coshr0 / cosh(rho * s + r0)
            ];
          };
        }

        i.duration = S * 1000 * rho / Math.SQRT2;

        return i;
      }

      zoom.rho = function(_) {
        var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;
        return zoomRho(_1, _2, _4);
      };

      return zoom;
    })(Math.SQRT2, 2, 4);

    function hsl(hue) {
      return function(start, end) {
        var h = hue((start = hsl$2(start)).h, (end = hsl$2(end)).h),
            s = nogamma(start.s, end.s),
            l = nogamma(start.l, end.l),
            opacity = nogamma(start.opacity, end.opacity);
        return function(t) {
          start.h = h(t);
          start.s = s(t);
          start.l = l(t);
          start.opacity = opacity(t);
          return start + "";
        };
      }
    }

    var hsl$1 = hsl(hue$1);
    var hslLong = hsl(nogamma);

    function lab(start, end) {
      var l = nogamma((start = lab$1(start)).l, (end = lab$1(end)).l),
          a = nogamma(start.a, end.a),
          b = nogamma(start.b, end.b),
          opacity = nogamma(start.opacity, end.opacity);
      return function(t) {
        start.l = l(t);
        start.a = a(t);
        start.b = b(t);
        start.opacity = opacity(t);
        return start + "";
      };
    }

    function hcl(hue) {
      return function(start, end) {
        var h = hue((start = hcl$2(start)).h, (end = hcl$2(end)).h),
            c = nogamma(start.c, end.c),
            l = nogamma(start.l, end.l),
            opacity = nogamma(start.opacity, end.opacity);
        return function(t) {
          start.h = h(t);
          start.c = c(t);
          start.l = l(t);
          start.opacity = opacity(t);
          return start + "";
        };
      }
    }

    var hcl$1 = hcl(hue$1);
    var hclLong = hcl(nogamma);

    function cubehelix$1(hue) {
      return (function cubehelixGamma(y) {
        y = +y;

        function cubehelix(start, end) {
          var h = hue((start = cubehelix$3(start)).h, (end = cubehelix$3(end)).h),
              s = nogamma(start.s, end.s),
              l = nogamma(start.l, end.l),
              opacity = nogamma(start.opacity, end.opacity);
          return function(t) {
            start.h = h(t);
            start.s = s(t);
            start.l = l(Math.pow(t, y));
            start.opacity = opacity(t);
            return start + "";
          };
        }

        cubehelix.gamma = cubehelixGamma;

        return cubehelix;
      })(1);
    }

    var cubehelix$2 = cubehelix$1(hue$1);
    var cubehelixLong = cubehelix$1(nogamma);

    function piecewise(interpolate, values) {
      if (values === undefined) values = interpolate, interpolate = interpolate$2;
      var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);
      while (i < n) I[i] = interpolate(v, v = values[++i]);
      return function(t) {
        var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
        return I[i](t - i);
      };
    }

    function quantize$1(interpolator, n) {
      var samples = new Array(n);
      for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));
      return samples;
    }

    var frame = 0, // is an animation frame pending?
        timeout$1 = 0, // is a timeout pending?
        interval$1 = 0, // are any timers active?
        pokeDelay = 1000, // how frequently we check for clock skew
        taskHead,
        taskTail,
        clockLast = 0,
        clockNow = 0,
        clockSkew = 0,
        clock = typeof performance === "object" && performance.now ? performance : Date,
        setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };

    function now() {
      return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
    }

    function clearNow() {
      clockNow = 0;
    }

    function Timer() {
      this._call =
      this._time =
      this._next = null;
    }

    Timer.prototype = timer.prototype = {
      constructor: Timer,
      restart: function(callback, delay, time) {
        if (typeof callback !== "function") throw new TypeError("callback is not a function");
        time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);
        if (!this._next && taskTail !== this) {
          if (taskTail) taskTail._next = this;
          else taskHead = this;
          taskTail = this;
        }
        this._call = callback;
        this._time = time;
        sleep();
      },
      stop: function() {
        if (this._call) {
          this._call = null;
          this._time = Infinity;
          sleep();
        }
      }
    };

    function timer(callback, delay, time) {
      var t = new Timer;
      t.restart(callback, delay, time);
      return t;
    }

    function timerFlush() {
      now(); // Get the current time, if not already set.
      ++frame; // Pretend we’ve set an alarm, if we haven’t already.
      var t = taskHead, e;
      while (t) {
        if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
        t = t._next;
      }
      --frame;
    }

    function wake() {
      clockNow = (clockLast = clock.now()) + clockSkew;
      frame = timeout$1 = 0;
      try {
        timerFlush();
      } finally {
        frame = 0;
        nap();
        clockNow = 0;
      }
    }

    function poke() {
      var now = clock.now(), delay = now - clockLast;
      if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
    }

    function nap() {
      var t0, t1 = taskHead, t2, time = Infinity;
      while (t1) {
        if (t1._call) {
          if (time > t1._time) time = t1._time;
          t0 = t1, t1 = t1._next;
        } else {
          t2 = t1._next, t1._next = null;
          t1 = t0 ? t0._next = t2 : taskHead = t2;
        }
      }
      taskTail = t0;
      sleep(time);
    }

    function sleep(time) {
      if (frame) return; // Soonest alarm already set, or will be.
      if (timeout$1) timeout$1 = clearTimeout(timeout$1);
      var delay = time - clockNow; // Strictly less than if we recomputed clockNow.
      if (delay > 24) {
        if (time < Infinity) timeout$1 = setTimeout(wake, time - clock.now() - clockSkew);
        if (interval$1) interval$1 = clearInterval(interval$1);
      } else {
        if (!interval$1) clockLast = clock.now(), interval$1 = setInterval(poke, pokeDelay);
        frame = 1, setFrame(wake);
      }
    }

    function timeout(callback, delay, time) {
      var t = new Timer;
      delay = delay == null ? 0 : +delay;
      t.restart(elapsed => {
        t.stop();
        callback(elapsed + delay);
      }, delay, time);
      return t;
    }

    function interval(callback, delay, time) {
      var t = new Timer, total = delay;
      if (delay == null) return t.restart(callback, delay, time), t;
      t._restart = t.restart;
      t.restart = function(callback, delay, time) {
        delay = +delay, time = time == null ? now() : +time;
        t._restart(function tick(elapsed) {
          elapsed += total;
          t._restart(tick, total += delay, time);
          callback(elapsed);
        }, delay, time);
      };
      t.restart(callback, delay, time);
      return t;
    }

    var emptyOn = dispatch("start", "end", "cancel", "interrupt");
    var emptyTween = [];

    var CREATED = 0;
    var SCHEDULED = 1;
    var STARTING = 2;
    var STARTED = 3;
    var RUNNING = 4;
    var ENDING = 5;
    var ENDED = 6;

    function schedule(node, name, id, index, group, timing) {
      var schedules = node.__transition;
      if (!schedules) node.__transition = {};
      else if (id in schedules) return;
      create(node, id, {
        name: name,
        index: index, // For context during callback.
        group: group, // For context during callback.
        on: emptyOn,
        tween: emptyTween,
        time: timing.time,
        delay: timing.delay,
        duration: timing.duration,
        ease: timing.ease,
        timer: null,
        state: CREATED
      });
    }

    function init(node, id) {
      var schedule = get(node, id);
      if (schedule.state > CREATED) throw new Error("too late; already scheduled");
      return schedule;
    }

    function set(node, id) {
      var schedule = get(node, id);
      if (schedule.state > STARTED) throw new Error("too late; already running");
      return schedule;
    }

    function get(node, id) {
      var schedule = node.__transition;
      if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
      return schedule;
    }

    function create(node, id, self) {
      var schedules = node.__transition,
          tween;

      // Initialize the self timer when the transition is created.
      // Note the actual delay is not known until the first callback!
      schedules[id] = self;
      self.timer = timer(schedule, 0, self.time);

      function schedule(elapsed) {
        self.state = SCHEDULED;
        self.timer.restart(start, self.delay, self.time);

        // If the elapsed delay is less than our first sleep, start immediately.
        if (self.delay <= elapsed) start(elapsed - self.delay);
      }

      function start(elapsed) {
        var i, j, n, o;

        // If the state is not SCHEDULED, then we previously errored on start.
        if (self.state !== SCHEDULED) return stop();

        for (i in schedules) {
          o = schedules[i];
          if (o.name !== self.name) continue;

          // While this element already has a starting transition during this frame,
          // defer starting an interrupting transition until that transition has a
          // chance to tick (and possibly end); see d3/d3-transition#54!
          if (o.state === STARTED) return timeout(start);

          // Interrupt the active transition, if any.
          if (o.state === RUNNING) {
            o.state = ENDED;
            o.timer.stop();
            o.on.call("interrupt", node, node.__data__, o.index, o.group);
            delete schedules[i];
          }

          // Cancel any pre-empted transitions.
          else if (+i < id) {
            o.state = ENDED;
            o.timer.stop();
            o.on.call("cancel", node, node.__data__, o.index, o.group);
            delete schedules[i];
          }
        }

        // Defer the first tick to end of the current frame; see d3/d3#1576.
        // Note the transition may be canceled after start and before the first tick!
        // Note this must be scheduled before the start event; see d3/d3-transition#16!
        // Assuming this is successful, subsequent callbacks go straight to tick.
        timeout(function() {
          if (self.state === STARTED) {
            self.state = RUNNING;
            self.timer.restart(tick, self.delay, self.time);
            tick(elapsed);
          }
        });

        // Dispatch the start event.
        // Note this must be done before the tween are initialized.
        self.state = STARTING;
        self.on.call("start", node, node.__data__, self.index, self.group);
        if (self.state !== STARTING) return; // interrupted
        self.state = STARTED;

        // Initialize the tween, deleting null tween.
        tween = new Array(n = self.tween.length);
        for (i = 0, j = -1; i < n; ++i) {
          if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
            tween[++j] = o;
          }
        }
        tween.length = j + 1;
      }

      function tick(elapsed) {
        var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),
            i = -1,
            n = tween.length;

        while (++i < n) {
          tween[i].call(node, t);
        }

        // Dispatch the end event.
        if (self.state === ENDING) {
          self.on.call("end", node, node.__data__, self.index, self.group);
          stop();
        }
      }

      function stop() {
        self.state = ENDED;
        self.timer.stop();
        delete schedules[id];
        for (var i in schedules) return; // eslint-disable-line no-unused-vars
        delete node.__transition;
      }
    }

    function interrupt(node, name) {
      var schedules = node.__transition,
          schedule,
          active,
          empty = true,
          i;

      if (!schedules) return;

      name = name == null ? null : name + "";

      for (i in schedules) {
        if ((schedule = schedules[i]).name !== name) { empty = false; continue; }
        active = schedule.state > STARTING && schedule.state < ENDING;
        schedule.state = ENDED;
        schedule.timer.stop();
        schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
        delete schedules[i];
      }

      if (empty) delete node.__transition;
    }

    function selection_interrupt(name) {
      return this.each(function() {
        interrupt(this, name);
      });
    }

    function tweenRemove(id, name) {
      var tween0, tween1;
      return function() {
        var schedule = set(this, id),
            tween = schedule.tween;

        // If this node shared tween with the previous node,
        // just assign the updated shared tween and we’re done!
        // Otherwise, copy-on-write.
        if (tween !== tween0) {
          tween1 = tween0 = tween;
          for (var i = 0, n = tween1.length; i < n; ++i) {
            if (tween1[i].name === name) {
              tween1 = tween1.slice();
              tween1.splice(i, 1);
              break;
            }
          }
        }

        schedule.tween = tween1;
      };
    }

    function tweenFunction(id, name, value) {
      var tween0, tween1;
      if (typeof value !== "function") throw new Error;
      return function() {
        var schedule = set(this, id),
            tween = schedule.tween;

        // If this node shared tween with the previous node,
        // just assign the updated shared tween and we’re done!
        // Otherwise, copy-on-write.
        if (tween !== tween0) {
          tween1 = (tween0 = tween).slice();
          for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {
            if (tween1[i].name === name) {
              tween1[i] = t;
              break;
            }
          }
          if (i === n) tween1.push(t);
        }

        schedule.tween = tween1;
      };
    }

    function transition_tween(name, value) {
      var id = this._id;

      name += "";

      if (arguments.length < 2) {
        var tween = get(this.node(), id).tween;
        for (var i = 0, n = tween.length, t; i < n; ++i) {
          if ((t = tween[i]).name === name) {
            return t.value;
          }
        }
        return null;
      }

      return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
    }

    function tweenValue(transition, name, value) {
      var id = transition._id;

      transition.each(function() {
        var schedule = set(this, id);
        (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
      });

      return function(node) {
        return get(node, id).value[name];
      };
    }

    function interpolate$1(a, b) {
      var c;
      return (typeof b === "number" ? interpolateNumber
          : b instanceof color ? interpolateRgb
          : (c = color(b)) ? (b = c, interpolateRgb)
          : interpolateString)(a, b);
    }

    function attrRemove(name) {
      return function() {
        this.removeAttribute(name);
      };
    }

    function attrRemoveNS(fullname) {
      return function() {
        this.removeAttributeNS(fullname.space, fullname.local);
      };
    }

    function attrConstant(name, interpolate, value1) {
      var string00,
          string1 = value1 + "",
          interpolate0;
      return function() {
        var string0 = this.getAttribute(name);
        return string0 === string1 ? null
            : string0 === string00 ? interpolate0
            : interpolate0 = interpolate(string00 = string0, value1);
      };
    }

    function attrConstantNS(fullname, interpolate, value1) {
      var string00,
          string1 = value1 + "",
          interpolate0;
      return function() {
        var string0 = this.getAttributeNS(fullname.space, fullname.local);
        return string0 === string1 ? null
            : string0 === string00 ? interpolate0
            : interpolate0 = interpolate(string00 = string0, value1);
      };
    }

    function attrFunction(name, interpolate, value) {
      var string00,
          string10,
          interpolate0;
      return function() {
        var string0, value1 = value(this), string1;
        if (value1 == null) return void this.removeAttribute(name);
        string0 = this.getAttribute(name);
        string1 = value1 + "";
        return string0 === string1 ? null
            : string0 === string00 && string1 === string10 ? interpolate0
            : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
      };
    }

    function attrFunctionNS(fullname, interpolate, value) {
      var string00,
          string10,
          interpolate0;
      return function() {
        var string0, value1 = value(this), string1;
        if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
        string0 = this.getAttributeNS(fullname.space, fullname.local);
        string1 = value1 + "";
        return string0 === string1 ? null
            : string0 === string00 && string1 === string10 ? interpolate0
            : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
      };
    }

    function transition_attr(name, value) {
      var fullname = namespace(name), i = fullname === "transform" ? interpolateTransformSvg : interpolate$1;
      return this.attrTween(name, typeof value === "function"
          ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, "attr." + name, value))
          : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)
          : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));
    }

    function attrInterpolate(name, i) {
      return function(t) {
        this.setAttribute(name, i.call(this, t));
      };
    }

    function attrInterpolateNS(fullname, i) {
      return function(t) {
        this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
      };
    }

    function attrTweenNS(fullname, value) {
      var t0, i0;
      function tween() {
        var i = value.apply(this, arguments);
        if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
        return t0;
      }
      tween._value = value;
      return tween;
    }

    function attrTween(name, value) {
      var t0, i0;
      function tween() {
        var i = value.apply(this, arguments);
        if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
        return t0;
      }
      tween._value = value;
      return tween;
    }

    function transition_attrTween(name, value) {
      var key = "attr." + name;
      if (arguments.length < 2) return (key = this.tween(key)) && key._value;
      if (value == null) return this.tween(key, null);
      if (typeof value !== "function") throw new Error;
      var fullname = namespace(name);
      return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
    }

    function delayFunction(id, value) {
      return function() {
        init(this, id).delay = +value.apply(this, arguments);
      };
    }

    function delayConstant(id, value) {
      return value = +value, function() {
        init(this, id).delay = value;
      };
    }

    function transition_delay(value) {
      var id = this._id;

      return arguments.length
          ? this.each((typeof value === "function"
              ? delayFunction
              : delayConstant)(id, value))
          : get(this.node(), id).delay;
    }

    function durationFunction(id, value) {
      return function() {
        set(this, id).duration = +value.apply(this, arguments);
      };
    }

    function durationConstant(id, value) {
      return value = +value, function() {
        set(this, id).duration = value;
      };
    }

    function transition_duration(value) {
      var id = this._id;

      return arguments.length
          ? this.each((typeof value === "function"
              ? durationFunction
              : durationConstant)(id, value))
          : get(this.node(), id).duration;
    }

    function easeConstant(id, value) {
      if (typeof value !== "function") throw new Error;
      return function() {
        set(this, id).ease = value;
      };
    }

    function transition_ease(value) {
      var id = this._id;

      return arguments.length
          ? this.each(easeConstant(id, value))
          : get(this.node(), id).ease;
    }

    function easeVarying(id, value) {
      return function() {
        var v = value.apply(this, arguments);
        if (typeof v !== "function") throw new Error;
        set(this, id).ease = v;
      };
    }

    function transition_easeVarying(value) {
      if (typeof value !== "function") throw new Error;
      return this.each(easeVarying(this._id, value));
    }

    function transition_filter(match) {
      if (typeof match !== "function") match = matcher(match);

      for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
          if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
            subgroup.push(node);
          }
        }
      }

      return new Transition(subgroups, this._parents, this._name, this._id);
    }

    function transition_merge(transition) {
      if (transition._id !== this._id) throw new Error;

      for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
        for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
          if (node = group0[i] || group1[i]) {
            merge[i] = node;
          }
        }
      }

      for (; j < m0; ++j) {
        merges[j] = groups0[j];
      }

      return new Transition(merges, this._parents, this._name, this._id);
    }

    function start(name) {
      return (name + "").trim().split(/^|\s+/).every(function(t) {
        var i = t.indexOf(".");
        if (i >= 0) t = t.slice(0, i);
        return !t || t === "start";
      });
    }

    function onFunction(id, name, listener) {
      var on0, on1, sit = start(name) ? init : set;
      return function() {
        var schedule = sit(this, id),
            on = schedule.on;

        // If this node shared a dispatch with the previous node,
        // just assign the updated shared dispatch and we’re done!
        // Otherwise, copy-on-write.
        if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);

        schedule.on = on1;
      };
    }

    function transition_on(name, listener) {
      var id = this._id;

      return arguments.length < 2
          ? get(this.node(), id).on.on(name)
          : this.each(onFunction(id, name, listener));
    }

    function removeFunction(id) {
      return function() {
        var parent = this.parentNode;
        for (var i in this.__transition) if (+i !== id) return;
        if (parent) parent.removeChild(this);
      };
    }

    function transition_remove() {
      return this.on("end.remove", removeFunction(this._id));
    }

    function transition_select(select) {
      var name = this._name,
          id = this._id;

      if (typeof select !== "function") select = selector(select);

      for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
          if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
            if ("__data__" in node) subnode.__data__ = node.__data__;
            subgroup[i] = subnode;
            schedule(subgroup[i], name, id, i, subgroup, get(node, id));
          }
        }
      }

      return new Transition(subgroups, this._parents, name, id);
    }

    function transition_selectAll(select) {
      var name = this._name,
          id = this._id;

      if (typeof select !== "function") select = selectorAll(select);

      for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {
              if (child = children[k]) {
                schedule(child, name, id, k, children, inherit);
              }
            }
            subgroups.push(children);
            parents.push(node);
          }
        }
      }

      return new Transition(subgroups, parents, name, id);
    }

    var Selection = selection.prototype.constructor;

    function transition_selection() {
      return new Selection(this._groups, this._parents);
    }

    function styleNull(name, interpolate) {
      var string00,
          string10,
          interpolate0;
      return function() {
        var string0 = styleValue(this, name),
            string1 = (this.style.removeProperty(name), styleValue(this, name));
        return string0 === string1 ? null
            : string0 === string00 && string1 === string10 ? interpolate0
            : interpolate0 = interpolate(string00 = string0, string10 = string1);
      };
    }

    function styleRemove(name) {
      return function() {
        this.style.removeProperty(name);
      };
    }

    function styleConstant(name, interpolate, value1) {
      var string00,
          string1 = value1 + "",
          interpolate0;
      return function() {
        var string0 = styleValue(this, name);
        return string0 === string1 ? null
            : string0 === string00 ? interpolate0
            : interpolate0 = interpolate(string00 = string0, value1);
      };
    }

    function styleFunction(name, interpolate, value) {
      var string00,
          string10,
          interpolate0;
      return function() {
        var string0 = styleValue(this, name),
            value1 = value(this),
            string1 = value1 + "";
        if (value1 == null) string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));
        return string0 === string1 ? null
            : string0 === string00 && string1 === string10 ? interpolate0
            : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
      };
    }

    function styleMaybeRemove(id, name) {
      var on0, on1, listener0, key = "style." + name, event = "end." + key, remove;
      return function() {
        var schedule = set(this, id),
            on = schedule.on,
            listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;

        // If this node shared a dispatch with the previous node,
        // just assign the updated shared dispatch and we’re done!
        // Otherwise, copy-on-write.
        if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);

        schedule.on = on1;
      };
    }

    function transition_style(name, value, priority) {
      var i = (name += "") === "transform" ? interpolateTransformCss : interpolate$1;
      return value == null ? this
          .styleTween(name, styleNull(name, i))
          .on("end.style." + name, styleRemove(name))
        : typeof value === "function" ? this
          .styleTween(name, styleFunction(name, i, tweenValue(this, "style." + name, value)))
          .each(styleMaybeRemove(this._id, name))
        : this
          .styleTween(name, styleConstant(name, i, value), priority)
          .on("end.style." + name, null);
    }

    function styleInterpolate(name, i, priority) {
      return function(t) {
        this.style.setProperty(name, i.call(this, t), priority);
      };
    }

    function styleTween(name, value, priority) {
      var t, i0;
      function tween() {
        var i = value.apply(this, arguments);
        if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
        return t;
      }
      tween._value = value;
      return tween;
    }

    function transition_styleTween(name, value, priority) {
      var key = "style." + (name += "");
      if (arguments.length < 2) return (key = this.tween(key)) && key._value;
      if (value == null) return this.tween(key, null);
      if (typeof value !== "function") throw new Error;
      return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
    }

    function textConstant(value) {
      return function() {
        this.textContent = value;
      };
    }

    function textFunction(value) {
      return function() {
        var value1 = value(this);
        this.textContent = value1 == null ? "" : value1;
      };
    }

    function transition_text(value) {
      return this.tween("text", typeof value === "function"
          ? textFunction(tweenValue(this, "text", value))
          : textConstant(value == null ? "" : value + ""));
    }

    function textInterpolate(i) {
      return function(t) {
        this.textContent = i.call(this, t);
      };
    }

    function textTween(value) {
      var t0, i0;
      function tween() {
        var i = value.apply(this, arguments);
        if (i !== i0) t0 = (i0 = i) && textInterpolate(i);
        return t0;
      }
      tween._value = value;
      return tween;
    }

    function transition_textTween(value) {
      var key = "text";
      if (arguments.length < 1) return (key = this.tween(key)) && key._value;
      if (value == null) return this.tween(key, null);
      if (typeof value !== "function") throw new Error;
      return this.tween(key, textTween(value));
    }

    function transition_transition() {
      var name = this._name,
          id0 = this._id,
          id1 = newId();

      for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            var inherit = get(node, id0);
            schedule(node, name, id1, i, group, {
              time: inherit.time + inherit.delay + inherit.duration,
              delay: 0,
              duration: inherit.duration,
              ease: inherit.ease
            });
          }
        }
      }

      return new Transition(groups, this._parents, name, id1);
    }

    function transition_end() {
      var on0, on1, that = this, id = that._id, size = that.size();
      return new Promise(function(resolve, reject) {
        var cancel = {value: reject},
            end = {value: function() { if (--size === 0) resolve(); }};

        that.each(function() {
          var schedule = set(this, id),
              on = schedule.on;

          // If this node shared a dispatch with the previous node,
          // just assign the updated shared dispatch and we’re done!
          // Otherwise, copy-on-write.
          if (on !== on0) {
            on1 = (on0 = on).copy();
            on1._.cancel.push(cancel);
            on1._.interrupt.push(cancel);
            on1._.end.push(end);
          }

          schedule.on = on1;
        });

        // The selection was empty, resolve end immediately
        if (size === 0) resolve();
      });
    }

    var id = 0;

    function Transition(groups, parents, name, id) {
      this._groups = groups;
      this._parents = parents;
      this._name = name;
      this._id = id;
    }

    function transition$1(name) {
      return selection().transition(name);
    }

    function newId() {
      return ++id;
    }

    var selection_prototype = selection.prototype;

    Transition.prototype = transition$1.prototype = {
      constructor: Transition,
      select: transition_select,
      selectAll: transition_selectAll,
      filter: transition_filter,
      merge: transition_merge,
      selection: transition_selection,
      transition: transition_transition,
      call: selection_prototype.call,
      nodes: selection_prototype.nodes,
      node: selection_prototype.node,
      size: selection_prototype.size,
      empty: selection_prototype.empty,
      each: selection_prototype.each,
      on: transition_on,
      attr: transition_attr,
      attrTween: transition_attrTween,
      style: transition_style,
      styleTween: transition_styleTween,
      text: transition_text,
      textTween: transition_textTween,
      remove: transition_remove,
      tween: transition_tween,
      delay: transition_delay,
      duration: transition_duration,
      ease: transition_ease,
      easeVarying: transition_easeVarying,
      end: transition_end,
      [Symbol.iterator]: selection_prototype[Symbol.iterator]
    };

    const linear$1 = t => +t;

    function quadIn(t) {
      return t * t;
    }

    function quadOut(t) {
      return t * (2 - t);
    }

    function quadInOut(t) {
      return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
    }

    function cubicIn(t) {
      return t * t * t;
    }

    function cubicOut(t) {
      return --t * t * t + 1;
    }

    function cubicInOut(t) {
      return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
    }

    var exponent$1 = 3;

    var polyIn = (function custom(e) {
      e = +e;

      function polyIn(t) {
        return Math.pow(t, e);
      }

      polyIn.exponent = custom;

      return polyIn;
    })(exponent$1);

    var polyOut = (function custom(e) {
      e = +e;

      function polyOut(t) {
        return 1 - Math.pow(1 - t, e);
      }

      polyOut.exponent = custom;

      return polyOut;
    })(exponent$1);

    var polyInOut = (function custom(e) {
      e = +e;

      function polyInOut(t) {
        return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
      }

      polyInOut.exponent = custom;

      return polyInOut;
    })(exponent$1);

    var pi$4 = Math.PI,
        halfPi$3 = pi$4 / 2;

    function sinIn(t) {
      return (+t === 1) ? 1 : 1 - Math.cos(t * halfPi$3);
    }

    function sinOut(t) {
      return Math.sin(t * halfPi$3);
    }

    function sinInOut(t) {
      return (1 - Math.cos(pi$4 * t)) / 2;
    }

    // tpmt is two power minus ten times t scaled to [0,1]
    function tpmt(x) {
      return (Math.pow(2, -10 * x) - 0.0009765625) * 1.0009775171065494;
    }

    function expIn(t) {
      return tpmt(1 - +t);
    }

    function expOut(t) {
      return 1 - tpmt(t);
    }

    function expInOut(t) {
      return ((t *= 2) <= 1 ? tpmt(1 - t) : 2 - tpmt(t - 1)) / 2;
    }

    function circleIn(t) {
      return 1 - Math.sqrt(1 - t * t);
    }

    function circleOut(t) {
      return Math.sqrt(1 - --t * t);
    }

    function circleInOut(t) {
      return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
    }

    var b1 = 4 / 11,
        b2 = 6 / 11,
        b3 = 8 / 11,
        b4 = 3 / 4,
        b5 = 9 / 11,
        b6 = 10 / 11,
        b7 = 15 / 16,
        b8 = 21 / 22,
        b9 = 63 / 64,
        b0 = 1 / b1 / b1;

    function bounceIn(t) {
      return 1 - bounceOut(1 - t);
    }

    function bounceOut(t) {
      return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
    }

    function bounceInOut(t) {
      return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
    }

    var overshoot = 1.70158;

    var backIn = (function custom(s) {
      s = +s;

      function backIn(t) {
        return (t = +t) * t * (s * (t - 1) + t);
      }

      backIn.overshoot = custom;

      return backIn;
    })(overshoot);

    var backOut = (function custom(s) {
      s = +s;

      function backOut(t) {
        return --t * t * ((t + 1) * s + t) + 1;
      }

      backOut.overshoot = custom;

      return backOut;
    })(overshoot);

    var backInOut = (function custom(s) {
      s = +s;

      function backInOut(t) {
        return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
      }

      backInOut.overshoot = custom;

      return backInOut;
    })(overshoot);

    var tau$5 = 2 * Math.PI,
        amplitude = 1,
        period = 0.3;

    var elasticIn = (function custom(a, p) {
      var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau$5);

      function elasticIn(t) {
        return a * tpmt(-(--t)) * Math.sin((s - t) / p);
      }

      elasticIn.amplitude = function(a) { return custom(a, p * tau$5); };
      elasticIn.period = function(p) { return custom(a, p); };

      return elasticIn;
    })(amplitude, period);

    var elasticOut = (function custom(a, p) {
      var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau$5);

      function elasticOut(t) {
        return 1 - a * tpmt(t = +t) * Math.sin((t + s) / p);
      }

      elasticOut.amplitude = function(a) { return custom(a, p * tau$5); };
      elasticOut.period = function(p) { return custom(a, p); };

      return elasticOut;
    })(amplitude, period);

    var elasticInOut = (function custom(a, p) {
      var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau$5);

      function elasticInOut(t) {
        return ((t = t * 2 - 1) < 0
            ? a * tpmt(-t) * Math.sin((s - t) / p)
            : 2 - a * tpmt(t) * Math.sin((s + t) / p)) / 2;
      }

      elasticInOut.amplitude = function(a) { return custom(a, p * tau$5); };
      elasticInOut.period = function(p) { return custom(a, p); };

      return elasticInOut;
    })(amplitude, period);

    var defaultTiming = {
      time: null, // Set on use.
      delay: 0,
      duration: 250,
      ease: cubicInOut
    };

    function inherit(node, id) {
      var timing;
      while (!(timing = node.__transition) || !(timing = timing[id])) {
        if (!(node = node.parentNode)) {
          throw new Error(`transition ${id} not found`);
        }
      }
      return timing;
    }

    function selection_transition(name) {
      var id,
          timing;

      if (name instanceof Transition) {
        id = name._id, name = name._name;
      } else {
        id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + "";
      }

      for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            schedule(node, name, id, i, group, timing || inherit(node, id));
          }
        }
      }

      return new Transition(groups, this._parents, name, id);
    }

    selection.prototype.interrupt = selection_interrupt;
    selection.prototype.transition = selection_transition;

    var root = [null];

    function active(node, name) {
      var schedules = node.__transition,
          schedule,
          i;

      if (schedules) {
        name = name == null ? null : name + "";
        for (i in schedules) {
          if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {
            return new Transition([[node]], root, name, +i);
          }
        }
      }

      return null;
    }

    var constant$7 = x => () => x;

    function BrushEvent(type, {
      sourceEvent,
      target,
      selection,
      mode,
      dispatch
    }) {
      Object.defineProperties(this, {
        type: {value: type, enumerable: true, configurable: true},
        sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},
        target: {value: target, enumerable: true, configurable: true},
        selection: {value: selection, enumerable: true, configurable: true},
        mode: {value: mode, enumerable: true, configurable: true},
        _: {value: dispatch}
      });
    }

    function nopropagation$1(event) {
      event.stopImmediatePropagation();
    }

    function noevent$1(event) {
      event.preventDefault();
      event.stopImmediatePropagation();
    }

    var MODE_DRAG = {name: "drag"},
        MODE_SPACE = {name: "space"},
        MODE_HANDLE = {name: "handle"},
        MODE_CENTER = {name: "center"};

    const {abs: abs$3, max: max$2, min: min$1} = Math;

    function number1(e) {
      return [+e[0], +e[1]];
    }

    function number2(e) {
      return [number1(e[0]), number1(e[1])];
    }

    var X = {
      name: "x",
      handles: ["w", "e"].map(type),
      input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },
      output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }
    };

    var Y = {
      name: "y",
      handles: ["n", "s"].map(type),
      input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },
      output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }
    };

    var XY = {
      name: "xy",
      handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type),
      input: function(xy) { return xy == null ? null : number2(xy); },
      output: function(xy) { return xy; }
    };

    var cursors = {
      overlay: "crosshair",
      selection: "move",
      n: "ns-resize",
      e: "ew-resize",
      s: "ns-resize",
      w: "ew-resize",
      nw: "nwse-resize",
      ne: "nesw-resize",
      se: "nwse-resize",
      sw: "nesw-resize"
    };

    var flipX = {
      e: "w",
      w: "e",
      nw: "ne",
      ne: "nw",
      se: "sw",
      sw: "se"
    };

    var flipY = {
      n: "s",
      s: "n",
      nw: "sw",
      ne: "se",
      se: "ne",
      sw: "nw"
    };

    var signsX = {
      overlay: +1,
      selection: +1,
      n: null,
      e: +1,
      s: null,
      w: -1,
      nw: -1,
      ne: +1,
      se: +1,
      sw: -1
    };

    var signsY = {
      overlay: +1,
      selection: +1,
      n: -1,
      e: null,
      s: +1,
      w: null,
      nw: -1,
      ne: -1,
      se: +1,
      sw: +1
    };

    function type(t) {
      return {type: t};
    }

    // Ignore right-click, since that should open the context menu.
    function defaultFilter$1(event) {
      return !event.ctrlKey && !event.button;
    }

    function defaultExtent$1() {
      var svg = this.ownerSVGElement || this;
      if (svg.hasAttribute("viewBox")) {
        svg = svg.viewBox.baseVal;
        return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];
      }
      return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
    }

    function defaultTouchable$1() {
      return navigator.maxTouchPoints || ("ontouchstart" in this);
    }

    // Like d3.local, but with the name “__brush” rather than auto-generated.
    function local(node) {
      while (!node.__brush) if (!(node = node.parentNode)) return;
      return node.__brush;
    }

    function empty(extent) {
      return extent[0][0] === extent[1][0]
          || extent[0][1] === extent[1][1];
    }

    function brushSelection(node) {
      var state = node.__brush;
      return state ? state.dim.output(state.selection) : null;
    }

    function brushX() {
      return brush$1(X);
    }

    function brushY() {
      return brush$1(Y);
    }

    function brush() {
      return brush$1(XY);
    }

    function brush$1(dim) {
      var extent = defaultExtent$1,
          filter = defaultFilter$1,
          touchable = defaultTouchable$1,
          keys = true,
          listeners = dispatch("start", "brush", "end"),
          handleSize = 6,
          touchending;

      function brush(group) {
        var overlay = group
            .property("__brush", initialize)
          .selectAll(".overlay")
          .data([type("overlay")]);

        overlay.enter().append("rect")
            .attr("class", "overlay")
            .attr("pointer-events", "all")
            .attr("cursor", cursors.overlay)
          .merge(overlay)
            .each(function() {
              var extent = local(this).extent;
              select(this)
                  .attr("x", extent[0][0])
                  .attr("y", extent[0][1])
                  .attr("width", extent[1][0] - extent[0][0])
                  .attr("height", extent[1][1] - extent[0][1]);
            });

        group.selectAll(".selection")
          .data([type("selection")])
          .enter().append("rect")
            .attr("class", "selection")
            .attr("cursor", cursors.selection)
            .attr("fill", "#777")
            .attr("fill-opacity", 0.3)
            .attr("stroke", "#fff")
            .attr("shape-rendering", "crispEdges");

        var handle = group.selectAll(".handle")
          .data(dim.handles, function(d) { return d.type; });

        handle.exit().remove();

        handle.enter().append("rect")
            .attr("class", function(d) { return "handle handle--" + d.type; })
            .attr("cursor", function(d) { return cursors[d.type]; });

        group
            .each(redraw)
            .attr("fill", "none")
            .attr("pointer-events", "all")
            .on("mousedown.brush", started)
          .filter(touchable)
            .on("touchstart.brush", started)
            .on("touchmove.brush", touchmoved)
            .on("touchend.brush touchcancel.brush", touchended)
            .style("touch-action", "none")
            .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
      }

      brush.move = function(group, selection) {
        if (group.tween) {
          group
              .on("start.brush", function(event) { emitter(this, arguments).beforestart().start(event); })
              .on("interrupt.brush end.brush", function(event) { emitter(this, arguments).end(event); })
              .tween("brush", function() {
                var that = this,
                    state = that.__brush,
                    emit = emitter(that, arguments),
                    selection0 = state.selection,
                    selection1 = dim.input(typeof selection === "function" ? selection.apply(this, arguments) : selection, state.extent),
                    i = interpolate$2(selection0, selection1);

                function tween(t) {
                  state.selection = t === 1 && selection1 === null ? null : i(t);
                  redraw.call(that);
                  emit.brush();
                }

                return selection0 !== null && selection1 !== null ? tween : tween(1);
              });
        } else {
          group
              .each(function() {
                var that = this,
                    args = arguments,
                    state = that.__brush,
                    selection1 = dim.input(typeof selection === "function" ? selection.apply(that, args) : selection, state.extent),
                    emit = emitter(that, args).beforestart();

                interrupt(that);
                state.selection = selection1 === null ? null : selection1;
                redraw.call(that);
                emit.start().brush().end();
              });
        }
      };

      brush.clear = function(group) {
        brush.move(group, null);
      };

      function redraw() {
        var group = select(this),
            selection = local(this).selection;

        if (selection) {
          group.selectAll(".selection")
              .style("display", null)
              .attr("x", selection[0][0])
              .attr("y", selection[0][1])
              .attr("width", selection[1][0] - selection[0][0])
              .attr("height", selection[1][1] - selection[0][1]);

          group.selectAll(".handle")
              .style("display", null)
              .attr("x", function(d) { return d.type[d.type.length - 1] === "e" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })
              .attr("y", function(d) { return d.type[0] === "s" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })
              .attr("width", function(d) { return d.type === "n" || d.type === "s" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })
              .attr("height", function(d) { return d.type === "e" || d.type === "w" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });
        }

        else {
          group.selectAll(".selection,.handle")
              .style("display", "none")
              .attr("x", null)
              .attr("y", null)
              .attr("width", null)
              .attr("height", null);
        }
      }

      function emitter(that, args, clean) {
        var emit = that.__brush.emitter;
        return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);
      }

      function Emitter(that, args, clean) {
        this.that = that;
        this.args = args;
        this.state = that.__brush;
        this.active = 0;
        this.clean = clean;
      }

      Emitter.prototype = {
        beforestart: function() {
          if (++this.active === 1) this.state.emitter = this, this.starting = true;
          return this;
        },
        start: function(event, mode) {
          if (this.starting) this.starting = false, this.emit("start", event, mode);
          else this.emit("brush", event);
          return this;
        },
        brush: function(event, mode) {
          this.emit("brush", event, mode);
          return this;
        },
        end: function(event, mode) {
          if (--this.active === 0) delete this.state.emitter, this.emit("end", event, mode);
          return this;
        },
        emit: function(type, event, mode) {
          var d = select(this.that).datum();
          listeners.call(
            type,
            this.that,
            new BrushEvent(type, {
              sourceEvent: event,
              target: brush,
              selection: dim.output(this.state.selection),
              mode,
              dispatch: listeners
            }),
            d
          );
        }
      };

      function started(event) {
        if (touchending && !event.touches) return;
        if (!filter.apply(this, arguments)) return;

        var that = this,
            type = event.target.__data__.type,
            mode = (keys && event.metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),
            signX = dim === Y ? null : signsX[type],
            signY = dim === X ? null : signsY[type],
            state = local(that),
            extent = state.extent,
            selection = state.selection,
            W = extent[0][0], w0, w1,
            N = extent[0][1], n0, n1,
            E = extent[1][0], e0, e1,
            S = extent[1][1], s0, s1,
            dx = 0,
            dy = 0,
            moving,
            shifting = signX && signY && keys && event.shiftKey,
            lockX,
            lockY,
            points = Array.from(event.touches || [event], t => {
              const i = t.identifier;
              t = pointer(t, that);
              t.point0 = t.slice();
              t.identifier = i;
              return t;
            });

        if (type === "overlay") {
          if (selection) moving = true;
          const pts = [points[0], points[1] || points[0]];
          state.selection = selection = [[
              w0 = dim === Y ? W : min$1(pts[0][0], pts[1][0]),
              n0 = dim === X ? N : min$1(pts[0][1], pts[1][1])
            ], [
              e0 = dim === Y ? E : max$2(pts[0][0], pts[1][0]),
              s0 = dim === X ? S : max$2(pts[0][1], pts[1][1])
            ]];
          if (points.length > 1) move();
        } else {
          w0 = selection[0][0];
          n0 = selection[0][1];
          e0 = selection[1][0];
          s0 = selection[1][1];
        }

        w1 = w0;
        n1 = n0;
        e1 = e0;
        s1 = s0;

        var group = select(that)
            .attr("pointer-events", "none");

        var overlay = group.selectAll(".overlay")
            .attr("cursor", cursors[type]);

        interrupt(that);
        var emit = emitter(that, arguments, true).beforestart();

        if (event.touches) {
          emit.moved = moved;
          emit.ended = ended;
        } else {
          var view = select(event.view)
              .on("mousemove.brush", moved, true)
              .on("mouseup.brush", ended, true);
          if (keys) view
              .on("keydown.brush", keydowned, true)
              .on("keyup.brush", keyupped, true);

          dragDisable(event.view);
        }

        redraw.call(that);
        emit.start(event, mode.name);

        function moved(event) {
          for (const p of event.changedTouches || [event]) {
            for (const d of points)
              if (d.identifier === p.identifier) d.cur = pointer(p, that);
          }
          if (shifting && !lockX && !lockY && points.length === 1) {
            const point = points[0];
            if (abs$3(point.cur[0] - point[0]) > abs$3(point.cur[1] - point[1]))
              lockY = true;
            else
              lockX = true;
          }
          for (const point of points)
            if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];
          moving = true;
          noevent$1(event);
          move(event);
        }

        function move(event) {
          const point = points[0], point0 = point.point0;
          var t;

          dx = point[0] - point0[0];
          dy = point[1] - point0[1];

          switch (mode) {
            case MODE_SPACE:
            case MODE_DRAG: {
              if (signX) dx = max$2(W - w0, min$1(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
              if (signY) dy = max$2(N - n0, min$1(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
              break;
            }
            case MODE_HANDLE: {
              if (points[1]) {
                if (signX) w1 = max$2(W, min$1(E, points[0][0])), e1 = max$2(W, min$1(E, points[1][0])), signX = 1;
                if (signY) n1 = max$2(N, min$1(S, points[0][1])), s1 = max$2(N, min$1(S, points[1][1])), signY = 1;
              } else {
                if (signX < 0) dx = max$2(W - w0, min$1(E - w0, dx)), w1 = w0 + dx, e1 = e0;
                else if (signX > 0) dx = max$2(W - e0, min$1(E - e0, dx)), w1 = w0, e1 = e0 + dx;
                if (signY < 0) dy = max$2(N - n0, min$1(S - n0, dy)), n1 = n0 + dy, s1 = s0;
                else if (signY > 0) dy = max$2(N - s0, min$1(S - s0, dy)), n1 = n0, s1 = s0 + dy;
              }
              break;
            }
            case MODE_CENTER: {
              if (signX) w1 = max$2(W, min$1(E, w0 - dx * signX)), e1 = max$2(W, min$1(E, e0 + dx * signX));
              if (signY) n1 = max$2(N, min$1(S, n0 - dy * signY)), s1 = max$2(N, min$1(S, s0 + dy * signY));
              break;
            }
          }

          if (e1 < w1) {
            signX *= -1;
            t = w0, w0 = e0, e0 = t;
            t = w1, w1 = e1, e1 = t;
            if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);
          }

          if (s1 < n1) {
            signY *= -1;
            t = n0, n0 = s0, s0 = t;
            t = n1, n1 = s1, s1 = t;
            if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);
          }

          if (state.selection) selection = state.selection; // May be set by brush.move!
          if (lockX) w1 = selection[0][0], e1 = selection[1][0];
          if (lockY) n1 = selection[0][1], s1 = selection[1][1];

          if (selection[0][0] !== w1
              || selection[0][1] !== n1
              || selection[1][0] !== e1
              || selection[1][1] !== s1) {
            state.selection = [[w1, n1], [e1, s1]];
            redraw.call(that);
            emit.brush(event, mode.name);
          }
        }

        function ended(event) {
          nopropagation$1(event);
          if (event.touches) {
            if (event.touches.length) return;
            if (touchending) clearTimeout(touchending);
            touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!
          } else {
            yesdrag(event.view, moving);
            view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
          }
          group.attr("pointer-events", "all");
          overlay.attr("cursor", cursors.overlay);
          if (state.selection) selection = state.selection; // May be set by brush.move (on start)!
          if (empty(selection)) state.selection = null, redraw.call(that);
          emit.end(event, mode.name);
        }

        function keydowned(event) {
          switch (event.keyCode) {
            case 16: { // SHIFT
              shifting = signX && signY;
              break;
            }
            case 18: { // ALT
              if (mode === MODE_HANDLE) {
                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
                mode = MODE_CENTER;
                move();
              }
              break;
            }
            case 32: { // SPACE; takes priority over ALT
              if (mode === MODE_HANDLE || mode === MODE_CENTER) {
                if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;
                if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;
                mode = MODE_SPACE;
                overlay.attr("cursor", cursors.selection);
                move();
              }
              break;
            }
            default: return;
          }
          noevent$1(event);
        }

        function keyupped(event) {
          switch (event.keyCode) {
            case 16: { // SHIFT
              if (shifting) {
                lockX = lockY = shifting = false;
                move();
              }
              break;
            }
            case 18: { // ALT
              if (mode === MODE_CENTER) {
                if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;
                if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;
                mode = MODE_HANDLE;
                move();
              }
              break;
            }
            case 32: { // SPACE
              if (mode === MODE_SPACE) {
                if (event.altKey) {
                  if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
                  if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
                  mode = MODE_CENTER;
                } else {
                  if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;
                  if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;
                  mode = MODE_HANDLE;
                }
                overlay.attr("cursor", cursors[type]);
                move();
              }
              break;
            }
            default: return;
          }
          noevent$1(event);
        }
      }

      function touchmoved(event) {
        emitter(this, arguments).moved(event);
      }

      function touchended(event) {
        emitter(this, arguments).ended(event);
      }

      function initialize() {
        var state = this.__brush || {selection: null};
        state.extent = number2(extent.apply(this, arguments));
        state.dim = dim;
        return state;
      }

      brush.extent = function(_) {
        return arguments.length ? (extent = typeof _ === "function" ? _ : constant$7(number2(_)), brush) : extent;
      };

      brush.filter = function(_) {
        return arguments.length ? (filter = typeof _ === "function" ? _ : constant$7(!!_), brush) : filter;
      };

      brush.touchable = function(_) {
        return arguments.length ? (touchable = typeof _ === "function" ? _ : constant$7(!!_), brush) : touchable;
      };

      brush.handleSize = function(_) {
        return arguments.length ? (handleSize = +_, brush) : handleSize;
      };

      brush.keyModifiers = function(_) {
        return arguments.length ? (keys = !!_, brush) : keys;
      };

      brush.on = function() {
        var value = listeners.on.apply(listeners, arguments);
        return value === listeners ? brush : value;
      };

      return brush;
    }

    var abs$2 = Math.abs;
    var cos$2 = Math.cos;
    var sin$2 = Math.sin;
    var pi$3 = Math.PI;
    var halfPi$2 = pi$3 / 2;
    var tau$4 = pi$3 * 2;
    var max$1 = Math.max;
    var epsilon$4 = 1e-12;

    function range$1(i, j) {
      return Array.from({length: j - i}, (_, k) => i + k);
    }

    function compareValue(compare) {
      return function(a, b) {
        return compare(
          a.source.value + a.target.value,
          b.source.value + b.target.value
        );
      };
    }

    function chord() {
      return chord$1(false, false);
    }

    function chordTranspose() {
      return chord$1(false, true);
    }

    function chordDirected() {
      return chord$1(true, false);
    }

    function chord$1(directed, transpose) {
      var padAngle = 0,
          sortGroups = null,
          sortSubgroups = null,
          sortChords = null;

      function chord(matrix) {
        var n = matrix.length,
            groupSums = new Array(n),
            groupIndex = range$1(0, n),
            chords = new Array(n * n),
            groups = new Array(n),
            k = 0, dx;

        matrix = Float64Array.from({length: n * n}, transpose
            ? (_, i) => matrix[i % n][i / n | 0]
            : (_, i) => matrix[i / n | 0][i % n]);

        // Compute the scaling factor from value to angle in [0, 2pi].
        for (let i = 0; i < n; ++i) {
          let x = 0;
          for (let j = 0; j < n; ++j) x += matrix[i * n + j] + directed * matrix[j * n + i];
          k += groupSums[i] = x;
        }
        k = max$1(0, tau$4 - padAngle * n) / k;
        dx = k ? padAngle : tau$4 / n;

        // Compute the angles for each group and constituent chord.
        {
          let x = 0;
          if (sortGroups) groupIndex.sort((a, b) => sortGroups(groupSums[a], groupSums[b]));
          for (const i of groupIndex) {
            const x0 = x;
            if (directed) {
              const subgroupIndex = range$1(~n + 1, n).filter(j => j < 0 ? matrix[~j * n + i] : matrix[i * n + j]);
              if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]));
              for (const j of subgroupIndex) {
                if (j < 0) {
                  const chord = chords[~j * n + i] || (chords[~j * n + i] = {source: null, target: null});
                  chord.target = {index: i, startAngle: x, endAngle: x += matrix[~j * n + i] * k, value: matrix[~j * n + i]};
                } else {
                  const chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});
                  chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};
                }
              }
              groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};
            } else {
              const subgroupIndex = range$1(0, n).filter(j => matrix[i * n + j] || matrix[j * n + i]);
              if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(matrix[i * n + a], matrix[i * n + b]));
              for (const j of subgroupIndex) {
                let chord;
                if (i < j) {
                  chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});
                  chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};
                } else {
                  chord = chords[j * n + i] || (chords[j * n + i] = {source: null, target: null});
                  chord.target = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};
                  if (i === j) chord.source = chord.target;
                }
                if (chord.source && chord.target && chord.source.value < chord.target.value) {
                  const source = chord.source;
                  chord.source = chord.target;
                  chord.target = source;
                }
              }
              groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};
            }
            x += dx;
          }
        }

        // Remove empty chords.
        chords = Object.values(chords);
        chords.groups = groups;
        return sortChords ? chords.sort(sortChords) : chords;
      }

      chord.padAngle = function(_) {
        return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;
      };

      chord.sortGroups = function(_) {
        return arguments.length ? (sortGroups = _, chord) : sortGroups;
      };

      chord.sortSubgroups = function(_) {
        return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;
      };

      chord.sortChords = function(_) {
        return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;
      };

      return chord;
    }

    const pi$2 = Math.PI,
        tau$3 = 2 * pi$2,
        epsilon$3 = 1e-6,
        tauEpsilon = tau$3 - epsilon$3;

    function Path$1() {
      this._x0 = this._y0 = // start of current subpath
      this._x1 = this._y1 = null; // end of current subpath
      this._ = "";
    }

    function path() {
      return new Path$1;
    }

    Path$1.prototype = path.prototype = {
      constructor: Path$1,
      moveTo: function(x, y) {
        this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
      },
      closePath: function() {
        if (this._x1 !== null) {
          this._x1 = this._x0, this._y1 = this._y0;
          this._ += "Z";
        }
      },
      lineTo: function(x, y) {
        this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
      },
      quadraticCurveTo: function(x1, y1, x, y) {
        this._ += "Q" + (+x1) + "," + (+y1) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
      },
      bezierCurveTo: function(x1, y1, x2, y2, x, y) {
        this._ += "C" + (+x1) + "," + (+y1) + "," + (+x2) + "," + (+y2) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
      },
      arcTo: function(x1, y1, x2, y2, r) {
        x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
        var x0 = this._x1,
            y0 = this._y1,
            x21 = x2 - x1,
            y21 = y2 - y1,
            x01 = x0 - x1,
            y01 = y0 - y1,
            l01_2 = x01 * x01 + y01 * y01;

        // Is the radius negative? Error.
        if (r < 0) throw new Error("negative radius: " + r);

        // Is this path empty? Move to (x1,y1).
        if (this._x1 === null) {
          this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
        }

        // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
        else if (!(l01_2 > epsilon$3));

        // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
        // Equivalently, is (x1,y1) coincident with (x2,y2)?
        // Or, is the radius zero? Line to (x1,y1).
        else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$3) || !r) {
          this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
        }

        // Otherwise, draw an arc!
        else {
          var x20 = x2 - x0,
              y20 = y2 - y0,
              l21_2 = x21 * x21 + y21 * y21,
              l20_2 = x20 * x20 + y20 * y20,
              l21 = Math.sqrt(l21_2),
              l01 = Math.sqrt(l01_2),
              l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
              t01 = l / l01,
              t21 = l / l21;

          // If the start tangent is not coincident with (x0,y0), line to.
          if (Math.abs(t01 - 1) > epsilon$3) {
            this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
          }

          this._ += "A" + r + "," + r + ",0,0," + (+(y01 * x20 > x01 * y20)) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
        }
      },
      arc: function(x, y, r, a0, a1, ccw) {
        x = +x, y = +y, r = +r, ccw = !!ccw;
        var dx = r * Math.cos(a0),
            dy = r * Math.sin(a0),
            x0 = x + dx,
            y0 = y + dy,
            cw = 1 ^ ccw,
            da = ccw ? a0 - a1 : a1 - a0;

        // Is the radius negative? Error.
        if (r < 0) throw new Error("negative radius: " + r);

        // Is this path empty? Move to (x0,y0).
        if (this._x1 === null) {
          this._ += "M" + x0 + "," + y0;
        }

        // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
        else if (Math.abs(this._x1 - x0) > epsilon$3 || Math.abs(this._y1 - y0) > epsilon$3) {
          this._ += "L" + x0 + "," + y0;
        }

        // Is this arc empty? We’re done.
        if (!r) return;

        // Does the angle go the wrong way? Flip the direction.
        if (da < 0) da = da % tau$3 + tau$3;

        // Is this a complete circle? Draw two arcs to complete the circle.
        if (da > tauEpsilon) {
          this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
        }

        // Is this arc non-empty? Draw an arc!
        else if (da > epsilon$3) {
          this._ += "A" + r + "," + r + ",0," + (+(da >= pi$2)) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
        }
      },
      rect: function(x, y, w, h) {
        this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + (+w) + "v" + (+h) + "h" + (-w) + "Z";
      },
      toString: function() {
        return this._;
      }
    };

    var slice$2 = Array.prototype.slice;

    function constant$6(x) {
      return function() {
        return x;
      };
    }

    function defaultSource$1(d) {
      return d.source;
    }

    function defaultTarget(d) {
      return d.target;
    }

    function defaultRadius$1(d) {
      return d.radius;
    }

    function defaultStartAngle(d) {
      return d.startAngle;
    }

    function defaultEndAngle(d) {
      return d.endAngle;
    }

    function defaultPadAngle() {
      return 0;
    }

    function defaultArrowheadRadius() {
      return 10;
    }

    function ribbon(headRadius) {
      var source = defaultSource$1,
          target = defaultTarget,
          sourceRadius = defaultRadius$1,
          targetRadius = defaultRadius$1,
          startAngle = defaultStartAngle,
          endAngle = defaultEndAngle,
          padAngle = defaultPadAngle,
          context = null;

      function ribbon() {
        var buffer,
            s = source.apply(this, arguments),
            t = target.apply(this, arguments),
            ap = padAngle.apply(this, arguments) / 2,
            argv = slice$2.call(arguments),
            sr = +sourceRadius.apply(this, (argv[0] = s, argv)),
            sa0 = startAngle.apply(this, argv) - halfPi$2,
            sa1 = endAngle.apply(this, argv) - halfPi$2,
            tr = +targetRadius.apply(this, (argv[0] = t, argv)),
            ta0 = startAngle.apply(this, argv) - halfPi$2,
            ta1 = endAngle.apply(this, argv) - halfPi$2;

        if (!context) context = buffer = path();

        if (ap > epsilon$4) {
          if (abs$2(sa1 - sa0) > ap * 2 + epsilon$4) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);
          else sa0 = sa1 = (sa0 + sa1) / 2;
          if (abs$2(ta1 - ta0) > ap * 2 + epsilon$4) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);
          else ta0 = ta1 = (ta0 + ta1) / 2;
        }

        context.moveTo(sr * cos$2(sa0), sr * sin$2(sa0));
        context.arc(0, 0, sr, sa0, sa1);
        if (sa0 !== ta0 || sa1 !== ta1) {
          if (headRadius) {
            var hr = +headRadius.apply(this, arguments), tr2 = tr - hr, ta2 = (ta0 + ta1) / 2;
            context.quadraticCurveTo(0, 0, tr2 * cos$2(ta0), tr2 * sin$2(ta0));
            context.lineTo(tr * cos$2(ta2), tr * sin$2(ta2));
            context.lineTo(tr2 * cos$2(ta1), tr2 * sin$2(ta1));
          } else {
            context.quadraticCurveTo(0, 0, tr * cos$2(ta0), tr * sin$2(ta0));
            context.arc(0, 0, tr, ta0, ta1);
          }
        }
        context.quadraticCurveTo(0, 0, sr * cos$2(sa0), sr * sin$2(sa0));
        context.closePath();

        if (buffer) return context = null, buffer + "" || null;
      }

      if (headRadius) ribbon.headRadius = function(_) {
        return arguments.length ? (headRadius = typeof _ === "function" ? _ : constant$6(+_), ribbon) : headRadius;
      };

      ribbon.radius = function(_) {
        return arguments.length ? (sourceRadius = targetRadius = typeof _ === "function" ? _ : constant$6(+_), ribbon) : sourceRadius;
      };

      ribbon.sourceRadius = function(_) {
        return arguments.length ? (sourceRadius = typeof _ === "function" ? _ : constant$6(+_), ribbon) : sourceRadius;
      };

      ribbon.targetRadius = function(_) {
        return arguments.length ? (targetRadius = typeof _ === "function" ? _ : constant$6(+_), ribbon) : targetRadius;
      };

      ribbon.startAngle = function(_) {
        return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$6(+_), ribbon) : startAngle;
      };

      ribbon.endAngle = function(_) {
        return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$6(+_), ribbon) : endAngle;
      };

      ribbon.padAngle = function(_) {
        return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant$6(+_), ribbon) : padAngle;
      };

      ribbon.source = function(_) {
        return arguments.length ? (source = _, ribbon) : source;
      };

      ribbon.target = function(_) {
        return arguments.length ? (target = _, ribbon) : target;
      };

      ribbon.context = function(_) {
        return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;
      };

      return ribbon;
    }

    function ribbon$1() {
      return ribbon();
    }

    function ribbonArrow() {
      return ribbon(defaultArrowheadRadius);
    }

    var array$2 = Array.prototype;

    var slice$1 = array$2.slice;

    function ascending$1(a, b) {
      return a - b;
    }

    function area$3(ring) {
      var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];
      while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];
      return area;
    }

    var constant$5 = x => () => x;

    function contains$2(ring, hole) {
      var i = -1, n = hole.length, c;
      while (++i < n) if (c = ringContains(ring, hole[i])) return c;
      return 0;
    }

    function ringContains(ring, point) {
      var x = point[0], y = point[1], contains = -1;
      for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {
        var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];
        if (segmentContains(pi, pj, point)) return 0;
        if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;
      }
      return contains;
    }

    function segmentContains(a, b, c) {
      var i; return collinear$1(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);
    }

    function collinear$1(a, b, c) {
      return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);
    }

    function within(p, q, r) {
      return p <= q && q <= r || r <= q && q <= p;
    }

    function noop$2() {}

    var cases = [
      [],
      [[[1.0, 1.5], [0.5, 1.0]]],
      [[[1.5, 1.0], [1.0, 1.5]]],
      [[[1.5, 1.0], [0.5, 1.0]]],
      [[[1.0, 0.5], [1.5, 1.0]]],
      [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],
      [[[1.0, 0.5], [1.0, 1.5]]],
      [[[1.0, 0.5], [0.5, 1.0]]],
      [[[0.5, 1.0], [1.0, 0.5]]],
      [[[1.0, 1.5], [1.0, 0.5]]],
      [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],
      [[[1.5, 1.0], [1.0, 0.5]]],
      [[[0.5, 1.0], [1.5, 1.0]]],
      [[[1.0, 1.5], [1.5, 1.0]]],
      [[[0.5, 1.0], [1.0, 1.5]]],
      []
    ];

    function contours() {
      var dx = 1,
          dy = 1,
          threshold = thresholdSturges,
          smooth = smoothLinear;

      function contours(values) {
        var tz = threshold(values);

        // Convert number of thresholds into uniform thresholds.
        if (!Array.isArray(tz)) {
          var domain = extent$1(values), start = domain[0], stop = domain[1];
          tz = tickStep(start, stop, tz);
          tz = sequence(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);
        } else {
          tz = tz.slice().sort(ascending$1);
        }

        return tz.map(function(value) {
          return contour(values, value);
        });
      }

      // Accumulate, smooth contour rings, assign holes to exterior rings.
      // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js
      function contour(values, value) {
        var polygons = [],
            holes = [];

        isorings(values, value, function(ring) {
          smooth(ring, values, value);
          if (area$3(ring) > 0) polygons.push([ring]);
          else holes.push(ring);
        });

        holes.forEach(function(hole) {
          for (var i = 0, n = polygons.length, polygon; i < n; ++i) {
            if (contains$2((polygon = polygons[i])[0], hole) !== -1) {
              polygon.push(hole);
              return;
            }
          }
        });

        return {
          type: "MultiPolygon",
          value: value,
          coordinates: polygons
        };
      }

      // Marching squares with isolines stitched into rings.
      // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js
      function isorings(values, value, callback) {
        var fragmentByStart = new Array,
            fragmentByEnd = new Array,
            x, y, t0, t1, t2, t3;

        // Special case for the first row (y = -1, t2 = t3 = 0).
        x = y = -1;
        t1 = values[0] >= value;
        cases[t1 << 1].forEach(stitch);
        while (++x < dx - 1) {
          t0 = t1, t1 = values[x + 1] >= value;
          cases[t0 | t1 << 1].forEach(stitch);
        }
        cases[t1 << 0].forEach(stitch);

        // General case for the intermediate rows.
        while (++y < dy - 1) {
          x = -1;
          t1 = values[y * dx + dx] >= value;
          t2 = values[y * dx] >= value;
          cases[t1 << 1 | t2 << 2].forEach(stitch);
          while (++x < dx - 1) {
            t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;
            t3 = t2, t2 = values[y * dx + x + 1] >= value;
            cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);
          }
          cases[t1 | t2 << 3].forEach(stitch);
        }

        // Special case for the last row (y = dy - 1, t0 = t1 = 0).
        x = -1;
        t2 = values[y * dx] >= value;
        cases[t2 << 2].forEach(stitch);
        while (++x < dx - 1) {
          t3 = t2, t2 = values[y * dx + x + 1] >= value;
          cases[t2 << 2 | t3 << 3].forEach(stitch);
        }
        cases[t2 << 3].forEach(stitch);

        function stitch(line) {
          var start = [line[0][0] + x, line[0][1] + y],
              end = [line[1][0] + x, line[1][1] + y],
              startIndex = index(start),
              endIndex = index(end),
              f, g;
          if (f = fragmentByEnd[startIndex]) {
            if (g = fragmentByStart[endIndex]) {
              delete fragmentByEnd[f.end];
              delete fragmentByStart[g.start];
              if (f === g) {
                f.ring.push(end);
                callback(f.ring);
              } else {
                fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};
              }
            } else {
              delete fragmentByEnd[f.end];
              f.ring.push(end);
              fragmentByEnd[f.end = endIndex] = f;
            }
          } else if (f = fragmentByStart[endIndex]) {
            if (g = fragmentByEnd[startIndex]) {
              delete fragmentByStart[f.start];
              delete fragmentByEnd[g.end];
              if (f === g) {
                f.ring.push(end);
                callback(f.ring);
              } else {
                fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};
              }
            } else {
              delete fragmentByStart[f.start];
              f.ring.unshift(start);
              fragmentByStart[f.start = startIndex] = f;
            }
          } else {
            fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};
          }
        }
      }

      function index(point) {
        return point[0] * 2 + point[1] * (dx + 1) * 4;
      }

      function smoothLinear(ring, values, value) {
        ring.forEach(function(point) {
          var x = point[0],
              y = point[1],
              xt = x | 0,
              yt = y | 0,
              v0,
              v1 = values[yt * dx + xt];
          if (x > 0 && x < dx && xt === x) {
            v0 = values[yt * dx + xt - 1];
            point[0] = x + (value - v0) / (v1 - v0) - 0.5;
          }
          if (y > 0 && y < dy && yt === y) {
            v0 = values[(yt - 1) * dx + xt];
            point[1] = y + (value - v0) / (v1 - v0) - 0.5;
          }
        });
      }

      contours.contour = contour;

      contours.size = function(_) {
        if (!arguments.length) return [dx, dy];
        var _0 = Math.floor(_[0]), _1 = Math.floor(_[1]);
        if (!(_0 >= 0 && _1 >= 0)) throw new Error("invalid size");
        return dx = _0, dy = _1, contours;
      };

      contours.thresholds = function(_) {
        return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? constant$5(slice$1.call(_)) : constant$5(_), contours) : threshold;
      };

      contours.smooth = function(_) {
        return arguments.length ? (smooth = _ ? smoothLinear : noop$2, contours) : smooth === smoothLinear;
      };

      return contours;
    }

    // TODO Optimize edge cases.
    // TODO Optimize index calculation.
    // TODO Optimize arguments.
    function blurX(source, target, r) {
      var n = source.width,
          m = source.height,
          w = (r << 1) + 1;
      for (var j = 0; j < m; ++j) {
        for (var i = 0, sr = 0; i < n + r; ++i) {
          if (i < n) {
            sr += source.data[i + j * n];
          }
          if (i >= r) {
            if (i >= w) {
              sr -= source.data[i - w + j * n];
            }
            target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);
          }
        }
      }
    }

    // TODO Optimize edge cases.
    // TODO Optimize index calculation.
    // TODO Optimize arguments.
    function blurY(source, target, r) {
      var n = source.width,
          m = source.height,
          w = (r << 1) + 1;
      for (var i = 0; i < n; ++i) {
        for (var j = 0, sr = 0; j < m + r; ++j) {
          if (j < m) {
            sr += source.data[i + j * n];
          }
          if (j >= r) {
            if (j >= w) {
              sr -= source.data[i + (j - w) * n];
            }
            target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);
          }
        }
      }
    }

    function defaultX$1(d) {
      return d[0];
    }

    function defaultY$1(d) {
      return d[1];
    }

    function defaultWeight() {
      return 1;
    }

    function density() {
      var x = defaultX$1,
          y = defaultY$1,
          weight = defaultWeight,
          dx = 960,
          dy = 500,
          r = 20, // blur radius
          k = 2, // log2(grid cell size)
          o = r * 3, // grid offset, to pad for blur
          n = (dx + o * 2) >> k, // grid width
          m = (dy + o * 2) >> k, // grid height
          threshold = constant$5(20);

      function density(data) {
        var values0 = new Float32Array(n * m),
            values1 = new Float32Array(n * m);

        data.forEach(function(d, i, data) {
          var xi = (+x(d, i, data) + o) >> k,
              yi = (+y(d, i, data) + o) >> k,
              wi = +weight(d, i, data);
          if (xi >= 0 && xi < n && yi >= 0 && yi < m) {
            values0[xi + yi * n] += wi;
          }
        });

        // TODO Optimize.
        blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);
        blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);
        blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);
        blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);
        blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);
        blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);

        var tz = threshold(values0);

        // Convert number of thresholds into uniform thresholds.
        if (!Array.isArray(tz)) {
          var stop = max$3(values0);
          tz = tickStep(0, stop, tz);
          tz = sequence(0, Math.floor(stop / tz) * tz, tz);
          tz.shift();
        }

        return contours()
            .thresholds(tz)
            .size([n, m])
          (values0)
            .map(transform);
      }

      function transform(geometry) {
        geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.
        geometry.coordinates.forEach(transformPolygon);
        return geometry;
      }

      function transformPolygon(coordinates) {
        coordinates.forEach(transformRing);
      }

      function transformRing(coordinates) {
        coordinates.forEach(transformPoint);
      }

      // TODO Optimize.
      function transformPoint(coordinates) {
        coordinates[0] = coordinates[0] * Math.pow(2, k) - o;
        coordinates[1] = coordinates[1] * Math.pow(2, k) - o;
      }

      function resize() {
        o = r * 3;
        n = (dx + o * 2) >> k;
        m = (dy + o * 2) >> k;
        return density;
      }

      density.x = function(_) {
        return arguments.length ? (x = typeof _ === "function" ? _ : constant$5(+_), density) : x;
      };

      density.y = function(_) {
        return arguments.length ? (y = typeof _ === "function" ? _ : constant$5(+_), density) : y;
      };

      density.weight = function(_) {
        return arguments.length ? (weight = typeof _ === "function" ? _ : constant$5(+_), density) : weight;
      };

      density.size = function(_) {
        if (!arguments.length) return [dx, dy];
        var _0 = +_[0], _1 = +_[1];
        if (!(_0 >= 0 && _1 >= 0)) throw new Error("invalid size");
        return dx = _0, dy = _1, resize();
      };

      density.cellSize = function(_) {
        if (!arguments.length) return 1 << k;
        if (!((_ = +_) >= 1)) throw new Error("invalid cell size");
        return k = Math.floor(Math.log(_) / Math.LN2), resize();
      };

      density.thresholds = function(_) {
        return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? constant$5(slice$1.call(_)) : constant$5(_), density) : threshold;
      };

      density.bandwidth = function(_) {
        if (!arguments.length) return Math.sqrt(r * (r + 1));
        if (!((_ = +_) >= 0)) throw new Error("invalid bandwidth");
        return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();
      };

      return density;
    }

    const EPSILON = Math.pow(2, -52);
    const EDGE_STACK = new Uint32Array(512);

    class Delaunator {

        static from(points, getX = defaultGetX, getY = defaultGetY) {
            const n = points.length;
            const coords = new Float64Array(n * 2);

            for (let i = 0; i < n; i++) {
                const p = points[i];
                coords[2 * i] = getX(p);
                coords[2 * i + 1] = getY(p);
            }

            return new Delaunator(coords);
        }

        constructor(coords) {
            const n = coords.length >> 1;
            if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');

            this.coords = coords;

            // arrays that will store the triangulation graph
            const maxTriangles = Math.max(2 * n - 5, 0);
            this._triangles = new Uint32Array(maxTriangles * 3);
            this._halfedges = new Int32Array(maxTriangles * 3);

            // temporary arrays for tracking the edges of the advancing convex hull
            this._hashSize = Math.ceil(Math.sqrt(n));
            this._hullPrev = new Uint32Array(n); // edge to prev edge
            this._hullNext = new Uint32Array(n); // edge to next edge
            this._hullTri = new Uint32Array(n); // edge to adjacent triangle
            this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash

            // temporary arrays for sorting points
            this._ids = new Uint32Array(n);
            this._dists = new Float64Array(n);

            this.update();
        }

        update() {
            const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;
            const n = coords.length >> 1;

            // populate an array of point indices; calculate input data bbox
            let minX = Infinity;
            let minY = Infinity;
            let maxX = -Infinity;
            let maxY = -Infinity;

            for (let i = 0; i < n; i++) {
                const x = coords[2 * i];
                const y = coords[2 * i + 1];
                if (x < minX) minX = x;
                if (y < minY) minY = y;
                if (x > maxX) maxX = x;
                if (y > maxY) maxY = y;
                this._ids[i] = i;
            }
            const cx = (minX + maxX) / 2;
            const cy = (minY + maxY) / 2;

            let minDist = Infinity;
            let i0, i1, i2;

            // pick a seed point close to the center
            for (let i = 0; i < n; i++) {
                const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);
                if (d < minDist) {
                    i0 = i;
                    minDist = d;
                }
            }
            const i0x = coords[2 * i0];
            const i0y = coords[2 * i0 + 1];

            minDist = Infinity;

            // find the point closest to the seed
            for (let i = 0; i < n; i++) {
                if (i === i0) continue;
                const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);
                if (d < minDist && d > 0) {
                    i1 = i;
                    minDist = d;
                }
            }
            let i1x = coords[2 * i1];
            let i1y = coords[2 * i1 + 1];

            let minRadius = Infinity;

            // find the third point which forms the smallest circumcircle with the first two
            for (let i = 0; i < n; i++) {
                if (i === i0 || i === i1) continue;
                const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);
                if (r < minRadius) {
                    i2 = i;
                    minRadius = r;
                }
            }
            let i2x = coords[2 * i2];
            let i2y = coords[2 * i2 + 1];

            if (minRadius === Infinity) {
                // order collinear points by dx (or dy if all x are identical)
                // and return the list as a hull
                for (let i = 0; i < n; i++) {
                    this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);
                }
                quicksort(this._ids, this._dists, 0, n - 1);
                const hull = new Uint32Array(n);
                let j = 0;
                for (let i = 0, d0 = -Infinity; i < n; i++) {
                    const id = this._ids[i];
                    if (this._dists[id] > d0) {
                        hull[j++] = id;
                        d0 = this._dists[id];
                    }
                }
                this.hull = hull.subarray(0, j);
                this.triangles = new Uint32Array(0);
                this.halfedges = new Uint32Array(0);
                return;
            }

            // swap the order of the seed points for counter-clockwise orientation
            if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {
                const i = i1;
                const x = i1x;
                const y = i1y;
                i1 = i2;
                i1x = i2x;
                i1y = i2y;
                i2 = i;
                i2x = x;
                i2y = y;
            }

            const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);
            this._cx = center.x;
            this._cy = center.y;

            for (let i = 0; i < n; i++) {
                this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);
            }

            // sort the points by distance from the seed triangle circumcenter
            quicksort(this._ids, this._dists, 0, n - 1);

            // set up the seed triangle as the starting hull
            this._hullStart = i0;
            let hullSize = 3;

            hullNext[i0] = hullPrev[i2] = i1;
            hullNext[i1] = hullPrev[i0] = i2;
            hullNext[i2] = hullPrev[i1] = i0;

            hullTri[i0] = 0;
            hullTri[i1] = 1;
            hullTri[i2] = 2;

            hullHash.fill(-1);
            hullHash[this._hashKey(i0x, i0y)] = i0;
            hullHash[this._hashKey(i1x, i1y)] = i1;
            hullHash[this._hashKey(i2x, i2y)] = i2;

            this.trianglesLen = 0;
            this._addTriangle(i0, i1, i2, -1, -1, -1);

            for (let k = 0, xp, yp; k < this._ids.length; k++) {
                const i = this._ids[k];
                const x = coords[2 * i];
                const y = coords[2 * i + 1];

                // skip near-duplicate points
                if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;
                xp = x;
                yp = y;

                // skip seed triangle points
                if (i === i0 || i === i1 || i === i2) continue;

                // find a visible edge on the convex hull using edge hash
                let start = 0;
                for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {
                    start = hullHash[(key + j) % this._hashSize];
                    if (start !== -1 && start !== hullNext[start]) break;
                }

                start = hullPrev[start];
                let e = start, q;
                while (q = hullNext[e], !orient(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1])) {
                    e = q;
                    if (e === start) {
                        e = -1;
                        break;
                    }
                }
                if (e === -1) continue; // likely a near-duplicate point; skip it

                // add the first triangle from the point
                let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);

                // recursively flip triangles from the point until they satisfy the Delaunay condition
                hullTri[i] = this._legalize(t + 2);
                hullTri[e] = t; // keep track of boundary triangles on the hull
                hullSize++;

                // walk forward through the hull, adding more triangles and flipping recursively
                let n = hullNext[e];
                while (q = hullNext[n], orient(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1])) {
                    t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);
                    hullTri[i] = this._legalize(t + 2);
                    hullNext[n] = n; // mark as removed
                    hullSize--;
                    n = q;
                }

                // walk backward from the other side, adding more triangles and flipping
                if (e === start) {
                    while (q = hullPrev[e], orient(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1])) {
                        t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);
                        this._legalize(t + 2);
                        hullTri[q] = t;
                        hullNext[e] = e; // mark as removed
                        hullSize--;
                        e = q;
                    }
                }

                // update the hull indices
                this._hullStart = hullPrev[i] = e;
                hullNext[e] = hullPrev[n] = i;
                hullNext[i] = n;

                // save the two new edges in the hash table
                hullHash[this._hashKey(x, y)] = i;
                hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;
            }

            this.hull = new Uint32Array(hullSize);
            for (let i = 0, e = this._hullStart; i < hullSize; i++) {
                this.hull[i] = e;
                e = hullNext[e];
            }

            // trim typed triangle mesh arrays
            this.triangles = this._triangles.subarray(0, this.trianglesLen);
            this.halfedges = this._halfedges.subarray(0, this.trianglesLen);
        }

        _hashKey(x, y) {
            return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;
        }

        _legalize(a) {
            const {_triangles: triangles, _halfedges: halfedges, coords} = this;

            let i = 0;
            let ar = 0;

            // recursion eliminated with a fixed-size stack
            while (true) {
                const b = halfedges[a];

                /* if the pair of triangles doesn't satisfy the Delaunay condition
                 * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,
                 * then do the same check/flip recursively for the new pair of triangles
                 *
                 *           pl                    pl
                 *          /||\                  /  \
                 *       al/ || \bl            al/    \a
                 *        /  ||  \              /      \
                 *       /  a||b  \    flip    /___ar___\
                 *     p0\   ||   /p1   =>   p0\---bl---/p1
                 *        \  ||  /              \      /
                 *       ar\ || /br             b\    /br
                 *          \||/                  \  /
                 *           pr                    pr
                 */
                const a0 = a - a % 3;
                ar = a0 + (a + 2) % 3;

                if (b === -1) { // convex hull edge
                    if (i === 0) break;
                    a = EDGE_STACK[--i];
                    continue;
                }

                const b0 = b - b % 3;
                const al = a0 + (a + 1) % 3;
                const bl = b0 + (b + 2) % 3;

                const p0 = triangles[ar];
                const pr = triangles[a];
                const pl = triangles[al];
                const p1 = triangles[bl];

                const illegal = inCircle(
                    coords[2 * p0], coords[2 * p0 + 1],
                    coords[2 * pr], coords[2 * pr + 1],
                    coords[2 * pl], coords[2 * pl + 1],
                    coords[2 * p1], coords[2 * p1 + 1]);

                if (illegal) {
                    triangles[a] = p1;
                    triangles[b] = p0;

                    const hbl = halfedges[bl];

                    // edge swapped on the other side of the hull (rare); fix the halfedge reference
                    if (hbl === -1) {
                        let e = this._hullStart;
                        do {
                            if (this._hullTri[e] === bl) {
                                this._hullTri[e] = a;
                                break;
                            }
                            e = this._hullPrev[e];
                        } while (e !== this._hullStart);
                    }
                    this._link(a, hbl);
                    this._link(b, halfedges[ar]);
                    this._link(ar, bl);

                    const br = b0 + (b + 1) % 3;

                    // don't worry about hitting the cap: it can only happen on extremely degenerate input
                    if (i < EDGE_STACK.length) {
                        EDGE_STACK[i++] = br;
                    }
                } else {
                    if (i === 0) break;
                    a = EDGE_STACK[--i];
                }
            }

            return ar;
        }

        _link(a, b) {
            this._halfedges[a] = b;
            if (b !== -1) this._halfedges[b] = a;
        }

        // add a new triangle given vertex indices and adjacent half-edge ids
        _addTriangle(i0, i1, i2, a, b, c) {
            const t = this.trianglesLen;

            this._triangles[t] = i0;
            this._triangles[t + 1] = i1;
            this._triangles[t + 2] = i2;

            this._link(t, a);
            this._link(t + 1, b);
            this._link(t + 2, c);

            this.trianglesLen += 3;

            return t;
        }
    }

    // monotonically increases with real angle, but doesn't need expensive trigonometry
    function pseudoAngle(dx, dy) {
        const p = dx / (Math.abs(dx) + Math.abs(dy));
        return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]
    }

    function dist(ax, ay, bx, by) {
        const dx = ax - bx;
        const dy = ay - by;
        return dx * dx + dy * dy;
    }

    // return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check
    function orientIfSure(px, py, rx, ry, qx, qy) {
        const l = (ry - py) * (qx - px);
        const r = (rx - px) * (qy - py);
        return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;
    }

    // a more robust orientation test that's stable in a given triangle (to fix robustness issues)
    function orient(rx, ry, qx, qy, px, py) {
        const sign = orientIfSure(px, py, rx, ry, qx, qy) ||
        orientIfSure(rx, ry, qx, qy, px, py) ||
        orientIfSure(qx, qy, px, py, rx, ry);
        return sign < 0;
    }

    function inCircle(ax, ay, bx, by, cx, cy, px, py) {
        const dx = ax - px;
        const dy = ay - py;
        const ex = bx - px;
        const ey = by - py;
        const fx = cx - px;
        const fy = cy - py;

        const ap = dx * dx + dy * dy;
        const bp = ex * ex + ey * ey;
        const cp = fx * fx + fy * fy;

        return dx * (ey * cp - bp * fy) -
               dy * (ex * cp - bp * fx) +
               ap * (ex * fy - ey * fx) < 0;
    }

    function circumradius(ax, ay, bx, by, cx, cy) {
        const dx = bx - ax;
        const dy = by - ay;
        const ex = cx - ax;
        const ey = cy - ay;

        const bl = dx * dx + dy * dy;
        const cl = ex * ex + ey * ey;
        const d = 0.5 / (dx * ey - dy * ex);

        const x = (ey * bl - dy * cl) * d;
        const y = (dx * cl - ex * bl) * d;

        return x * x + y * y;
    }

    function circumcenter(ax, ay, bx, by, cx, cy) {
        const dx = bx - ax;
        const dy = by - ay;
        const ex = cx - ax;
        const ey = cy - ay;

        const bl = dx * dx + dy * dy;
        const cl = ex * ex + ey * ey;
        const d = 0.5 / (dx * ey - dy * ex);

        const x = ax + (ey * bl - dy * cl) * d;
        const y = ay + (dx * cl - ex * bl) * d;

        return {x, y};
    }

    function quicksort(ids, dists, left, right) {
        if (right - left <= 20) {
            for (let i = left + 1; i <= right; i++) {
                const temp = ids[i];
                const tempDist = dists[temp];
                let j = i - 1;
                while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];
                ids[j + 1] = temp;
            }
        } else {
            const median = (left + right) >> 1;
            let i = left + 1;
            let j = right;
            swap(ids, median, i);
            if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);
            if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);
            if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);

            const temp = ids[i];
            const tempDist = dists[temp];
            while (true) {
                do i++; while (dists[ids[i]] < tempDist);
                do j--; while (dists[ids[j]] > tempDist);
                if (j < i) break;
                swap(ids, i, j);
            }
            ids[left + 1] = ids[j];
            ids[j] = temp;

            if (right - i + 1 >= j - left) {
                quicksort(ids, dists, i, right);
                quicksort(ids, dists, left, j - 1);
            } else {
                quicksort(ids, dists, left, j - 1);
                quicksort(ids, dists, i, right);
            }
        }
    }

    function swap(arr, i, j) {
        const tmp = arr[i];
        arr[i] = arr[j];
        arr[j] = tmp;
    }

    function defaultGetX(p) {
        return p[0];
    }
    function defaultGetY(p) {
        return p[1];
    }

    const epsilon$2 = 1e-6;

    class Path {
      constructor() {
        this._x0 = this._y0 = // start of current subpath
        this._x1 = this._y1 = null; // end of current subpath
        this._ = "";
      }
      moveTo(x, y) {
        this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;
      }
      closePath() {
        if (this._x1 !== null) {
          this._x1 = this._x0, this._y1 = this._y0;
          this._ += "Z";
        }
      }
      lineTo(x, y) {
        this._ += `L${this._x1 = +x},${this._y1 = +y}`;
      }
      arc(x, y, r) {
        x = +x, y = +y, r = +r;
        const x0 = x + r;
        const y0 = y;
        if (r < 0) throw new Error("negative radius");
        if (this._x1 === null) this._ += `M${x0},${y0}`;
        else if (Math.abs(this._x1 - x0) > epsilon$2 || Math.abs(this._y1 - y0) > epsilon$2) this._ += "L" + x0 + "," + y0;
        if (!r) return;
        this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;
      }
      rect(x, y, w, h) {
        this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;
      }
      value() {
        return this._ || null;
      }
    }

    class Polygon {
      constructor() {
        this._ = [];
      }
      moveTo(x, y) {
        this._.push([x, y]);
      }
      closePath() {
        this._.push(this._[0].slice());
      }
      lineTo(x, y) {
        this._.push([x, y]);
      }
      value() {
        return this._.length ? this._ : null;
      }
    }

    class Voronoi {
      constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {
        if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error("invalid bounds");
        this.delaunay = delaunay;
        this._circumcenters = new Float64Array(delaunay.points.length * 2);
        this.vectors = new Float64Array(delaunay.points.length * 2);
        this.xmax = xmax, this.xmin = xmin;
        this.ymax = ymax, this.ymin = ymin;
        this._init();
      }
      update() {
        this.delaunay.update();
        this._init();
        return this;
      }
      _init() {
        const {delaunay: {points, hull, triangles}, vectors} = this;

        // Compute circumcenters.
        const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);
        for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {
          const t1 = triangles[i] * 2;
          const t2 = triangles[i + 1] * 2;
          const t3 = triangles[i + 2] * 2;
          const x1 = points[t1];
          const y1 = points[t1 + 1];
          const x2 = points[t2];
          const y2 = points[t2 + 1];
          const x3 = points[t3];
          const y3 = points[t3 + 1];

          const dx = x2 - x1;
          const dy = y2 - y1;
          const ex = x3 - x1;
          const ey = y3 - y1;
          const bl = dx * dx + dy * dy;
          const cl = ex * ex + ey * ey;
          const ab = (dx * ey - dy * ex) * 2;

          if (!ab) {
            // degenerate case (collinear diagram)
            x = (x1 + x3) / 2 - 1e8 * ey;
            y = (y1 + y3) / 2 + 1e8 * ex;
          }
          else if (Math.abs(ab) < 1e-8) {
            // almost equal points (degenerate triangle)
            x = (x1 + x3) / 2;
            y = (y1 + y3) / 2;
          } else {
            const d = 1 / ab;
            x = x1 + (ey * bl - dy * cl) * d;
            y = y1 + (dx * cl - ex * bl) * d;
          }
          circumcenters[j] = x;
          circumcenters[j + 1] = y;
        }

        // Compute exterior cell rays.
        let h = hull[hull.length - 1];
        let p0, p1 = h * 4;
        let x0, x1 = points[2 * h];
        let y0, y1 = points[2 * h + 1];
        vectors.fill(0);
        for (let i = 0; i < hull.length; ++i) {
          h = hull[i];
          p0 = p1, x0 = x1, y0 = y1;
          p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];
          vectors[p0 + 2] = vectors[p1] = y0 - y1;
          vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;
        }
      }
      render(context) {
        const buffer = context == null ? context = new Path : undefined;
        const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;
        if (hull.length <= 1) return null;
        for (let i = 0, n = halfedges.length; i < n; ++i) {
          const j = halfedges[i];
          if (j < i) continue;
          const ti = Math.floor(i / 3) * 2;
          const tj = Math.floor(j / 3) * 2;
          const xi = circumcenters[ti];
          const yi = circumcenters[ti + 1];
          const xj = circumcenters[tj];
          const yj = circumcenters[tj + 1];
          this._renderSegment(xi, yi, xj, yj, context);
        }
        let h0, h1 = hull[hull.length - 1];
        for (let i = 0; i < hull.length; ++i) {
          h0 = h1, h1 = hull[i];
          const t = Math.floor(inedges[h1] / 3) * 2;
          const x = circumcenters[t];
          const y = circumcenters[t + 1];
          const v = h0 * 4;
          const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);
          if (p) this._renderSegment(x, y, p[0], p[1], context);
        }
        return buffer && buffer.value();
      }
      renderBounds(context) {
        const buffer = context == null ? context = new Path : undefined;
        context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);
        return buffer && buffer.value();
      }
      renderCell(i, context) {
        const buffer = context == null ? context = new Path : undefined;
        const points = this._clip(i);
        if (points === null || !points.length) return;
        context.moveTo(points[0], points[1]);
        let n = points.length;
        while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;
        for (let i = 2; i < n; i += 2) {
          if (points[i] !== points[i-2] || points[i+1] !== points[i-1])
            context.lineTo(points[i], points[i + 1]);
        }
        context.closePath();
        return buffer && buffer.value();
      }
      *cellPolygons() {
        const {delaunay: {points}} = this;
        for (let i = 0, n = points.length / 2; i < n; ++i) {
          const cell = this.cellPolygon(i);
          if (cell) cell.index = i, yield cell;
        }
      }
      cellPolygon(i) {
        const polygon = new Polygon;
        this.renderCell(i, polygon);
        return polygon.value();
      }
      _renderSegment(x0, y0, x1, y1, context) {
        let S;
        const c0 = this._regioncode(x0, y0);
        const c1 = this._regioncode(x1, y1);
        if (c0 === 0 && c1 === 0) {
          context.moveTo(x0, y0);
          context.lineTo(x1, y1);
        } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {
          context.moveTo(S[0], S[1]);
          context.lineTo(S[2], S[3]);
        }
      }
      contains(i, x, y) {
        if ((x = +x, x !== x) || (y = +y, y !== y)) return false;
        return this.delaunay._step(i, x, y) === i;
      }
      *neighbors(i) {
        const ci = this._clip(i);
        if (ci) for (const j of this.delaunay.neighbors(i)) {
          const cj = this._clip(j);
          // find the common edge
          if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {
            for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {
              if (ci[ai] == cj[aj]
              && ci[ai + 1] == cj[aj + 1]
              && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]
              && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]
              ) {
                yield j;
                break loop;
              }
            }
          }
        }
      }
      _cell(i) {
        const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;
        const e0 = inedges[i];
        if (e0 === -1) return null; // coincident point
        const points = [];
        let e = e0;
        do {
          const t = Math.floor(e / 3);
          points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);
          e = e % 3 === 2 ? e - 2 : e + 1;
          if (triangles[e] !== i) break; // bad triangulation
          e = halfedges[e];
        } while (e !== e0 && e !== -1);
        return points;
      }
      _clip(i) {
        // degenerate case (1 valid point: return the box)
        if (i === 0 && this.delaunay.hull.length === 1) {
          return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];
        }
        const points = this._cell(i);
        if (points === null) return null;
        const {vectors: V} = this;
        const v = i * 4;
        return V[v] || V[v + 1]
            ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])
            : this._clipFinite(i, points);
      }
      _clipFinite(i, points) {
        const n = points.length;
        let P = null;
        let x0, y0, x1 = points[n - 2], y1 = points[n - 1];
        let c0, c1 = this._regioncode(x1, y1);
        let e0, e1;
        for (let j = 0; j < n; j += 2) {
          x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];
          c0 = c1, c1 = this._regioncode(x1, y1);
          if (c0 === 0 && c1 === 0) {
            e0 = e1, e1 = 0;
            if (P) P.push(x1, y1);
            else P = [x1, y1];
          } else {
            let S, sx0, sy0, sx1, sy1;
            if (c0 === 0) {
              if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;
              [sx0, sy0, sx1, sy1] = S;
            } else {
              if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;
              [sx1, sy1, sx0, sy0] = S;
              e0 = e1, e1 = this._edgecode(sx0, sy0);
              if (e0 && e1) this._edge(i, e0, e1, P, P.length);
              if (P) P.push(sx0, sy0);
              else P = [sx0, sy0];
            }
            e0 = e1, e1 = this._edgecode(sx1, sy1);
            if (e0 && e1) this._edge(i, e0, e1, P, P.length);
            if (P) P.push(sx1, sy1);
            else P = [sx1, sy1];
          }
        }
        if (P) {
          e0 = e1, e1 = this._edgecode(P[0], P[1]);
          if (e0 && e1) this._edge(i, e0, e1, P, P.length);
        } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {
          return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];
        }
        return P;
      }
      _clipSegment(x0, y0, x1, y1, c0, c1) {
        while (true) {
          if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];
          if (c0 & c1) return null;
          let x, y, c = c0 || c1;
          if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;
          else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;
          else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;
          else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;
          if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);
          else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);
        }
      }
      _clipInfinite(i, points, vx0, vy0, vxn, vyn) {
        let P = Array.from(points), p;
        if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);
        if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);
        if (P = this._clipFinite(i, P)) {
          for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {
            c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);
            if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;
          }
        } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {
          P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];
        }
        return P;
      }
      _edge(i, e0, e1, P, j) {
        while (e0 !== e1) {
          let x, y;
          switch (e0) {
            case 0b0101: e0 = 0b0100; continue; // top-left
            case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top
            case 0b0110: e0 = 0b0010; continue; // top-right
            case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right
            case 0b1010: e0 = 0b1000; continue; // bottom-right
            case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom
            case 0b1001: e0 = 0b0001; continue; // bottom-left
            case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left
          }
          if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {
            P.splice(j, 0, x, y), j += 2;
          }
        }
        if (P.length > 4) {
          for (let i = 0; i < P.length; i+= 2) {
            const j = (i + 2) % P.length, k = (i + 4) % P.length;
            if (P[i] === P[j] && P[j] === P[k]
            || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])
              P.splice(j, 2), i -= 2;
          }
        }
        return j;
      }
      _project(x0, y0, vx, vy) {
        let t = Infinity, c, x, y;
        if (vy < 0) { // top
          if (y0 <= this.ymin) return null;
          if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;
        } else if (vy > 0) { // bottom
          if (y0 >= this.ymax) return null;
          if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;
        }
        if (vx > 0) { // right
          if (x0 >= this.xmax) return null;
          if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;
        } else if (vx < 0) { // left
          if (x0 <= this.xmin) return null;
          if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;
        }
        return [x, y];
      }
      _edgecode(x, y) {
        return (x === this.xmin ? 0b0001
            : x === this.xmax ? 0b0010 : 0b0000)
            | (y === this.ymin ? 0b0100
            : y === this.ymax ? 0b1000 : 0b0000);
      }
      _regioncode(x, y) {
        return (x < this.xmin ? 0b0001
            : x > this.xmax ? 0b0010 : 0b0000)
            | (y < this.ymin ? 0b0100
            : y > this.ymax ? 0b1000 : 0b0000);
      }
    }

    const tau$2 = 2 * Math.PI, pow$2 = Math.pow;

    function pointX(p) {
      return p[0];
    }

    function pointY(p) {
      return p[1];
    }

    // A triangulation is collinear if all its triangles have a non-null area
    function collinear(d) {
      const {triangles, coords} = d;
      for (let i = 0; i < triangles.length; i += 3) {
        const a = 2 * triangles[i],
              b = 2 * triangles[i + 1],
              c = 2 * triangles[i + 2],
              cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])
                    - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);
        if (cross > 1e-10) return false;
      }
      return true;
    }

    function jitter(x, y, r) {
      return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];
    }

    class Delaunay {
      static from(points, fx = pointX, fy = pointY, that) {
        return new Delaunay("length" in points
            ? flatArray(points, fx, fy, that)
            : Float64Array.from(flatIterable(points, fx, fy, that)));
      }
      constructor(points) {
        this._delaunator = new Delaunator(points);
        this.inedges = new Int32Array(points.length / 2);
        this._hullIndex = new Int32Array(points.length / 2);
        this.points = this._delaunator.coords;
        this._init();
      }
      update() {
        this._delaunator.update();
        this._init();
        return this;
      }
      _init() {
        const d = this._delaunator, points = this.points;

        // check for collinear
        if (d.hull && d.hull.length > 2 && collinear(d)) {
          this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)
            .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors
          const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],
            bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],
            r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);
          for (let i = 0, n = points.length / 2; i < n; ++i) {
            const p = jitter(points[2 * i], points[2 * i + 1], r);
            points[2 * i] = p[0];
            points[2 * i + 1] = p[1];
          }
          this._delaunator = new Delaunator(points);
        } else {
          delete this.collinear;
        }

        const halfedges = this.halfedges = this._delaunator.halfedges;
        const hull = this.hull = this._delaunator.hull;
        const triangles = this.triangles = this._delaunator.triangles;
        const inedges = this.inedges.fill(-1);
        const hullIndex = this._hullIndex.fill(-1);

        // Compute an index from each point to an (arbitrary) incoming halfedge
        // Used to give the first neighbor of each point; for this reason,
        // on the hull we give priority to exterior halfedges
        for (let e = 0, n = halfedges.length; e < n; ++e) {
          const p = triangles[e % 3 === 2 ? e - 2 : e + 1];
          if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;
        }
        for (let i = 0, n = hull.length; i < n; ++i) {
          hullIndex[hull[i]] = i;
        }

        // degenerate case: 1 or 2 (distinct) points
        if (hull.length <= 2 && hull.length > 0) {
          this.triangles = new Int32Array(3).fill(-1);
          this.halfedges = new Int32Array(3).fill(-1);
          this.triangles[0] = hull[0];
          this.triangles[1] = hull[1];
          this.triangles[2] = hull[1];
          inedges[hull[0]] = 1;
          if (hull.length === 2) inedges[hull[1]] = 0;
        }
      }
      voronoi(bounds) {
        return new Voronoi(this, bounds);
      }
      *neighbors(i) {
        const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;

        // degenerate case with several collinear points
        if (collinear) {
          const l = collinear.indexOf(i);
          if (l > 0) yield collinear[l - 1];
          if (l < collinear.length - 1) yield collinear[l + 1];
          return;
        }

        const e0 = inedges[i];
        if (e0 === -1) return; // coincident point
        let e = e0, p0 = -1;
        do {
          yield p0 = triangles[e];
          e = e % 3 === 2 ? e - 2 : e + 1;
          if (triangles[e] !== i) return; // bad triangulation
          e = halfedges[e];
          if (e === -1) {
            const p = hull[(_hullIndex[i] + 1) % hull.length];
            if (p !== p0) yield p;
            return;
          }
        } while (e !== e0);
      }
      find(x, y, i = 0) {
        if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;
        const i0 = i;
        let c;
        while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;
        return c;
      }
      _step(i, x, y) {
        const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;
        if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);
        let c = i;
        let dc = pow$2(x - points[i * 2], 2) + pow$2(y - points[i * 2 + 1], 2);
        const e0 = inedges[i];
        let e = e0;
        do {
          let t = triangles[e];
          const dt = pow$2(x - points[t * 2], 2) + pow$2(y - points[t * 2 + 1], 2);
          if (dt < dc) dc = dt, c = t;
          e = e % 3 === 2 ? e - 2 : e + 1;
          if (triangles[e] !== i) break; // bad triangulation
          e = halfedges[e];
          if (e === -1) {
            e = hull[(_hullIndex[i] + 1) % hull.length];
            if (e !== t) {
              if (pow$2(x - points[e * 2], 2) + pow$2(y - points[e * 2 + 1], 2) < dc) return e;
            }
            break;
          }
        } while (e !== e0);
        return c;
      }
      render(context) {
        const buffer = context == null ? context = new Path : undefined;
        const {points, halfedges, triangles} = this;
        for (let i = 0, n = halfedges.length; i < n; ++i) {
          const j = halfedges[i];
          if (j < i) continue;
          const ti = triangles[i] * 2;
          const tj = triangles[j] * 2;
          context.moveTo(points[ti], points[ti + 1]);
          context.lineTo(points[tj], points[tj + 1]);
        }
        this.renderHull(context);
        return buffer && buffer.value();
      }
      renderPoints(context, r = 2) {
        const buffer = context == null ? context = new Path : undefined;
        const {points} = this;
        for (let i = 0, n = points.length; i < n; i += 2) {
          const x = points[i], y = points[i + 1];
          context.moveTo(x + r, y);
          context.arc(x, y, r, 0, tau$2);
        }
        return buffer && buffer.value();
      }
      renderHull(context) {
        const buffer = context == null ? context = new Path : undefined;
        const {hull, points} = this;
        const h = hull[0] * 2, n = hull.length;
        context.moveTo(points[h], points[h + 1]);
        for (let i = 1; i < n; ++i) {
          const h = 2 * hull[i];
          context.lineTo(points[h], points[h + 1]);
        }
        context.closePath();
        return buffer && buffer.value();
      }
      hullPolygon() {
        const polygon = new Polygon;
        this.renderHull(polygon);
        return polygon.value();
      }
      renderTriangle(i, context) {
        const buffer = context == null ? context = new Path : undefined;
        const {points, triangles} = this;
        const t0 = triangles[i *= 3] * 2;
        const t1 = triangles[i + 1] * 2;
        const t2 = triangles[i + 2] * 2;
        context.moveTo(points[t0], points[t0 + 1]);
        context.lineTo(points[t1], points[t1 + 1]);
        context.lineTo(points[t2], points[t2 + 1]);
        context.closePath();
        return buffer && buffer.value();
      }
      *trianglePolygons() {
        const {triangles} = this;
        for (let i = 0, n = triangles.length / 3; i < n; ++i) {
          yield this.trianglePolygon(i);
        }
      }
      trianglePolygon(i) {
        const polygon = new Polygon;
        this.renderTriangle(i, polygon);
        return polygon.value();
      }
    }

    function flatArray(points, fx, fy, that) {
      const n = points.length;
      const array = new Float64Array(n * 2);
      for (let i = 0; i < n; ++i) {
        const p = points[i];
        array[i * 2] = fx.call(that, p, i, points);
        array[i * 2 + 1] = fy.call(that, p, i, points);
      }
      return array;
    }

    function* flatIterable(points, fx, fy, that) {
      let i = 0;
      for (const p of points) {
        yield fx.call(that, p, i, points);
        yield fy.call(that, p, i, points);
        ++i;
      }
    }

    var EOL = {},
        EOF = {},
        QUOTE = 34,
        NEWLINE = 10,
        RETURN = 13;

    function objectConverter(columns) {
      return new Function("d", "return {" + columns.map(function(name, i) {
        return JSON.stringify(name) + ": d[" + i + "] || \"\"";
      }).join(",") + "}");
    }

    function customConverter(columns, f) {
      var object = objectConverter(columns);
      return function(row, i) {
        return f(object(row), i, columns);
      };
    }

    // Compute unique columns in order of discovery.
    function inferColumns(rows) {
      var columnSet = Object.create(null),
          columns = [];

      rows.forEach(function(row) {
        for (var column in row) {
          if (!(column in columnSet)) {
            columns.push(columnSet[column] = column);
          }
        }
      });

      return columns;
    }

    function pad$1(value, width) {
      var s = value + "", length = s.length;
      return length < width ? new Array(width - length + 1).join(0) + s : s;
    }

    function formatYear$1(year) {
      return year < 0 ? "-" + pad$1(-year, 6)
        : year > 9999 ? "+" + pad$1(year, 6)
        : pad$1(year, 4);
    }

    function formatDate(date) {
      var hours = date.getUTCHours(),
          minutes = date.getUTCMinutes(),
          seconds = date.getUTCSeconds(),
          milliseconds = date.getUTCMilliseconds();
      return isNaN(date) ? "Invalid Date"
          : formatYear$1(date.getUTCFullYear()) + "-" + pad$1(date.getUTCMonth() + 1, 2) + "-" + pad$1(date.getUTCDate(), 2)
          + (milliseconds ? "T" + pad$1(hours, 2) + ":" + pad$1(minutes, 2) + ":" + pad$1(seconds, 2) + "." + pad$1(milliseconds, 3) + "Z"
          : seconds ? "T" + pad$1(hours, 2) + ":" + pad$1(minutes, 2) + ":" + pad$1(seconds, 2) + "Z"
          : minutes || hours ? "T" + pad$1(hours, 2) + ":" + pad$1(minutes, 2) + "Z"
          : "");
    }

    function dsvFormat(delimiter) {
      var reFormat = new RegExp("[\"" + delimiter + "\n\r]"),
          DELIMITER = delimiter.charCodeAt(0);

      function parse(text, f) {
        var convert, columns, rows = parseRows(text, function(row, i) {
          if (convert) return convert(row, i - 1);
          columns = row, convert = f ? customConverter(row, f) : objectConverter(row);
        });
        rows.columns = columns || [];
        return rows;
      }

      function parseRows(text, f) {
        var rows = [], // output rows
            N = text.length,
            I = 0, // current character index
            n = 0, // current line number
            t, // current token
            eof = N <= 0, // current token followed by EOF?
            eol = false; // current token followed by EOL?

        // Strip the trailing newline.
        if (text.charCodeAt(N - 1) === NEWLINE) --N;
        if (text.charCodeAt(N - 1) === RETURN) --N;

        function token() {
          if (eof) return EOF;
          if (eol) return eol = false, EOL;

          // Unescape quotes.
          var i, j = I, c;
          if (text.charCodeAt(j) === QUOTE) {
            while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);
            if ((i = I) >= N) eof = true;
            else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;
            else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }
            return text.slice(j + 1, i - 1).replace(/""/g, "\"");
          }

          // Find next delimiter or newline.
          while (I < N) {
            if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;
            else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }
            else if (c !== DELIMITER) continue;
            return text.slice(j, i);
          }

          // Return last token before EOF.
          return eof = true, text.slice(j, N);
        }

        while ((t = token()) !== EOF) {
          var row = [];
          while (t !== EOL && t !== EOF) row.push(t), t = token();
          if (f && (row = f(row, n++)) == null) continue;
          rows.push(row);
        }

        return rows;
      }

      function preformatBody(rows, columns) {
        return rows.map(function(row) {
          return columns.map(function(column) {
            return formatValue(row[column]);
          }).join(delimiter);
        });
      }

      function format(rows, columns) {
        if (columns == null) columns = inferColumns(rows);
        return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join("\n");
      }

      function formatBody(rows, columns) {
        if (columns == null) columns = inferColumns(rows);
        return preformatBody(rows, columns).join("\n");
      }

      function formatRows(rows) {
        return rows.map(formatRow).join("\n");
      }

      function formatRow(row) {
        return row.map(formatValue).join(delimiter);
      }

      function formatValue(value) {
        return value == null ? ""
            : value instanceof Date ? formatDate(value)
            : reFormat.test(value += "") ? "\"" + value.replace(/"/g, "\"\"") + "\""
            : value;
      }

      return {
        parse: parse,
        parseRows: parseRows,
        format: format,
        formatBody: formatBody,
        formatRows: formatRows,
        formatRow: formatRow,
        formatValue: formatValue
      };
    }

    var csv$1 = dsvFormat(",");

    var csvParse = csv$1.parse;
    var csvParseRows = csv$1.parseRows;
    var csvFormat = csv$1.format;
    var csvFormatBody = csv$1.formatBody;
    var csvFormatRows = csv$1.formatRows;
    var csvFormatRow = csv$1.formatRow;
    var csvFormatValue = csv$1.formatValue;

    var tsv$1 = dsvFormat("\t");

    var tsvParse = tsv$1.parse;
    var tsvParseRows = tsv$1.parseRows;
    var tsvFormat = tsv$1.format;
    var tsvFormatBody = tsv$1.formatBody;
    var tsvFormatRows = tsv$1.formatRows;
    var tsvFormatRow = tsv$1.formatRow;
    var tsvFormatValue = tsv$1.formatValue;

    function autoType(object) {
      for (var key in object) {
        var value = object[key].trim(), number, m;
        if (!value) value = null;
        else if (value === "true") value = true;
        else if (value === "false") value = false;
        else if (value === "NaN") value = NaN;
        else if (!isNaN(number = +value)) value = number;
        else if (m = value.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)) {
          if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, "/").replace(/T/, " ");
          value = new Date(value);
        }
        else continue;
        object[key] = value;
      }
      return object;
    }

    // https://github.com/d3/d3-dsv/issues/45
    const fixtz = new Date("2019-01-01T00:00").getHours() || new Date("2019-07-01T00:00").getHours();

    function responseBlob(response) {
      if (!response.ok) throw new Error(response.status + " " + response.statusText);
      return response.blob();
    }

    function blob(input, init) {
      return fetch(input, init).then(responseBlob);
    }

    function responseArrayBuffer(response) {
      if (!response.ok) throw new Error(response.status + " " + response.statusText);
      return response.arrayBuffer();
    }

    function buffer(input, init) {
      return fetch(input, init).then(responseArrayBuffer);
    }

    function responseText(response) {
      if (!response.ok) throw new Error(response.status + " " + response.statusText);
      return response.text();
    }

    function text$1(input, init) {
      return fetch(input, init).then(responseText);
    }

    function dsvParse(parse) {
      return function(input, init, row) {
        if (arguments.length === 2 && typeof init === "function") row = init, init = undefined;
        return text$1(input, init).then(function(response) {
          return parse(response, row);
        });
      };
    }

    function dsv(delimiter, input, init, row) {
      if (arguments.length === 3 && typeof init === "function") row = init, init = undefined;
      var format = dsvFormat(delimiter);
      return text$1(input, init).then(function(response) {
        return format.parse(response, row);
      });
    }

    var csv = dsvParse(csvParse);
    var tsv = dsvParse(tsvParse);

    function image(input, init) {
      return new Promise(function(resolve, reject) {
        var image = new Image;
        for (var key in init) image[key] = init[key];
        image.onerror = reject;
        image.onload = function() { resolve(image); };
        image.src = input;
      });
    }

    function responseJson(response) {
      if (!response.ok) throw new Error(response.status + " " + response.statusText);
      if (response.status === 204 || response.status === 205) return;
      return response.json();
    }

    function json(input, init) {
      return fetch(input, init).then(responseJson);
    }

    function parser(type) {
      return (input, init) => text$1(input, init)
        .then(text => (new DOMParser).parseFromString(text, type));
    }

    var xml = parser("application/xml");

    var html = parser("text/html");

    var svg = parser("image/svg+xml");

    function center(x, y) {
      var nodes, strength = 1;

      if (x == null) x = 0;
      if (y == null) y = 0;

      function force() {
        var i,
            n = nodes.length,
            node,
            sx = 0,
            sy = 0;

        for (i = 0; i < n; ++i) {
          node = nodes[i], sx += node.x, sy += node.y;
        }

        for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {
          node = nodes[i], node.x -= sx, node.y -= sy;
        }
      }

      force.initialize = function(_) {
        nodes = _;
      };

      force.x = function(_) {
        return arguments.length ? (x = +_, force) : x;
      };

      force.y = function(_) {
        return arguments.length ? (y = +_, force) : y;
      };

      force.strength = function(_) {
        return arguments.length ? (strength = +_, force) : strength;
      };

      return force;
    }

    function tree_add(d) {
      const x = +this._x.call(null, d),
          y = +this._y.call(null, d);
      return add(this.cover(x, y), x, y, d);
    }

    function add(tree, x, y, d) {
      if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points

      var parent,
          node = tree._root,
          leaf = {data: d},
          x0 = tree._x0,
          y0 = tree._y0,
          x1 = tree._x1,
          y1 = tree._y1,
          xm,
          ym,
          xp,
          yp,
          right,
          bottom,
          i,
          j;

      // If the tree is empty, initialize the root as a leaf.
      if (!node) return tree._root = leaf, tree;

      // Find the existing leaf for the new point, or add it.
      while (node.length) {
        if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
        if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
        if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;
      }

      // Is the new point is exactly coincident with the existing point?
      xp = +tree._x.call(null, node.data);
      yp = +tree._y.call(null, node.data);
      if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;

      // Otherwise, split the leaf node until the old and new point are separated.
      do {
        parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
        if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
        if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
      } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));
      return parent[j] = node, parent[i] = leaf, tree;
    }

    function addAll(data) {
      var d, i, n = data.length,
          x,
          y,
          xz = new Array(n),
          yz = new Array(n),
          x0 = Infinity,
          y0 = Infinity,
          x1 = -Infinity,
          y1 = -Infinity;

      // Compute the points and their extent.
      for (i = 0; i < n; ++i) {
        if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;
        xz[i] = x;
        yz[i] = y;
        if (x < x0) x0 = x;
        if (x > x1) x1 = x;
        if (y < y0) y0 = y;
        if (y > y1) y1 = y;
      }

      // If there were no (valid) points, abort.
      if (x0 > x1 || y0 > y1) return this;

      // Expand the tree to cover the new points.
      this.cover(x0, y0).cover(x1, y1);

      // Add the new points.
      for (i = 0; i < n; ++i) {
        add(this, xz[i], yz[i], data[i]);
      }

      return this;
    }

    function tree_cover(x, y) {
      if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points

      var x0 = this._x0,
          y0 = this._y0,
          x1 = this._x1,
          y1 = this._y1;

      // If the quadtree has no extent, initialize them.
      // Integer extent are necessary so that if we later double the extent,
      // the existing quadrant boundaries don’t change due to floating point error!
      if (isNaN(x0)) {
        x1 = (x0 = Math.floor(x)) + 1;
        y1 = (y0 = Math.floor(y)) + 1;
      }

      // Otherwise, double repeatedly to cover.
      else {
        var z = x1 - x0 || 1,
            node = this._root,
            parent,
            i;

        while (x0 > x || x >= x1 || y0 > y || y >= y1) {
          i = (y < y0) << 1 | (x < x0);
          parent = new Array(4), parent[i] = node, node = parent, z *= 2;
          switch (i) {
            case 0: x1 = x0 + z, y1 = y0 + z; break;
            case 1: x0 = x1 - z, y1 = y0 + z; break;
            case 2: x1 = x0 + z, y0 = y1 - z; break;
            case 3: x0 = x1 - z, y0 = y1 - z; break;
          }
        }

        if (this._root && this._root.length) this._root = node;
      }

      this._x0 = x0;
      this._y0 = y0;
      this._x1 = x1;
      this._y1 = y1;
      return this;
    }

    function tree_data() {
      var data = [];
      this.visit(function(node) {
        if (!node.length) do data.push(node.data); while (node = node.next)
      });
      return data;
    }

    function tree_extent(_) {
      return arguments.length
          ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])
          : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];
    }

    function Quad(node, x0, y0, x1, y1) {
      this.node = node;
      this.x0 = x0;
      this.y0 = y0;
      this.x1 = x1;
      this.y1 = y1;
    }

    function tree_find(x, y, radius) {
      var data,
          x0 = this._x0,
          y0 = this._y0,
          x1,
          y1,
          x2,
          y2,
          x3 = this._x1,
          y3 = this._y1,
          quads = [],
          node = this._root,
          q,
          i;

      if (node) quads.push(new Quad(node, x0, y0, x3, y3));
      if (radius == null) radius = Infinity;
      else {
        x0 = x - radius, y0 = y - radius;
        x3 = x + radius, y3 = y + radius;
        radius *= radius;
      }

      while (q = quads.pop()) {

        // Stop searching if this quadrant can’t contain a closer node.
        if (!(node = q.node)
            || (x1 = q.x0) > x3
            || (y1 = q.y0) > y3
            || (x2 = q.x1) < x0
            || (y2 = q.y1) < y0) continue;

        // Bisect the current quadrant.
        if (node.length) {
          var xm = (x1 + x2) / 2,
              ym = (y1 + y2) / 2;

          quads.push(
            new Quad(node[3], xm, ym, x2, y2),
            new Quad(node[2], x1, ym, xm, y2),
            new Quad(node[1], xm, y1, x2, ym),
            new Quad(node[0], x1, y1, xm, ym)
          );

          // Visit the closest quadrant first.
          if (i = (y >= ym) << 1 | (x >= xm)) {
            q = quads[quads.length - 1];
            quads[quads.length - 1] = quads[quads.length - 1 - i];
            quads[quads.length - 1 - i] = q;
          }
        }

        // Visit this point. (Visiting coincident points isn’t necessary!)
        else {
          var dx = x - +this._x.call(null, node.data),
              dy = y - +this._y.call(null, node.data),
              d2 = dx * dx + dy * dy;
          if (d2 < radius) {
            var d = Math.sqrt(radius = d2);
            x0 = x - d, y0 = y - d;
            x3 = x + d, y3 = y + d;
            data = node.data;
          }
        }
      }

      return data;
    }

    function tree_remove(d) {
      if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points

      var parent,
          node = this._root,
          retainer,
          previous,
          next,
          x0 = this._x0,
          y0 = this._y0,
          x1 = this._x1,
          y1 = this._y1,
          x,
          y,
          xm,
          ym,
          right,
          bottom,
          i,
          j;

      // If the tree is empty, initialize the root as a leaf.
      if (!node) return this;

      // Find the leaf node for the point.
      // While descending, also retain the deepest parent with a non-removed sibling.
      if (node.length) while (true) {
        if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
        if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
        if (!(parent = node, node = node[i = bottom << 1 | right])) return this;
        if (!node.length) break;
        if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;
      }

      // Find the point to remove.
      while (node.data !== d) if (!(previous = node, node = node.next)) return this;
      if (next = node.next) delete node.next;

      // If there are multiple coincident points, remove just the point.
      if (previous) return (next ? previous.next = next : delete previous.next), this;

      // If this is the root point, remove it.
      if (!parent) return this._root = next, this;

      // Remove this leaf.
      next ? parent[i] = next : delete parent[i];

      // If the parent now contains exactly one leaf, collapse superfluous parents.
      if ((node = parent[0] || parent[1] || parent[2] || parent[3])
          && node === (parent[3] || parent[2] || parent[1] || parent[0])
          && !node.length) {
        if (retainer) retainer[j] = node;
        else this._root = node;
      }

      return this;
    }

    function removeAll(data) {
      for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);
      return this;
    }

    function tree_root() {
      return this._root;
    }

    function tree_size() {
      var size = 0;
      this.visit(function(node) {
        if (!node.length) do ++size; while (node = node.next)
      });
      return size;
    }

    function tree_visit(callback) {
      var quads = [], q, node = this._root, child, x0, y0, x1, y1;
      if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));
      while (q = quads.pop()) {
        if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
          var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
          if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));
          if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));
          if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));
          if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));
        }
      }
      return this;
    }

    function tree_visitAfter(callback) {
      var quads = [], next = [], q;
      if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));
      while (q = quads.pop()) {
        var node = q.node;
        if (node.length) {
          var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
          if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));
          if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));
          if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));
          if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));
        }
        next.push(q);
      }
      while (q = next.pop()) {
        callback(q.node, q.x0, q.y0, q.x1, q.y1);
      }
      return this;
    }

    function defaultX(d) {
      return d[0];
    }

    function tree_x(_) {
      return arguments.length ? (this._x = _, this) : this._x;
    }

    function defaultY(d) {
      return d[1];
    }

    function tree_y(_) {
      return arguments.length ? (this._y = _, this) : this._y;
    }

    function quadtree(nodes, x, y) {
      var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);
      return nodes == null ? tree : tree.addAll(nodes);
    }

    function Quadtree(x, y, x0, y0, x1, y1) {
      this._x = x;
      this._y = y;
      this._x0 = x0;
      this._y0 = y0;
      this._x1 = x1;
      this._y1 = y1;
      this._root = undefined;
    }

    function leaf_copy(leaf) {
      var copy = {data: leaf.data}, next = copy;
      while (leaf = leaf.next) next = next.next = {data: leaf.data};
      return copy;
    }

    var treeProto = quadtree.prototype = Quadtree.prototype;

    treeProto.copy = function() {
      var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
          node = this._root,
          nodes,
          child;

      if (!node) return copy;

      if (!node.length) return copy._root = leaf_copy(node), copy;

      nodes = [{source: node, target: copy._root = new Array(4)}];
      while (node = nodes.pop()) {
        for (var i = 0; i < 4; ++i) {
          if (child = node.source[i]) {
            if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});
            else node.target[i] = leaf_copy(child);
          }
        }
      }

      return copy;
    };

    treeProto.add = tree_add;
    treeProto.addAll = addAll;
    treeProto.cover = tree_cover;
    treeProto.data = tree_data;
    treeProto.extent = tree_extent;
    treeProto.find = tree_find;
    treeProto.remove = tree_remove;
    treeProto.removeAll = removeAll;
    treeProto.root = tree_root;
    treeProto.size = tree_size;
    treeProto.visit = tree_visit;
    treeProto.visitAfter = tree_visitAfter;
    treeProto.x = tree_x;
    treeProto.y = tree_y;

    function constant$4(x) {
      return function() {
        return x;
      };
    }

    function jiggle(random) {
      return (random() - 0.5) * 1e-6;
    }

    function x$3(d) {
      return d.x + d.vx;
    }

    function y$3(d) {
      return d.y + d.vy;
    }

    function collide(radius) {
      var nodes,
          radii,
          random,
          strength = 1,
          iterations = 1;

      if (typeof radius !== "function") radius = constant$4(radius == null ? 1 : +radius);

      function force() {
        var i, n = nodes.length,
            tree,
            node,
            xi,
            yi,
            ri,
            ri2;

        for (var k = 0; k < iterations; ++k) {
          tree = quadtree(nodes, x$3, y$3).visitAfter(prepare);
          for (i = 0; i < n; ++i) {
            node = nodes[i];
            ri = radii[node.index], ri2 = ri * ri;
            xi = node.x + node.vx;
            yi = node.y + node.vy;
            tree.visit(apply);
          }
        }

        function apply(quad, x0, y0, x1, y1) {
          var data = quad.data, rj = quad.r, r = ri + rj;
          if (data) {
            if (data.index > node.index) {
              var x = xi - data.x - data.vx,
                  y = yi - data.y - data.vy,
                  l = x * x + y * y;
              if (l < r * r) {
                if (x === 0) x = jiggle(random), l += x * x;
                if (y === 0) y = jiggle(random), l += y * y;
                l = (r - (l = Math.sqrt(l))) / l * strength;
                node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));
                node.vy += (y *= l) * r;
                data.vx -= x * (r = 1 - r);
                data.vy -= y * r;
              }
            }
            return;
          }
          return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
        }
      }

      function prepare(quad) {
        if (quad.data) return quad.r = radii[quad.data.index];
        for (var i = quad.r = 0; i < 4; ++i) {
          if (quad[i] && quad[i].r > quad.r) {
            quad.r = quad[i].r;
          }
        }
      }

      function initialize() {
        if (!nodes) return;
        var i, n = nodes.length, node;
        radii = new Array(n);
        for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);
      }

      force.initialize = function(_nodes, _random) {
        nodes = _nodes;
        random = _random;
        initialize();
      };

      force.iterations = function(_) {
        return arguments.length ? (iterations = +_, force) : iterations;
      };

      force.strength = function(_) {
        return arguments.length ? (strength = +_, force) : strength;
      };

      force.radius = function(_) {
        return arguments.length ? (radius = typeof _ === "function" ? _ : constant$4(+_), initialize(), force) : radius;
      };

      return force;
    }

    function index$3(d) {
      return d.index;
    }

    function find(nodeById, nodeId) {
      var node = nodeById.get(nodeId);
      if (!node) throw new Error("node not found: " + nodeId);
      return node;
    }

    function link$2(links) {
      var id = index$3,
          strength = defaultStrength,
          strengths,
          distance = constant$4(30),
          distances,
          nodes,
          count,
          bias,
          random,
          iterations = 1;

      if (links == null) links = [];

      function defaultStrength(link) {
        return 1 / Math.min(count[link.source.index], count[link.target.index]);
      }

      function force(alpha) {
        for (var k = 0, n = links.length; k < iterations; ++k) {
          for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
            link = links[i], source = link.source, target = link.target;
            x = target.x + target.vx - source.x - source.vx || jiggle(random);
            y = target.y + target.vy - source.y - source.vy || jiggle(random);
            l = Math.sqrt(x * x + y * y);
            l = (l - distances[i]) / l * alpha * strengths[i];
            x *= l, y *= l;
            target.vx -= x * (b = bias[i]);
            target.vy -= y * b;
            source.vx += x * (b = 1 - b);
            source.vy += y * b;
          }
        }
      }

      function initialize() {
        if (!nodes) return;

        var i,
            n = nodes.length,
            m = links.length,
            nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),
            link;

        for (i = 0, count = new Array(n); i < m; ++i) {
          link = links[i], link.index = i;
          if (typeof link.source !== "object") link.source = find(nodeById, link.source);
          if (typeof link.target !== "object") link.target = find(nodeById, link.target);
          count[link.source.index] = (count[link.source.index] || 0) + 1;
          count[link.target.index] = (count[link.target.index] || 0) + 1;
        }

        for (i = 0, bias = new Array(m); i < m; ++i) {
          link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
        }

        strengths = new Array(m), initializeStrength();
        distances = new Array(m), initializeDistance();
      }

      function initializeStrength() {
        if (!nodes) return;

        for (var i = 0, n = links.length; i < n; ++i) {
          strengths[i] = +strength(links[i], i, links);
        }
      }

      function initializeDistance() {
        if (!nodes) return;

        for (var i = 0, n = links.length; i < n; ++i) {
          distances[i] = +distance(links[i], i, links);
        }
      }

      force.initialize = function(_nodes, _random) {
        nodes = _nodes;
        random = _random;
        initialize();
      };

      force.links = function(_) {
        return arguments.length ? (links = _, initialize(), force) : links;
      };

      force.id = function(_) {
        return arguments.length ? (id = _, force) : id;
      };

      force.iterations = function(_) {
        return arguments.length ? (iterations = +_, force) : iterations;
      };

      force.strength = function(_) {
        return arguments.length ? (strength = typeof _ === "function" ? _ : constant$4(+_), initializeStrength(), force) : strength;
      };

      force.distance = function(_) {
        return arguments.length ? (distance = typeof _ === "function" ? _ : constant$4(+_), initializeDistance(), force) : distance;
      };

      return force;
    }

    // https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use
    const a$1 = 1664525;
    const c$3 = 1013904223;
    const m = 4294967296; // 2^32

    function lcg$1() {
      let s = 1;
      return () => (s = (a$1 * s + c$3) % m) / m;
    }

    function x$2(d) {
      return d.x;
    }

    function y$2(d) {
      return d.y;
    }

    var initialRadius = 10,
        initialAngle = Math.PI * (3 - Math.sqrt(5));

    function simulation(nodes) {
      var simulation,
          alpha = 1,
          alphaMin = 0.001,
          alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),
          alphaTarget = 0,
          velocityDecay = 0.6,
          forces = new Map(),
          stepper = timer(step),
          event = dispatch("tick", "end"),
          random = lcg$1();

      if (nodes == null) nodes = [];

      function step() {
        tick();
        event.call("tick", simulation);
        if (alpha < alphaMin) {
          stepper.stop();
          event.call("end", simulation);
        }
      }

      function tick(iterations) {
        var i, n = nodes.length, node;

        if (iterations === undefined) iterations = 1;

        for (var k = 0; k < iterations; ++k) {
          alpha += (alphaTarget - alpha) * alphaDecay;

          forces.forEach(function(force) {
            force(alpha);
          });

          for (i = 0; i < n; ++i) {
            node = nodes[i];
            if (node.fx == null) node.x += node.vx *= velocityDecay;
            else node.x = node.fx, node.vx = 0;
            if (node.fy == null) node.y += node.vy *= velocityDecay;
            else node.y = node.fy, node.vy = 0;
          }
        }

        return simulation;
      }

      function initializeNodes() {
        for (var i = 0, n = nodes.length, node; i < n; ++i) {
          node = nodes[i], node.index = i;
          if (node.fx != null) node.x = node.fx;
          if (node.fy != null) node.y = node.fy;
          if (isNaN(node.x) || isNaN(node.y)) {
            var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;
            node.x = radius * Math.cos(angle);
            node.y = radius * Math.sin(angle);
          }
          if (isNaN(node.vx) || isNaN(node.vy)) {
            node.vx = node.vy = 0;
          }
        }
      }

      function initializeForce(force) {
        if (force.initialize) force.initialize(nodes, random);
        return force;
      }

      initializeNodes();

      return simulation = {
        tick: tick,

        restart: function() {
          return stepper.restart(step), simulation;
        },

        stop: function() {
          return stepper.stop(), simulation;
        },

        nodes: function(_) {
          return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;
        },

        alpha: function(_) {
          return arguments.length ? (alpha = +_, simulation) : alpha;
        },

        alphaMin: function(_) {
          return arguments.length ? (alphaMin = +_, simulation) : alphaMin;
        },

        alphaDecay: function(_) {
          return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;
        },

        alphaTarget: function(_) {
          return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;
        },

        velocityDecay: function(_) {
          return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;
        },

        randomSource: function(_) {
          return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;
        },

        force: function(name, _) {
          return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);
        },

        find: function(x, y, radius) {
          var i = 0,
              n = nodes.length,
              dx,
              dy,
              d2,
              node,
              closest;

          if (radius == null) radius = Infinity;
          else radius *= radius;

          for (i = 0; i < n; ++i) {
            node = nodes[i];
            dx = x - node.x;
            dy = y - node.y;
            d2 = dx * dx + dy * dy;
            if (d2 < radius) closest = node, radius = d2;
          }

          return closest;
        },

        on: function(name, _) {
          return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);
        }
      };
    }

    function manyBody() {
      var nodes,
          node,
          random,
          alpha,
          strength = constant$4(-30),
          strengths,
          distanceMin2 = 1,
          distanceMax2 = Infinity,
          theta2 = 0.81;

      function force(_) {
        var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);
        for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);
      }

      function initialize() {
        if (!nodes) return;
        var i, n = nodes.length, node;
        strengths = new Array(n);
        for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);
      }

      function accumulate(quad) {
        var strength = 0, q, c, weight = 0, x, y, i;

        // For internal nodes, accumulate forces from child quadrants.
        if (quad.length) {
          for (x = y = i = 0; i < 4; ++i) {
            if ((q = quad[i]) && (c = Math.abs(q.value))) {
              strength += q.value, weight += c, x += c * q.x, y += c * q.y;
            }
          }
          quad.x = x / weight;
          quad.y = y / weight;
        }

        // For leaf nodes, accumulate forces from coincident quadrants.
        else {
          q = quad;
          q.x = q.data.x;
          q.y = q.data.y;
          do strength += strengths[q.data.index];
          while (q = q.next);
        }

        quad.value = strength;
      }

      function apply(quad, x1, _, x2) {
        if (!quad.value) return true;

        var x = quad.x - node.x,
            y = quad.y - node.y,
            w = x2 - x1,
            l = x * x + y * y;

        // Apply the Barnes-Hut approximation if possible.
        // Limit forces for very close nodes; randomize direction if coincident.
        if (w * w / theta2 < l) {
          if (l < distanceMax2) {
            if (x === 0) x = jiggle(random), l += x * x;
            if (y === 0) y = jiggle(random), l += y * y;
            if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
            node.vx += x * quad.value * alpha / l;
            node.vy += y * quad.value * alpha / l;
          }
          return true;
        }

        // Otherwise, process points directly.
        else if (quad.length || l >= distanceMax2) return;

        // Limit forces for very close nodes; randomize direction if coincident.
        if (quad.data !== node || quad.next) {
          if (x === 0) x = jiggle(random), l += x * x;
          if (y === 0) y = jiggle(random), l += y * y;
          if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
        }

        do if (quad.data !== node) {
          w = strengths[quad.data.index] * alpha / l;
          node.vx += x * w;
          node.vy += y * w;
        } while (quad = quad.next);
      }

      force.initialize = function(_nodes, _random) {
        nodes = _nodes;
        random = _random;
        initialize();
      };

      force.strength = function(_) {
        return arguments.length ? (strength = typeof _ === "function" ? _ : constant$4(+_), initialize(), force) : strength;
      };

      force.distanceMin = function(_) {
        return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
      };

      force.distanceMax = function(_) {
        return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
      };

      force.theta = function(_) {
        return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
      };

      return force;
    }

    function radial$1(radius, x, y) {
      var nodes,
          strength = constant$4(0.1),
          strengths,
          radiuses;

      if (typeof radius !== "function") radius = constant$4(+radius);
      if (x == null) x = 0;
      if (y == null) y = 0;

      function force(alpha) {
        for (var i = 0, n = nodes.length; i < n; ++i) {
          var node = nodes[i],
              dx = node.x - x || 1e-6,
              dy = node.y - y || 1e-6,
              r = Math.sqrt(dx * dx + dy * dy),
              k = (radiuses[i] - r) * strengths[i] * alpha / r;
          node.vx += dx * k;
          node.vy += dy * k;
        }
      }

      function initialize() {
        if (!nodes) return;
        var i, n = nodes.length;
        strengths = new Array(n);
        radiuses = new Array(n);
        for (i = 0; i < n; ++i) {
          radiuses[i] = +radius(nodes[i], i, nodes);
          strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);
        }
      }

      force.initialize = function(_) {
        nodes = _, initialize();
      };

      force.strength = function(_) {
        return arguments.length ? (strength = typeof _ === "function" ? _ : constant$4(+_), initialize(), force) : strength;
      };

      force.radius = function(_) {
        return arguments.length ? (radius = typeof _ === "function" ? _ : constant$4(+_), initialize(), force) : radius;
      };

      force.x = function(_) {
        return arguments.length ? (x = +_, force) : x;
      };

      force.y = function(_) {
        return arguments.length ? (y = +_, force) : y;
      };

      return force;
    }

    function x$1(x) {
      var strength = constant$4(0.1),
          nodes,
          strengths,
          xz;

      if (typeof x !== "function") x = constant$4(x == null ? 0 : +x);

      function force(alpha) {
        for (var i = 0, n = nodes.length, node; i < n; ++i) {
          node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
        }
      }

      function initialize() {
        if (!nodes) return;
        var i, n = nodes.length;
        strengths = new Array(n);
        xz = new Array(n);
        for (i = 0; i < n; ++i) {
          strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
        }
      }

      force.initialize = function(_) {
        nodes = _;
        initialize();
      };

      force.strength = function(_) {
        return arguments.length ? (strength = typeof _ === "function" ? _ : constant$4(+_), initialize(), force) : strength;
      };

      force.x = function(_) {
        return arguments.length ? (x = typeof _ === "function" ? _ : constant$4(+_), initialize(), force) : x;
      };

      return force;
    }

    function y$1(y) {
      var strength = constant$4(0.1),
          nodes,
          strengths,
          yz;

      if (typeof y !== "function") y = constant$4(y == null ? 0 : +y);

      function force(alpha) {
        for (var i = 0, n = nodes.length, node; i < n; ++i) {
          node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
        }
      }

      function initialize() {
        if (!nodes) return;
        var i, n = nodes.length;
        strengths = new Array(n);
        yz = new Array(n);
        for (i = 0; i < n; ++i) {
          strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
        }
      }

      force.initialize = function(_) {
        nodes = _;
        initialize();
      };

      force.strength = function(_) {
        return arguments.length ? (strength = typeof _ === "function" ? _ : constant$4(+_), initialize(), force) : strength;
      };

      force.y = function(_) {
        return arguments.length ? (y = typeof _ === "function" ? _ : constant$4(+_), initialize(), force) : y;
      };

      return force;
    }

    function formatDecimal(x) {
      return Math.abs(x = Math.round(x)) >= 1e21
          ? x.toLocaleString("en").replace(/,/g, "")
          : x.toString(10);
    }

    // Computes the decimal coefficient and exponent of the specified number x with
    // significant digits p, where x is positive and p is in [1, 21] or undefined.
    // For example, formatDecimalParts(1.23) returns ["123", 0].
    function formatDecimalParts(x, p) {
      if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
      var i, coefficient = x.slice(0, i);

      // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
      // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
      return [
        coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
        +x.slice(i + 1)
      ];
    }

    function exponent(x) {
      return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;
    }

    function formatGroup(grouping, thousands) {
      return function(value, width) {
        var i = value.length,
            t = [],
            j = 0,
            g = grouping[0],
            length = 0;

        while (i > 0 && g > 0) {
          if (length + g + 1 > width) g = Math.max(1, width - length);
          t.push(value.substring(i -= g, i + g));
          if ((length += g + 1) > width) break;
          g = grouping[j = (j + 1) % grouping.length];
        }

        return t.reverse().join(thousands);
      };
    }

    function formatNumerals(numerals) {
      return function(value) {
        return value.replace(/[0-9]/g, function(i) {
          return numerals[+i];
        });
      };
    }

    // [[fill]align][sign][symbol][0][width][,][.precision][~][type]
    var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

    function formatSpecifier(specifier) {
      if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
      var match;
      return new FormatSpecifier({
        fill: match[1],
        align: match[2],
        sign: match[3],
        symbol: match[4],
        zero: match[5],
        width: match[6],
        comma: match[7],
        precision: match[8] && match[8].slice(1),
        trim: match[9],
        type: match[10]
      });
    }

    formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

    function FormatSpecifier(specifier) {
      this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
      this.align = specifier.align === undefined ? ">" : specifier.align + "";
      this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
      this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
      this.zero = !!specifier.zero;
      this.width = specifier.width === undefined ? undefined : +specifier.width;
      this.comma = !!specifier.comma;
      this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
      this.trim = !!specifier.trim;
      this.type = specifier.type === undefined ? "" : specifier.type + "";
    }

    FormatSpecifier.prototype.toString = function() {
      return this.fill
          + this.align
          + this.sign
          + this.symbol
          + (this.zero ? "0" : "")
          + (this.width === undefined ? "" : Math.max(1, this.width | 0))
          + (this.comma ? "," : "")
          + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0))
          + (this.trim ? "~" : "")
          + this.type;
    };

    // Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
    function formatTrim(s) {
      out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
        switch (s[i]) {
          case ".": i0 = i1 = i; break;
          case "0": if (i0 === 0) i0 = i; i1 = i; break;
          default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;
        }
      }
      return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
    }

    var prefixExponent;

    function formatPrefixAuto(x, p) {
      var d = formatDecimalParts(x, p);
      if (!d) return x + "";
      var coefficient = d[0],
          exponent = d[1],
          i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
          n = coefficient.length;
      return i === n ? coefficient
          : i > n ? coefficient + new Array(i - n + 1).join("0")
          : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
          : "0." + new Array(1 - i).join("0") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!
    }

    function formatRounded(x, p) {
      var d = formatDecimalParts(x, p);
      if (!d) return x + "";
      var coefficient = d[0],
          exponent = d[1];
      return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
          : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
          : coefficient + new Array(exponent - coefficient.length + 2).join("0");
    }

    var formatTypes = {
      "%": (x, p) => (x * 100).toFixed(p),
      "b": (x) => Math.round(x).toString(2),
      "c": (x) => x + "",
      "d": formatDecimal,
      "e": (x, p) => x.toExponential(p),
      "f": (x, p) => x.toFixed(p),
      "g": (x, p) => x.toPrecision(p),
      "o": (x) => Math.round(x).toString(8),
      "p": (x, p) => formatRounded(x * 100, p),
      "r": formatRounded,
      "s": formatPrefixAuto,
      "X": (x) => Math.round(x).toString(16).toUpperCase(),
      "x": (x) => Math.round(x).toString(16)
    };

    function identity$6(x) {
      return x;
    }

    var map = Array.prototype.map,
        prefixes = ["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];

    function formatLocale$1(locale) {
      var group = locale.grouping === undefined || locale.thousands === undefined ? identity$6 : formatGroup(map.call(locale.grouping, Number), locale.thousands + ""),
          currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
          currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
          decimal = locale.decimal === undefined ? "." : locale.decimal + "",
          numerals = locale.numerals === undefined ? identity$6 : formatNumerals(map.call(locale.numerals, String)),
          percent = locale.percent === undefined ? "%" : locale.percent + "",
          minus = locale.minus === undefined ? "−" : locale.minus + "",
          nan = locale.nan === undefined ? "NaN" : locale.nan + "";

      function newFormat(specifier) {
        specifier = formatSpecifier(specifier);

        var fill = specifier.fill,
            align = specifier.align,
            sign = specifier.sign,
            symbol = specifier.symbol,
            zero = specifier.zero,
            width = specifier.width,
            comma = specifier.comma,
            precision = specifier.precision,
            trim = specifier.trim,
            type = specifier.type;

        // The "n" type is an alias for ",g".
        if (type === "n") comma = true, type = "g";

        // The "" type, and any invalid type, is an alias for ".12~g".
        else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = "g";

        // If zero fill is specified, padding goes after sign and before digits.
        if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";

        // Compute the prefix and suffix.
        // For SI-prefix, the suffix is lazily computed.
        var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
            suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";

        // What format function should we use?
        // Is this an integer type?
        // Can this type generate exponential notation?
        var formatType = formatTypes[type],
            maybeSuffix = /[defgprs%]/.test(type);

        // Set the default precision if not specified,
        // or clamp the specified precision to the supported range.
        // For significant precision, it must be in [1, 21].
        // For fixed precision, it must be in [0, 20].
        precision = precision === undefined ? 6
            : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
            : Math.max(0, Math.min(20, precision));

        function format(value) {
          var valuePrefix = prefix,
              valueSuffix = suffix,
              i, n, c;

          if (type === "c") {
            valueSuffix = formatType(value) + valueSuffix;
            value = "";
          } else {
            value = +value;

            // Determine the sign. -0 is not less than 0, but 1 / -0 is!
            var valueNegative = value < 0 || 1 / value < 0;

            // Perform the initial formatting.
            value = isNaN(value) ? nan : formatType(Math.abs(value), precision);

            // Trim insignificant zeros.
            if (trim) value = formatTrim(value);

            // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.
            if (valueNegative && +value === 0 && sign !== "+") valueNegative = false;

            // Compute the prefix and suffix.
            valuePrefix = (valueNegative ? (sign === "(" ? sign : minus) : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
            valueSuffix = (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");

            // Break the formatted value into the integer “value” part that can be
            // grouped, and fractional or exponential “suffix” part that is not.
            if (maybeSuffix) {
              i = -1, n = value.length;
              while (++i < n) {
                if (c = value.charCodeAt(i), 48 > c || c > 57) {
                  valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
                  value = value.slice(0, i);
                  break;
                }
              }
            }
          }

          // If the fill character is not "0", grouping is applied before padding.
          if (comma && !zero) value = group(value, Infinity);

          // Compute the padding.
          var length = valuePrefix.length + value.length + valueSuffix.length,
              padding = length < width ? new Array(width - length + 1).join(fill) : "";

          // If the fill character is "0", grouping is applied after padding.
          if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";

          // Reconstruct the final output based on the desired alignment.
          switch (align) {
            case "<": value = valuePrefix + value + valueSuffix + padding; break;
            case "=": value = valuePrefix + padding + value + valueSuffix; break;
            case "^": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;
            default: value = padding + valuePrefix + value + valueSuffix; break;
          }

          return numerals(value);
        }

        format.toString = function() {
          return specifier + "";
        };

        return format;
      }

      function formatPrefix(specifier, value) {
        var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),
            e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,
            k = Math.pow(10, -e),
            prefix = prefixes[8 + e / 3];
        return function(value) {
          return f(k * value) + prefix;
        };
      }

      return {
        format: newFormat,
        formatPrefix: formatPrefix
      };
    }

    var locale$1;
    var format;
    var formatPrefix;

    defaultLocale$1({
      thousands: ",",
      grouping: [3],
      currency: ["$", ""]
    });

    function defaultLocale$1(definition) {
      locale$1 = formatLocale$1(definition);
      format = locale$1.format;
      formatPrefix = locale$1.formatPrefix;
      return locale$1;
    }

    function precisionFixed(step) {
      return Math.max(0, -exponent(Math.abs(step)));
    }

    function precisionPrefix(step, value) {
      return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));
    }

    function precisionRound(step, max) {
      step = Math.abs(step), max = Math.abs(max) - step;
      return Math.max(0, exponent(max) - exponent(step)) + 1;
    }

    var epsilon$1 = 1e-6;
    var epsilon2 = 1e-12;
    var pi$1 = Math.PI;
    var halfPi$1 = pi$1 / 2;
    var quarterPi = pi$1 / 4;
    var tau$1 = pi$1 * 2;

    var degrees = 180 / pi$1;
    var radians = pi$1 / 180;

    var abs$1 = Math.abs;
    var atan = Math.atan;
    var atan2$1 = Math.atan2;
    var cos$1 = Math.cos;
    var ceil = Math.ceil;
    var exp = Math.exp;
    var hypot = Math.hypot;
    var log$1 = Math.log;
    var pow$1 = Math.pow;
    var sin$1 = Math.sin;
    var sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };
    var sqrt$2 = Math.sqrt;
    var tan = Math.tan;

    function acos$1(x) {
      return x > 1 ? 0 : x < -1 ? pi$1 : Math.acos(x);
    }

    function asin$1(x) {
      return x > 1 ? halfPi$1 : x < -1 ? -halfPi$1 : Math.asin(x);
    }

    function haversin(x) {
      return (x = sin$1(x / 2)) * x;
    }

    function noop$1() {}

    function streamGeometry(geometry, stream) {
      if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
        streamGeometryType[geometry.type](geometry, stream);
      }
    }

    var streamObjectType = {
      Feature: function(object, stream) {
        streamGeometry(object.geometry, stream);
      },
      FeatureCollection: function(object, stream) {
        var features = object.features, i = -1, n = features.length;
        while (++i < n) streamGeometry(features[i].geometry, stream);
      }
    };

    var streamGeometryType = {
      Sphere: function(object, stream) {
        stream.sphere();
      },
      Point: function(object, stream) {
        object = object.coordinates;
        stream.point(object[0], object[1], object[2]);
      },
      MultiPoint: function(object, stream) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);
      },
      LineString: function(object, stream) {
        streamLine(object.coordinates, stream, 0);
      },
      MultiLineString: function(object, stream) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while (++i < n) streamLine(coordinates[i], stream, 0);
      },
      Polygon: function(object, stream) {
        streamPolygon(object.coordinates, stream);
      },
      MultiPolygon: function(object, stream) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while (++i < n) streamPolygon(coordinates[i], stream);
      },
      GeometryCollection: function(object, stream) {
        var geometries = object.geometries, i = -1, n = geometries.length;
        while (++i < n) streamGeometry(geometries[i], stream);
      }
    };

    function streamLine(coordinates, stream, closed) {
      var i = -1, n = coordinates.length - closed, coordinate;
      stream.lineStart();
      while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);
      stream.lineEnd();
    }

    function streamPolygon(coordinates, stream) {
      var i = -1, n = coordinates.length;
      stream.polygonStart();
      while (++i < n) streamLine(coordinates[i], stream, 1);
      stream.polygonEnd();
    }

    function geoStream(object, stream) {
      if (object && streamObjectType.hasOwnProperty(object.type)) {
        streamObjectType[object.type](object, stream);
      } else {
        streamGeometry(object, stream);
      }
    }

    var areaRingSum$1 = new Adder();

    // hello?

    var areaSum$1 = new Adder(),
        lambda00$2,
        phi00$2,
        lambda0$2,
        cosPhi0$1,
        sinPhi0$1;

    var areaStream$1 = {
      point: noop$1,
      lineStart: noop$1,
      lineEnd: noop$1,
      polygonStart: function() {
        areaRingSum$1 = new Adder();
        areaStream$1.lineStart = areaRingStart$1;
        areaStream$1.lineEnd = areaRingEnd$1;
      },
      polygonEnd: function() {
        var areaRing = +areaRingSum$1;
        areaSum$1.add(areaRing < 0 ? tau$1 + areaRing : areaRing);
        this.lineStart = this.lineEnd = this.point = noop$1;
      },
      sphere: function() {
        areaSum$1.add(tau$1);
      }
    };

    function areaRingStart$1() {
      areaStream$1.point = areaPointFirst$1;
    }

    function areaRingEnd$1() {
      areaPoint$1(lambda00$2, phi00$2);
    }

    function areaPointFirst$1(lambda, phi) {
      areaStream$1.point = areaPoint$1;
      lambda00$2 = lambda, phi00$2 = phi;
      lambda *= radians, phi *= radians;
      lambda0$2 = lambda, cosPhi0$1 = cos$1(phi = phi / 2 + quarterPi), sinPhi0$1 = sin$1(phi);
    }

    function areaPoint$1(lambda, phi) {
      lambda *= radians, phi *= radians;
      phi = phi / 2 + quarterPi; // half the angular distance from south pole

      // Spherical excess E for a spherical triangle with vertices: south pole,
      // previous point, current point.  Uses a formula derived from Cagnoli’s
      // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).
      var dLambda = lambda - lambda0$2,
          sdLambda = dLambda >= 0 ? 1 : -1,
          adLambda = sdLambda * dLambda,
          cosPhi = cos$1(phi),
          sinPhi = sin$1(phi),
          k = sinPhi0$1 * sinPhi,
          u = cosPhi0$1 * cosPhi + k * cos$1(adLambda),
          v = k * sdLambda * sin$1(adLambda);
      areaRingSum$1.add(atan2$1(v, u));

      // Advance the previous points.
      lambda0$2 = lambda, cosPhi0$1 = cosPhi, sinPhi0$1 = sinPhi;
    }

    function area$2(object) {
      areaSum$1 = new Adder();
      geoStream(object, areaStream$1);
      return areaSum$1 * 2;
    }

    function spherical(cartesian) {
      return [atan2$1(cartesian[1], cartesian[0]), asin$1(cartesian[2])];
    }

    function cartesian(spherical) {
      var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);
      return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];
    }

    function cartesianDot(a, b) {
      return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
    }

    function cartesianCross(a, b) {
      return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
    }

    // TODO return a
    function cartesianAddInPlace(a, b) {
      a[0] += b[0], a[1] += b[1], a[2] += b[2];
    }

    function cartesianScale(vector, k) {
      return [vector[0] * k, vector[1] * k, vector[2] * k];
    }

    // TODO return d
    function cartesianNormalizeInPlace(d) {
      var l = sqrt$2(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
      d[0] /= l, d[1] /= l, d[2] /= l;
    }

    var lambda0$1, phi0, lambda1, phi1, // bounds
        lambda2, // previous lambda-coordinate
        lambda00$1, phi00$1, // first point
        p0, // previous 3D point
        deltaSum,
        ranges,
        range;

    var boundsStream$2 = {
      point: boundsPoint$1,
      lineStart: boundsLineStart,
      lineEnd: boundsLineEnd,
      polygonStart: function() {
        boundsStream$2.point = boundsRingPoint;
        boundsStream$2.lineStart = boundsRingStart;
        boundsStream$2.lineEnd = boundsRingEnd;
        deltaSum = new Adder();
        areaStream$1.polygonStart();
      },
      polygonEnd: function() {
        areaStream$1.polygonEnd();
        boundsStream$2.point = boundsPoint$1;
        boundsStream$2.lineStart = boundsLineStart;
        boundsStream$2.lineEnd = boundsLineEnd;
        if (areaRingSum$1 < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);
        else if (deltaSum > epsilon$1) phi1 = 90;
        else if (deltaSum < -epsilon$1) phi0 = -90;
        range[0] = lambda0$1, range[1] = lambda1;
      },
      sphere: function() {
        lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);
      }
    };

    function boundsPoint$1(lambda, phi) {
      ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);
      if (phi < phi0) phi0 = phi;
      if (phi > phi1) phi1 = phi;
    }

    function linePoint(lambda, phi) {
      var p = cartesian([lambda * radians, phi * radians]);
      if (p0) {
        var normal = cartesianCross(p0, p),
            equatorial = [normal[1], -normal[0], 0],
            inflection = cartesianCross(equatorial, normal);
        cartesianNormalizeInPlace(inflection);
        inflection = spherical(inflection);
        var delta = lambda - lambda2,
            sign = delta > 0 ? 1 : -1,
            lambdai = inflection[0] * degrees * sign,
            phii,
            antimeridian = abs$1(delta) > 180;
        if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
          phii = inflection[1] * degrees;
          if (phii > phi1) phi1 = phii;
        } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
          phii = -inflection[1] * degrees;
          if (phii < phi0) phi0 = phii;
        } else {
          if (phi < phi0) phi0 = phi;
          if (phi > phi1) phi1 = phi;
        }
        if (antimeridian) {
          if (lambda < lambda2) {
            if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;
          } else {
            if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;
          }
        } else {
          if (lambda1 >= lambda0$1) {
            if (lambda < lambda0$1) lambda0$1 = lambda;
            if (lambda > lambda1) lambda1 = lambda;
          } else {
            if (lambda > lambda2) {
              if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;
            } else {
              if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;
            }
          }
        }
      } else {
        ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);
      }
      if (phi < phi0) phi0 = phi;
      if (phi > phi1) phi1 = phi;
      p0 = p, lambda2 = lambda;
    }

    function boundsLineStart() {
      boundsStream$2.point = linePoint;
    }

    function boundsLineEnd() {
      range[0] = lambda0$1, range[1] = lambda1;
      boundsStream$2.point = boundsPoint$1;
      p0 = null;
    }

    function boundsRingPoint(lambda, phi) {
      if (p0) {
        var delta = lambda - lambda2;
        deltaSum.add(abs$1(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
      } else {
        lambda00$1 = lambda, phi00$1 = phi;
      }
      areaStream$1.point(lambda, phi);
      linePoint(lambda, phi);
    }

    function boundsRingStart() {
      areaStream$1.lineStart();
    }

    function boundsRingEnd() {
      boundsRingPoint(lambda00$1, phi00$1);
      areaStream$1.lineEnd();
      if (abs$1(deltaSum) > epsilon$1) lambda0$1 = -(lambda1 = 180);
      range[0] = lambda0$1, range[1] = lambda1;
      p0 = null;
    }

    // Finds the left-right distance between two longitudes.
    // This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
    // the distance between ±180° to be 360°.
    function angle(lambda0, lambda1) {
      return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;
    }

    function rangeCompare(a, b) {
      return a[0] - b[0];
    }

    function rangeContains(range, x) {
      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
    }

    function bounds(feature) {
      var i, n, a, b, merged, deltaMax, delta;

      phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);
      ranges = [];
      geoStream(feature, boundsStream$2);

      // First, sort ranges by their minimum longitudes.
      if (n = ranges.length) {
        ranges.sort(rangeCompare);

        // Then, merge any ranges that overlap.
        for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
          b = ranges[i];
          if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
          } else {
            merged.push(a = b);
          }
        }

        // Finally, find the largest gap between the merged ranges.
        // The final bounding box will be the inverse of this gap.
        for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
          b = merged[i];
          if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];
        }
      }

      ranges = range = null;

      return lambda0$1 === Infinity || phi0 === Infinity
          ? [[NaN, NaN], [NaN, NaN]]
          : [[lambda0$1, phi0], [lambda1, phi1]];
    }

    var W0, W1,
        X0$1, Y0$1, Z0$1,
        X1$1, Y1$1, Z1$1,
        X2$1, Y2$1, Z2$1,
        lambda00, phi00, // first point
        x0$4, y0$4, z0; // previous point

    var centroidStream$1 = {
      sphere: noop$1,
      point: centroidPoint$1,
      lineStart: centroidLineStart$1,
      lineEnd: centroidLineEnd$1,
      polygonStart: function() {
        centroidStream$1.lineStart = centroidRingStart$1;
        centroidStream$1.lineEnd = centroidRingEnd$1;
      },
      polygonEnd: function() {
        centroidStream$1.lineStart = centroidLineStart$1;
        centroidStream$1.lineEnd = centroidLineEnd$1;
      }
    };

    // Arithmetic mean of Cartesian vectors.
    function centroidPoint$1(lambda, phi) {
      lambda *= radians, phi *= radians;
      var cosPhi = cos$1(phi);
      centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));
    }

    function centroidPointCartesian(x, y, z) {
      ++W0;
      X0$1 += (x - X0$1) / W0;
      Y0$1 += (y - Y0$1) / W0;
      Z0$1 += (z - Z0$1) / W0;
    }

    function centroidLineStart$1() {
      centroidStream$1.point = centroidLinePointFirst;
    }

    function centroidLinePointFirst(lambda, phi) {
      lambda *= radians, phi *= radians;
      var cosPhi = cos$1(phi);
      x0$4 = cosPhi * cos$1(lambda);
      y0$4 = cosPhi * sin$1(lambda);
      z0 = sin$1(phi);
      centroidStream$1.point = centroidLinePoint;
      centroidPointCartesian(x0$4, y0$4, z0);
    }

    function centroidLinePoint(lambda, phi) {
      lambda *= radians, phi *= radians;
      var cosPhi = cos$1(phi),
          x = cosPhi * cos$1(lambda),
          y = cosPhi * sin$1(lambda),
          z = sin$1(phi),
          w = atan2$1(sqrt$2((w = y0$4 * z - z0 * y) * w + (w = z0 * x - x0$4 * z) * w + (w = x0$4 * y - y0$4 * x) * w), x0$4 * x + y0$4 * y + z0 * z);
      W1 += w;
      X1$1 += w * (x0$4 + (x0$4 = x));
      Y1$1 += w * (y0$4 + (y0$4 = y));
      Z1$1 += w * (z0 + (z0 = z));
      centroidPointCartesian(x0$4, y0$4, z0);
    }

    function centroidLineEnd$1() {
      centroidStream$1.point = centroidPoint$1;
    }

    // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
    // J. Applied Mechanics 42, 239 (1975).
    function centroidRingStart$1() {
      centroidStream$1.point = centroidRingPointFirst;
    }

    function centroidRingEnd$1() {
      centroidRingPoint(lambda00, phi00);
      centroidStream$1.point = centroidPoint$1;
    }

    function centroidRingPointFirst(lambda, phi) {
      lambda00 = lambda, phi00 = phi;
      lambda *= radians, phi *= radians;
      centroidStream$1.point = centroidRingPoint;
      var cosPhi = cos$1(phi);
      x0$4 = cosPhi * cos$1(lambda);
      y0$4 = cosPhi * sin$1(lambda);
      z0 = sin$1(phi);
      centroidPointCartesian(x0$4, y0$4, z0);
    }

    function centroidRingPoint(lambda, phi) {
      lambda *= radians, phi *= radians;
      var cosPhi = cos$1(phi),
          x = cosPhi * cos$1(lambda),
          y = cosPhi * sin$1(lambda),
          z = sin$1(phi),
          cx = y0$4 * z - z0 * y,
          cy = z0 * x - x0$4 * z,
          cz = x0$4 * y - y0$4 * x,
          m = hypot(cx, cy, cz),
          w = asin$1(m), // line weight = angle
          v = m && -w / m; // area weight multiplier
      X2$1.add(v * cx);
      Y2$1.add(v * cy);
      Z2$1.add(v * cz);
      W1 += w;
      X1$1 += w * (x0$4 + (x0$4 = x));
      Y1$1 += w * (y0$4 + (y0$4 = y));
      Z1$1 += w * (z0 + (z0 = z));
      centroidPointCartesian(x0$4, y0$4, z0);
    }

    function centroid$1(object) {
      W0 = W1 =
      X0$1 = Y0$1 = Z0$1 =
      X1$1 = Y1$1 = Z1$1 = 0;
      X2$1 = new Adder();
      Y2$1 = new Adder();
      Z2$1 = new Adder();
      geoStream(object, centroidStream$1);

      var x = +X2$1,
          y = +Y2$1,
          z = +Z2$1,
          m = hypot(x, y, z);

      // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.
      if (m < epsilon2) {
        x = X1$1, y = Y1$1, z = Z1$1;
        // If the feature has zero length, fall back to arithmetic mean of point vectors.
        if (W1 < epsilon$1) x = X0$1, y = Y0$1, z = Z0$1;
        m = hypot(x, y, z);
        // If the feature still has an undefined ccentroid, then return.
        if (m < epsilon2) return [NaN, NaN];
      }

      return [atan2$1(y, x) * degrees, asin$1(z / m) * degrees];
    }

    function constant$3(x) {
      return function() {
        return x;
      };
    }

    function compose(a, b) {

      function compose(x, y) {
        return x = a(x, y), b(x[0], x[1]);
      }

      if (a.invert && b.invert) compose.invert = function(x, y) {
        return x = b.invert(x, y), x && a.invert(x[0], x[1]);
      };

      return compose;
    }

    function rotationIdentity(lambda, phi) {
      return [abs$1(lambda) > pi$1 ? lambda + Math.round(-lambda / tau$1) * tau$1 : lambda, phi];
    }

    rotationIdentity.invert = rotationIdentity;

    function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
      return (deltaLambda %= tau$1) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))
        : rotationLambda(deltaLambda))
        : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)
        : rotationIdentity);
    }

    function forwardRotationLambda(deltaLambda) {
      return function(lambda, phi) {
        return lambda += deltaLambda, [lambda > pi$1 ? lambda - tau$1 : lambda < -pi$1 ? lambda + tau$1 : lambda, phi];
      };
    }

    function rotationLambda(deltaLambda) {
      var rotation = forwardRotationLambda(deltaLambda);
      rotation.invert = forwardRotationLambda(-deltaLambda);
      return rotation;
    }

    function rotationPhiGamma(deltaPhi, deltaGamma) {
      var cosDeltaPhi = cos$1(deltaPhi),
          sinDeltaPhi = sin$1(deltaPhi),
          cosDeltaGamma = cos$1(deltaGamma),
          sinDeltaGamma = sin$1(deltaGamma);

      function rotation(lambda, phi) {
        var cosPhi = cos$1(phi),
            x = cos$1(lambda) * cosPhi,
            y = sin$1(lambda) * cosPhi,
            z = sin$1(phi),
            k = z * cosDeltaPhi + x * sinDeltaPhi;
        return [
          atan2$1(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),
          asin$1(k * cosDeltaGamma + y * sinDeltaGamma)
        ];
      }

      rotation.invert = function(lambda, phi) {
        var cosPhi = cos$1(phi),
            x = cos$1(lambda) * cosPhi,
            y = sin$1(lambda) * cosPhi,
            z = sin$1(phi),
            k = z * cosDeltaGamma - y * sinDeltaGamma;
        return [
          atan2$1(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),
          asin$1(k * cosDeltaPhi - x * sinDeltaPhi)
        ];
      };

      return rotation;
    }

    function rotation(rotate) {
      rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);

      function forward(coordinates) {
        coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);
        return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;
      }

      forward.invert = function(coordinates) {
        coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);
        return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;
      };

      return forward;
    }

    // Generates a circle centered at [0°, 0°], with a given radius and precision.
    function circleStream(stream, radius, delta, direction, t0, t1) {
      if (!delta) return;
      var cosRadius = cos$1(radius),
          sinRadius = sin$1(radius),
          step = direction * delta;
      if (t0 == null) {
        t0 = radius + direction * tau$1;
        t1 = radius - step / 2;
      } else {
        t0 = circleRadius(cosRadius, t0);
        t1 = circleRadius(cosRadius, t1);
        if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$1;
      }
      for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
        point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);
        stream.point(point[0], point[1]);
      }
    }

    // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].
    function circleRadius(cosRadius, point) {
      point = cartesian(point), point[0] -= cosRadius;
      cartesianNormalizeInPlace(point);
      var radius = acos$1(-point[1]);
      return ((-point[2] < 0 ? -radius : radius) + tau$1 - epsilon$1) % tau$1;
    }

    function circle$2() {
      var center = constant$3([0, 0]),
          radius = constant$3(90),
          precision = constant$3(6),
          ring,
          rotate,
          stream = {point: point};

      function point(x, y) {
        ring.push(x = rotate(x, y));
        x[0] *= degrees, x[1] *= degrees;
      }

      function circle() {
        var c = center.apply(this, arguments),
            r = radius.apply(this, arguments) * radians,
            p = precision.apply(this, arguments) * radians;
        ring = [];
        rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;
        circleStream(stream, r, p, 1);
        c = {type: "Polygon", coordinates: [ring]};
        ring = rotate = null;
        return c;
      }

      circle.center = function(_) {
        return arguments.length ? (center = typeof _ === "function" ? _ : constant$3([+_[0], +_[1]]), circle) : center;
      };

      circle.radius = function(_) {
        return arguments.length ? (radius = typeof _ === "function" ? _ : constant$3(+_), circle) : radius;
      };

      circle.precision = function(_) {
        return arguments.length ? (precision = typeof _ === "function" ? _ : constant$3(+_), circle) : precision;
      };

      return circle;
    }

    function clipBuffer() {
      var lines = [],
          line;
      return {
        point: function(x, y, m) {
          line.push([x, y, m]);
        },
        lineStart: function() {
          lines.push(line = []);
        },
        lineEnd: noop$1,
        rejoin: function() {
          if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
        },
        result: function() {
          var result = lines;
          lines = [];
          line = null;
          return result;
        }
      };
    }

    function pointEqual(a, b) {
      return abs$1(a[0] - b[0]) < epsilon$1 && abs$1(a[1] - b[1]) < epsilon$1;
    }

    function Intersection(point, points, other, entry) {
      this.x = point;
      this.z = points;
      this.o = other; // another intersection
      this.e = entry; // is an entry?
      this.v = false; // visited
      this.n = this.p = null; // next & previous
    }

    // A generalized polygon clipping algorithm: given a polygon that has been cut
    // into its visible line segments, and rejoins the segments by interpolating
    // along the clip edge.
    function clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {
      var subject = [],
          clip = [],
          i,
          n;

      segments.forEach(function(segment) {
        if ((n = segment.length - 1) <= 0) return;
        var n, p0 = segment[0], p1 = segment[n], x;

        if (pointEqual(p0, p1)) {
          if (!p0[2] && !p1[2]) {
            stream.lineStart();
            for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);
            stream.lineEnd();
            return;
          }
          // handle degenerate cases by moving the point
          p1[0] += 2 * epsilon$1;
        }

        subject.push(x = new Intersection(p0, segment, null, true));
        clip.push(x.o = new Intersection(p0, null, x, false));
        subject.push(x = new Intersection(p1, segment, null, false));
        clip.push(x.o = new Intersection(p1, null, x, true));
      });

      if (!subject.length) return;

      clip.sort(compareIntersection);
      link$1(subject);
      link$1(clip);

      for (i = 0, n = clip.length; i < n; ++i) {
        clip[i].e = startInside = !startInside;
      }

      var start = subject[0],
          points,
          point;

      while (1) {
        // Find first unvisited intersection.
        var current = start,
            isSubject = true;
        while (current.v) if ((current = current.n) === start) return;
        points = current.z;
        stream.lineStart();
        do {
          current.v = current.o.v = true;
          if (current.e) {
            if (isSubject) {
              for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);
            } else {
              interpolate(current.x, current.n.x, 1, stream);
            }
            current = current.n;
          } else {
            if (isSubject) {
              points = current.p.z;
              for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);
            } else {
              interpolate(current.x, current.p.x, -1, stream);
            }
            current = current.p;
          }
          current = current.o;
          points = current.z;
          isSubject = !isSubject;
        } while (!current.v);
        stream.lineEnd();
      }
    }

    function link$1(array) {
      if (!(n = array.length)) return;
      var n,
          i = 0,
          a = array[0],
          b;
      while (++i < n) {
        a.n = b = array[i];
        b.p = a;
        a = b;
      }
      a.n = b = array[0];
      b.p = a;
    }

    function longitude(point) {
      if (abs$1(point[0]) <= pi$1)
        return point[0];
      else
        return sign$1(point[0]) * ((abs$1(point[0]) + pi$1) % tau$1 - pi$1);
    }

    function polygonContains(polygon, point) {
      var lambda = longitude(point),
          phi = point[1],
          sinPhi = sin$1(phi),
          normal = [sin$1(lambda), -cos$1(lambda), 0],
          angle = 0,
          winding = 0;

      var sum = new Adder();

      if (sinPhi === 1) phi = halfPi$1 + epsilon$1;
      else if (sinPhi === -1) phi = -halfPi$1 - epsilon$1;

      for (var i = 0, n = polygon.length; i < n; ++i) {
        if (!(m = (ring = polygon[i]).length)) continue;
        var ring,
            m,
            point0 = ring[m - 1],
            lambda0 = longitude(point0),
            phi0 = point0[1] / 2 + quarterPi,
            sinPhi0 = sin$1(phi0),
            cosPhi0 = cos$1(phi0);

        for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
          var point1 = ring[j],
              lambda1 = longitude(point1),
              phi1 = point1[1] / 2 + quarterPi,
              sinPhi1 = sin$1(phi1),
              cosPhi1 = cos$1(phi1),
              delta = lambda1 - lambda0,
              sign = delta >= 0 ? 1 : -1,
              absDelta = sign * delta,
              antimeridian = absDelta > pi$1,
              k = sinPhi0 * sinPhi1;

          sum.add(atan2$1(k * sign * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));
          angle += antimeridian ? delta + sign * tau$1 : delta;

          // Are the longitudes either side of the point’s meridian (lambda),
          // and are the latitudes smaller than the parallel (phi)?
          if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
            var arc = cartesianCross(cartesian(point0), cartesian(point1));
            cartesianNormalizeInPlace(arc);
            var intersection = cartesianCross(normal, arc);
            cartesianNormalizeInPlace(intersection);
            var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);
            if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
              winding += antimeridian ^ delta >= 0 ? 1 : -1;
            }
          }
        }
      }

      // First, determine whether the South pole is inside or outside:
      //
      // It is inside if:
      // * the polygon winds around it in a clockwise direction.
      // * the polygon does not (cumulatively) wind around it, but has a negative
      //   (counter-clockwise) area.
      //
      // Second, count the (signed) number of times a segment crosses a lambda
      // from the point to the South pole.  If it is zero, then the point is the
      // same side as the South pole.

      return (angle < -epsilon$1 || angle < epsilon$1 && sum < -epsilon2) ^ (winding & 1);
    }

    function clip(pointVisible, clipLine, interpolate, start) {
      return function(sink) {
        var line = clipLine(sink),
            ringBuffer = clipBuffer(),
            ringSink = clipLine(ringBuffer),
            polygonStarted = false,
            polygon,
            segments,
            ring;

        var clip = {
          point: point,
          lineStart: lineStart,
          lineEnd: lineEnd,
          polygonStart: function() {
            clip.point = pointRing;
            clip.lineStart = ringStart;
            clip.lineEnd = ringEnd;
            segments = [];
            polygon = [];
          },
          polygonEnd: function() {
            clip.point = point;
            clip.lineStart = lineStart;
            clip.lineEnd = lineEnd;
            segments = merge(segments);
            var startInside = polygonContains(polygon, start);
            if (segments.length) {
              if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
              clipRejoin(segments, compareIntersection, startInside, interpolate, sink);
            } else if (startInside) {
              if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
              sink.lineStart();
              interpolate(null, null, 1, sink);
              sink.lineEnd();
            }
            if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
            segments = polygon = null;
          },
          sphere: function() {
            sink.polygonStart();
            sink.lineStart();
            interpolate(null, null, 1, sink);
            sink.lineEnd();
            sink.polygonEnd();
          }
        };

        function point(lambda, phi) {
          if (pointVisible(lambda, phi)) sink.point(lambda, phi);
        }

        function pointLine(lambda, phi) {
          line.point(lambda, phi);
        }

        function lineStart() {
          clip.point = pointLine;
          line.lineStart();
        }

        function lineEnd() {
          clip.point = point;
          line.lineEnd();
        }

        function pointRing(lambda, phi) {
          ring.push([lambda, phi]);
          ringSink.point(lambda, phi);
        }

        function ringStart() {
          ringSink.lineStart();
          ring = [];
        }

        function ringEnd() {
          pointRing(ring[0][0], ring[0][1]);
          ringSink.lineEnd();

          var clean = ringSink.clean(),
              ringSegments = ringBuffer.result(),
              i, n = ringSegments.length, m,
              segment,
              point;

          ring.pop();
          polygon.push(ring);
          ring = null;

          if (!n) return;

          // No intersections.
          if (clean & 1) {
            segment = ringSegments[0];
            if ((m = segment.length - 1) > 0) {
              if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
              sink.lineStart();
              for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);
              sink.lineEnd();
            }
            return;
          }

          // Rejoin connected segments.
          // TODO reuse ringBuffer.rejoin()?
          if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));

          segments.push(ringSegments.filter(validSegment));
        }

        return clip;
      };
    }

    function validSegment(segment) {
      return segment.length > 1;
    }

    // Intersections are sorted along the clip edge. For both antimeridian cutting
    // and circle clipping, the same comparison is used.
    function compareIntersection(a, b) {
      return ((a = a.x)[0] < 0 ? a[1] - halfPi$1 - epsilon$1 : halfPi$1 - a[1])
           - ((b = b.x)[0] < 0 ? b[1] - halfPi$1 - epsilon$1 : halfPi$1 - b[1]);
    }

    var clipAntimeridian = clip(
      function() { return true; },
      clipAntimeridianLine,
      clipAntimeridianInterpolate,
      [-pi$1, -halfPi$1]
    );

    // Takes a line and cuts into visible segments. Return values: 0 - there were
    // intersections or the line was empty; 1 - no intersections; 2 - there were
    // intersections, and the first and last segments should be rejoined.
    function clipAntimeridianLine(stream) {
      var lambda0 = NaN,
          phi0 = NaN,
          sign0 = NaN,
          clean; // no intersections

      return {
        lineStart: function() {
          stream.lineStart();
          clean = 1;
        },
        point: function(lambda1, phi1) {
          var sign1 = lambda1 > 0 ? pi$1 : -pi$1,
              delta = abs$1(lambda1 - lambda0);
          if (abs$1(delta - pi$1) < epsilon$1) { // line crosses a pole
            stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$1 : -halfPi$1);
            stream.point(sign0, phi0);
            stream.lineEnd();
            stream.lineStart();
            stream.point(sign1, phi0);
            stream.point(lambda1, phi0);
            clean = 0;
          } else if (sign0 !== sign1 && delta >= pi$1) { // line crosses antimeridian
            if (abs$1(lambda0 - sign0) < epsilon$1) lambda0 -= sign0 * epsilon$1; // handle degeneracies
            if (abs$1(lambda1 - sign1) < epsilon$1) lambda1 -= sign1 * epsilon$1;
            phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
            stream.point(sign0, phi0);
            stream.lineEnd();
            stream.lineStart();
            stream.point(sign1, phi0);
            clean = 0;
          }
          stream.point(lambda0 = lambda1, phi0 = phi1);
          sign0 = sign1;
        },
        lineEnd: function() {
          stream.lineEnd();
          lambda0 = phi0 = NaN;
        },
        clean: function() {
          return 2 - clean; // if intersections, rejoin first and last segments
        }
      };
    }

    function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
      var cosPhi0,
          cosPhi1,
          sinLambda0Lambda1 = sin$1(lambda0 - lambda1);
      return abs$1(sinLambda0Lambda1) > epsilon$1
          ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)
              - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))
              / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))
          : (phi0 + phi1) / 2;
    }

    function clipAntimeridianInterpolate(from, to, direction, stream) {
      var phi;
      if (from == null) {
        phi = direction * halfPi$1;
        stream.point(-pi$1, phi);
        stream.point(0, phi);
        stream.point(pi$1, phi);
        stream.point(pi$1, 0);
        stream.point(pi$1, -phi);
        stream.point(0, -phi);
        stream.point(-pi$1, -phi);
        stream.point(-pi$1, 0);
        stream.point(-pi$1, phi);
      } else if (abs$1(from[0] - to[0]) > epsilon$1) {
        var lambda = from[0] < to[0] ? pi$1 : -pi$1;
        phi = direction * lambda / 2;
        stream.point(-lambda, phi);
        stream.point(0, phi);
        stream.point(lambda, phi);
      } else {
        stream.point(to[0], to[1]);
      }
    }

    function clipCircle(radius) {
      var cr = cos$1(radius),
          delta = 6 * radians,
          smallRadius = cr > 0,
          notHemisphere = abs$1(cr) > epsilon$1; // TODO optimise for this common case

      function interpolate(from, to, direction, stream) {
        circleStream(stream, radius, delta, direction, from, to);
      }

      function visible(lambda, phi) {
        return cos$1(lambda) * cos$1(phi) > cr;
      }

      // Takes a line and cuts into visible segments. Return values used for polygon
      // clipping: 0 - there were intersections or the line was empty; 1 - no
      // intersections 2 - there were intersections, and the first and last segments
      // should be rejoined.
      function clipLine(stream) {
        var point0, // previous point
            c0, // code for previous point
            v0, // visibility of previous point
            v00, // visibility of first point
            clean; // no intersections
        return {
          lineStart: function() {
            v00 = v0 = false;
            clean = 1;
          },
          point: function(lambda, phi) {
            var point1 = [lambda, phi],
                point2,
                v = visible(lambda, phi),
                c = smallRadius
                  ? v ? 0 : code(lambda, phi)
                  : v ? code(lambda + (lambda < 0 ? pi$1 : -pi$1), phi) : 0;
            if (!point0 && (v00 = v0 = v)) stream.lineStart();
            if (v !== v0) {
              point2 = intersect(point0, point1);
              if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))
                point1[2] = 1;
            }
            if (v !== v0) {
              clean = 0;
              if (v) {
                // outside going in
                stream.lineStart();
                point2 = intersect(point1, point0);
                stream.point(point2[0], point2[1]);
              } else {
                // inside going out
                point2 = intersect(point0, point1);
                stream.point(point2[0], point2[1], 2);
                stream.lineEnd();
              }
              point0 = point2;
            } else if (notHemisphere && point0 && smallRadius ^ v) {
              var t;
              // If the codes for two points are different, or are both zero,
              // and there this segment intersects with the small circle.
              if (!(c & c0) && (t = intersect(point1, point0, true))) {
                clean = 0;
                if (smallRadius) {
                  stream.lineStart();
                  stream.point(t[0][0], t[0][1]);
                  stream.point(t[1][0], t[1][1]);
                  stream.lineEnd();
                } else {
                  stream.point(t[1][0], t[1][1]);
                  stream.lineEnd();
                  stream.lineStart();
                  stream.point(t[0][0], t[0][1], 3);
                }
              }
            }
            if (v && (!point0 || !pointEqual(point0, point1))) {
              stream.point(point1[0], point1[1]);
            }
            point0 = point1, v0 = v, c0 = c;
          },
          lineEnd: function() {
            if (v0) stream.lineEnd();
            point0 = null;
          },
          // Rejoin first and last segments if there were intersections and the first
          // and last points were visible.
          clean: function() {
            return clean | ((v00 && v0) << 1);
          }
        };
      }

      // Intersects the great circle between a and b with the clip circle.
      function intersect(a, b, two) {
        var pa = cartesian(a),
            pb = cartesian(b);

        // We have two planes, n1.p = d1 and n2.p = d2.
        // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).
        var n1 = [1, 0, 0], // normal
            n2 = cartesianCross(pa, pb),
            n2n2 = cartesianDot(n2, n2),
            n1n2 = n2[0], // cartesianDot(n1, n2),
            determinant = n2n2 - n1n2 * n1n2;

        // Two polar points.
        if (!determinant) return !two && a;

        var c1 =  cr * n2n2 / determinant,
            c2 = -cr * n1n2 / determinant,
            n1xn2 = cartesianCross(n1, n2),
            A = cartesianScale(n1, c1),
            B = cartesianScale(n2, c2);
        cartesianAddInPlace(A, B);

        // Solve |p(t)|^2 = 1.
        var u = n1xn2,
            w = cartesianDot(A, u),
            uu = cartesianDot(u, u),
            t2 = w * w - uu * (cartesianDot(A, A) - 1);

        if (t2 < 0) return;

        var t = sqrt$2(t2),
            q = cartesianScale(u, (-w - t) / uu);
        cartesianAddInPlace(q, A);
        q = spherical(q);

        if (!two) return q;

        // Two intersection points.
        var lambda0 = a[0],
            lambda1 = b[0],
            phi0 = a[1],
            phi1 = b[1],
            z;

        if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;

        var delta = lambda1 - lambda0,
            polar = abs$1(delta - pi$1) < epsilon$1,
            meridian = polar || delta < epsilon$1;

        if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;

        // Check that the first point is between a and b.
        if (meridian
            ? polar
              ? phi0 + phi1 > 0 ^ q[1] < (abs$1(q[0] - lambda0) < epsilon$1 ? phi0 : phi1)
              : phi0 <= q[1] && q[1] <= phi1
            : delta > pi$1 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
          var q1 = cartesianScale(u, (-w + t) / uu);
          cartesianAddInPlace(q1, A);
          return [q, spherical(q1)];
        }
      }

      // Generates a 4-bit vector representing the location of a point relative to
      // the small circle's bounding box.
      function code(lambda, phi) {
        var r = smallRadius ? radius : pi$1 - radius,
            code = 0;
        if (lambda < -r) code |= 1; // left
        else if (lambda > r) code |= 2; // right
        if (phi < -r) code |= 4; // below
        else if (phi > r) code |= 8; // above
        return code;
      }

      return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$1, radius - pi$1]);
    }

    function clipLine(a, b, x0, y0, x1, y1) {
      var ax = a[0],
          ay = a[1],
          bx = b[0],
          by = b[1],
          t0 = 0,
          t1 = 1,
          dx = bx - ax,
          dy = by - ay,
          r;

      r = x0 - ax;
      if (!dx && r > 0) return;
      r /= dx;
      if (dx < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dx > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }

      r = x1 - ax;
      if (!dx && r < 0) return;
      r /= dx;
      if (dx < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dx > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }

      r = y0 - ay;
      if (!dy && r > 0) return;
      r /= dy;
      if (dy < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dy > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }

      r = y1 - ay;
      if (!dy && r < 0) return;
      r /= dy;
      if (dy < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dy > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }

      if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
      if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
      return true;
    }

    var clipMax = 1e9, clipMin = -clipMax;

    // TODO Use d3-polygon’s polygonContains here for the ring check?
    // TODO Eliminate duplicate buffering in clipBuffer and polygon.push?

    function clipRectangle(x0, y0, x1, y1) {

      function visible(x, y) {
        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
      }

      function interpolate(from, to, direction, stream) {
        var a = 0, a1 = 0;
        if (from == null
            || (a = corner(from, direction)) !== (a1 = corner(to, direction))
            || comparePoint(from, to) < 0 ^ direction > 0) {
          do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
          while ((a = (a + direction + 4) % 4) !== a1);
        } else {
          stream.point(to[0], to[1]);
        }
      }

      function corner(p, direction) {
        return abs$1(p[0] - x0) < epsilon$1 ? direction > 0 ? 0 : 3
            : abs$1(p[0] - x1) < epsilon$1 ? direction > 0 ? 2 : 1
            : abs$1(p[1] - y0) < epsilon$1 ? direction > 0 ? 1 : 0
            : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
      }

      function compareIntersection(a, b) {
        return comparePoint(a.x, b.x);
      }

      function comparePoint(a, b) {
        var ca = corner(a, 1),
            cb = corner(b, 1);
        return ca !== cb ? ca - cb
            : ca === 0 ? b[1] - a[1]
            : ca === 1 ? a[0] - b[0]
            : ca === 2 ? a[1] - b[1]
            : b[0] - a[0];
      }

      return function(stream) {
        var activeStream = stream,
            bufferStream = clipBuffer(),
            segments,
            polygon,
            ring,
            x__, y__, v__, // first point
            x_, y_, v_, // previous point
            first,
            clean;

        var clipStream = {
          point: point,
          lineStart: lineStart,
          lineEnd: lineEnd,
          polygonStart: polygonStart,
          polygonEnd: polygonEnd
        };

        function point(x, y) {
          if (visible(x, y)) activeStream.point(x, y);
        }

        function polygonInside() {
          var winding = 0;

          for (var i = 0, n = polygon.length; i < n; ++i) {
            for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
              a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];
              if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }
              else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }
            }
          }

          return winding;
        }

        // Buffer geometry within a polygon and then clip it en masse.
        function polygonStart() {
          activeStream = bufferStream, segments = [], polygon = [], clean = true;
        }

        function polygonEnd() {
          var startInside = polygonInside(),
              cleanInside = clean && startInside,
              visible = (segments = merge(segments)).length;
          if (cleanInside || visible) {
            stream.polygonStart();
            if (cleanInside) {
              stream.lineStart();
              interpolate(null, null, 1, stream);
              stream.lineEnd();
            }
            if (visible) {
              clipRejoin(segments, compareIntersection, startInside, interpolate, stream);
            }
            stream.polygonEnd();
          }
          activeStream = stream, segments = polygon = ring = null;
        }

        function lineStart() {
          clipStream.point = linePoint;
          if (polygon) polygon.push(ring = []);
          first = true;
          v_ = false;
          x_ = y_ = NaN;
        }

        // TODO rather than special-case polygons, simply handle them separately.
        // Ideally, coincident intersection points should be jittered to avoid
        // clipping issues.
        function lineEnd() {
          if (segments) {
            linePoint(x__, y__);
            if (v__ && v_) bufferStream.rejoin();
            segments.push(bufferStream.result());
          }
          clipStream.point = point;
          if (v_) activeStream.lineEnd();
        }

        function linePoint(x, y) {
          var v = visible(x, y);
          if (polygon) ring.push([x, y]);
          if (first) {
            x__ = x, y__ = y, v__ = v;
            first = false;
            if (v) {
              activeStream.lineStart();
              activeStream.point(x, y);
            }
          } else {
            if (v && v_) activeStream.point(x, y);
            else {
              var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
                  b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];
              if (clipLine(a, b, x0, y0, x1, y1)) {
                if (!v_) {
                  activeStream.lineStart();
                  activeStream.point(a[0], a[1]);
                }
                activeStream.point(b[0], b[1]);
                if (!v) activeStream.lineEnd();
                clean = false;
              } else if (v) {
                activeStream.lineStart();
                activeStream.point(x, y);
                clean = false;
              }
            }
          }
          x_ = x, y_ = y, v_ = v;
        }

        return clipStream;
      };
    }

    function extent() {
      var x0 = 0,
          y0 = 0,
          x1 = 960,
          y1 = 500,
          cache,
          cacheStream,
          clip;

      return clip = {
        stream: function(stream) {
          return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);
        },
        extent: function(_) {
          return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
        }
      };
    }

    var lengthSum$1,
        lambda0,
        sinPhi0,
        cosPhi0;

    var lengthStream$1 = {
      sphere: noop$1,
      point: noop$1,
      lineStart: lengthLineStart,
      lineEnd: noop$1,
      polygonStart: noop$1,
      polygonEnd: noop$1
    };

    function lengthLineStart() {
      lengthStream$1.point = lengthPointFirst$1;
      lengthStream$1.lineEnd = lengthLineEnd;
    }

    function lengthLineEnd() {
      lengthStream$1.point = lengthStream$1.lineEnd = noop$1;
    }

    function lengthPointFirst$1(lambda, phi) {
      lambda *= radians, phi *= radians;
      lambda0 = lambda, sinPhi0 = sin$1(phi), cosPhi0 = cos$1(phi);
      lengthStream$1.point = lengthPoint$1;
    }

    function lengthPoint$1(lambda, phi) {
      lambda *= radians, phi *= radians;
      var sinPhi = sin$1(phi),
          cosPhi = cos$1(phi),
          delta = abs$1(lambda - lambda0),
          cosDelta = cos$1(delta),
          sinDelta = sin$1(delta),
          x = cosPhi * sinDelta,
          y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,
          z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;
      lengthSum$1.add(atan2$1(sqrt$2(x * x + y * y), z));
      lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;
    }

    function length$1(object) {
      lengthSum$1 = new Adder();
      geoStream(object, lengthStream$1);
      return +lengthSum$1;
    }

    var coordinates = [null, null],
        object = {type: "LineString", coordinates: coordinates};

    function distance(a, b) {
      coordinates[0] = a;
      coordinates[1] = b;
      return length$1(object);
    }

    var containsObjectType = {
      Feature: function(object, point) {
        return containsGeometry(object.geometry, point);
      },
      FeatureCollection: function(object, point) {
        var features = object.features, i = -1, n = features.length;
        while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;
        return false;
      }
    };

    var containsGeometryType = {
      Sphere: function() {
        return true;
      },
      Point: function(object, point) {
        return containsPoint(object.coordinates, point);
      },
      MultiPoint: function(object, point) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while (++i < n) if (containsPoint(coordinates[i], point)) return true;
        return false;
      },
      LineString: function(object, point) {
        return containsLine(object.coordinates, point);
      },
      MultiLineString: function(object, point) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while (++i < n) if (containsLine(coordinates[i], point)) return true;
        return false;
      },
      Polygon: function(object, point) {
        return containsPolygon(object.coordinates, point);
      },
      MultiPolygon: function(object, point) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while (++i < n) if (containsPolygon(coordinates[i], point)) return true;
        return false;
      },
      GeometryCollection: function(object, point) {
        var geometries = object.geometries, i = -1, n = geometries.length;
        while (++i < n) if (containsGeometry(geometries[i], point)) return true;
        return false;
      }
    };

    function containsGeometry(geometry, point) {
      return geometry && containsGeometryType.hasOwnProperty(geometry.type)
          ? containsGeometryType[geometry.type](geometry, point)
          : false;
    }

    function containsPoint(coordinates, point) {
      return distance(coordinates, point) === 0;
    }

    function containsLine(coordinates, point) {
      var ao, bo, ab;
      for (var i = 0, n = coordinates.length; i < n; i++) {
        bo = distance(coordinates[i], point);
        if (bo === 0) return true;
        if (i > 0) {
          ab = distance(coordinates[i], coordinates[i - 1]);
          if (
            ab > 0 &&
            ao <= ab &&
            bo <= ab &&
            (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab
          )
            return true;
        }
        ao = bo;
      }
      return false;
    }

    function containsPolygon(coordinates, point) {
      return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));
    }

    function ringRadians(ring) {
      return ring = ring.map(pointRadians), ring.pop(), ring;
    }

    function pointRadians(point) {
      return [point[0] * radians, point[1] * radians];
    }

    function contains$1(object, point) {
      return (object && containsObjectType.hasOwnProperty(object.type)
          ? containsObjectType[object.type]
          : containsGeometry)(object, point);
    }

    function graticuleX(y0, y1, dy) {
      var y = sequence(y0, y1 - epsilon$1, dy).concat(y1);
      return function(x) { return y.map(function(y) { return [x, y]; }); };
    }

    function graticuleY(x0, x1, dx) {
      var x = sequence(x0, x1 - epsilon$1, dx).concat(x1);
      return function(y) { return x.map(function(x) { return [x, y]; }); };
    }

    function graticule() {
      var x1, x0, X1, X0,
          y1, y0, Y1, Y0,
          dx = 10, dy = dx, DX = 90, DY = 360,
          x, y, X, Y,
          precision = 2.5;

      function graticule() {
        return {type: "MultiLineString", coordinates: lines()};
      }

      function lines() {
        return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)
            .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))
            .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs$1(x % DX) > epsilon$1; }).map(x))
            .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs$1(y % DY) > epsilon$1; }).map(y));
      }

      graticule.lines = function() {
        return lines().map(function(coordinates) { return {type: "LineString", coordinates: coordinates}; });
      };

      graticule.outline = function() {
        return {
          type: "Polygon",
          coordinates: [
            X(X0).concat(
            Y(Y1).slice(1),
            X(X1).reverse().slice(1),
            Y(Y0).reverse().slice(1))
          ]
        };
      };

      graticule.extent = function(_) {
        if (!arguments.length) return graticule.extentMinor();
        return graticule.extentMajor(_).extentMinor(_);
      };

      graticule.extentMajor = function(_) {
        if (!arguments.length) return [[X0, Y0], [X1, Y1]];
        X0 = +_[0][0], X1 = +_[1][0];
        Y0 = +_[0][1], Y1 = +_[1][1];
        if (X0 > X1) _ = X0, X0 = X1, X1 = _;
        if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
        return graticule.precision(precision);
      };

      graticule.extentMinor = function(_) {
        if (!arguments.length) return [[x0, y0], [x1, y1]];
        x0 = +_[0][0], x1 = +_[1][0];
        y0 = +_[0][1], y1 = +_[1][1];
        if (x0 > x1) _ = x0, x0 = x1, x1 = _;
        if (y0 > y1) _ = y0, y0 = y1, y1 = _;
        return graticule.precision(precision);
      };

      graticule.step = function(_) {
        if (!arguments.length) return graticule.stepMinor();
        return graticule.stepMajor(_).stepMinor(_);
      };

      graticule.stepMajor = function(_) {
        if (!arguments.length) return [DX, DY];
        DX = +_[0], DY = +_[1];
        return graticule;
      };

      graticule.stepMinor = function(_) {
        if (!arguments.length) return [dx, dy];
        dx = +_[0], dy = +_[1];
        return graticule;
      };

      graticule.precision = function(_) {
        if (!arguments.length) return precision;
        precision = +_;
        x = graticuleX(y0, y1, 90);
        y = graticuleY(x0, x1, precision);
        X = graticuleX(Y0, Y1, 90);
        Y = graticuleY(X0, X1, precision);
        return graticule;
      };

      return graticule
          .extentMajor([[-180, -90 + epsilon$1], [180, 90 - epsilon$1]])
          .extentMinor([[-180, -80 - epsilon$1], [180, 80 + epsilon$1]]);
    }

    function graticule10() {
      return graticule()();
    }

    function interpolate(a, b) {
      var x0 = a[0] * radians,
          y0 = a[1] * radians,
          x1 = b[0] * radians,
          y1 = b[1] * radians,
          cy0 = cos$1(y0),
          sy0 = sin$1(y0),
          cy1 = cos$1(y1),
          sy1 = sin$1(y1),
          kx0 = cy0 * cos$1(x0),
          ky0 = cy0 * sin$1(x0),
          kx1 = cy1 * cos$1(x1),
          ky1 = cy1 * sin$1(x1),
          d = 2 * asin$1(sqrt$2(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),
          k = sin$1(d);

      var interpolate = d ? function(t) {
        var B = sin$1(t *= d) / k,
            A = sin$1(d - t) / k,
            x = A * kx0 + B * kx1,
            y = A * ky0 + B * ky1,
            z = A * sy0 + B * sy1;
        return [
          atan2$1(y, x) * degrees,
          atan2$1(z, sqrt$2(x * x + y * y)) * degrees
        ];
      } : function() {
        return [x0 * degrees, y0 * degrees];
      };

      interpolate.distance = d;

      return interpolate;
    }

    var identity$5 = x => x;

    var areaSum = new Adder(),
        areaRingSum = new Adder(),
        x00$2,
        y00$2,
        x0$3,
        y0$3;

    var areaStream = {
      point: noop$1,
      lineStart: noop$1,
      lineEnd: noop$1,
      polygonStart: function() {
        areaStream.lineStart = areaRingStart;
        areaStream.lineEnd = areaRingEnd;
      },
      polygonEnd: function() {
        areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop$1;
        areaSum.add(abs$1(areaRingSum));
        areaRingSum = new Adder();
      },
      result: function() {
        var area = areaSum / 2;
        areaSum = new Adder();
        return area;
      }
    };

    function areaRingStart() {
      areaStream.point = areaPointFirst;
    }

    function areaPointFirst(x, y) {
      areaStream.point = areaPoint;
      x00$2 = x0$3 = x, y00$2 = y0$3 = y;
    }

    function areaPoint(x, y) {
      areaRingSum.add(y0$3 * x - x0$3 * y);
      x0$3 = x, y0$3 = y;
    }

    function areaRingEnd() {
      areaPoint(x00$2, y00$2);
    }

    var pathArea = areaStream;

    var x0$2 = Infinity,
        y0$2 = x0$2,
        x1 = -x0$2,
        y1 = x1;

    var boundsStream = {
      point: boundsPoint,
      lineStart: noop$1,
      lineEnd: noop$1,
      polygonStart: noop$1,
      polygonEnd: noop$1,
      result: function() {
        var bounds = [[x0$2, y0$2], [x1, y1]];
        x1 = y1 = -(y0$2 = x0$2 = Infinity);
        return bounds;
      }
    };

    function boundsPoint(x, y) {
      if (x < x0$2) x0$2 = x;
      if (x > x1) x1 = x;
      if (y < y0$2) y0$2 = y;
      if (y > y1) y1 = y;
    }

    var boundsStream$1 = boundsStream;

    // TODO Enforce positive area for exterior, negative area for interior?

    var X0 = 0,
        Y0 = 0,
        Z0 = 0,
        X1 = 0,
        Y1 = 0,
        Z1 = 0,
        X2 = 0,
        Y2 = 0,
        Z2 = 0,
        x00$1,
        y00$1,
        x0$1,
        y0$1;

    var centroidStream = {
      point: centroidPoint,
      lineStart: centroidLineStart,
      lineEnd: centroidLineEnd,
      polygonStart: function() {
        centroidStream.lineStart = centroidRingStart;
        centroidStream.lineEnd = centroidRingEnd;
      },
      polygonEnd: function() {
        centroidStream.point = centroidPoint;
        centroidStream.lineStart = centroidLineStart;
        centroidStream.lineEnd = centroidLineEnd;
      },
      result: function() {
        var centroid = Z2 ? [X2 / Z2, Y2 / Z2]
            : Z1 ? [X1 / Z1, Y1 / Z1]
            : Z0 ? [X0 / Z0, Y0 / Z0]
            : [NaN, NaN];
        X0 = Y0 = Z0 =
        X1 = Y1 = Z1 =
        X2 = Y2 = Z2 = 0;
        return centroid;
      }
    };

    function centroidPoint(x, y) {
      X0 += x;
      Y0 += y;
      ++Z0;
    }

    function centroidLineStart() {
      centroidStream.point = centroidPointFirstLine;
    }

    function centroidPointFirstLine(x, y) {
      centroidStream.point = centroidPointLine;
      centroidPoint(x0$1 = x, y0$1 = y);
    }

    function centroidPointLine(x, y) {
      var dx = x - x0$1, dy = y - y0$1, z = sqrt$2(dx * dx + dy * dy);
      X1 += z * (x0$1 + x) / 2;
      Y1 += z * (y0$1 + y) / 2;
      Z1 += z;
      centroidPoint(x0$1 = x, y0$1 = y);
    }

    function centroidLineEnd() {
      centroidStream.point = centroidPoint;
    }

    function centroidRingStart() {
      centroidStream.point = centroidPointFirstRing;
    }

    function centroidRingEnd() {
      centroidPointRing(x00$1, y00$1);
    }

    function centroidPointFirstRing(x, y) {
      centroidStream.point = centroidPointRing;
      centroidPoint(x00$1 = x0$1 = x, y00$1 = y0$1 = y);
    }

    function centroidPointRing(x, y) {
      var dx = x - x0$1,
          dy = y - y0$1,
          z = sqrt$2(dx * dx + dy * dy);

      X1 += z * (x0$1 + x) / 2;
      Y1 += z * (y0$1 + y) / 2;
      Z1 += z;

      z = y0$1 * x - x0$1 * y;
      X2 += z * (x0$1 + x);
      Y2 += z * (y0$1 + y);
      Z2 += z * 3;
      centroidPoint(x0$1 = x, y0$1 = y);
    }

    var pathCentroid = centroidStream;

    function PathContext(context) {
      this._context = context;
    }

    PathContext.prototype = {
      _radius: 4.5,
      pointRadius: function(_) {
        return this._radius = _, this;
      },
      polygonStart: function() {
        this._line = 0;
      },
      polygonEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line === 0) this._context.closePath();
        this._point = NaN;
      },
      point: function(x, y) {
        switch (this._point) {
          case 0: {
            this._context.moveTo(x, y);
            this._point = 1;
            break;
          }
          case 1: {
            this._context.lineTo(x, y);
            break;
          }
          default: {
            this._context.moveTo(x + this._radius, y);
            this._context.arc(x, y, this._radius, 0, tau$1);
            break;
          }
        }
      },
      result: noop$1
    };

    var lengthSum = new Adder(),
        lengthRing,
        x00,
        y00,
        x0,
        y0;

    var lengthStream = {
      point: noop$1,
      lineStart: function() {
        lengthStream.point = lengthPointFirst;
      },
      lineEnd: function() {
        if (lengthRing) lengthPoint(x00, y00);
        lengthStream.point = noop$1;
      },
      polygonStart: function() {
        lengthRing = true;
      },
      polygonEnd: function() {
        lengthRing = null;
      },
      result: function() {
        var length = +lengthSum;
        lengthSum = new Adder();
        return length;
      }
    };

    function lengthPointFirst(x, y) {
      lengthStream.point = lengthPoint;
      x00 = x0 = x, y00 = y0 = y;
    }

    function lengthPoint(x, y) {
      x0 -= x, y0 -= y;
      lengthSum.add(sqrt$2(x0 * x0 + y0 * y0));
      x0 = x, y0 = y;
    }

    var pathMeasure = lengthStream;

    function PathString() {
      this._string = [];
    }

    PathString.prototype = {
      _radius: 4.5,
      _circle: circle$1(4.5),
      pointRadius: function(_) {
        if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;
        return this;
      },
      polygonStart: function() {
        this._line = 0;
      },
      polygonEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line === 0) this._string.push("Z");
        this._point = NaN;
      },
      point: function(x, y) {
        switch (this._point) {
          case 0: {
            this._string.push("M", x, ",", y);
            this._point = 1;
            break;
          }
          case 1: {
            this._string.push("L", x, ",", y);
            break;
          }
          default: {
            if (this._circle == null) this._circle = circle$1(this._radius);
            this._string.push("M", x, ",", y, this._circle);
            break;
          }
        }
      },
      result: function() {
        if (this._string.length) {
          var result = this._string.join("");
          this._string = [];
          return result;
        } else {
          return null;
        }
      }
    };

    function circle$1(radius) {
      return "m0," + radius
          + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius
          + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius
          + "z";
    }

    function index$2(projection, context) {
      var pointRadius = 4.5,
          projectionStream,
          contextStream;

      function path(object) {
        if (object) {
          if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
          geoStream(object, projectionStream(contextStream));
        }
        return contextStream.result();
      }

      path.area = function(object) {
        geoStream(object, projectionStream(pathArea));
        return pathArea.result();
      };

      path.measure = function(object) {
        geoStream(object, projectionStream(pathMeasure));
        return pathMeasure.result();
      };

      path.bounds = function(object) {
        geoStream(object, projectionStream(boundsStream$1));
        return boundsStream$1.result();
      };

      path.centroid = function(object) {
        geoStream(object, projectionStream(pathCentroid));
        return pathCentroid.result();
      };

      path.projection = function(_) {
        return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$5) : (projection = _).stream, path) : projection;
      };

      path.context = function(_) {
        if (!arguments.length) return context;
        contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);
        if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
        return path;
      };

      path.pointRadius = function(_) {
        if (!arguments.length) return pointRadius;
        pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
        return path;
      };

      return path.projection(projection).context(context);
    }

    function transform$1(methods) {
      return {
        stream: transformer$3(methods)
      };
    }

    function transformer$3(methods) {
      return function(stream) {
        var s = new TransformStream;
        for (var key in methods) s[key] = methods[key];
        s.stream = stream;
        return s;
      };
    }

    function TransformStream() {}

    TransformStream.prototype = {
      constructor: TransformStream,
      point: function(x, y) { this.stream.point(x, y); },
      sphere: function() { this.stream.sphere(); },
      lineStart: function() { this.stream.lineStart(); },
      lineEnd: function() { this.stream.lineEnd(); },
      polygonStart: function() { this.stream.polygonStart(); },
      polygonEnd: function() { this.stream.polygonEnd(); }
    };

    function fit(projection, fitBounds, object) {
      var clip = projection.clipExtent && projection.clipExtent();
      projection.scale(150).translate([0, 0]);
      if (clip != null) projection.clipExtent(null);
      geoStream(object, projection.stream(boundsStream$1));
      fitBounds(boundsStream$1.result());
      if (clip != null) projection.clipExtent(clip);
      return projection;
    }

    function fitExtent(projection, extent, object) {
      return fit(projection, function(b) {
        var w = extent[1][0] - extent[0][0],
            h = extent[1][1] - extent[0][1],
            k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),
            x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,
            y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
        projection.scale(150 * k).translate([x, y]);
      }, object);
    }

    function fitSize(projection, size, object) {
      return fitExtent(projection, [[0, 0], size], object);
    }

    function fitWidth(projection, width, object) {
      return fit(projection, function(b) {
        var w = +width,
            k = w / (b[1][0] - b[0][0]),
            x = (w - k * (b[1][0] + b[0][0])) / 2,
            y = -k * b[0][1];
        projection.scale(150 * k).translate([x, y]);
      }, object);
    }

    function fitHeight(projection, height, object) {
      return fit(projection, function(b) {
        var h = +height,
            k = h / (b[1][1] - b[0][1]),
            x = -k * b[0][0],
            y = (h - k * (b[1][1] + b[0][1])) / 2;
        projection.scale(150 * k).translate([x, y]);
      }, object);
    }

    var maxDepth = 16, // maximum depth of subdivision
        cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)

    function resample(project, delta2) {
      return +delta2 ? resample$1(project, delta2) : resampleNone(project);
    }

    function resampleNone(project) {
      return transformer$3({
        point: function(x, y) {
          x = project(x, y);
          this.stream.point(x[0], x[1]);
        }
      });
    }

    function resample$1(project, delta2) {

      function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
        var dx = x1 - x0,
            dy = y1 - y0,
            d2 = dx * dx + dy * dy;
        if (d2 > 4 * delta2 && depth--) {
          var a = a0 + a1,
              b = b0 + b1,
              c = c0 + c1,
              m = sqrt$2(a * a + b * b + c * c),
              phi2 = asin$1(c /= m),
              lambda2 = abs$1(abs$1(c) - 1) < epsilon$1 || abs$1(lambda0 - lambda1) < epsilon$1 ? (lambda0 + lambda1) / 2 : atan2$1(b, a),
              p = project(lambda2, phi2),
              x2 = p[0],
              y2 = p[1],
              dx2 = x2 - x0,
              dy2 = y2 - y0,
              dz = dy * dx2 - dx * dy2;
          if (dz * dz / d2 > delta2 // perpendicular projected distance
              || abs$1((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
              || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance
            resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
            stream.point(x2, y2);
            resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
          }
        }
      }
      return function(stream) {
        var lambda00, x00, y00, a00, b00, c00, // first point
            lambda0, x0, y0, a0, b0, c0; // previous point

        var resampleStream = {
          point: point,
          lineStart: lineStart,
          lineEnd: lineEnd,
          polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },
          polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }
        };

        function point(x, y) {
          x = project(x, y);
          stream.point(x[0], x[1]);
        }

        function lineStart() {
          x0 = NaN;
          resampleStream.point = linePoint;
          stream.lineStart();
        }

        function linePoint(lambda, phi) {
          var c = cartesian([lambda, phi]), p = project(lambda, phi);
          resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
          stream.point(x0, y0);
        }

        function lineEnd() {
          resampleStream.point = point;
          stream.lineEnd();
        }

        function ringStart() {
          lineStart();
          resampleStream.point = ringPoint;
          resampleStream.lineEnd = ringEnd;
        }

        function ringPoint(lambda, phi) {
          linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
          resampleStream.point = linePoint;
        }

        function ringEnd() {
          resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
          resampleStream.lineEnd = lineEnd;
          lineEnd();
        }

        return resampleStream;
      };
    }

    var transformRadians = transformer$3({
      point: function(x, y) {
        this.stream.point(x * radians, y * radians);
      }
    });

    function transformRotate(rotate) {
      return transformer$3({
        point: function(x, y) {
          var r = rotate(x, y);
          return this.stream.point(r[0], r[1]);
        }
      });
    }

    function scaleTranslate(k, dx, dy, sx, sy) {
      function transform(x, y) {
        x *= sx; y *= sy;
        return [dx + k * x, dy - k * y];
      }
      transform.invert = function(x, y) {
        return [(x - dx) / k * sx, (dy - y) / k * sy];
      };
      return transform;
    }

    function scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {
      if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);
      var cosAlpha = cos$1(alpha),
          sinAlpha = sin$1(alpha),
          a = cosAlpha * k,
          b = sinAlpha * k,
          ai = cosAlpha / k,
          bi = sinAlpha / k,
          ci = (sinAlpha * dy - cosAlpha * dx) / k,
          fi = (sinAlpha * dx + cosAlpha * dy) / k;
      function transform(x, y) {
        x *= sx; y *= sy;
        return [a * x - b * y + dx, dy - b * x - a * y];
      }
      transform.invert = function(x, y) {
        return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];
      };
      return transform;
    }

    function projection(project) {
      return projectionMutator(function() { return project; })();
    }

    function projectionMutator(projectAt) {
      var project,
          k = 150, // scale
          x = 480, y = 250, // translate
          lambda = 0, phi = 0, // center
          deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate
          alpha = 0, // post-rotate angle
          sx = 1, // reflectX
          sy = 1, // reflectX
          theta = null, preclip = clipAntimeridian, // pre-clip angle
          x0 = null, y0, x1, y1, postclip = identity$5, // post-clip extent
          delta2 = 0.5, // precision
          projectResample,
          projectTransform,
          projectRotateTransform,
          cache,
          cacheStream;

      function projection(point) {
        return projectRotateTransform(point[0] * radians, point[1] * radians);
      }

      function invert(point) {
        point = projectRotateTransform.invert(point[0], point[1]);
        return point && [point[0] * degrees, point[1] * degrees];
      }

      projection.stream = function(stream) {
        return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
      };

      projection.preclip = function(_) {
        return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
      };

      projection.postclip = function(_) {
        return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
      };

      projection.clipAngle = function(_) {
        return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;
      };

      projection.clipExtent = function(_) {
        return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$5) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
      };

      projection.scale = function(_) {
        return arguments.length ? (k = +_, recenter()) : k;
      };

      projection.translate = function(_) {
        return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
      };

      projection.center = function(_) {
        return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];
      };

      projection.rotate = function(_) {
        return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];
      };

      projection.angle = function(_) {
        return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;
      };

      projection.reflectX = function(_) {
        return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;
      };

      projection.reflectY = function(_) {
        return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;
      };

      projection.precision = function(_) {
        return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$2(delta2);
      };

      projection.fitExtent = function(extent, object) {
        return fitExtent(projection, extent, object);
      };

      projection.fitSize = function(size, object) {
        return fitSize(projection, size, object);
      };

      projection.fitWidth = function(width, object) {
        return fitWidth(projection, width, object);
      };

      projection.fitHeight = function(height, object) {
        return fitHeight(projection, height, object);
      };

      function recenter() {
        var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),
            transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);
        rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);
        projectTransform = compose(project, transform);
        projectRotateTransform = compose(rotate, projectTransform);
        projectResample = resample(projectTransform, delta2);
        return reset();
      }

      function reset() {
        cache = cacheStream = null;
        return projection;
      }

      return function() {
        project = projectAt.apply(this, arguments);
        projection.invert = project.invert && invert;
        return recenter();
      };
    }

    function conicProjection(projectAt) {
      var phi0 = 0,
          phi1 = pi$1 / 3,
          m = projectionMutator(projectAt),
          p = m(phi0, phi1);

      p.parallels = function(_) {
        return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];
      };

      return p;
    }

    function cylindricalEqualAreaRaw(phi0) {
      var cosPhi0 = cos$1(phi0);

      function forward(lambda, phi) {
        return [lambda * cosPhi0, sin$1(phi) / cosPhi0];
      }

      forward.invert = function(x, y) {
        return [x / cosPhi0, asin$1(y * cosPhi0)];
      };

      return forward;
    }

    function conicEqualAreaRaw(y0, y1) {
      var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;

      // Are the parallels symmetrical around the Equator?
      if (abs$1(n) < epsilon$1) return cylindricalEqualAreaRaw(y0);

      var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$2(c) / n;

      function project(x, y) {
        var r = sqrt$2(c - 2 * n * sin$1(y)) / n;
        return [r * sin$1(x *= n), r0 - r * cos$1(x)];
      }

      project.invert = function(x, y) {
        var r0y = r0 - y,
            l = atan2$1(x, abs$1(r0y)) * sign$1(r0y);
        if (r0y * n < 0)
          l -= pi$1 * sign$1(x) * sign$1(r0y);
        return [l / n, asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
      };

      return project;
    }

    function conicEqualArea() {
      return conicProjection(conicEqualAreaRaw)
          .scale(155.424)
          .center([0, 33.6442]);
    }

    function albers() {
      return conicEqualArea()
          .parallels([29.5, 45.5])
          .scale(1070)
          .translate([480, 250])
          .rotate([96, 0])
          .center([-0.6, 38.7]);
    }

    // The projections must have mutually exclusive clip regions on the sphere,
    // as this will avoid emitting interleaving lines and polygons.
    function multiplex(streams) {
      var n = streams.length;
      return {
        point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },
        sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },
        lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },
        lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },
        polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },
        polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }
      };
    }

    // A composite projection for the United States, configured by default for
    // 960×500. The projection also works quite well at 960×600 if you change the
    // scale to 1285 and adjust the translate accordingly. The set of standard
    // parallels for each region comes from USGS, which is published here:
    // http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers
    function albersUsa() {
      var cache,
          cacheStream,
          lower48 = albers(), lower48Point,
          alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338
          hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007
          point, pointStream = {point: function(x, y) { point = [x, y]; }};

      function albersUsa(coordinates) {
        var x = coordinates[0], y = coordinates[1];
        return point = null,
            (lower48Point.point(x, y), point)
            || (alaskaPoint.point(x, y), point)
            || (hawaiiPoint.point(x, y), point);
      }

      albersUsa.invert = function(coordinates) {
        var k = lower48.scale(),
            t = lower48.translate(),
            x = (coordinates[0] - t[0]) / k,
            y = (coordinates[1] - t[1]) / k;
        return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska
            : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii
            : lower48).invert(coordinates);
      };

      albersUsa.stream = function(stream) {
        return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
      };

      albersUsa.precision = function(_) {
        if (!arguments.length) return lower48.precision();
        lower48.precision(_), alaska.precision(_), hawaii.precision(_);
        return reset();
      };

      albersUsa.scale = function(_) {
        if (!arguments.length) return lower48.scale();
        lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
        return albersUsa.translate(lower48.translate());
      };

      albersUsa.translate = function(_) {
        if (!arguments.length) return lower48.translate();
        var k = lower48.scale(), x = +_[0], y = +_[1];

        lower48Point = lower48
            .translate(_)
            .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])
            .stream(pointStream);

        alaskaPoint = alaska
            .translate([x - 0.307 * k, y + 0.201 * k])
            .clipExtent([[x - 0.425 * k + epsilon$1, y + 0.120 * k + epsilon$1], [x - 0.214 * k - epsilon$1, y + 0.234 * k - epsilon$1]])
            .stream(pointStream);

        hawaiiPoint = hawaii
            .translate([x - 0.205 * k, y + 0.212 * k])
            .clipExtent([[x - 0.214 * k + epsilon$1, y + 0.166 * k + epsilon$1], [x - 0.115 * k - epsilon$1, y + 0.234 * k - epsilon$1]])
            .stream(pointStream);

        return reset();
      };

      albersUsa.fitExtent = function(extent, object) {
        return fitExtent(albersUsa, extent, object);
      };

      albersUsa.fitSize = function(size, object) {
        return fitSize(albersUsa, size, object);
      };

      albersUsa.fitWidth = function(width, object) {
        return fitWidth(albersUsa, width, object);
      };

      albersUsa.fitHeight = function(height, object) {
        return fitHeight(albersUsa, height, object);
      };

      function reset() {
        cache = cacheStream = null;
        return albersUsa;
      }

      return albersUsa.scale(1070);
    }

    function azimuthalRaw(scale) {
      return function(x, y) {
        var cx = cos$1(x),
            cy = cos$1(y),
            k = scale(cx * cy);
            if (k === Infinity) return [2, 0];
        return [
          k * cy * sin$1(x),
          k * sin$1(y)
        ];
      }
    }

    function azimuthalInvert(angle) {
      return function(x, y) {
        var z = sqrt$2(x * x + y * y),
            c = angle(z),
            sc = sin$1(c),
            cc = cos$1(c);
        return [
          atan2$1(x * sc, z * cc),
          asin$1(z && y * sc / z)
        ];
      }
    }

    var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {
      return sqrt$2(2 / (1 + cxcy));
    });

    azimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {
      return 2 * asin$1(z / 2);
    });

    function azimuthalEqualArea() {
      return projection(azimuthalEqualAreaRaw)
          .scale(124.75)
          .clipAngle(180 - 1e-3);
    }

    var azimuthalEquidistantRaw = azimuthalRaw(function(c) {
      return (c = acos$1(c)) && c / sin$1(c);
    });

    azimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {
      return z;
    });

    function azimuthalEquidistant() {
      return projection(azimuthalEquidistantRaw)
          .scale(79.4188)
          .clipAngle(180 - 1e-3);
    }

    function mercatorRaw(lambda, phi) {
      return [lambda, log$1(tan((halfPi$1 + phi) / 2))];
    }

    mercatorRaw.invert = function(x, y) {
      return [x, 2 * atan(exp(y)) - halfPi$1];
    };

    function mercator() {
      return mercatorProjection(mercatorRaw)
          .scale(961 / tau$1);
    }

    function mercatorProjection(project) {
      var m = projection(project),
          center = m.center,
          scale = m.scale,
          translate = m.translate,
          clipExtent = m.clipExtent,
          x0 = null, y0, x1, y1; // clip extent

      m.scale = function(_) {
        return arguments.length ? (scale(_), reclip()) : scale();
      };

      m.translate = function(_) {
        return arguments.length ? (translate(_), reclip()) : translate();
      };

      m.center = function(_) {
        return arguments.length ? (center(_), reclip()) : center();
      };

      m.clipExtent = function(_) {
        return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];
      };

      function reclip() {
        var k = pi$1 * scale(),
            t = m(rotation(m.rotate()).invert([0, 0]));
        return clipExtent(x0 == null
            ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw
            ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]
            : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
      }

      return reclip();
    }

    function tany(y) {
      return tan((halfPi$1 + y) / 2);
    }

    function conicConformalRaw(y0, y1) {
      var cy0 = cos$1(y0),
          n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),
          f = cy0 * pow$1(tany(y0), n) / n;

      if (!n) return mercatorRaw;

      function project(x, y) {
        if (f > 0) { if (y < -halfPi$1 + epsilon$1) y = -halfPi$1 + epsilon$1; }
        else { if (y > halfPi$1 - epsilon$1) y = halfPi$1 - epsilon$1; }
        var r = f / pow$1(tany(y), n);
        return [r * sin$1(n * x), f - r * cos$1(n * x)];
      }

      project.invert = function(x, y) {
        var fy = f - y, r = sign$1(n) * sqrt$2(x * x + fy * fy),
          l = atan2$1(x, abs$1(fy)) * sign$1(fy);
        if (fy * n < 0)
          l -= pi$1 * sign$1(x) * sign$1(fy);
        return [l / n, 2 * atan(pow$1(f / r, 1 / n)) - halfPi$1];
      };

      return project;
    }

    function conicConformal() {
      return conicProjection(conicConformalRaw)
          .scale(109.5)
          .parallels([30, 30]);
    }

    function equirectangularRaw(lambda, phi) {
      return [lambda, phi];
    }

    equirectangularRaw.invert = equirectangularRaw;

    function equirectangular() {
      return projection(equirectangularRaw)
          .scale(152.63);
    }

    function conicEquidistantRaw(y0, y1) {
      var cy0 = cos$1(y0),
          n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),
          g = cy0 / n + y0;

      if (abs$1(n) < epsilon$1) return equirectangularRaw;

      function project(x, y) {
        var gy = g - y, nx = n * x;
        return [gy * sin$1(nx), g - gy * cos$1(nx)];
      }

      project.invert = function(x, y) {
        var gy = g - y,
            l = atan2$1(x, abs$1(gy)) * sign$1(gy);
        if (gy * n < 0)
          l -= pi$1 * sign$1(x) * sign$1(gy);
        return [l / n, g - sign$1(n) * sqrt$2(x * x + gy * gy)];
      };

      return project;
    }

    function conicEquidistant() {
      return conicProjection(conicEquidistantRaw)
          .scale(131.154)
          .center([0, 13.9389]);
    }

    var A1 = 1.340264,
        A2 = -0.081106,
        A3 = 0.000893,
        A4 = 0.003796,
        M = sqrt$2(3) / 2,
        iterations = 12;

    function equalEarthRaw(lambda, phi) {
      var l = asin$1(M * sin$1(phi)), l2 = l * l, l6 = l2 * l2 * l2;
      return [
        lambda * cos$1(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),
        l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))
      ];
    }

    equalEarthRaw.invert = function(x, y) {
      var l = y, l2 = l * l, l6 = l2 * l2 * l2;
      for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
        fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
        fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
        l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
        if (abs$1(delta) < epsilon2) break;
      }
      return [
        M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos$1(l),
        asin$1(sin$1(l) / M)
      ];
    };

    function equalEarth() {
      return projection(equalEarthRaw)
          .scale(177.158);
    }

    function gnomonicRaw(x, y) {
      var cy = cos$1(y), k = cos$1(x) * cy;
      return [cy * sin$1(x) / k, sin$1(y) / k];
    }

    gnomonicRaw.invert = azimuthalInvert(atan);

    function gnomonic() {
      return projection(gnomonicRaw)
          .scale(144.049)
          .clipAngle(60);
    }

    function identity$4() {
      var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect
          alpha = 0, ca, sa, // angle
          x0 = null, y0, x1, y1, // clip extent
          kx = 1, ky = 1,
          transform = transformer$3({
            point: function(x, y) {
              var p = projection([x, y]);
              this.stream.point(p[0], p[1]);
            }
          }),
          postclip = identity$5,
          cache,
          cacheStream;

      function reset() {
        kx = k * sx;
        ky = k * sy;
        cache = cacheStream = null;
        return projection;
      }

      function projection (p) {
        var x = p[0] * kx, y = p[1] * ky;
        if (alpha) {
          var t = y * ca - x * sa;
          x = x * ca + y * sa;
          y = t;
        }    
        return [x + tx, y + ty];
      }
      projection.invert = function(p) {
        var x = p[0] - tx, y = p[1] - ty;
        if (alpha) {
          var t = y * ca + x * sa;
          x = x * ca - y * sa;
          y = t;
        }
        return [x / kx, y / ky];
      };
      projection.stream = function(stream) {
        return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));
      };
      projection.postclip = function(_) {
        return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
      };
      projection.clipExtent = function(_) {
        return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$5) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
      };
      projection.scale = function(_) {
        return arguments.length ? (k = +_, reset()) : k;
      };
      projection.translate = function(_) {
        return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];
      };
      projection.angle = function(_) {
        return arguments.length ? (alpha = _ % 360 * radians, sa = sin$1(alpha), ca = cos$1(alpha), reset()) : alpha * degrees;
      };
      projection.reflectX = function(_) {
        return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;
      };
      projection.reflectY = function(_) {
        return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;
      };
      projection.fitExtent = function(extent, object) {
        return fitExtent(projection, extent, object);
      };
      projection.fitSize = function(size, object) {
        return fitSize(projection, size, object);
      };
      projection.fitWidth = function(width, object) {
        return fitWidth(projection, width, object);
      };
      projection.fitHeight = function(height, object) {
        return fitHeight(projection, height, object);
      };

      return projection;
    }

    function naturalEarth1Raw(lambda, phi) {
      var phi2 = phi * phi, phi4 = phi2 * phi2;
      return [
        lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),
        phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))
      ];
    }

    naturalEarth1Raw.invert = function(x, y) {
      var phi = y, i = 25, delta;
      do {
        var phi2 = phi * phi, phi4 = phi2 * phi2;
        phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /
            (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));
      } while (abs$1(delta) > epsilon$1 && --i > 0);
      return [
        x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),
        phi
      ];
    };

    function naturalEarth1() {
      return projection(naturalEarth1Raw)
          .scale(175.295);
    }

    function orthographicRaw(x, y) {
      return [cos$1(y) * sin$1(x), sin$1(y)];
    }

    orthographicRaw.invert = azimuthalInvert(asin$1);

    function orthographic() {
      return projection(orthographicRaw)
          .scale(249.5)
          .clipAngle(90 + epsilon$1);
    }

    function stereographicRaw(x, y) {
      var cy = cos$1(y), k = 1 + cos$1(x) * cy;
      return [cy * sin$1(x) / k, sin$1(y) / k];
    }

    stereographicRaw.invert = azimuthalInvert(function(z) {
      return 2 * atan(z);
    });

    function stereographic() {
      return projection(stereographicRaw)
          .scale(250)
          .clipAngle(142);
    }

    function transverseMercatorRaw(lambda, phi) {
      return [log$1(tan((halfPi$1 + phi) / 2)), -lambda];
    }

    transverseMercatorRaw.invert = function(x, y) {
      return [-y, 2 * atan(exp(x)) - halfPi$1];
    };

    function transverseMercator() {
      var m = mercatorProjection(transverseMercatorRaw),
          center = m.center,
          rotate = m.rotate;

      m.center = function(_) {
        return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
      };

      m.rotate = function(_) {
        return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
      };

      return rotate([0, 0, 90])
          .scale(159.155);
    }

    function defaultSeparation$1(a, b) {
      return a.parent === b.parent ? 1 : 2;
    }

    function meanX(children) {
      return children.reduce(meanXReduce, 0) / children.length;
    }

    function meanXReduce(x, c) {
      return x + c.x;
    }

    function maxY(children) {
      return 1 + children.reduce(maxYReduce, 0);
    }

    function maxYReduce(y, c) {
      return Math.max(y, c.y);
    }

    function leafLeft(node) {
      var children;
      while (children = node.children) node = children[0];
      return node;
    }

    function leafRight(node) {
      var children;
      while (children = node.children) node = children[children.length - 1];
      return node;
    }

    function cluster() {
      var separation = defaultSeparation$1,
          dx = 1,
          dy = 1,
          nodeSize = false;

      function cluster(root) {
        var previousNode,
            x = 0;

        // First walk, computing the initial x & y values.
        root.eachAfter(function(node) {
          var children = node.children;
          if (children) {
            node.x = meanX(children);
            node.y = maxY(children);
          } else {
            node.x = previousNode ? x += separation(node, previousNode) : 0;
            node.y = 0;
            previousNode = node;
          }
        });

        var left = leafLeft(root),
            right = leafRight(root),
            x0 = left.x - separation(left, right) / 2,
            x1 = right.x + separation(right, left) / 2;

        // Second walk, normalizing x & y to the desired size.
        return root.eachAfter(nodeSize ? function(node) {
          node.x = (node.x - root.x) * dx;
          node.y = (root.y - node.y) * dy;
        } : function(node) {
          node.x = (node.x - x0) / (x1 - x0) * dx;
          node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
        });
      }

      cluster.separation = function(x) {
        return arguments.length ? (separation = x, cluster) : separation;
      };

      cluster.size = function(x) {
        return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);
      };

      cluster.nodeSize = function(x) {
        return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);
      };

      return cluster;
    }

    function count(node) {
      var sum = 0,
          children = node.children,
          i = children && children.length;
      if (!i) sum = 1;
      else while (--i >= 0) sum += children[i].value;
      node.value = sum;
    }

    function node_count() {
      return this.eachAfter(count);
    }

    function node_each(callback, that) {
      let index = -1;
      for (const node of this) {
        callback.call(that, node, ++index, this);
      }
      return this;
    }

    function node_eachBefore(callback, that) {
      var node = this, nodes = [node], children, i, index = -1;
      while (node = nodes.pop()) {
        callback.call(that, node, ++index, this);
        if (children = node.children) {
          for (i = children.length - 1; i >= 0; --i) {
            nodes.push(children[i]);
          }
        }
      }
      return this;
    }

    function node_eachAfter(callback, that) {
      var node = this, nodes = [node], next = [], children, i, n, index = -1;
      while (node = nodes.pop()) {
        next.push(node);
        if (children = node.children) {
          for (i = 0, n = children.length; i < n; ++i) {
            nodes.push(children[i]);
          }
        }
      }
      while (node = next.pop()) {
        callback.call(that, node, ++index, this);
      }
      return this;
    }

    function node_find(callback, that) {
      let index = -1;
      for (const node of this) {
        if (callback.call(that, node, ++index, this)) {
          return node;
        }
      }
    }

    function node_sum(value) {
      return this.eachAfter(function(node) {
        var sum = +value(node.data) || 0,
            children = node.children,
            i = children && children.length;
        while (--i >= 0) sum += children[i].value;
        node.value = sum;
      });
    }

    function node_sort(compare) {
      return this.eachBefore(function(node) {
        if (node.children) {
          node.children.sort(compare);
        }
      });
    }

    function node_path(end) {
      var start = this,
          ancestor = leastCommonAncestor(start, end),
          nodes = [start];
      while (start !== ancestor) {
        start = start.parent;
        nodes.push(start);
      }
      var k = nodes.length;
      while (end !== ancestor) {
        nodes.splice(k, 0, end);
        end = end.parent;
      }
      return nodes;
    }

    function leastCommonAncestor(a, b) {
      if (a === b) return a;
      var aNodes = a.ancestors(),
          bNodes = b.ancestors(),
          c = null;
      a = aNodes.pop();
      b = bNodes.pop();
      while (a === b) {
        c = a;
        a = aNodes.pop();
        b = bNodes.pop();
      }
      return c;
    }

    function node_ancestors() {
      var node = this, nodes = [node];
      while (node = node.parent) {
        nodes.push(node);
      }
      return nodes;
    }

    function node_descendants() {
      return Array.from(this);
    }

    function node_leaves() {
      var leaves = [];
      this.eachBefore(function(node) {
        if (!node.children) {
          leaves.push(node);
        }
      });
      return leaves;
    }

    function node_links() {
      var root = this, links = [];
      root.each(function(node) {
        if (node !== root) { // Don’t include the root’s parent, if any.
          links.push({source: node.parent, target: node});
        }
      });
      return links;
    }

    function* node_iterator() {
      var node = this, current, next = [node], children, i, n;
      do {
        current = next.reverse(), next = [];
        while (node = current.pop()) {
          yield node;
          if (children = node.children) {
            for (i = 0, n = children.length; i < n; ++i) {
              next.push(children[i]);
            }
          }
        }
      } while (next.length);
    }

    function hierarchy(data, children) {
      if (data instanceof Map) {
        data = [undefined, data];
        if (children === undefined) children = mapChildren;
      } else if (children === undefined) {
        children = objectChildren;
      }

      var root = new Node$1(data),
          node,
          nodes = [root],
          child,
          childs,
          i,
          n;

      while (node = nodes.pop()) {
        if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {
          node.children = childs;
          for (i = n - 1; i >= 0; --i) {
            nodes.push(child = childs[i] = new Node$1(childs[i]));
            child.parent = node;
            child.depth = node.depth + 1;
          }
        }
      }

      return root.eachBefore(computeHeight);
    }

    function node_copy() {
      return hierarchy(this).eachBefore(copyData);
    }

    function objectChildren(d) {
      return d.children;
    }

    function mapChildren(d) {
      return Array.isArray(d) ? d[1] : null;
    }

    function copyData(node) {
      if (node.data.value !== undefined) node.value = node.data.value;
      node.data = node.data.data;
    }

    function computeHeight(node) {
      var height = 0;
      do node.height = height;
      while ((node = node.parent) && (node.height < ++height));
    }

    function Node$1(data) {
      this.data = data;
      this.depth =
      this.height = 0;
      this.parent = null;
    }

    Node$1.prototype = hierarchy.prototype = {
      constructor: Node$1,
      count: node_count,
      each: node_each,
      eachAfter: node_eachAfter,
      eachBefore: node_eachBefore,
      find: node_find,
      sum: node_sum,
      sort: node_sort,
      path: node_path,
      ancestors: node_ancestors,
      descendants: node_descendants,
      leaves: node_leaves,
      links: node_links,
      copy: node_copy,
      [Symbol.iterator]: node_iterator
    };

    function array$1(x) {
      return typeof x === "object" && "length" in x
        ? x // Array, TypedArray, NodeList, array-like
        : Array.from(x); // Map, Set, iterable, string, or anything else
    }

    function shuffle(array) {
      var m = array.length,
          t,
          i;

      while (m) {
        i = Math.random() * m-- | 0;
        t = array[m];
        array[m] = array[i];
        array[i] = t;
      }

      return array;
    }

    function enclose(circles) {
      var i = 0, n = (circles = shuffle(Array.from(circles))).length, B = [], p, e;

      while (i < n) {
        p = circles[i];
        if (e && enclosesWeak(e, p)) ++i;
        else e = encloseBasis(B = extendBasis(B, p)), i = 0;
      }

      return e;
    }

    function extendBasis(B, p) {
      var i, j;

      if (enclosesWeakAll(p, B)) return [p];

      // If we get here then B must have at least one element.
      for (i = 0; i < B.length; ++i) {
        if (enclosesNot(p, B[i])
            && enclosesWeakAll(encloseBasis2(B[i], p), B)) {
          return [B[i], p];
        }
      }

      // If we get here then B must have at least two elements.
      for (i = 0; i < B.length - 1; ++i) {
        for (j = i + 1; j < B.length; ++j) {
          if (enclosesNot(encloseBasis2(B[i], B[j]), p)
              && enclosesNot(encloseBasis2(B[i], p), B[j])
              && enclosesNot(encloseBasis2(B[j], p), B[i])
              && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {
            return [B[i], B[j], p];
          }
        }
      }

      // If we get here then something is very wrong.
      throw new Error;
    }

    function enclosesNot(a, b) {
      var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;
      return dr < 0 || dr * dr < dx * dx + dy * dy;
    }

    function enclosesWeak(a, b) {
      var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;
      return dr > 0 && dr * dr > dx * dx + dy * dy;
    }

    function enclosesWeakAll(a, B) {
      for (var i = 0; i < B.length; ++i) {
        if (!enclosesWeak(a, B[i])) {
          return false;
        }
      }
      return true;
    }

    function encloseBasis(B) {
      switch (B.length) {
        case 1: return encloseBasis1(B[0]);
        case 2: return encloseBasis2(B[0], B[1]);
        case 3: return encloseBasis3(B[0], B[1], B[2]);
      }
    }

    function encloseBasis1(a) {
      return {
        x: a.x,
        y: a.y,
        r: a.r
      };
    }

    function encloseBasis2(a, b) {
      var x1 = a.x, y1 = a.y, r1 = a.r,
          x2 = b.x, y2 = b.y, r2 = b.r,
          x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,
          l = Math.sqrt(x21 * x21 + y21 * y21);
      return {
        x: (x1 + x2 + x21 / l * r21) / 2,
        y: (y1 + y2 + y21 / l * r21) / 2,
        r: (l + r1 + r2) / 2
      };
    }

    function encloseBasis3(a, b, c) {
      var x1 = a.x, y1 = a.y, r1 = a.r,
          x2 = b.x, y2 = b.y, r2 = b.r,
          x3 = c.x, y3 = c.y, r3 = c.r,
          a2 = x1 - x2,
          a3 = x1 - x3,
          b2 = y1 - y2,
          b3 = y1 - y3,
          c2 = r2 - r1,
          c3 = r3 - r1,
          d1 = x1 * x1 + y1 * y1 - r1 * r1,
          d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,
          d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,
          ab = a3 * b2 - a2 * b3,
          xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,
          xb = (b3 * c2 - b2 * c3) / ab,
          ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,
          yb = (a2 * c3 - a3 * c2) / ab,
          A = xb * xb + yb * yb - 1,
          B = 2 * (r1 + xa * xb + ya * yb),
          C = xa * xa + ya * ya - r1 * r1,
          r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);
      return {
        x: x1 + xa + xb * r,
        y: y1 + ya + yb * r,
        r: r
      };
    }

    function place(b, a, c) {
      var dx = b.x - a.x, x, a2,
          dy = b.y - a.y, y, b2,
          d2 = dx * dx + dy * dy;
      if (d2) {
        a2 = a.r + c.r, a2 *= a2;
        b2 = b.r + c.r, b2 *= b2;
        if (a2 > b2) {
          x = (d2 + b2 - a2) / (2 * d2);
          y = Math.sqrt(Math.max(0, b2 / d2 - x * x));
          c.x = b.x - x * dx - y * dy;
          c.y = b.y - x * dy + y * dx;
        } else {
          x = (d2 + a2 - b2) / (2 * d2);
          y = Math.sqrt(Math.max(0, a2 / d2 - x * x));
          c.x = a.x + x * dx - y * dy;
          c.y = a.y + x * dy + y * dx;
        }
      } else {
        c.x = a.x + c.r;
        c.y = a.y;
      }
    }

    function intersects(a, b) {
      var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;
      return dr > 0 && dr * dr > dx * dx + dy * dy;
    }

    function score(node) {
      var a = node._,
          b = node.next._,
          ab = a.r + b.r,
          dx = (a.x * b.r + b.x * a.r) / ab,
          dy = (a.y * b.r + b.y * a.r) / ab;
      return dx * dx + dy * dy;
    }

    function Node(circle) {
      this._ = circle;
      this.next = null;
      this.previous = null;
    }

    function packEnclose(circles) {
      if (!(n = (circles = array$1(circles)).length)) return 0;

      var a, b, c, n, aa, ca, i, j, k, sj, sk;

      // Place the first circle.
      a = circles[0], a.x = 0, a.y = 0;
      if (!(n > 1)) return a.r;

      // Place the second circle.
      b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
      if (!(n > 2)) return a.r + b.r;

      // Place the third circle.
      place(b, a, c = circles[2]);

      // Initialize the front-chain using the first three circles a, b and c.
      a = new Node(a), b = new Node(b), c = new Node(c);
      a.next = c.previous = b;
      b.next = a.previous = c;
      c.next = b.previous = a;

      // Attempt to place each remaining circle…
      pack: for (i = 3; i < n; ++i) {
        place(a._, b._, c = circles[i]), c = new Node(c);

        // Find the closest intersecting circle on the front-chain, if any.
        // “Closeness” is determined by linear distance along the front-chain.
        // “Ahead” or “behind” is likewise determined by linear distance.
        j = b.next, k = a.previous, sj = b._.r, sk = a._.r;
        do {
          if (sj <= sk) {
            if (intersects(j._, c._)) {
              b = j, a.next = b, b.previous = a, --i;
              continue pack;
            }
            sj += j._.r, j = j.next;
          } else {
            if (intersects(k._, c._)) {
              a = k, a.next = b, b.previous = a, --i;
              continue pack;
            }
            sk += k._.r, k = k.previous;
          }
        } while (j !== k.next);

        // Success! Insert the new circle c between a and b.
        c.previous = a, c.next = b, a.next = b.previous = b = c;

        // Compute the new closest circle pair to the centroid.
        aa = score(a);
        while ((c = c.next) !== b) {
          if ((ca = score(c)) < aa) {
            a = c, aa = ca;
          }
        }
        b = a.next;
      }

      // Compute the enclosing circle of the front chain.
      a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);

      // Translate the circles to put the enclosing circle around the origin.
      for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;

      return c.r;
    }

    function siblings(circles) {
      packEnclose(circles);
      return circles;
    }

    function optional(f) {
      return f == null ? null : required(f);
    }

    function required(f) {
      if (typeof f !== "function") throw new Error;
      return f;
    }

    function constantZero() {
      return 0;
    }

    function constant$2(x) {
      return function() {
        return x;
      };
    }

    function defaultRadius(d) {
      return Math.sqrt(d.value);
    }

    function index$1() {
      var radius = null,
          dx = 1,
          dy = 1,
          padding = constantZero;

      function pack(root) {
        root.x = dx / 2, root.y = dy / 2;
        if (radius) {
          root.eachBefore(radiusLeaf(radius))
              .eachAfter(packChildren(padding, 0.5))
              .eachBefore(translateChild(1));
        } else {
          root.eachBefore(radiusLeaf(defaultRadius))
              .eachAfter(packChildren(constantZero, 1))
              .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))
              .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
        }
        return root;
      }

      pack.radius = function(x) {
        return arguments.length ? (radius = optional(x), pack) : radius;
      };

      pack.size = function(x) {
        return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
      };

      pack.padding = function(x) {
        return arguments.length ? (padding = typeof x === "function" ? x : constant$2(+x), pack) : padding;
      };

      return pack;
    }

    function radiusLeaf(radius) {
      return function(node) {
        if (!node.children) {
          node.r = Math.max(0, +radius(node) || 0);
        }
      };
    }

    function packChildren(padding, k) {
      return function(node) {
        if (children = node.children) {
          var children,
              i,
              n = children.length,
              r = padding(node) * k || 0,
              e;

          if (r) for (i = 0; i < n; ++i) children[i].r += r;
          e = packEnclose(children);
          if (r) for (i = 0; i < n; ++i) children[i].r -= r;
          node.r = e + r;
        }
      };
    }

    function translateChild(k) {
      return function(node) {
        var parent = node.parent;
        node.r *= k;
        if (parent) {
          node.x = parent.x + k * node.x;
          node.y = parent.y + k * node.y;
        }
      };
    }

    function roundNode(node) {
      node.x0 = Math.round(node.x0);
      node.y0 = Math.round(node.y0);
      node.x1 = Math.round(node.x1);
      node.y1 = Math.round(node.y1);
    }

    function treemapDice(parent, x0, y0, x1, y1) {
      var nodes = parent.children,
          node,
          i = -1,
          n = nodes.length,
          k = parent.value && (x1 - x0) / parent.value;

      while (++i < n) {
        node = nodes[i], node.y0 = y0, node.y1 = y1;
        node.x0 = x0, node.x1 = x0 += node.value * k;
      }
    }

    function partition() {
      var dx = 1,
          dy = 1,
          padding = 0,
          round = false;

      function partition(root) {
        var n = root.height + 1;
        root.x0 =
        root.y0 = padding;
        root.x1 = dx;
        root.y1 = dy / n;
        root.eachBefore(positionNode(dy, n));
        if (round) root.eachBefore(roundNode);
        return root;
      }

      function positionNode(dy, n) {
        return function(node) {
          if (node.children) {
            treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
          }
          var x0 = node.x0,
              y0 = node.y0,
              x1 = node.x1 - padding,
              y1 = node.y1 - padding;
          if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
          if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
          node.x0 = x0;
          node.y0 = y0;
          node.x1 = x1;
          node.y1 = y1;
        };
      }

      partition.round = function(x) {
        return arguments.length ? (round = !!x, partition) : round;
      };

      partition.size = function(x) {
        return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];
      };

      partition.padding = function(x) {
        return arguments.length ? (padding = +x, partition) : padding;
      };

      return partition;
    }

    var preroot = {depth: -1},
        ambiguous = {};

    function defaultId(d) {
      return d.id;
    }

    function defaultParentId(d) {
      return d.parentId;
    }

    function stratify() {
      var id = defaultId,
          parentId = defaultParentId;

      function stratify(data) {
        var nodes = Array.from(data),
            n = nodes.length,
            d,
            i,
            root,
            parent,
            node,
            nodeId,
            nodeKey,
            nodeByKey = new Map;

        for (i = 0; i < n; ++i) {
          d = nodes[i], node = nodes[i] = new Node$1(d);
          if ((nodeId = id(d, i, data)) != null && (nodeId += "")) {
            nodeKey = node.id = nodeId;
            nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);
          }
          if ((nodeId = parentId(d, i, data)) != null && (nodeId += "")) {
            node.parent = nodeId;
          }
        }

        for (i = 0; i < n; ++i) {
          node = nodes[i];
          if (nodeId = node.parent) {
            parent = nodeByKey.get(nodeId);
            if (!parent) throw new Error("missing: " + nodeId);
            if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);
            if (parent.children) parent.children.push(node);
            else parent.children = [node];
            node.parent = parent;
          } else {
            if (root) throw new Error("multiple roots");
            root = node;
          }
        }

        if (!root) throw new Error("no root");
        root.parent = preroot;
        root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);
        root.parent = null;
        if (n > 0) throw new Error("cycle");

        return root;
      }

      stratify.id = function(x) {
        return arguments.length ? (id = required(x), stratify) : id;
      };

      stratify.parentId = function(x) {
        return arguments.length ? (parentId = required(x), stratify) : parentId;
      };

      return stratify;
    }

    function defaultSeparation(a, b) {
      return a.parent === b.parent ? 1 : 2;
    }

    // function radialSeparation(a, b) {
    //   return (a.parent === b.parent ? 1 : 2) / a.depth;
    // }

    // This function is used to traverse the left contour of a subtree (or
    // subforest). It returns the successor of v on this contour. This successor is
    // either given by the leftmost child of v or by the thread of v. The function
    // returns null if and only if v is on the highest level of its subtree.
    function nextLeft(v) {
      var children = v.children;
      return children ? children[0] : v.t;
    }

    // This function works analogously to nextLeft.
    function nextRight(v) {
      var children = v.children;
      return children ? children[children.length - 1] : v.t;
    }

    // Shifts the current subtree rooted at w+. This is done by increasing
    // prelim(w+) and mod(w+) by shift.
    function moveSubtree(wm, wp, shift) {
      var change = shift / (wp.i - wm.i);
      wp.c -= change;
      wp.s += shift;
      wm.c += change;
      wp.z += shift;
      wp.m += shift;
    }

    // All other shifts, applied to the smaller subtrees between w- and w+, are
    // performed by this function. To prepare the shifts, we have to adjust
    // change(w+), shift(w+), and change(w-).
    function executeShifts(v) {
      var shift = 0,
          change = 0,
          children = v.children,
          i = children.length,
          w;
      while (--i >= 0) {
        w = children[i];
        w.z += shift;
        w.m += shift;
        shift += w.s + (change += w.c);
      }
    }

    // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
    // returns the specified (default) ancestor.
    function nextAncestor(vim, v, ancestor) {
      return vim.a.parent === v.parent ? vim.a : ancestor;
    }

    function TreeNode(node, i) {
      this._ = node;
      this.parent = null;
      this.children = null;
      this.A = null; // default ancestor
      this.a = this; // ancestor
      this.z = 0; // prelim
      this.m = 0; // mod
      this.c = 0; // change
      this.s = 0; // shift
      this.t = null; // thread
      this.i = i; // number
    }

    TreeNode.prototype = Object.create(Node$1.prototype);

    function treeRoot(root) {
      var tree = new TreeNode(root, 0),
          node,
          nodes = [tree],
          child,
          children,
          i,
          n;

      while (node = nodes.pop()) {
        if (children = node._.children) {
          node.children = new Array(n = children.length);
          for (i = n - 1; i >= 0; --i) {
            nodes.push(child = node.children[i] = new TreeNode(children[i], i));
            child.parent = node;
          }
        }
      }

      (tree.parent = new TreeNode(null, 0)).children = [tree];
      return tree;
    }

    // Node-link tree diagram using the Reingold-Tilford "tidy" algorithm
    function tree() {
      var separation = defaultSeparation,
          dx = 1,
          dy = 1,
          nodeSize = null;

      function tree(root) {
        var t = treeRoot(root);

        // Compute the layout using Buchheim et al.’s algorithm.
        t.eachAfter(firstWalk), t.parent.m = -t.z;
        t.eachBefore(secondWalk);

        // If a fixed node size is specified, scale x and y.
        if (nodeSize) root.eachBefore(sizeNode);

        // If a fixed tree size is specified, scale x and y based on the extent.
        // Compute the left-most, right-most, and depth-most nodes for extents.
        else {
          var left = root,
              right = root,
              bottom = root;
          root.eachBefore(function(node) {
            if (node.x < left.x) left = node;
            if (node.x > right.x) right = node;
            if (node.depth > bottom.depth) bottom = node;
          });
          var s = left === right ? 1 : separation(left, right) / 2,
              tx = s - left.x,
              kx = dx / (right.x + s + tx),
              ky = dy / (bottom.depth || 1);
          root.eachBefore(function(node) {
            node.x = (node.x + tx) * kx;
            node.y = node.depth * ky;
          });
        }

        return root;
      }

      // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
      // applied recursively to the children of v, as well as the function
      // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
      // node v is placed to the midpoint of its outermost children.
      function firstWalk(v) {
        var children = v.children,
            siblings = v.parent.children,
            w = v.i ? siblings[v.i - 1] : null;
        if (children) {
          executeShifts(v);
          var midpoint = (children[0].z + children[children.length - 1].z) / 2;
          if (w) {
            v.z = w.z + separation(v._, w._);
            v.m = v.z - midpoint;
          } else {
            v.z = midpoint;
          }
        } else if (w) {
          v.z = w.z + separation(v._, w._);
        }
        v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
      }

      // Computes all real x-coordinates by summing up the modifiers recursively.
      function secondWalk(v) {
        v._.x = v.z + v.parent.m;
        v.m += v.parent.m;
      }

      // The core of the algorithm. Here, a new subtree is combined with the
      // previous subtrees. Threads are used to traverse the inside and outside
      // contours of the left and right subtree up to the highest common level. The
      // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
      // superscript o means outside and i means inside, the subscript - means left
      // subtree and + means right subtree. For summing up the modifiers along the
      // contour, we use respective variables si+, si-, so-, and so+. Whenever two
      // nodes of the inside contours conflict, we compute the left one of the
      // greatest uncommon ancestors using the function ANCESTOR and call MOVE
      // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
      // Finally, we add a new thread (if necessary).
      function apportion(v, w, ancestor) {
        if (w) {
          var vip = v,
              vop = v,
              vim = w,
              vom = vip.parent.children[0],
              sip = vip.m,
              sop = vop.m,
              sim = vim.m,
              som = vom.m,
              shift;
          while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
            vom = nextLeft(vom);
            vop = nextRight(vop);
            vop.a = v;
            shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
            if (shift > 0) {
              moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
              sip += shift;
              sop += shift;
            }
            sim += vim.m;
            sip += vip.m;
            som += vom.m;
            sop += vop.m;
          }
          if (vim && !nextRight(vop)) {
            vop.t = vim;
            vop.m += sim - sop;
          }
          if (vip && !nextLeft(vom)) {
            vom.t = vip;
            vom.m += sip - som;
            ancestor = v;
          }
        }
        return ancestor;
      }

      function sizeNode(node) {
        node.x *= dx;
        node.y = node.depth * dy;
      }

      tree.separation = function(x) {
        return arguments.length ? (separation = x, tree) : separation;
      };

      tree.size = function(x) {
        return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);
      };

      tree.nodeSize = function(x) {
        return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);
      };

      return tree;
    }

    function treemapSlice(parent, x0, y0, x1, y1) {
      var nodes = parent.children,
          node,
          i = -1,
          n = nodes.length,
          k = parent.value && (y1 - y0) / parent.value;

      while (++i < n) {
        node = nodes[i], node.x0 = x0, node.x1 = x1;
        node.y0 = y0, node.y1 = y0 += node.value * k;
      }
    }

    var phi = (1 + Math.sqrt(5)) / 2;

    function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
      var rows = [],
          nodes = parent.children,
          row,
          nodeValue,
          i0 = 0,
          i1 = 0,
          n = nodes.length,
          dx, dy,
          value = parent.value,
          sumValue,
          minValue,
          maxValue,
          newRatio,
          minRatio,
          alpha,
          beta;

      while (i0 < n) {
        dx = x1 - x0, dy = y1 - y0;

        // Find the next non-empty node.
        do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);
        minValue = maxValue = sumValue;
        alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
        beta = sumValue * sumValue * alpha;
        minRatio = Math.max(maxValue / beta, beta / minValue);

        // Keep adding nodes while the aspect ratio maintains or improves.
        for (; i1 < n; ++i1) {
          sumValue += nodeValue = nodes[i1].value;
          if (nodeValue < minValue) minValue = nodeValue;
          if (nodeValue > maxValue) maxValue = nodeValue;
          beta = sumValue * sumValue * alpha;
          newRatio = Math.max(maxValue / beta, beta / minValue);
          if (newRatio > minRatio) { sumValue -= nodeValue; break; }
          minRatio = newRatio;
        }

        // Position and record the row orientation.
        rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});
        if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);
        else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
        value -= sumValue, i0 = i1;
      }

      return rows;
    }

    var squarify = (function custom(ratio) {

      function squarify(parent, x0, y0, x1, y1) {
        squarifyRatio(ratio, parent, x0, y0, x1, y1);
      }

      squarify.ratio = function(x) {
        return custom((x = +x) > 1 ? x : 1);
      };

      return squarify;
    })(phi);

    function index() {
      var tile = squarify,
          round = false,
          dx = 1,
          dy = 1,
          paddingStack = [0],
          paddingInner = constantZero,
          paddingTop = constantZero,
          paddingRight = constantZero,
          paddingBottom = constantZero,
          paddingLeft = constantZero;

      function treemap(root) {
        root.x0 =
        root.y0 = 0;
        root.x1 = dx;
        root.y1 = dy;
        root.eachBefore(positionNode);
        paddingStack = [0];
        if (round) root.eachBefore(roundNode);
        return root;
      }

      function positionNode(node) {
        var p = paddingStack[node.depth],
            x0 = node.x0 + p,
            y0 = node.y0 + p,
            x1 = node.x1 - p,
            y1 = node.y1 - p;
        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
        node.x0 = x0;
        node.y0 = y0;
        node.x1 = x1;
        node.y1 = y1;
        if (node.children) {
          p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
          x0 += paddingLeft(node) - p;
          y0 += paddingTop(node) - p;
          x1 -= paddingRight(node) - p;
          y1 -= paddingBottom(node) - p;
          if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
          if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
          tile(node, x0, y0, x1, y1);
        }
      }

      treemap.round = function(x) {
        return arguments.length ? (round = !!x, treemap) : round;
      };

      treemap.size = function(x) {
        return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
      };

      treemap.tile = function(x) {
        return arguments.length ? (tile = required(x), treemap) : tile;
      };

      treemap.padding = function(x) {
        return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
      };

      treemap.paddingInner = function(x) {
        return arguments.length ? (paddingInner = typeof x === "function" ? x : constant$2(+x), treemap) : paddingInner;
      };

      treemap.paddingOuter = function(x) {
        return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
      };

      treemap.paddingTop = function(x) {
        return arguments.length ? (paddingTop = typeof x === "function" ? x : constant$2(+x), treemap) : paddingTop;
      };

      treemap.paddingRight = function(x) {
        return arguments.length ? (paddingRight = typeof x === "function" ? x : constant$2(+x), treemap) : paddingRight;
      };

      treemap.paddingBottom = function(x) {
        return arguments.length ? (paddingBottom = typeof x === "function" ? x : constant$2(+x), treemap) : paddingBottom;
      };

      treemap.paddingLeft = function(x) {
        return arguments.length ? (paddingLeft = typeof x === "function" ? x : constant$2(+x), treemap) : paddingLeft;
      };

      return treemap;
    }

    function binary(parent, x0, y0, x1, y1) {
      var nodes = parent.children,
          i, n = nodes.length,
          sum, sums = new Array(n + 1);

      for (sums[0] = sum = i = 0; i < n; ++i) {
        sums[i + 1] = sum += nodes[i].value;
      }

      partition(0, n, parent.value, x0, y0, x1, y1);

      function partition(i, j, value, x0, y0, x1, y1) {
        if (i >= j - 1) {
          var node = nodes[i];
          node.x0 = x0, node.y0 = y0;
          node.x1 = x1, node.y1 = y1;
          return;
        }

        var valueOffset = sums[i],
            valueTarget = (value / 2) + valueOffset,
            k = i + 1,
            hi = j - 1;

        while (k < hi) {
          var mid = k + hi >>> 1;
          if (sums[mid] < valueTarget) k = mid + 1;
          else hi = mid;
        }

        if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;

        var valueLeft = sums[k] - valueOffset,
            valueRight = value - valueLeft;

        if ((x1 - x0) > (y1 - y0)) {
          var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;
          partition(i, k, valueLeft, x0, y0, xk, y1);
          partition(k, j, valueRight, xk, y0, x1, y1);
        } else {
          var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;
          partition(i, k, valueLeft, x0, y0, x1, yk);
          partition(k, j, valueRight, x0, yk, x1, y1);
        }
      }
    }

    function sliceDice(parent, x0, y0, x1, y1) {
      (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);
    }

    var resquarify = (function custom(ratio) {

      function resquarify(parent, x0, y0, x1, y1) {
        if ((rows = parent._squarify) && (rows.ratio === ratio)) {
          var rows,
              row,
              nodes,
              i,
              j = -1,
              n,
              m = rows.length,
              value = parent.value;

          while (++j < m) {
            row = rows[j], nodes = row.children;
            for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;
            if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);
            else treemapSlice(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);
            value -= row.value;
          }
        } else {
          parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);
          rows.ratio = ratio;
        }
      }

      resquarify.ratio = function(x) {
        return custom((x = +x) > 1 ? x : 1);
      };

      return resquarify;
    })(phi);

    function area$1(polygon) {
      var i = -1,
          n = polygon.length,
          a,
          b = polygon[n - 1],
          area = 0;

      while (++i < n) {
        a = b;
        b = polygon[i];
        area += a[1] * b[0] - a[0] * b[1];
      }

      return area / 2;
    }

    function centroid(polygon) {
      var i = -1,
          n = polygon.length,
          x = 0,
          y = 0,
          a,
          b = polygon[n - 1],
          c,
          k = 0;

      while (++i < n) {
        a = b;
        b = polygon[i];
        k += c = a[0] * b[1] - b[0] * a[1];
        x += (a[0] + b[0]) * c;
        y += (a[1] + b[1]) * c;
      }

      return k *= 3, [x / k, y / k];
    }

    // Returns the 2D cross product of AB and AC vectors, i.e., the z-component of
    // the 3D cross product in a quadrant I Cartesian coordinate system (+x is
    // right, +y is up). Returns a positive value if ABC is counter-clockwise,
    // negative if clockwise, and zero if the points are collinear.
    function cross$1(a, b, c) {
      return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
    }

    function lexicographicOrder(a, b) {
      return a[0] - b[0] || a[1] - b[1];
    }

    // Computes the upper convex hull per the monotone chain algorithm.
    // Assumes points.length >= 3, is sorted by x, unique in y.
    // Returns an array of indices into points in left-to-right order.
    function computeUpperHullIndexes(points) {
      const n = points.length,
          indexes = [0, 1];
      let size = 2, i;

      for (i = 2; i < n; ++i) {
        while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;
        indexes[size++] = i;
      }

      return indexes.slice(0, size); // remove popped points
    }

    function hull(points) {
      if ((n = points.length) < 3) return null;

      var i,
          n,
          sortedPoints = new Array(n),
          flippedPoints = new Array(n);

      for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];
      sortedPoints.sort(lexicographicOrder);
      for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];

      var upperIndexes = computeUpperHullIndexes(sortedPoints),
          lowerIndexes = computeUpperHullIndexes(flippedPoints);

      // Construct the hull polygon, removing possible duplicate endpoints.
      var skipLeft = lowerIndexes[0] === upperIndexes[0],
          skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],
          hull = [];

      // Add upper hull in right-to-l order.
      // Then add lower hull in left-to-right order.
      for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);
      for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);

      return hull;
    }

    function contains(polygon, point) {
      var n = polygon.length,
          p = polygon[n - 1],
          x = point[0], y = point[1],
          x0 = p[0], y0 = p[1],
          x1, y1,
          inside = false;

      for (var i = 0; i < n; ++i) {
        p = polygon[i], x1 = p[0], y1 = p[1];
        if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;
        x0 = x1, y0 = y1;
      }

      return inside;
    }

    function length(polygon) {
      var i = -1,
          n = polygon.length,
          b = polygon[n - 1],
          xa,
          ya,
          xb = b[0],
          yb = b[1],
          perimeter = 0;

      while (++i < n) {
        xa = xb;
        ya = yb;
        b = polygon[i];
        xb = b[0];
        yb = b[1];
        xa -= xb;
        ya -= yb;
        perimeter += Math.hypot(xa, ya);
      }

      return perimeter;
    }

    var defaultSource = Math.random;

    var uniform = (function sourceRandomUniform(source) {
      function randomUniform(min, max) {
        min = min == null ? 0 : +min;
        max = max == null ? 1 : +max;
        if (arguments.length === 1) max = min, min = 0;
        else max -= min;
        return function() {
          return source() * max + min;
        };
      }

      randomUniform.source = sourceRandomUniform;

      return randomUniform;
    })(defaultSource);

    var int = (function sourceRandomInt(source) {
      function randomInt(min, max) {
        if (arguments.length < 2) max = min, min = 0;
        min = Math.floor(min);
        max = Math.floor(max) - min;
        return function() {
          return Math.floor(source() * max + min);
        };
      }

      randomInt.source = sourceRandomInt;

      return randomInt;
    })(defaultSource);

    var normal = (function sourceRandomNormal(source) {
      function randomNormal(mu, sigma) {
        var x, r;
        mu = mu == null ? 0 : +mu;
        sigma = sigma == null ? 1 : +sigma;
        return function() {
          var y;

          // If available, use the second previously-generated uniform random.
          if (x != null) y = x, x = null;

          // Otherwise, generate a new x and y.
          else do {
            x = source() * 2 - 1;
            y = source() * 2 - 1;
            r = x * x + y * y;
          } while (!r || r > 1);

          return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);
        };
      }

      randomNormal.source = sourceRandomNormal;

      return randomNormal;
    })(defaultSource);

    var logNormal = (function sourceRandomLogNormal(source) {
      var N = normal.source(source);

      function randomLogNormal() {
        var randomNormal = N.apply(this, arguments);
        return function() {
          return Math.exp(randomNormal());
        };
      }

      randomLogNormal.source = sourceRandomLogNormal;

      return randomLogNormal;
    })(defaultSource);

    var irwinHall = (function sourceRandomIrwinHall(source) {
      function randomIrwinHall(n) {
        if ((n = +n) <= 0) return () => 0;
        return function() {
          for (var sum = 0, i = n; i > 1; --i) sum += source();
          return sum + i * source();
        };
      }

      randomIrwinHall.source = sourceRandomIrwinHall;

      return randomIrwinHall;
    })(defaultSource);

    var bates = (function sourceRandomBates(source) {
      var I = irwinHall.source(source);

      function randomBates(n) {
        // use limiting distribution at n === 0
        if ((n = +n) === 0) return source;
        var randomIrwinHall = I(n);
        return function() {
          return randomIrwinHall() / n;
        };
      }

      randomBates.source = sourceRandomBates;

      return randomBates;
    })(defaultSource);

    var exponential = (function sourceRandomExponential(source) {
      function randomExponential(lambda) {
        return function() {
          return -Math.log1p(-source()) / lambda;
        };
      }

      randomExponential.source = sourceRandomExponential;

      return randomExponential;
    })(defaultSource);

    var pareto = (function sourceRandomPareto(source) {
      function randomPareto(alpha) {
        if ((alpha = +alpha) < 0) throw new RangeError("invalid alpha");
        alpha = 1 / -alpha;
        return function() {
          return Math.pow(1 - source(), alpha);
        };
      }

      randomPareto.source = sourceRandomPareto;

      return randomPareto;
    })(defaultSource);

    var bernoulli = (function sourceRandomBernoulli(source) {
      function randomBernoulli(p) {
        if ((p = +p) < 0 || p > 1) throw new RangeError("invalid p");
        return function() {
          return Math.floor(source() + p);
        };
      }

      randomBernoulli.source = sourceRandomBernoulli;

      return randomBernoulli;
    })(defaultSource);

    var geometric = (function sourceRandomGeometric(source) {
      function randomGeometric(p) {
        if ((p = +p) < 0 || p > 1) throw new RangeError("invalid p");
        if (p === 0) return () => Infinity;
        if (p === 1) return () => 1;
        p = Math.log1p(-p);
        return function() {
          return 1 + Math.floor(Math.log1p(-source()) / p);
        };
      }

      randomGeometric.source = sourceRandomGeometric;

      return randomGeometric;
    })(defaultSource);

    var gamma = (function sourceRandomGamma(source) {
      var randomNormal = normal.source(source)();

      function randomGamma(k, theta) {
        if ((k = +k) < 0) throw new RangeError("invalid k");
        // degenerate distribution if k === 0
        if (k === 0) return () => 0;
        theta = theta == null ? 1 : +theta;
        // exponential distribution if k === 1
        if (k === 1) return () => -Math.log1p(-source()) * theta;

        var d = (k < 1 ? k + 1 : k) - 1 / 3,
            c = 1 / (3 * Math.sqrt(d)),
            multiplier = k < 1 ? () => Math.pow(source(), 1 / k) : () => 1;
        return function() {
          do {
            do {
              var x = randomNormal(),
                  v = 1 + c * x;
            } while (v <= 0);
            v *= v * v;
            var u = 1 - source();
          } while (u >= 1 - 0.0331 * x * x * x * x && Math.log(u) >= 0.5 * x * x + d * (1 - v + Math.log(v)));
          return d * v * multiplier() * theta;
        };
      }

      randomGamma.source = sourceRandomGamma;

      return randomGamma;
    })(defaultSource);

    var beta = (function sourceRandomBeta(source) {
      var G = gamma.source(source);

      function randomBeta(alpha, beta) {
        var X = G(alpha),
            Y = G(beta);
        return function() {
          var x = X();
          return x === 0 ? 0 : x / (x + Y());
        };
      }

      randomBeta.source = sourceRandomBeta;

      return randomBeta;
    })(defaultSource);

    var binomial = (function sourceRandomBinomial(source) {
      var G = geometric.source(source),
          B = beta.source(source);

      function randomBinomial(n, p) {
        n = +n;
        if ((p = +p) >= 1) return () => n;
        if (p <= 0) return () => 0;
        return function() {
          var acc = 0, nn = n, pp = p;
          while (nn * pp > 16 && nn * (1 - pp) > 16) {
            var i = Math.floor((nn + 1) * pp),
                y = B(i, nn - i + 1)();
            if (y <= pp) {
              acc += i;
              nn -= i;
              pp = (pp - y) / (1 - y);
            } else {
              nn = i - 1;
              pp /= y;
            }
          }
          var sign = pp < 0.5,
              pFinal = sign ? pp : 1 - pp,
              g = G(pFinal);
          for (var s = g(), k = 0; s <= nn; ++k) s += g();
          return acc + (sign ? k : nn - k);
        };
      }

      randomBinomial.source = sourceRandomBinomial;

      return randomBinomial;
    })(defaultSource);

    var weibull = (function sourceRandomWeibull(source) {
      function randomWeibull(k, a, b) {
        var outerFunc;
        if ((k = +k) === 0) {
          outerFunc = x => -Math.log(x);
        } else {
          k = 1 / k;
          outerFunc = x => Math.pow(x, k);
        }
        a = a == null ? 0 : +a;
        b = b == null ? 1 : +b;
        return function() {
          return a + b * outerFunc(-Math.log1p(-source()));
        };
      }

      randomWeibull.source = sourceRandomWeibull;

      return randomWeibull;
    })(defaultSource);

    var cauchy = (function sourceRandomCauchy(source) {
      function randomCauchy(a, b) {
        a = a == null ? 0 : +a;
        b = b == null ? 1 : +b;
        return function() {
          return a + b * Math.tan(Math.PI * source());
        };
      }

      randomCauchy.source = sourceRandomCauchy;

      return randomCauchy;
    })(defaultSource);

    var logistic = (function sourceRandomLogistic(source) {
      function randomLogistic(a, b) {
        a = a == null ? 0 : +a;
        b = b == null ? 1 : +b;
        return function() {
          var u = source();
          return a + b * Math.log(u / (1 - u));
        };
      }

      randomLogistic.source = sourceRandomLogistic;

      return randomLogistic;
    })(defaultSource);

    var poisson = (function sourceRandomPoisson(source) {
      var G = gamma.source(source),
          B = binomial.source(source);

      function randomPoisson(lambda) {
        return function() {
          var acc = 0, l = lambda;
          while (l > 16) {
            var n = Math.floor(0.875 * l),
                t = G(n)();
            if (t > l) return acc + B(n - 1, l / t)();
            acc += n;
            l -= t;
          }
          for (var s = -Math.log1p(-source()), k = 0; s <= l; ++k) s -= Math.log1p(-source());
          return acc + k;
        };
      }

      randomPoisson.source = sourceRandomPoisson;

      return randomPoisson;
    })(defaultSource);

    // https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use
    const mul = 0x19660D;
    const inc = 0x3C6EF35F;
    const eps = 1 / 0x100000000;

    function lcg(seed = Math.random()) {
      let state = (0 <= seed && seed < 1 ? seed / eps : Math.abs(seed)) | 0;
      return () => (state = mul * state + inc | 0, eps * (state >>> 0));
    }

    function initRange(domain, range) {
      switch (arguments.length) {
        case 0: break;
        case 1: this.range(domain); break;
        default: this.range(range).domain(domain); break;
      }
      return this;
    }

    function initInterpolator(domain, interpolator) {
      switch (arguments.length) {
        case 0: break;
        case 1: {
          if (typeof domain === "function") this.interpolator(domain);
          else this.range(domain);
          break;
        }
        default: {
          this.domain(domain);
          if (typeof interpolator === "function") this.interpolator(interpolator);
          else this.range(interpolator);
          break;
        }
      }
      return this;
    }

    const implicit = Symbol("implicit");

    function ordinal() {
      var index = new Map(),
          domain = [],
          range = [],
          unknown = implicit;

      function scale(d) {
        var key = d + "", i = index.get(key);
        if (!i) {
          if (unknown !== implicit) return unknown;
          index.set(key, i = domain.push(d));
        }
        return range[(i - 1) % range.length];
      }

      scale.domain = function(_) {
        if (!arguments.length) return domain.slice();
        domain = [], index = new Map();
        for (const value of _) {
          const key = value + "";
          if (index.has(key)) continue;
          index.set(key, domain.push(value));
        }
        return scale;
      };

      scale.range = function(_) {
        return arguments.length ? (range = Array.from(_), scale) : range.slice();
      };

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };

      scale.copy = function() {
        return ordinal(domain, range).unknown(unknown);
      };

      initRange.apply(scale, arguments);

      return scale;
    }

    function band() {
      var scale = ordinal().unknown(undefined),
          domain = scale.domain,
          ordinalRange = scale.range,
          r0 = 0,
          r1 = 1,
          step,
          bandwidth,
          round = false,
          paddingInner = 0,
          paddingOuter = 0,
          align = 0.5;

      delete scale.unknown;

      function rescale() {
        var n = domain().length,
            reverse = r1 < r0,
            start = reverse ? r1 : r0,
            stop = reverse ? r0 : r1;
        step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
        if (round) step = Math.floor(step);
        start += (stop - start - step * (n - paddingInner)) * align;
        bandwidth = step * (1 - paddingInner);
        if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
        var values = sequence(n).map(function(i) { return start + step * i; });
        return ordinalRange(reverse ? values.reverse() : values);
      }

      scale.domain = function(_) {
        return arguments.length ? (domain(_), rescale()) : domain();
      };

      scale.range = function(_) {
        return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
      };

      scale.rangeRound = function(_) {
        return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();
      };

      scale.bandwidth = function() {
        return bandwidth;
      };

      scale.step = function() {
        return step;
      };

      scale.round = function(_) {
        return arguments.length ? (round = !!_, rescale()) : round;
      };

      scale.padding = function(_) {
        return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
      };

      scale.paddingInner = function(_) {
        return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
      };

      scale.paddingOuter = function(_) {
        return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
      };

      scale.align = function(_) {
        return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
      };

      scale.copy = function() {
        return band(domain(), [r0, r1])
            .round(round)
            .paddingInner(paddingInner)
            .paddingOuter(paddingOuter)
            .align(align);
      };

      return initRange.apply(rescale(), arguments);
    }

    function pointish(scale) {
      var copy = scale.copy;

      scale.padding = scale.paddingOuter;
      delete scale.paddingInner;
      delete scale.paddingOuter;

      scale.copy = function() {
        return pointish(copy());
      };

      return scale;
    }

    function point$4() {
      return pointish(band.apply(null, arguments).paddingInner(1));
    }

    function constants(x) {
      return function() {
        return x;
      };
    }

    function number$1(x) {
      return +x;
    }

    var unit = [0, 1];

    function identity$3(x) {
      return x;
    }

    function normalize(a, b) {
      return (b -= (a = +a))
          ? function(x) { return (x - a) / b; }
          : constants(isNaN(b) ? NaN : 0.5);
    }

    function clamper(a, b) {
      var t;
      if (a > b) t = a, a = b, b = t;
      return function(x) { return Math.max(a, Math.min(b, x)); };
    }

    // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
    // interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].
    function bimap(domain, range, interpolate) {
      var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
      if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);
      else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
      return function(x) { return r0(d0(x)); };
    }

    function polymap(domain, range, interpolate) {
      var j = Math.min(domain.length, range.length) - 1,
          d = new Array(j),
          r = new Array(j),
          i = -1;

      // Reverse descending domains.
      if (domain[j] < domain[0]) {
        domain = domain.slice().reverse();
        range = range.slice().reverse();
      }

      while (++i < j) {
        d[i] = normalize(domain[i], domain[i + 1]);
        r[i] = interpolate(range[i], range[i + 1]);
      }

      return function(x) {
        var i = bisect(domain, x, 1, j) - 1;
        return r[i](d[i](x));
      };
    }

    function copy$1(source, target) {
      return target
          .domain(source.domain())
          .range(source.range())
          .interpolate(source.interpolate())
          .clamp(source.clamp())
          .unknown(source.unknown());
    }

    function transformer$2() {
      var domain = unit,
          range = unit,
          interpolate = interpolate$2,
          transform,
          untransform,
          unknown,
          clamp = identity$3,
          piecewise,
          output,
          input;

      function rescale() {
        var n = Math.min(domain.length, range.length);
        if (clamp !== identity$3) clamp = clamper(domain[0], domain[n - 1]);
        piecewise = n > 2 ? polymap : bimap;
        output = input = null;
        return scale;
      }

      function scale(x) {
        return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
      }

      scale.invert = function(y) {
        return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));
      };

      scale.domain = function(_) {
        return arguments.length ? (domain = Array.from(_, number$1), rescale()) : domain.slice();
      };

      scale.range = function(_) {
        return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
      };

      scale.rangeRound = function(_) {
        return range = Array.from(_), interpolate = interpolateRound, rescale();
      };

      scale.clamp = function(_) {
        return arguments.length ? (clamp = _ ? true : identity$3, rescale()) : clamp !== identity$3;
      };

      scale.interpolate = function(_) {
        return arguments.length ? (interpolate = _, rescale()) : interpolate;
      };

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };

      return function(t, u) {
        transform = t, untransform = u;
        return rescale();
      };
    }

    function continuous() {
      return transformer$2()(identity$3, identity$3);
    }

    function tickFormat(start, stop, count, specifier) {
      var step = tickStep(start, stop, count),
          precision;
      specifier = formatSpecifier(specifier == null ? ",f" : specifier);
      switch (specifier.type) {
        case "s": {
          var value = Math.max(Math.abs(start), Math.abs(stop));
          if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;
          return formatPrefix(specifier, value);
        }
        case "":
        case "e":
        case "g":
        case "p":
        case "r": {
          if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
          break;
        }
        case "f":
        case "%": {
          if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === "%") * 2;
          break;
        }
      }
      return format(specifier);
    }

    function linearish(scale) {
      var domain = scale.domain;

      scale.ticks = function(count) {
        var d = domain();
        return ticks(d[0], d[d.length - 1], count == null ? 10 : count);
      };

      scale.tickFormat = function(count, specifier) {
        var d = domain();
        return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
      };

      scale.nice = function(count) {
        if (count == null) count = 10;

        var d = domain();
        var i0 = 0;
        var i1 = d.length - 1;
        var start = d[i0];
        var stop = d[i1];
        var prestep;
        var step;
        var maxIter = 10;

        if (stop < start) {
          step = start, start = stop, stop = step;
          step = i0, i0 = i1, i1 = step;
        }
        
        while (maxIter-- > 0) {
          step = tickIncrement(start, stop, count);
          if (step === prestep) {
            d[i0] = start;
            d[i1] = stop;
            return domain(d);
          } else if (step > 0) {
            start = Math.floor(start / step) * step;
            stop = Math.ceil(stop / step) * step;
          } else if (step < 0) {
            start = Math.ceil(start * step) / step;
            stop = Math.floor(stop * step) / step;
          } else {
            break;
          }
          prestep = step;
        }

        return scale;
      };

      return scale;
    }

    function linear() {
      var scale = continuous();

      scale.copy = function() {
        return copy$1(scale, linear());
      };

      initRange.apply(scale, arguments);

      return linearish(scale);
    }

    function identity$2(domain) {
      var unknown;

      function scale(x) {
        return x == null || isNaN(x = +x) ? unknown : x;
      }

      scale.invert = scale;

      scale.domain = scale.range = function(_) {
        return arguments.length ? (domain = Array.from(_, number$1), scale) : domain.slice();
      };

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };

      scale.copy = function() {
        return identity$2(domain).unknown(unknown);
      };

      domain = arguments.length ? Array.from(domain, number$1) : [0, 1];

      return linearish(scale);
    }

    function nice(domain, interval) {
      domain = domain.slice();

      var i0 = 0,
          i1 = domain.length - 1,
          x0 = domain[i0],
          x1 = domain[i1],
          t;

      if (x1 < x0) {
        t = i0, i0 = i1, i1 = t;
        t = x0, x0 = x1, x1 = t;
      }

      domain[i0] = interval.floor(x0);
      domain[i1] = interval.ceil(x1);
      return domain;
    }

    function transformLog(x) {
      return Math.log(x);
    }

    function transformExp(x) {
      return Math.exp(x);
    }

    function transformLogn(x) {
      return -Math.log(-x);
    }

    function transformExpn(x) {
      return -Math.exp(-x);
    }

    function pow10(x) {
      return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
    }

    function powp(base) {
      return base === 10 ? pow10
          : base === Math.E ? Math.exp
          : function(x) { return Math.pow(base, x); };
    }

    function logp(base) {
      return base === Math.E ? Math.log
          : base === 10 && Math.log10
          || base === 2 && Math.log2
          || (base = Math.log(base), function(x) { return Math.log(x) / base; });
    }

    function reflect(f) {
      return function(x) {
        return -f(-x);
      };
    }

    function loggish(transform) {
      var scale = transform(transformLog, transformExp),
          domain = scale.domain,
          base = 10,
          logs,
          pows;

      function rescale() {
        logs = logp(base), pows = powp(base);
        if (domain()[0] < 0) {
          logs = reflect(logs), pows = reflect(pows);
          transform(transformLogn, transformExpn);
        } else {
          transform(transformLog, transformExp);
        }
        return scale;
      }

      scale.base = function(_) {
        return arguments.length ? (base = +_, rescale()) : base;
      };

      scale.domain = function(_) {
        return arguments.length ? (domain(_), rescale()) : domain();
      };

      scale.ticks = function(count) {
        var d = domain(),
            u = d[0],
            v = d[d.length - 1],
            r;

        if (r = v < u) i = u, u = v, v = i;

        var i = logs(u),
            j = logs(v),
            p,
            k,
            t,
            n = count == null ? 10 : +count,
            z = [];

        if (!(base % 1) && j - i < n) {
          i = Math.floor(i), j = Math.ceil(j);
          if (u > 0) for (; i <= j; ++i) {
            for (k = 1, p = pows(i); k < base; ++k) {
              t = p * k;
              if (t < u) continue;
              if (t > v) break;
              z.push(t);
            }
          } else for (; i <= j; ++i) {
            for (k = base - 1, p = pows(i); k >= 1; --k) {
              t = p * k;
              if (t < u) continue;
              if (t > v) break;
              z.push(t);
            }
          }
          if (z.length * 2 < n) z = ticks(u, v, n);
        } else {
          z = ticks(i, j, Math.min(j - i, n)).map(pows);
        }

        return r ? z.reverse() : z;
      };

      scale.tickFormat = function(count, specifier) {
        if (specifier == null) specifier = base === 10 ? ".0e" : ",";
        if (typeof specifier !== "function") specifier = format(specifier);
        if (count === Infinity) return specifier;
        if (count == null) count = 10;
        var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?
        return function(d) {
          var i = d / pows(Math.round(logs(d)));
          if (i * base < base - 0.5) i *= base;
          return i <= k ? specifier(d) : "";
        };
      };

      scale.nice = function() {
        return domain(nice(domain(), {
          floor: function(x) { return pows(Math.floor(logs(x))); },
          ceil: function(x) { return pows(Math.ceil(logs(x))); }
        }));
      };

      return scale;
    }

    function log() {
      var scale = loggish(transformer$2()).domain([1, 10]);

      scale.copy = function() {
        return copy$1(scale, log()).base(scale.base());
      };

      initRange.apply(scale, arguments);

      return scale;
    }

    function transformSymlog(c) {
      return function(x) {
        return Math.sign(x) * Math.log1p(Math.abs(x / c));
      };
    }

    function transformSymexp(c) {
      return function(x) {
        return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
      };
    }

    function symlogish(transform) {
      var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));

      scale.constant = function(_) {
        return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
      };

      return linearish(scale);
    }

    function symlog() {
      var scale = symlogish(transformer$2());

      scale.copy = function() {
        return copy$1(scale, symlog()).constant(scale.constant());
      };

      return initRange.apply(scale, arguments);
    }

    function transformPow(exponent) {
      return function(x) {
        return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
      };
    }

    function transformSqrt(x) {
      return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
    }

    function transformSquare(x) {
      return x < 0 ? -x * x : x * x;
    }

    function powish(transform) {
      var scale = transform(identity$3, identity$3),
          exponent = 1;

      function rescale() {
        return exponent === 1 ? transform(identity$3, identity$3)
            : exponent === 0.5 ? transform(transformSqrt, transformSquare)
            : transform(transformPow(exponent), transformPow(1 / exponent));
      }

      scale.exponent = function(_) {
        return arguments.length ? (exponent = +_, rescale()) : exponent;
      };

      return linearish(scale);
    }

    function pow() {
      var scale = powish(transformer$2());

      scale.copy = function() {
        return copy$1(scale, pow()).exponent(scale.exponent());
      };

      initRange.apply(scale, arguments);

      return scale;
    }

    function sqrt$1() {
      return pow.apply(null, arguments).exponent(0.5);
    }

    function square$1(x) {
      return Math.sign(x) * x * x;
    }

    function unsquare(x) {
      return Math.sign(x) * Math.sqrt(Math.abs(x));
    }

    function radial() {
      var squared = continuous(),
          range = [0, 1],
          round = false,
          unknown;

      function scale(x) {
        var y = unsquare(squared(x));
        return isNaN(y) ? unknown : round ? Math.round(y) : y;
      }

      scale.invert = function(y) {
        return squared.invert(square$1(y));
      };

      scale.domain = function(_) {
        return arguments.length ? (squared.domain(_), scale) : squared.domain();
      };

      scale.range = function(_) {
        return arguments.length ? (squared.range((range = Array.from(_, number$1)).map(square$1)), scale) : range.slice();
      };

      scale.rangeRound = function(_) {
        return scale.range(_).round(true);
      };

      scale.round = function(_) {
        return arguments.length ? (round = !!_, scale) : round;
      };

      scale.clamp = function(_) {
        return arguments.length ? (squared.clamp(_), scale) : squared.clamp();
      };

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };

      scale.copy = function() {
        return radial(squared.domain(), range)
            .round(round)
            .clamp(squared.clamp())
            .unknown(unknown);
      };

      initRange.apply(scale, arguments);

      return linearish(scale);
    }

    function quantile() {
      var domain = [],
          range = [],
          thresholds = [],
          unknown;

      function rescale() {
        var i = 0, n = Math.max(1, range.length);
        thresholds = new Array(n - 1);
        while (++i < n) thresholds[i - 1] = quantileSorted(domain, i / n);
        return scale;
      }

      function scale(x) {
        return x == null || isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];
      }

      scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return i < 0 ? [NaN, NaN] : [
          i > 0 ? thresholds[i - 1] : domain[0],
          i < thresholds.length ? thresholds[i] : domain[domain.length - 1]
        ];
      };

      scale.domain = function(_) {
        if (!arguments.length) return domain.slice();
        domain = [];
        for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);
        domain.sort(ascending$3);
        return rescale();
      };

      scale.range = function(_) {
        return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
      };

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };

      scale.quantiles = function() {
        return thresholds.slice();
      };

      scale.copy = function() {
        return quantile()
            .domain(domain)
            .range(range)
            .unknown(unknown);
      };

      return initRange.apply(scale, arguments);
    }

    function quantize() {
      var x0 = 0,
          x1 = 1,
          n = 1,
          domain = [0.5],
          range = [0, 1],
          unknown;

      function scale(x) {
        return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;
      }

      function rescale() {
        var i = -1;
        domain = new Array(n);
        while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
        return scale;
      }

      scale.domain = function(_) {
        return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];
      };

      scale.range = function(_) {
        return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();
      };

      scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return i < 0 ? [NaN, NaN]
            : i < 1 ? [x0, domain[0]]
            : i >= n ? [domain[n - 1], x1]
            : [domain[i - 1], domain[i]];
      };

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : scale;
      };

      scale.thresholds = function() {
        return domain.slice();
      };

      scale.copy = function() {
        return quantize()
            .domain([x0, x1])
            .range(range)
            .unknown(unknown);
      };

      return initRange.apply(linearish(scale), arguments);
    }

    function threshold() {
      var domain = [0.5],
          range = [0, 1],
          unknown,
          n = 1;

      function scale(x) {
        return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;
      }

      scale.domain = function(_) {
        return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
      };

      scale.range = function(_) {
        return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
      };

      scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return [domain[i - 1], domain[i]];
      };

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };

      scale.copy = function() {
        return threshold()
            .domain(domain)
            .range(range)
            .unknown(unknown);
      };

      return initRange.apply(scale, arguments);
    }

    var t0 = new Date,
        t1 = new Date;

    function newInterval(floori, offseti, count, field) {

      function interval(date) {
        return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;
      }

      interval.floor = function(date) {
        return floori(date = new Date(+date)), date;
      };

      interval.ceil = function(date) {
        return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
      };

      interval.round = function(date) {
        var d0 = interval(date),
            d1 = interval.ceil(date);
        return date - d0 < d1 - date ? d0 : d1;
      };

      interval.offset = function(date, step) {
        return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
      };

      interval.range = function(start, stop, step) {
        var range = [], previous;
        start = interval.ceil(start);
        step = step == null ? 1 : Math.floor(step);
        if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
        do range.push(previous = new Date(+start)), offseti(start, step), floori(start);
        while (previous < start && start < stop);
        return range;
      };

      interval.filter = function(test) {
        return newInterval(function(date) {
          if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
        }, function(date, step) {
          if (date >= date) {
            if (step < 0) while (++step <= 0) {
              while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty
            } else while (--step >= 0) {
              while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty
            }
          }
        });
      };

      if (count) {
        interval.count = function(start, end) {
          t0.setTime(+start), t1.setTime(+end);
          floori(t0), floori(t1);
          return Math.floor(count(t0, t1));
        };

        interval.every = function(step) {
          step = Math.floor(step);
          return !isFinite(step) || !(step > 0) ? null
              : !(step > 1) ? interval
              : interval.filter(field
                  ? function(d) { return field(d) % step === 0; }
                  : function(d) { return interval.count(0, d) % step === 0; });
        };
      }

      return interval;
    }

    var millisecond = newInterval(function() {
      // noop
    }, function(date, step) {
      date.setTime(+date + step);
    }, function(start, end) {
      return end - start;
    });

    // An optimized implementation for this simple case.
    millisecond.every = function(k) {
      k = Math.floor(k);
      if (!isFinite(k) || !(k > 0)) return null;
      if (!(k > 1)) return millisecond;
      return newInterval(function(date) {
        date.setTime(Math.floor(date / k) * k);
      }, function(date, step) {
        date.setTime(+date + step * k);
      }, function(start, end) {
        return (end - start) / k;
      });
    };

    var millisecond$1 = millisecond;
    var milliseconds = millisecond.range;

    const durationSecond = 1000;
    const durationMinute = durationSecond * 60;
    const durationHour = durationMinute * 60;
    const durationDay = durationHour * 24;
    const durationWeek = durationDay * 7;
    const durationMonth = durationDay * 30;
    const durationYear = durationDay * 365;

    var second = newInterval(function(date) {
      date.setTime(date - date.getMilliseconds());
    }, function(date, step) {
      date.setTime(+date + step * durationSecond);
    }, function(start, end) {
      return (end - start) / durationSecond;
    }, function(date) {
      return date.getUTCSeconds();
    });

    var utcSecond = second;
    var seconds = second.range;

    var minute = newInterval(function(date) {
      date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);
    }, function(date, step) {
      date.setTime(+date + step * durationMinute);
    }, function(start, end) {
      return (end - start) / durationMinute;
    }, function(date) {
      return date.getMinutes();
    });

    var timeMinute = minute;
    var minutes = minute.range;

    var hour = newInterval(function(date) {
      date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);
    }, function(date, step) {
      date.setTime(+date + step * durationHour);
    }, function(start, end) {
      return (end - start) / durationHour;
    }, function(date) {
      return date.getHours();
    });

    var timeHour = hour;
    var hours = hour.range;

    var day = newInterval(
      date => date.setHours(0, 0, 0, 0),
      (date, step) => date.setDate(date.getDate() + step),
      (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,
      date => date.getDate() - 1
    );

    var timeDay = day;
    var days = day.range;

    function weekday(i) {
      return newInterval(function(date) {
        date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
        date.setHours(0, 0, 0, 0);
      }, function(date, step) {
        date.setDate(date.getDate() + step * 7);
      }, function(start, end) {
        return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;
      });
    }

    var sunday = weekday(0);
    var monday = weekday(1);
    var tuesday = weekday(2);
    var wednesday = weekday(3);
    var thursday = weekday(4);
    var friday = weekday(5);
    var saturday = weekday(6);

    var sundays = sunday.range;
    var mondays = monday.range;
    var tuesdays = tuesday.range;
    var wednesdays = wednesday.range;
    var thursdays = thursday.range;
    var fridays = friday.range;
    var saturdays = saturday.range;

    var month = newInterval(function(date) {
      date.setDate(1);
      date.setHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setMonth(date.getMonth() + step);
    }, function(start, end) {
      return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
    }, function(date) {
      return date.getMonth();
    });

    var timeMonth = month;
    var months = month.range;

    var year = newInterval(function(date) {
      date.setMonth(0, 1);
      date.setHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setFullYear(date.getFullYear() + step);
    }, function(start, end) {
      return end.getFullYear() - start.getFullYear();
    }, function(date) {
      return date.getFullYear();
    });

    // An optimized implementation for this simple case.
    year.every = function(k) {
      return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
        date.setFullYear(Math.floor(date.getFullYear() / k) * k);
        date.setMonth(0, 1);
        date.setHours(0, 0, 0, 0);
      }, function(date, step) {
        date.setFullYear(date.getFullYear() + step * k);
      });
    };

    var timeYear = year;
    var years = year.range;

    var utcMinute = newInterval(function(date) {
      date.setUTCSeconds(0, 0);
    }, function(date, step) {
      date.setTime(+date + step * durationMinute);
    }, function(start, end) {
      return (end - start) / durationMinute;
    }, function(date) {
      return date.getUTCMinutes();
    });

    var utcMinute$1 = utcMinute;
    var utcMinutes = utcMinute.range;

    var utcHour = newInterval(function(date) {
      date.setUTCMinutes(0, 0, 0);
    }, function(date, step) {
      date.setTime(+date + step * durationHour);
    }, function(start, end) {
      return (end - start) / durationHour;
    }, function(date) {
      return date.getUTCHours();
    });

    var utcHour$1 = utcHour;
    var utcHours = utcHour.range;

    var utcDay = newInterval(function(date) {
      date.setUTCHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setUTCDate(date.getUTCDate() + step);
    }, function(start, end) {
      return (end - start) / durationDay;
    }, function(date) {
      return date.getUTCDate() - 1;
    });

    var utcDay$1 = utcDay;
    var utcDays = utcDay.range;

    function utcWeekday(i) {
      return newInterval(function(date) {
        date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
        date.setUTCHours(0, 0, 0, 0);
      }, function(date, step) {
        date.setUTCDate(date.getUTCDate() + step * 7);
      }, function(start, end) {
        return (end - start) / durationWeek;
      });
    }

    var utcSunday = utcWeekday(0);
    var utcMonday = utcWeekday(1);
    var utcTuesday = utcWeekday(2);
    var utcWednesday = utcWeekday(3);
    var utcThursday = utcWeekday(4);
    var utcFriday = utcWeekday(5);
    var utcSaturday = utcWeekday(6);

    var utcSundays = utcSunday.range;
    var utcMondays = utcMonday.range;
    var utcTuesdays = utcTuesday.range;
    var utcWednesdays = utcWednesday.range;
    var utcThursdays = utcThursday.range;
    var utcFridays = utcFriday.range;
    var utcSaturdays = utcSaturday.range;

    var utcMonth = newInterval(function(date) {
      date.setUTCDate(1);
      date.setUTCHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setUTCMonth(date.getUTCMonth() + step);
    }, function(start, end) {
      return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
    }, function(date) {
      return date.getUTCMonth();
    });

    var utcMonth$1 = utcMonth;
    var utcMonths = utcMonth.range;

    var utcYear = newInterval(function(date) {
      date.setUTCMonth(0, 1);
      date.setUTCHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setUTCFullYear(date.getUTCFullYear() + step);
    }, function(start, end) {
      return end.getUTCFullYear() - start.getUTCFullYear();
    }, function(date) {
      return date.getUTCFullYear();
    });

    // An optimized implementation for this simple case.
    utcYear.every = function(k) {
      return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
        date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
        date.setUTCMonth(0, 1);
        date.setUTCHours(0, 0, 0, 0);
      }, function(date, step) {
        date.setUTCFullYear(date.getUTCFullYear() + step * k);
      });
    };

    var utcYear$1 = utcYear;
    var utcYears = utcYear.range;

    function ticker(year, month, week, day, hour, minute) {

      const tickIntervals = [
        [utcSecond,  1,      durationSecond],
        [utcSecond,  5,  5 * durationSecond],
        [utcSecond, 15, 15 * durationSecond],
        [utcSecond, 30, 30 * durationSecond],
        [minute,  1,      durationMinute],
        [minute,  5,  5 * durationMinute],
        [minute, 15, 15 * durationMinute],
        [minute, 30, 30 * durationMinute],
        [  hour,  1,      durationHour  ],
        [  hour,  3,  3 * durationHour  ],
        [  hour,  6,  6 * durationHour  ],
        [  hour, 12, 12 * durationHour  ],
        [   day,  1,      durationDay   ],
        [   day,  2,  2 * durationDay   ],
        [  week,  1,      durationWeek  ],
        [ month,  1,      durationMonth ],
        [ month,  3,  3 * durationMonth ],
        [  year,  1,      durationYear  ]
      ];

      function ticks(start, stop, count) {
        const reverse = stop < start;
        if (reverse) [start, stop] = [stop, start];
        const interval = count && typeof count.range === "function" ? count : tickInterval(start, stop, count);
        const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop
        return reverse ? ticks.reverse() : ticks;
      }

      function tickInterval(start, stop, count) {
        const target = Math.abs(stop - start) / count;
        const i = bisector(([,, step]) => step).right(tickIntervals, target);
        if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));
        if (i === 0) return millisecond$1.every(Math.max(tickStep(start, stop, count), 1));
        const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
        return t.every(step);
      }

      return [ticks, tickInterval];
    }

    const [utcTicks, utcTickInterval] = ticker(utcYear$1, utcMonth$1, utcSunday, utcDay$1, utcHour$1, utcMinute$1);
    const [timeTicks, timeTickInterval] = ticker(timeYear, timeMonth, sunday, timeDay, timeHour, timeMinute);

    function localDate(d) {
      if (0 <= d.y && d.y < 100) {
        var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
        date.setFullYear(d.y);
        return date;
      }
      return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
    }

    function utcDate(d) {
      if (0 <= d.y && d.y < 100) {
        var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
        date.setUTCFullYear(d.y);
        return date;
      }
      return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
    }

    function newDate(y, m, d) {
      return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};
    }

    function formatLocale(locale) {
      var locale_dateTime = locale.dateTime,
          locale_date = locale.date,
          locale_time = locale.time,
          locale_periods = locale.periods,
          locale_weekdays = locale.days,
          locale_shortWeekdays = locale.shortDays,
          locale_months = locale.months,
          locale_shortMonths = locale.shortMonths;

      var periodRe = formatRe(locale_periods),
          periodLookup = formatLookup(locale_periods),
          weekdayRe = formatRe(locale_weekdays),
          weekdayLookup = formatLookup(locale_weekdays),
          shortWeekdayRe = formatRe(locale_shortWeekdays),
          shortWeekdayLookup = formatLookup(locale_shortWeekdays),
          monthRe = formatRe(locale_months),
          monthLookup = formatLookup(locale_months),
          shortMonthRe = formatRe(locale_shortMonths),
          shortMonthLookup = formatLookup(locale_shortMonths);

      var formats = {
        "a": formatShortWeekday,
        "A": formatWeekday,
        "b": formatShortMonth,
        "B": formatMonth,
        "c": null,
        "d": formatDayOfMonth,
        "e": formatDayOfMonth,
        "f": formatMicroseconds,
        "g": formatYearISO,
        "G": formatFullYearISO,
        "H": formatHour24,
        "I": formatHour12,
        "j": formatDayOfYear,
        "L": formatMilliseconds,
        "m": formatMonthNumber,
        "M": formatMinutes,
        "p": formatPeriod,
        "q": formatQuarter,
        "Q": formatUnixTimestamp,
        "s": formatUnixTimestampSeconds,
        "S": formatSeconds,
        "u": formatWeekdayNumberMonday,
        "U": formatWeekNumberSunday,
        "V": formatWeekNumberISO,
        "w": formatWeekdayNumberSunday,
        "W": formatWeekNumberMonday,
        "x": null,
        "X": null,
        "y": formatYear,
        "Y": formatFullYear,
        "Z": formatZone,
        "%": formatLiteralPercent
      };

      var utcFormats = {
        "a": formatUTCShortWeekday,
        "A": formatUTCWeekday,
        "b": formatUTCShortMonth,
        "B": formatUTCMonth,
        "c": null,
        "d": formatUTCDayOfMonth,
        "e": formatUTCDayOfMonth,
        "f": formatUTCMicroseconds,
        "g": formatUTCYearISO,
        "G": formatUTCFullYearISO,
        "H": formatUTCHour24,
        "I": formatUTCHour12,
        "j": formatUTCDayOfYear,
        "L": formatUTCMilliseconds,
        "m": formatUTCMonthNumber,
        "M": formatUTCMinutes,
        "p": formatUTCPeriod,
        "q": formatUTCQuarter,
        "Q": formatUnixTimestamp,
        "s": formatUnixTimestampSeconds,
        "S": formatUTCSeconds,
        "u": formatUTCWeekdayNumberMonday,
        "U": formatUTCWeekNumberSunday,
        "V": formatUTCWeekNumberISO,
        "w": formatUTCWeekdayNumberSunday,
        "W": formatUTCWeekNumberMonday,
        "x": null,
        "X": null,
        "y": formatUTCYear,
        "Y": formatUTCFullYear,
        "Z": formatUTCZone,
        "%": formatLiteralPercent
      };

      var parses = {
        "a": parseShortWeekday,
        "A": parseWeekday,
        "b": parseShortMonth,
        "B": parseMonth,
        "c": parseLocaleDateTime,
        "d": parseDayOfMonth,
        "e": parseDayOfMonth,
        "f": parseMicroseconds,
        "g": parseYear,
        "G": parseFullYear,
        "H": parseHour24,
        "I": parseHour24,
        "j": parseDayOfYear,
        "L": parseMilliseconds,
        "m": parseMonthNumber,
        "M": parseMinutes,
        "p": parsePeriod,
        "q": parseQuarter,
        "Q": parseUnixTimestamp,
        "s": parseUnixTimestampSeconds,
        "S": parseSeconds,
        "u": parseWeekdayNumberMonday,
        "U": parseWeekNumberSunday,
        "V": parseWeekNumberISO,
        "w": parseWeekdayNumberSunday,
        "W": parseWeekNumberMonday,
        "x": parseLocaleDate,
        "X": parseLocaleTime,
        "y": parseYear,
        "Y": parseFullYear,
        "Z": parseZone,
        "%": parseLiteralPercent
      };

      // These recursive directive definitions must be deferred.
      formats.x = newFormat(locale_date, formats);
      formats.X = newFormat(locale_time, formats);
      formats.c = newFormat(locale_dateTime, formats);
      utcFormats.x = newFormat(locale_date, utcFormats);
      utcFormats.X = newFormat(locale_time, utcFormats);
      utcFormats.c = newFormat(locale_dateTime, utcFormats);

      function newFormat(specifier, formats) {
        return function(date) {
          var string = [],
              i = -1,
              j = 0,
              n = specifier.length,
              c,
              pad,
              format;

          if (!(date instanceof Date)) date = new Date(+date);

          while (++i < n) {
            if (specifier.charCodeAt(i) === 37) {
              string.push(specifier.slice(j, i));
              if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);
              else pad = c === "e" ? " " : "0";
              if (format = formats[c]) c = format(date, pad);
              string.push(c);
              j = i + 1;
            }
          }

          string.push(specifier.slice(j, i));
          return string.join("");
        };
      }

      function newParse(specifier, Z) {
        return function(string) {
          var d = newDate(1900, undefined, 1),
              i = parseSpecifier(d, specifier, string += "", 0),
              week, day;
          if (i != string.length) return null;

          // If a UNIX timestamp is specified, return it.
          if ("Q" in d) return new Date(d.Q);
          if ("s" in d) return new Date(d.s * 1000 + ("L" in d ? d.L : 0));

          // If this is utcParse, never use the local timezone.
          if (Z && !("Z" in d)) d.Z = 0;

          // The am-pm flag is 0 for AM, and 1 for PM.
          if ("p" in d) d.H = d.H % 12 + d.p * 12;

          // If the month was not specified, inherit from the quarter.
          if (d.m === undefined) d.m = "q" in d ? d.q : 0;

          // Convert day-of-week and week-of-year to day-of-year.
          if ("V" in d) {
            if (d.V < 1 || d.V > 53) return null;
            if (!("w" in d)) d.w = 1;
            if ("Z" in d) {
              week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();
              week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);
              week = utcDay$1.offset(week, (d.V - 1) * 7);
              d.y = week.getUTCFullYear();
              d.m = week.getUTCMonth();
              d.d = week.getUTCDate() + (d.w + 6) % 7;
            } else {
              week = localDate(newDate(d.y, 0, 1)), day = week.getDay();
              week = day > 4 || day === 0 ? monday.ceil(week) : monday(week);
              week = timeDay.offset(week, (d.V - 1) * 7);
              d.y = week.getFullYear();
              d.m = week.getMonth();
              d.d = week.getDate() + (d.w + 6) % 7;
            }
          } else if ("W" in d || "U" in d) {
            if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
            day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
            d.m = 0;
            d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
          }

          // If a time zone is specified, all fields are interpreted as UTC and then
          // offset according to the specified time zone.
          if ("Z" in d) {
            d.H += d.Z / 100 | 0;
            d.M += d.Z % 100;
            return utcDate(d);
          }

          // Otherwise, all fields are in local time.
          return localDate(d);
        };
      }

      function parseSpecifier(d, specifier, string, j) {
        var i = 0,
            n = specifier.length,
            m = string.length,
            c,
            parse;

        while (i < n) {
          if (j >= m) return -1;
          c = specifier.charCodeAt(i++);
          if (c === 37) {
            c = specifier.charAt(i++);
            parse = parses[c in pads ? specifier.charAt(i++) : c];
            if (!parse || ((j = parse(d, string, j)) < 0)) return -1;
          } else if (c != string.charCodeAt(j++)) {
            return -1;
          }
        }

        return j;
      }

      function parsePeriod(d, string, i) {
        var n = periodRe.exec(string.slice(i));
        return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
      }

      function parseShortWeekday(d, string, i) {
        var n = shortWeekdayRe.exec(string.slice(i));
        return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
      }

      function parseWeekday(d, string, i) {
        var n = weekdayRe.exec(string.slice(i));
        return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
      }

      function parseShortMonth(d, string, i) {
        var n = shortMonthRe.exec(string.slice(i));
        return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
      }

      function parseMonth(d, string, i) {
        var n = monthRe.exec(string.slice(i));
        return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
      }

      function parseLocaleDateTime(d, string, i) {
        return parseSpecifier(d, locale_dateTime, string, i);
      }

      function parseLocaleDate(d, string, i) {
        return parseSpecifier(d, locale_date, string, i);
      }

      function parseLocaleTime(d, string, i) {
        return parseSpecifier(d, locale_time, string, i);
      }

      function formatShortWeekday(d) {
        return locale_shortWeekdays[d.getDay()];
      }

      function formatWeekday(d) {
        return locale_weekdays[d.getDay()];
      }

      function formatShortMonth(d) {
        return locale_shortMonths[d.getMonth()];
      }

      function formatMonth(d) {
        return locale_months[d.getMonth()];
      }

      function formatPeriod(d) {
        return locale_periods[+(d.getHours() >= 12)];
      }

      function formatQuarter(d) {
        return 1 + ~~(d.getMonth() / 3);
      }

      function formatUTCShortWeekday(d) {
        return locale_shortWeekdays[d.getUTCDay()];
      }

      function formatUTCWeekday(d) {
        return locale_weekdays[d.getUTCDay()];
      }

      function formatUTCShortMonth(d) {
        return locale_shortMonths[d.getUTCMonth()];
      }

      function formatUTCMonth(d) {
        return locale_months[d.getUTCMonth()];
      }

      function formatUTCPeriod(d) {
        return locale_periods[+(d.getUTCHours() >= 12)];
      }

      function formatUTCQuarter(d) {
        return 1 + ~~(d.getUTCMonth() / 3);
      }

      return {
        format: function(specifier) {
          var f = newFormat(specifier += "", formats);
          f.toString = function() { return specifier; };
          return f;
        },
        parse: function(specifier) {
          var p = newParse(specifier += "", false);
          p.toString = function() { return specifier; };
          return p;
        },
        utcFormat: function(specifier) {
          var f = newFormat(specifier += "", utcFormats);
          f.toString = function() { return specifier; };
          return f;
        },
        utcParse: function(specifier) {
          var p = newParse(specifier += "", true);
          p.toString = function() { return specifier; };
          return p;
        }
      };
    }

    var pads = {"-": "", "_": " ", "0": "0"},
        numberRe = /^\s*\d+/, // note: ignores next directive
        percentRe = /^%/,
        requoteRe = /[\\^$*+?|[\]().{}]/g;

    function pad(value, fill, width) {
      var sign = value < 0 ? "-" : "",
          string = (sign ? -value : value) + "",
          length = string.length;
      return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
    }

    function requote(s) {
      return s.replace(requoteRe, "\\$&");
    }

    function formatRe(names) {
      return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
    }

    function formatLookup(names) {
      return new Map(names.map((name, i) => [name.toLowerCase(), i]));
    }

    function parseWeekdayNumberSunday(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 1));
      return n ? (d.w = +n[0], i + n[0].length) : -1;
    }

    function parseWeekdayNumberMonday(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 1));
      return n ? (d.u = +n[0], i + n[0].length) : -1;
    }

    function parseWeekNumberSunday(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.U = +n[0], i + n[0].length) : -1;
    }

    function parseWeekNumberISO(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.V = +n[0], i + n[0].length) : -1;
    }

    function parseWeekNumberMonday(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.W = +n[0], i + n[0].length) : -1;
    }

    function parseFullYear(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 4));
      return n ? (d.y = +n[0], i + n[0].length) : -1;
    }

    function parseYear(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
    }

    function parseZone(d, string, i) {
      var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
      return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
    }

    function parseQuarter(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 1));
      return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
    }

    function parseMonthNumber(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
    }

    function parseDayOfMonth(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.d = +n[0], i + n[0].length) : -1;
    }

    function parseDayOfYear(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 3));
      return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
    }

    function parseHour24(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.H = +n[0], i + n[0].length) : -1;
    }

    function parseMinutes(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.M = +n[0], i + n[0].length) : -1;
    }

    function parseSeconds(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.S = +n[0], i + n[0].length) : -1;
    }

    function parseMilliseconds(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 3));
      return n ? (d.L = +n[0], i + n[0].length) : -1;
    }

    function parseMicroseconds(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 6));
      return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
    }

    function parseLiteralPercent(d, string, i) {
      var n = percentRe.exec(string.slice(i, i + 1));
      return n ? i + n[0].length : -1;
    }

    function parseUnixTimestamp(d, string, i) {
      var n = numberRe.exec(string.slice(i));
      return n ? (d.Q = +n[0], i + n[0].length) : -1;
    }

    function parseUnixTimestampSeconds(d, string, i) {
      var n = numberRe.exec(string.slice(i));
      return n ? (d.s = +n[0], i + n[0].length) : -1;
    }

    function formatDayOfMonth(d, p) {
      return pad(d.getDate(), p, 2);
    }

    function formatHour24(d, p) {
      return pad(d.getHours(), p, 2);
    }

    function formatHour12(d, p) {
      return pad(d.getHours() % 12 || 12, p, 2);
    }

    function formatDayOfYear(d, p) {
      return pad(1 + timeDay.count(timeYear(d), d), p, 3);
    }

    function formatMilliseconds(d, p) {
      return pad(d.getMilliseconds(), p, 3);
    }

    function formatMicroseconds(d, p) {
      return formatMilliseconds(d, p) + "000";
    }

    function formatMonthNumber(d, p) {
      return pad(d.getMonth() + 1, p, 2);
    }

    function formatMinutes(d, p) {
      return pad(d.getMinutes(), p, 2);
    }

    function formatSeconds(d, p) {
      return pad(d.getSeconds(), p, 2);
    }

    function formatWeekdayNumberMonday(d) {
      var day = d.getDay();
      return day === 0 ? 7 : day;
    }

    function formatWeekNumberSunday(d, p) {
      return pad(sunday.count(timeYear(d) - 1, d), p, 2);
    }

    function dISO(d) {
      var day = d.getDay();
      return (day >= 4 || day === 0) ? thursday(d) : thursday.ceil(d);
    }

    function formatWeekNumberISO(d, p) {
      d = dISO(d);
      return pad(thursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);
    }

    function formatWeekdayNumberSunday(d) {
      return d.getDay();
    }

    function formatWeekNumberMonday(d, p) {
      return pad(monday.count(timeYear(d) - 1, d), p, 2);
    }

    function formatYear(d, p) {
      return pad(d.getFullYear() % 100, p, 2);
    }

    function formatYearISO(d, p) {
      d = dISO(d);
      return pad(d.getFullYear() % 100, p, 2);
    }

    function formatFullYear(d, p) {
      return pad(d.getFullYear() % 10000, p, 4);
    }

    function formatFullYearISO(d, p) {
      var day = d.getDay();
      d = (day >= 4 || day === 0) ? thursday(d) : thursday.ceil(d);
      return pad(d.getFullYear() % 10000, p, 4);
    }

    function formatZone(d) {
      var z = d.getTimezoneOffset();
      return (z > 0 ? "-" : (z *= -1, "+"))
          + pad(z / 60 | 0, "0", 2)
          + pad(z % 60, "0", 2);
    }

    function formatUTCDayOfMonth(d, p) {
      return pad(d.getUTCDate(), p, 2);
    }

    function formatUTCHour24(d, p) {
      return pad(d.getUTCHours(), p, 2);
    }

    function formatUTCHour12(d, p) {
      return pad(d.getUTCHours() % 12 || 12, p, 2);
    }

    function formatUTCDayOfYear(d, p) {
      return pad(1 + utcDay$1.count(utcYear$1(d), d), p, 3);
    }

    function formatUTCMilliseconds(d, p) {
      return pad(d.getUTCMilliseconds(), p, 3);
    }

    function formatUTCMicroseconds(d, p) {
      return formatUTCMilliseconds(d, p) + "000";
    }

    function formatUTCMonthNumber(d, p) {
      return pad(d.getUTCMonth() + 1, p, 2);
    }

    function formatUTCMinutes(d, p) {
      return pad(d.getUTCMinutes(), p, 2);
    }

    function formatUTCSeconds(d, p) {
      return pad(d.getUTCSeconds(), p, 2);
    }

    function formatUTCWeekdayNumberMonday(d) {
      var dow = d.getUTCDay();
      return dow === 0 ? 7 : dow;
    }

    function formatUTCWeekNumberSunday(d, p) {
      return pad(utcSunday.count(utcYear$1(d) - 1, d), p, 2);
    }

    function UTCdISO(d) {
      var day = d.getUTCDay();
      return (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);
    }

    function formatUTCWeekNumberISO(d, p) {
      d = UTCdISO(d);
      return pad(utcThursday.count(utcYear$1(d), d) + (utcYear$1(d).getUTCDay() === 4), p, 2);
    }

    function formatUTCWeekdayNumberSunday(d) {
      return d.getUTCDay();
    }

    function formatUTCWeekNumberMonday(d, p) {
      return pad(utcMonday.count(utcYear$1(d) - 1, d), p, 2);
    }

    function formatUTCYear(d, p) {
      return pad(d.getUTCFullYear() % 100, p, 2);
    }

    function formatUTCYearISO(d, p) {
      d = UTCdISO(d);
      return pad(d.getUTCFullYear() % 100, p, 2);
    }

    function formatUTCFullYear(d, p) {
      return pad(d.getUTCFullYear() % 10000, p, 4);
    }

    function formatUTCFullYearISO(d, p) {
      var day = d.getUTCDay();
      d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);
      return pad(d.getUTCFullYear() % 10000, p, 4);
    }

    function formatUTCZone() {
      return "+0000";
    }

    function formatLiteralPercent() {
      return "%";
    }

    function formatUnixTimestamp(d) {
      return +d;
    }

    function formatUnixTimestampSeconds(d) {
      return Math.floor(+d / 1000);
    }

    var locale;
    var timeFormat;
    var timeParse;
    var utcFormat;
    var utcParse;

    defaultLocale({
      dateTime: "%x, %X",
      date: "%-m/%-d/%Y",
      time: "%-I:%M:%S %p",
      periods: ["AM", "PM"],
      days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
      shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
    });

    function defaultLocale(definition) {
      locale = formatLocale(definition);
      timeFormat = locale.format;
      timeParse = locale.parse;
      utcFormat = locale.utcFormat;
      utcParse = locale.utcParse;
      return locale;
    }

    var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";

    function formatIsoNative(date) {
      return date.toISOString();
    }

    var formatIso = Date.prototype.toISOString
        ? formatIsoNative
        : utcFormat(isoSpecifier);

    var formatIso$1 = formatIso;

    function parseIsoNative(string) {
      var date = new Date(string);
      return isNaN(date) ? null : date;
    }

    var parseIso = +new Date("2000-01-01T00:00:00.000Z")
        ? parseIsoNative
        : utcParse(isoSpecifier);

    var parseIso$1 = parseIso;

    function date(t) {
      return new Date(t);
    }

    function number(t) {
      return t instanceof Date ? +t : +new Date(+t);
    }

    function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {
      var scale = continuous(),
          invert = scale.invert,
          domain = scale.domain;

      var formatMillisecond = format(".%L"),
          formatSecond = format(":%S"),
          formatMinute = format("%I:%M"),
          formatHour = format("%I %p"),
          formatDay = format("%a %d"),
          formatWeek = format("%b %d"),
          formatMonth = format("%B"),
          formatYear = format("%Y");

      function tickFormat(date) {
        return (second(date) < date ? formatMillisecond
            : minute(date) < date ? formatSecond
            : hour(date) < date ? formatMinute
            : day(date) < date ? formatHour
            : month(date) < date ? (week(date) < date ? formatDay : formatWeek)
            : year(date) < date ? formatMonth
            : formatYear)(date);
      }

      scale.invert = function(y) {
        return new Date(invert(y));
      };

      scale.domain = function(_) {
        return arguments.length ? domain(Array.from(_, number)) : domain().map(date);
      };

      scale.ticks = function(interval) {
        var d = domain();
        return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);
      };

      scale.tickFormat = function(count, specifier) {
        return specifier == null ? tickFormat : format(specifier);
      };

      scale.nice = function(interval) {
        var d = domain();
        if (!interval || typeof interval.range !== "function") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);
        return interval ? domain(nice(d, interval)) : scale;
      };

      scale.copy = function() {
        return copy$1(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));
      };

      return scale;
    }

    function time() {
      return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, sunday, timeDay, timeHour, timeMinute, utcSecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
    }

    function utcTime() {
      return initRange.apply(calendar(utcTicks, utcTickInterval, utcYear$1, utcMonth$1, utcSunday, utcDay$1, utcHour$1, utcMinute$1, utcSecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);
    }

    function transformer$1() {
      var x0 = 0,
          x1 = 1,
          t0,
          t1,
          k10,
          transform,
          interpolator = identity$3,
          clamp = false,
          unknown;

      function scale(x) {
        return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
      }

      scale.domain = function(_) {
        return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];
      };

      scale.clamp = function(_) {
        return arguments.length ? (clamp = !!_, scale) : clamp;
      };

      scale.interpolator = function(_) {
        return arguments.length ? (interpolator = _, scale) : interpolator;
      };

      function range(interpolate) {
        return function(_) {
          var r0, r1;
          return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];
        };
      }

      scale.range = range(interpolate$2);

      scale.rangeRound = range(interpolateRound);

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };

      return function(t) {
        transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
        return scale;
      };
    }

    function copy(source, target) {
      return target
          .domain(source.domain())
          .interpolator(source.interpolator())
          .clamp(source.clamp())
          .unknown(source.unknown());
    }

    function sequential() {
      var scale = linearish(transformer$1()(identity$3));

      scale.copy = function() {
        return copy(scale, sequential());
      };

      return initInterpolator.apply(scale, arguments);
    }

    function sequentialLog() {
      var scale = loggish(transformer$1()).domain([1, 10]);

      scale.copy = function() {
        return copy(scale, sequentialLog()).base(scale.base());
      };

      return initInterpolator.apply(scale, arguments);
    }

    function sequentialSymlog() {
      var scale = symlogish(transformer$1());

      scale.copy = function() {
        return copy(scale, sequentialSymlog()).constant(scale.constant());
      };

      return initInterpolator.apply(scale, arguments);
    }

    function sequentialPow() {
      var scale = powish(transformer$1());

      scale.copy = function() {
        return copy(scale, sequentialPow()).exponent(scale.exponent());
      };

      return initInterpolator.apply(scale, arguments);
    }

    function sequentialSqrt() {
      return sequentialPow.apply(null, arguments).exponent(0.5);
    }

    function sequentialQuantile() {
      var domain = [],
          interpolator = identity$3;

      function scale(x) {
        if (x != null && !isNaN(x = +x)) return interpolator((bisect(domain, x, 1) - 1) / (domain.length - 1));
      }

      scale.domain = function(_) {
        if (!arguments.length) return domain.slice();
        domain = [];
        for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);
        domain.sort(ascending$3);
        return scale;
      };

      scale.interpolator = function(_) {
        return arguments.length ? (interpolator = _, scale) : interpolator;
      };

      scale.range = function() {
        return domain.map((d, i) => interpolator(i / (domain.length - 1)));
      };

      scale.quantiles = function(n) {
        return Array.from({length: n + 1}, (_, i) => quantile$1(domain, i / n));
      };

      scale.copy = function() {
        return sequentialQuantile(interpolator).domain(domain);
      };

      return initInterpolator.apply(scale, arguments);
    }

    function transformer() {
      var x0 = 0,
          x1 = 0.5,
          x2 = 1,
          s = 1,
          t0,
          t1,
          t2,
          k10,
          k21,
          interpolator = identity$3,
          transform,
          clamp = false,
          unknown;

      function scale(x) {
        return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
      }

      scale.domain = function(_) {
        return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];
      };

      scale.clamp = function(_) {
        return arguments.length ? (clamp = !!_, scale) : clamp;
      };

      scale.interpolator = function(_) {
        return arguments.length ? (interpolator = _, scale) : interpolator;
      };

      function range(interpolate) {
        return function(_) {
          var r0, r1, r2;
          return arguments.length ? ([r0, r1, r2] = _, interpolator = piecewise(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];
        };
      }

      scale.range = range(interpolate$2);

      scale.rangeRound = range(interpolateRound);

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };

      return function(t) {
        transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;
        return scale;
      };
    }

    function diverging$1() {
      var scale = linearish(transformer()(identity$3));

      scale.copy = function() {
        return copy(scale, diverging$1());
      };

      return initInterpolator.apply(scale, arguments);
    }

    function divergingLog() {
      var scale = loggish(transformer()).domain([0.1, 1, 10]);

      scale.copy = function() {
        return copy(scale, divergingLog()).base(scale.base());
      };

      return initInterpolator.apply(scale, arguments);
    }

    function divergingSymlog() {
      var scale = symlogish(transformer());

      scale.copy = function() {
        return copy(scale, divergingSymlog()).constant(scale.constant());
      };

      return initInterpolator.apply(scale, arguments);
    }

    function divergingPow() {
      var scale = powish(transformer());

      scale.copy = function() {
        return copy(scale, divergingPow()).exponent(scale.exponent());
      };

      return initInterpolator.apply(scale, arguments);
    }

    function divergingSqrt() {
      return divergingPow.apply(null, arguments).exponent(0.5);
    }

    function colors$1(specifier) {
      var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;
      while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);
      return colors;
    }

    var category10 = colors$1("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");

    var Accent = colors$1("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666");

    var Dark2 = colors$1("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");

    var Paired = colors$1("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");

    var Pastel1 = colors$1("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2");

    var Pastel2 = colors$1("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc");

    var Set1 = colors$1("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999");

    var Set2 = colors$1("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3");

    var Set3 = colors$1("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");

    var Tableau10 = colors$1("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");

    var ramp$1 = scheme => rgbBasis(scheme[scheme.length - 1]);

    var scheme$q = new Array(3).concat(
      "d8b365f5f5f55ab4ac",
      "a6611adfc27d80cdc1018571",
      "a6611adfc27df5f5f580cdc1018571",
      "8c510ad8b365f6e8c3c7eae55ab4ac01665e",
      "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e",
      "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e",
      "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e",
      "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30",
      "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30"
    ).map(colors$1);

    var BrBG = ramp$1(scheme$q);

    var scheme$p = new Array(3).concat(
      "af8dc3f7f7f77fbf7b",
      "7b3294c2a5cfa6dba0008837",
      "7b3294c2a5cff7f7f7a6dba0008837",
      "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837",
      "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837",
      "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837",
      "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837",
      "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b",
      "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b"
    ).map(colors$1);

    var PRGn = ramp$1(scheme$p);

    var scheme$o = new Array(3).concat(
      "e9a3c9f7f7f7a1d76a",
      "d01c8bf1b6dab8e1864dac26",
      "d01c8bf1b6daf7f7f7b8e1864dac26",
      "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221",
      "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221",
      "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221",
      "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221",
      "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419",
      "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419"
    ).map(colors$1);

    var PiYG = ramp$1(scheme$o);

    var scheme$n = new Array(3).concat(
      "998ec3f7f7f7f1a340",
      "5e3c99b2abd2fdb863e66101",
      "5e3c99b2abd2f7f7f7fdb863e66101",
      "542788998ec3d8daebfee0b6f1a340b35806",
      "542788998ec3d8daebf7f7f7fee0b6f1a340b35806",
      "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806",
      "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806",
      "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08",
      "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08"
    ).map(colors$1);

    var PuOr = ramp$1(scheme$n);

    var scheme$m = new Array(3).concat(
      "ef8a62f7f7f767a9cf",
      "ca0020f4a58292c5de0571b0",
      "ca0020f4a582f7f7f792c5de0571b0",
      "b2182bef8a62fddbc7d1e5f067a9cf2166ac",
      "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac",
      "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac",
      "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac",
      "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061",
      "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061"
    ).map(colors$1);

    var RdBu = ramp$1(scheme$m);

    var scheme$l = new Array(3).concat(
      "ef8a62ffffff999999",
      "ca0020f4a582bababa404040",
      "ca0020f4a582ffffffbababa404040",
      "b2182bef8a62fddbc7e0e0e09999994d4d4d",
      "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d",
      "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d",
      "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d",
      "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a",
      "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a"
    ).map(colors$1);

    var RdGy = ramp$1(scheme$l);

    var scheme$k = new Array(3).concat(
      "fc8d59ffffbf91bfdb",
      "d7191cfdae61abd9e92c7bb6",
      "d7191cfdae61ffffbfabd9e92c7bb6",
      "d73027fc8d59fee090e0f3f891bfdb4575b4",
      "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4",
      "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4",
      "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4",
      "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695",
      "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695"
    ).map(colors$1);

    var RdYlBu = ramp$1(scheme$k);

    var scheme$j = new Array(3).concat(
      "fc8d59ffffbf91cf60",
      "d7191cfdae61a6d96a1a9641",
      "d7191cfdae61ffffbfa6d96a1a9641",
      "d73027fc8d59fee08bd9ef8b91cf601a9850",
      "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850",
      "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850",
      "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850",
      "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837",
      "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837"
    ).map(colors$1);

    var RdYlGn = ramp$1(scheme$j);

    var scheme$i = new Array(3).concat(
      "fc8d59ffffbf99d594",
      "d7191cfdae61abdda42b83ba",
      "d7191cfdae61ffffbfabdda42b83ba",
      "d53e4ffc8d59fee08be6f59899d5943288bd",
      "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd",
      "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd",
      "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd",
      "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2",
      "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2"
    ).map(colors$1);

    var Spectral = ramp$1(scheme$i);

    var scheme$h = new Array(3).concat(
      "e5f5f999d8c92ca25f",
      "edf8fbb2e2e266c2a4238b45",
      "edf8fbb2e2e266c2a42ca25f006d2c",
      "edf8fbccece699d8c966c2a42ca25f006d2c",
      "edf8fbccece699d8c966c2a441ae76238b45005824",
      "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824",
      "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b"
    ).map(colors$1);

    var BuGn = ramp$1(scheme$h);

    var scheme$g = new Array(3).concat(
      "e0ecf49ebcda8856a7",
      "edf8fbb3cde38c96c688419d",
      "edf8fbb3cde38c96c68856a7810f7c",
      "edf8fbbfd3e69ebcda8c96c68856a7810f7c",
      "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b",
      "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b",
      "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b"
    ).map(colors$1);

    var BuPu = ramp$1(scheme$g);

    var scheme$f = new Array(3).concat(
      "e0f3dba8ddb543a2ca",
      "f0f9e8bae4bc7bccc42b8cbe",
      "f0f9e8bae4bc7bccc443a2ca0868ac",
      "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac",
      "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e",
      "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e",
      "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081"
    ).map(colors$1);

    var GnBu = ramp$1(scheme$f);

    var scheme$e = new Array(3).concat(
      "fee8c8fdbb84e34a33",
      "fef0d9fdcc8afc8d59d7301f",
      "fef0d9fdcc8afc8d59e34a33b30000",
      "fef0d9fdd49efdbb84fc8d59e34a33b30000",
      "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000",
      "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000",
      "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000"
    ).map(colors$1);

    var OrRd = ramp$1(scheme$e);

    var scheme$d = new Array(3).concat(
      "ece2f0a6bddb1c9099",
      "f6eff7bdc9e167a9cf02818a",
      "f6eff7bdc9e167a9cf1c9099016c59",
      "f6eff7d0d1e6a6bddb67a9cf1c9099016c59",
      "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450",
      "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450",
      "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636"
    ).map(colors$1);

    var PuBuGn = ramp$1(scheme$d);

    var scheme$c = new Array(3).concat(
      "ece7f2a6bddb2b8cbe",
      "f1eef6bdc9e174a9cf0570b0",
      "f1eef6bdc9e174a9cf2b8cbe045a8d",
      "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d",
      "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b",
      "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b",
      "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858"
    ).map(colors$1);

    var PuBu = ramp$1(scheme$c);

    var scheme$b = new Array(3).concat(
      "e7e1efc994c7dd1c77",
      "f1eef6d7b5d8df65b0ce1256",
      "f1eef6d7b5d8df65b0dd1c77980043",
      "f1eef6d4b9dac994c7df65b0dd1c77980043",
      "f1eef6d4b9dac994c7df65b0e7298ace125691003f",
      "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f",
      "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f"
    ).map(colors$1);

    var PuRd = ramp$1(scheme$b);

    var scheme$a = new Array(3).concat(
      "fde0ddfa9fb5c51b8a",
      "feebe2fbb4b9f768a1ae017e",
      "feebe2fbb4b9f768a1c51b8a7a0177",
      "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177",
      "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177",
      "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177",
      "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a"
    ).map(colors$1);

    var RdPu = ramp$1(scheme$a);

    var scheme$9 = new Array(3).concat(
      "edf8b17fcdbb2c7fb8",
      "ffffcca1dab441b6c4225ea8",
      "ffffcca1dab441b6c42c7fb8253494",
      "ffffccc7e9b47fcdbb41b6c42c7fb8253494",
      "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84",
      "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84",
      "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58"
    ).map(colors$1);

    var YlGnBu = ramp$1(scheme$9);

    var scheme$8 = new Array(3).concat(
      "f7fcb9addd8e31a354",
      "ffffccc2e69978c679238443",
      "ffffccc2e69978c67931a354006837",
      "ffffccd9f0a3addd8e78c67931a354006837",
      "ffffccd9f0a3addd8e78c67941ab5d238443005a32",
      "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32",
      "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529"
    ).map(colors$1);

    var YlGn = ramp$1(scheme$8);

    var scheme$7 = new Array(3).concat(
      "fff7bcfec44fd95f0e",
      "ffffd4fed98efe9929cc4c02",
      "ffffd4fed98efe9929d95f0e993404",
      "ffffd4fee391fec44ffe9929d95f0e993404",
      "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04",
      "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04",
      "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506"
    ).map(colors$1);

    var YlOrBr = ramp$1(scheme$7);

    var scheme$6 = new Array(3).concat(
      "ffeda0feb24cf03b20",
      "ffffb2fecc5cfd8d3ce31a1c",
      "ffffb2fecc5cfd8d3cf03b20bd0026",
      "ffffb2fed976feb24cfd8d3cf03b20bd0026",
      "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026",
      "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026",
      "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026"
    ).map(colors$1);

    var YlOrRd = ramp$1(scheme$6);

    var scheme$5 = new Array(3).concat(
      "deebf79ecae13182bd",
      "eff3ffbdd7e76baed62171b5",
      "eff3ffbdd7e76baed63182bd08519c",
      "eff3ffc6dbef9ecae16baed63182bd08519c",
      "eff3ffc6dbef9ecae16baed64292c62171b5084594",
      "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594",
      "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b"
    ).map(colors$1);

    var Blues = ramp$1(scheme$5);

    var scheme$4 = new Array(3).concat(
      "e5f5e0a1d99b31a354",
      "edf8e9bae4b374c476238b45",
      "edf8e9bae4b374c47631a354006d2c",
      "edf8e9c7e9c0a1d99b74c47631a354006d2c",
      "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32",
      "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32",
      "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b"
    ).map(colors$1);

    var Greens = ramp$1(scheme$4);

    var scheme$3 = new Array(3).concat(
      "f0f0f0bdbdbd636363",
      "f7f7f7cccccc969696525252",
      "f7f7f7cccccc969696636363252525",
      "f7f7f7d9d9d9bdbdbd969696636363252525",
      "f7f7f7d9d9d9bdbdbd969696737373525252252525",
      "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525",
      "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000"
    ).map(colors$1);

    var Greys = ramp$1(scheme$3);

    var scheme$2 = new Array(3).concat(
      "efedf5bcbddc756bb1",
      "f2f0f7cbc9e29e9ac86a51a3",
      "f2f0f7cbc9e29e9ac8756bb154278f",
      "f2f0f7dadaebbcbddc9e9ac8756bb154278f",
      "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486",
      "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486",
      "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d"
    ).map(colors$1);

    var Purples = ramp$1(scheme$2);

    var scheme$1 = new Array(3).concat(
      "fee0d2fc9272de2d26",
      "fee5d9fcae91fb6a4acb181d",
      "fee5d9fcae91fb6a4ade2d26a50f15",
      "fee5d9fcbba1fc9272fb6a4ade2d26a50f15",
      "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d",
      "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d",
      "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d"
    ).map(colors$1);

    var Reds = ramp$1(scheme$1);

    var scheme = new Array(3).concat(
      "fee6cefdae6be6550d",
      "feeddefdbe85fd8d3cd94701",
      "feeddefdbe85fd8d3ce6550da63603",
      "feeddefdd0a2fdae6bfd8d3ce6550da63603",
      "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04",
      "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04",
      "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704"
    ).map(colors$1);

    var Oranges = ramp$1(scheme);

    function cividis(t) {
      t = Math.max(0, Math.min(1, t));
      return "rgb("
          + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + ", "
          + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + ", "
          + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))
          + ")";
    }

    var cubehelix = cubehelixLong(cubehelix$3(300, 0.5, 0.0), cubehelix$3(-240, 0.5, 1.0));

    var warm = cubehelixLong(cubehelix$3(-100, 0.75, 0.35), cubehelix$3(80, 1.50, 0.8));

    var cool = cubehelixLong(cubehelix$3(260, 0.75, 0.35), cubehelix$3(80, 1.50, 0.8));

    var c$2 = cubehelix$3();

    function rainbow(t) {
      if (t < 0 || t > 1) t -= Math.floor(t);
      var ts = Math.abs(t - 0.5);
      c$2.h = 360 * t - 100;
      c$2.s = 1.5 - 1.5 * ts;
      c$2.l = 0.8 - 0.9 * ts;
      return c$2 + "";
    }

    var c$1 = rgb(),
        pi_1_3 = Math.PI / 3,
        pi_2_3 = Math.PI * 2 / 3;

    function sinebow(t) {
      var x;
      t = (0.5 - t) * Math.PI;
      c$1.r = 255 * (x = Math.sin(t)) * x;
      c$1.g = 255 * (x = Math.sin(t + pi_1_3)) * x;
      c$1.b = 255 * (x = Math.sin(t + pi_2_3)) * x;
      return c$1 + "";
    }

    function turbo(t) {
      t = Math.max(0, Math.min(1, t));
      return "rgb("
          + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + ", "
          + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + ", "
          + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))
          + ")";
    }

    function ramp(range) {
      var n = range.length;
      return function(t) {
        return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
      };
    }

    var viridis = ramp(colors$1("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));

    var magma = ramp(colors$1("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));

    var inferno = ramp(colors$1("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));

    var plasma = ramp(colors$1("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));

    function constant$1(x) {
      return function constant() {
        return x;
      };
    }

    var abs = Math.abs;
    var atan2 = Math.atan2;
    var cos = Math.cos;
    var max = Math.max;
    var min = Math.min;
    var sin = Math.sin;
    var sqrt = Math.sqrt;

    var epsilon = 1e-12;
    var pi = Math.PI;
    var halfPi = pi / 2;
    var tau = 2 * pi;

    function acos(x) {
      return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
    }

    function asin(x) {
      return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
    }

    function arcInnerRadius(d) {
      return d.innerRadius;
    }

    function arcOuterRadius(d) {
      return d.outerRadius;
    }

    function arcStartAngle(d) {
      return d.startAngle;
    }

    function arcEndAngle(d) {
      return d.endAngle;
    }

    function arcPadAngle(d) {
      return d && d.padAngle; // Note: optional!
    }

    function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
      var x10 = x1 - x0, y10 = y1 - y0,
          x32 = x3 - x2, y32 = y3 - y2,
          t = y32 * x10 - x32 * y10;
      if (t * t < epsilon) return;
      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
      return [x0 + t * x10, y0 + t * y10];
    }

    // Compute perpendicular offset line of length rc.
    // http://mathworld.wolfram.com/Circle-LineIntersection.html
    function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
      var x01 = x0 - x1,
          y01 = y0 - y1,
          lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),
          ox = lo * y01,
          oy = -lo * x01,
          x11 = x0 + ox,
          y11 = y0 + oy,
          x10 = x1 + ox,
          y10 = y1 + oy,
          x00 = (x11 + x10) / 2,
          y00 = (y11 + y10) / 2,
          dx = x10 - x11,
          dy = y10 - y11,
          d2 = dx * dx + dy * dy,
          r = r1 - rc,
          D = x11 * y10 - x10 * y11,
          d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),
          cx0 = (D * dy - dx * d) / d2,
          cy0 = (-D * dx - dy * d) / d2,
          cx1 = (D * dy + dx * d) / d2,
          cy1 = (-D * dx + dy * d) / d2,
          dx0 = cx0 - x00,
          dy0 = cy0 - y00,
          dx1 = cx1 - x00,
          dy1 = cy1 - y00;

      // Pick the closer of the two intersection points.
      // TODO Is there a faster way to determine which intersection to use?
      if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;

      return {
        cx: cx0,
        cy: cy0,
        x01: -ox,
        y01: -oy,
        x11: cx0 * (r1 / r - 1),
        y11: cy0 * (r1 / r - 1)
      };
    }

    function arc() {
      var innerRadius = arcInnerRadius,
          outerRadius = arcOuterRadius,
          cornerRadius = constant$1(0),
          padRadius = null,
          startAngle = arcStartAngle,
          endAngle = arcEndAngle,
          padAngle = arcPadAngle,
          context = null;

      function arc() {
        var buffer,
            r,
            r0 = +innerRadius.apply(this, arguments),
            r1 = +outerRadius.apply(this, arguments),
            a0 = startAngle.apply(this, arguments) - halfPi,
            a1 = endAngle.apply(this, arguments) - halfPi,
            da = abs(a1 - a0),
            cw = a1 > a0;

        if (!context) context = buffer = path();

        // Ensure that the outer radius is always larger than the inner radius.
        if (r1 < r0) r = r1, r1 = r0, r0 = r;

        // Is it a point?
        if (!(r1 > epsilon)) context.moveTo(0, 0);

        // Or is it a circle or annulus?
        else if (da > tau - epsilon) {
          context.moveTo(r1 * cos(a0), r1 * sin(a0));
          context.arc(0, 0, r1, a0, a1, !cw);
          if (r0 > epsilon) {
            context.moveTo(r0 * cos(a1), r0 * sin(a1));
            context.arc(0, 0, r0, a1, a0, cw);
          }
        }

        // Or is it a circular or annular sector?
        else {
          var a01 = a0,
              a11 = a1,
              a00 = a0,
              a10 = a1,
              da0 = da,
              da1 = da,
              ap = padAngle.apply(this, arguments) / 2,
              rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),
              rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
              rc0 = rc,
              rc1 = rc,
              t0,
              t1;

          // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.
          if (rp > epsilon) {
            var p0 = asin(rp / r0 * sin(ap)),
                p1 = asin(rp / r1 * sin(ap));
            if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;
            else da0 = 0, a00 = a10 = (a0 + a1) / 2;
            if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;
            else da1 = 0, a01 = a11 = (a0 + a1) / 2;
          }

          var x01 = r1 * cos(a01),
              y01 = r1 * sin(a01),
              x10 = r0 * cos(a10),
              y10 = r0 * sin(a10);

          // Apply rounded corners?
          if (rc > epsilon) {
            var x11 = r1 * cos(a11),
                y11 = r1 * sin(a11),
                x00 = r0 * cos(a00),
                y00 = r0 * sin(a00),
                oc;

            // Restrict the corner radius according to the sector angle.
            if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
              var ax = x01 - oc[0],
                  ay = y01 - oc[1],
                  bx = x11 - oc[0],
                  by = y11 - oc[1],
                  kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),
                  lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
              rc0 = min(rc, (r0 - lc) / (kc - 1));
              rc1 = min(rc, (r1 - lc) / (kc + 1));
            }
          }

          // Is the sector collapsed to a line?
          if (!(da1 > epsilon)) context.moveTo(x01, y01);

          // Does the sector’s outer ring have rounded corners?
          else if (rc1 > epsilon) {
            t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
            t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);

            context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);

            // Have the corners merged?
            if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);

            // Otherwise, draw the two corners and the ring.
            else {
              context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);
              context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
              context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);
            }
          }

          // Or is the outer ring just a circular arc?
          else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);

          // Is there no inner ring, and it’s a circular sector?
          // Or perhaps it’s an annular sector collapsed due to padding?
          if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);

          // Does the sector’s inner ring (or point) have rounded corners?
          else if (rc0 > epsilon) {
            t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
            t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);

            context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);

            // Have the corners merged?
            if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);

            // Otherwise, draw the two corners and the ring.
            else {
              context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);
              context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);
              context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);
            }
          }

          // Or is the inner ring just a circular arc?
          else context.arc(0, 0, r0, a10, a00, cw);
        }

        context.closePath();

        if (buffer) return context = null, buffer + "" || null;
      }

      arc.centroid = function() {
        var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
            a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;
        return [cos(a) * r, sin(a) * r];
      };

      arc.innerRadius = function(_) {
        return arguments.length ? (innerRadius = typeof _ === "function" ? _ : constant$1(+_), arc) : innerRadius;
      };

      arc.outerRadius = function(_) {
        return arguments.length ? (outerRadius = typeof _ === "function" ? _ : constant$1(+_), arc) : outerRadius;
      };

      arc.cornerRadius = function(_) {
        return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : constant$1(+_), arc) : cornerRadius;
      };

      arc.padRadius = function(_) {
        return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : constant$1(+_), arc) : padRadius;
      };

      arc.startAngle = function(_) {
        return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$1(+_), arc) : startAngle;
      };

      arc.endAngle = function(_) {
        return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$1(+_), arc) : endAngle;
      };

      arc.padAngle = function(_) {
        return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant$1(+_), arc) : padAngle;
      };

      arc.context = function(_) {
        return arguments.length ? ((context = _ == null ? null : _), arc) : context;
      };

      return arc;
    }

    var slice = Array.prototype.slice;

    function array(x) {
      return typeof x === "object" && "length" in x
        ? x // Array, TypedArray, NodeList, array-like
        : Array.from(x); // Map, Set, iterable, string, or anything else
    }

    function Linear(context) {
      this._context = context;
    }

    Linear.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
          case 1: this._point = 2; // proceed
          default: this._context.lineTo(x, y); break;
        }
      }
    };

    function curveLinear(context) {
      return new Linear(context);
    }

    function x(p) {
      return p[0];
    }

    function y(p) {
      return p[1];
    }

    function line(x$1, y$1) {
      var defined = constant$1(true),
          context = null,
          curve = curveLinear,
          output = null;

      x$1 = typeof x$1 === "function" ? x$1 : (x$1 === undefined) ? x : constant$1(x$1);
      y$1 = typeof y$1 === "function" ? y$1 : (y$1 === undefined) ? y : constant$1(y$1);

      function line(data) {
        var i,
            n = (data = array(data)).length,
            d,
            defined0 = false,
            buffer;

        if (context == null) output = curve(buffer = path());

        for (i = 0; i <= n; ++i) {
          if (!(i < n && defined(d = data[i], i, data)) === defined0) {
            if (defined0 = !defined0) output.lineStart();
            else output.lineEnd();
          }
          if (defined0) output.point(+x$1(d, i, data), +y$1(d, i, data));
        }

        if (buffer) return output = null, buffer + "" || null;
      }

      line.x = function(_) {
        return arguments.length ? (x$1 = typeof _ === "function" ? _ : constant$1(+_), line) : x$1;
      };

      line.y = function(_) {
        return arguments.length ? (y$1 = typeof _ === "function" ? _ : constant$1(+_), line) : y$1;
      };

      line.defined = function(_) {
        return arguments.length ? (defined = typeof _ === "function" ? _ : constant$1(!!_), line) : defined;
      };

      line.curve = function(_) {
        return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
      };

      line.context = function(_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
      };

      return line;
    }

    function area(x0, y0, y1) {
      var x1 = null,
          defined = constant$1(true),
          context = null,
          curve = curveLinear,
          output = null;

      x0 = typeof x0 === "function" ? x0 : (x0 === undefined) ? x : constant$1(+x0);
      y0 = typeof y0 === "function" ? y0 : (y0 === undefined) ? constant$1(0) : constant$1(+y0);
      y1 = typeof y1 === "function" ? y1 : (y1 === undefined) ? y : constant$1(+y1);

      function area(data) {
        var i,
            j,
            k,
            n = (data = array(data)).length,
            d,
            defined0 = false,
            buffer,
            x0z = new Array(n),
            y0z = new Array(n);

        if (context == null) output = curve(buffer = path());

        for (i = 0; i <= n; ++i) {
          if (!(i < n && defined(d = data[i], i, data)) === defined0) {
            if (defined0 = !defined0) {
              j = i;
              output.areaStart();
              output.lineStart();
            } else {
              output.lineEnd();
              output.lineStart();
              for (k = i - 1; k >= j; --k) {
                output.point(x0z[k], y0z[k]);
              }
              output.lineEnd();
              output.areaEnd();
            }
          }
          if (defined0) {
            x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
            output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
          }
        }

        if (buffer) return output = null, buffer + "" || null;
      }

      function arealine() {
        return line().defined(defined).curve(curve).context(context);
      }

      area.x = function(_) {
        return arguments.length ? (x0 = typeof _ === "function" ? _ : constant$1(+_), x1 = null, area) : x0;
      };

      area.x0 = function(_) {
        return arguments.length ? (x0 = typeof _ === "function" ? _ : constant$1(+_), area) : x0;
      };

      area.x1 = function(_) {
        return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : constant$1(+_), area) : x1;
      };

      area.y = function(_) {
        return arguments.length ? (y0 = typeof _ === "function" ? _ : constant$1(+_), y1 = null, area) : y0;
      };

      area.y0 = function(_) {
        return arguments.length ? (y0 = typeof _ === "function" ? _ : constant$1(+_), area) : y0;
      };

      area.y1 = function(_) {
        return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : constant$1(+_), area) : y1;
      };

      area.lineX0 =
      area.lineY0 = function() {
        return arealine().x(x0).y(y0);
      };

      area.lineY1 = function() {
        return arealine().x(x0).y(y1);
      };

      area.lineX1 = function() {
        return arealine().x(x1).y(y0);
      };

      area.defined = function(_) {
        return arguments.length ? (defined = typeof _ === "function" ? _ : constant$1(!!_), area) : defined;
      };

      area.curve = function(_) {
        return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
      };

      area.context = function(_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
      };

      return area;
    }

    function descending$1(a, b) {
      return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
    }

    function identity$1(d) {
      return d;
    }

    function pie() {
      var value = identity$1,
          sortValues = descending$1,
          sort = null,
          startAngle = constant$1(0),
          endAngle = constant$1(tau),
          padAngle = constant$1(0);

      function pie(data) {
        var i,
            n = (data = array(data)).length,
            j,
            k,
            sum = 0,
            index = new Array(n),
            arcs = new Array(n),
            a0 = +startAngle.apply(this, arguments),
            da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),
            a1,
            p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
            pa = p * (da < 0 ? -1 : 1),
            v;

        for (i = 0; i < n; ++i) {
          if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
            sum += v;
          }
        }

        // Optionally sort the arcs by previously-computed values or by data.
        if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });
        else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });

        // Compute the arcs! They are stored in the original data's order.
        for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
          j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
            data: data[j],
            index: i,
            value: v,
            startAngle: a0,
            endAngle: a1,
            padAngle: p
          };
        }

        return arcs;
      }

      pie.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : constant$1(+_), pie) : value;
      };

      pie.sortValues = function(_) {
        return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
      };

      pie.sort = function(_) {
        return arguments.length ? (sort = _, sortValues = null, pie) : sort;
      };

      pie.startAngle = function(_) {
        return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$1(+_), pie) : startAngle;
      };

      pie.endAngle = function(_) {
        return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$1(+_), pie) : endAngle;
      };

      pie.padAngle = function(_) {
        return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant$1(+_), pie) : padAngle;
      };

      return pie;
    }

    var curveRadialLinear = curveRadial$1(curveLinear);

    function Radial(curve) {
      this._curve = curve;
    }

    Radial.prototype = {
      areaStart: function() {
        this._curve.areaStart();
      },
      areaEnd: function() {
        this._curve.areaEnd();
      },
      lineStart: function() {
        this._curve.lineStart();
      },
      lineEnd: function() {
        this._curve.lineEnd();
      },
      point: function(a, r) {
        this._curve.point(r * Math.sin(a), r * -Math.cos(a));
      }
    };

    function curveRadial$1(curve) {

      function radial(context) {
        return new Radial(curve(context));
      }

      radial._curve = curve;

      return radial;
    }

    function lineRadial(l) {
      var c = l.curve;

      l.angle = l.x, delete l.x;
      l.radius = l.y, delete l.y;

      l.curve = function(_) {
        return arguments.length ? c(curveRadial$1(_)) : c()._curve;
      };

      return l;
    }

    function lineRadial$1() {
      return lineRadial(line().curve(curveRadialLinear));
    }

    function areaRadial() {
      var a = area().curve(curveRadialLinear),
          c = a.curve,
          x0 = a.lineX0,
          x1 = a.lineX1,
          y0 = a.lineY0,
          y1 = a.lineY1;

      a.angle = a.x, delete a.x;
      a.startAngle = a.x0, delete a.x0;
      a.endAngle = a.x1, delete a.x1;
      a.radius = a.y, delete a.y;
      a.innerRadius = a.y0, delete a.y0;
      a.outerRadius = a.y1, delete a.y1;
      a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;
      a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;
      a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;
      a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;

      a.curve = function(_) {
        return arguments.length ? c(curveRadial$1(_)) : c()._curve;
      };

      return a;
    }

    function pointRadial(x, y) {
      return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
    }

    function linkSource(d) {
      return d.source;
    }

    function linkTarget(d) {
      return d.target;
    }

    function link(curve) {
      var source = linkSource,
          target = linkTarget,
          x$1 = x,
          y$1 = y,
          context = null;

      function link() {
        var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);
        if (!context) context = buffer = path();
        curve(context, +x$1.apply(this, (argv[0] = s, argv)), +y$1.apply(this, argv), +x$1.apply(this, (argv[0] = t, argv)), +y$1.apply(this, argv));
        if (buffer) return context = null, buffer + "" || null;
      }

      link.source = function(_) {
        return arguments.length ? (source = _, link) : source;
      };

      link.target = function(_) {
        return arguments.length ? (target = _, link) : target;
      };

      link.x = function(_) {
        return arguments.length ? (x$1 = typeof _ === "function" ? _ : constant$1(+_), link) : x$1;
      };

      link.y = function(_) {
        return arguments.length ? (y$1 = typeof _ === "function" ? _ : constant$1(+_), link) : y$1;
      };

      link.context = function(_) {
        return arguments.length ? ((context = _ == null ? null : _), link) : context;
      };

      return link;
    }

    function curveHorizontal(context, x0, y0, x1, y1) {
      context.moveTo(x0, y0);
      context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
    }

    function curveVertical(context, x0, y0, x1, y1) {
      context.moveTo(x0, y0);
      context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);
    }

    function curveRadial(context, x0, y0, x1, y1) {
      var p0 = pointRadial(x0, y0),
          p1 = pointRadial(x0, y0 = (y0 + y1) / 2),
          p2 = pointRadial(x1, y0),
          p3 = pointRadial(x1, y1);
      context.moveTo(p0[0], p0[1]);
      context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);
    }

    function linkHorizontal() {
      return link(curveHorizontal);
    }

    function linkVertical() {
      return link(curveVertical);
    }

    function linkRadial() {
      var l = link(curveRadial);
      l.angle = l.x, delete l.x;
      l.radius = l.y, delete l.y;
      return l;
    }

    var circle = {
      draw: function(context, size) {
        var r = Math.sqrt(size / pi);
        context.moveTo(r, 0);
        context.arc(0, 0, r, 0, tau);
      }
    };

    var cross = {
      draw: function(context, size) {
        var r = Math.sqrt(size / 5) / 2;
        context.moveTo(-3 * r, -r);
        context.lineTo(-r, -r);
        context.lineTo(-r, -3 * r);
        context.lineTo(r, -3 * r);
        context.lineTo(r, -r);
        context.lineTo(3 * r, -r);
        context.lineTo(3 * r, r);
        context.lineTo(r, r);
        context.lineTo(r, 3 * r);
        context.lineTo(-r, 3 * r);
        context.lineTo(-r, r);
        context.lineTo(-3 * r, r);
        context.closePath();
      }
    };

    var tan30 = Math.sqrt(1 / 3),
        tan30_2 = tan30 * 2;

    var diamond = {
      draw: function(context, size) {
        var y = Math.sqrt(size / tan30_2),
            x = y * tan30;
        context.moveTo(0, -y);
        context.lineTo(x, 0);
        context.lineTo(0, y);
        context.lineTo(-x, 0);
        context.closePath();
      }
    };

    var ka = 0.89081309152928522810,
        kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),
        kx = Math.sin(tau / 10) * kr,
        ky = -Math.cos(tau / 10) * kr;

    var star = {
      draw: function(context, size) {
        var r = Math.sqrt(size * ka),
            x = kx * r,
            y = ky * r;
        context.moveTo(0, -r);
        context.lineTo(x, y);
        for (var i = 1; i < 5; ++i) {
          var a = tau * i / 5,
              c = Math.cos(a),
              s = Math.sin(a);
          context.lineTo(s * r, -c * r);
          context.lineTo(c * x - s * y, s * x + c * y);
        }
        context.closePath();
      }
    };

    var square = {
      draw: function(context, size) {
        var w = Math.sqrt(size),
            x = -w / 2;
        context.rect(x, x, w, w);
      }
    };

    var sqrt3 = Math.sqrt(3);

    var triangle = {
      draw: function(context, size) {
        var y = -Math.sqrt(size / (sqrt3 * 3));
        context.moveTo(0, y * 2);
        context.lineTo(-sqrt3 * y, -y);
        context.lineTo(sqrt3 * y, -y);
        context.closePath();
      }
    };

    var c = -0.5,
        s = Math.sqrt(3) / 2,
        k = 1 / Math.sqrt(12),
        a = (k / 2 + 1) * 3;

    var wye = {
      draw: function(context, size) {
        var r = Math.sqrt(size / a),
            x0 = r / 2,
            y0 = r * k,
            x1 = x0,
            y1 = r * k + r,
            x2 = -x1,
            y2 = y1;
        context.moveTo(x0, y0);
        context.lineTo(x1, y1);
        context.lineTo(x2, y2);
        context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
        context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
        context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
        context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
        context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
        context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
        context.closePath();
      }
    };

    var symbols = [
      circle,
      cross,
      diamond,
      square,
      star,
      triangle,
      wye
    ];

    function symbol(type, size) {
      var context = null;
      type = typeof type === "function" ? type : constant$1(type || circle);
      size = typeof size === "function" ? size : constant$1(size === undefined ? 64 : +size);

      function symbol() {
        var buffer;
        if (!context) context = buffer = path();
        type.apply(this, arguments).draw(context, +size.apply(this, arguments));
        if (buffer) return context = null, buffer + "" || null;
      }

      symbol.type = function(_) {
        return arguments.length ? (type = typeof _ === "function" ? _ : constant$1(_), symbol) : type;
      };

      symbol.size = function(_) {
        return arguments.length ? (size = typeof _ === "function" ? _ : constant$1(+_), symbol) : size;
      };

      symbol.context = function(_) {
        return arguments.length ? (context = _ == null ? null : _, symbol) : context;
      };

      return symbol;
    }

    function noop() {}

    function point$3(that, x, y) {
      that._context.bezierCurveTo(
        (2 * that._x0 + that._x1) / 3,
        (2 * that._y0 + that._y1) / 3,
        (that._x0 + 2 * that._x1) / 3,
        (that._y0 + 2 * that._y1) / 3,
        (that._x0 + 4 * that._x1 + x) / 6,
        (that._y0 + 4 * that._y1 + y) / 6
      );
    }

    function Basis(context) {
      this._context = context;
    }

    Basis.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 =
        this._y0 = this._y1 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 3: point$3(this, this._x1, this._y1); // proceed
          case 2: this._context.lineTo(this._x1, this._y1); break;
        }
        if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
          case 1: this._point = 2; break;
          case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed
          default: point$3(this, x, y); break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
      }
    };

    function basis(context) {
      return new Basis(context);
    }

    function BasisClosed(context) {
      this._context = context;
    }

    BasisClosed.prototype = {
      areaStart: noop,
      areaEnd: noop,
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =
        this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 1: {
            this._context.moveTo(this._x2, this._y2);
            this._context.closePath();
            break;
          }
          case 2: {
            this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
            this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
            this._context.closePath();
            break;
          }
          case 3: {
            this.point(this._x2, this._y2);
            this.point(this._x3, this._y3);
            this.point(this._x4, this._y4);
            break;
          }
        }
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: this._point = 1; this._x2 = x, this._y2 = y; break;
          case 1: this._point = 2; this._x3 = x, this._y3 = y; break;
          case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;
          default: point$3(this, x, y); break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
      }
    };

    function basisClosed(context) {
      return new BasisClosed(context);
    }

    function BasisOpen(context) {
      this._context = context;
    }

    BasisOpen.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 =
        this._y0 = this._y1 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: this._point = 1; break;
          case 1: this._point = 2; break;
          case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;
          case 3: this._point = 4; // proceed
          default: point$3(this, x, y); break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
      }
    };

    function basisOpen(context) {
      return new BasisOpen(context);
    }

    class Bump {
      constructor(context, x) {
        this._context = context;
        this._x = x;
      }
      areaStart() {
        this._line = 0;
      }
      areaEnd() {
        this._line = NaN;
      }
      lineStart() {
        this._point = 0;
      }
      lineEnd() {
        if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
        this._line = 1 - this._line;
      }
      point(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: {
            this._point = 1;
            if (this._line) this._context.lineTo(x, y);
            else this._context.moveTo(x, y);
            break;
          }
          case 1: this._point = 2; // proceed
          default: {
            if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);
            else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);
            break;
          }
        }
        this._x0 = x, this._y0 = y;
      }
    }

    function bumpX(context) {
      return new Bump(context, true);
    }

    function bumpY(context) {
      return new Bump(context, false);
    }

    function Bundle(context, beta) {
      this._basis = new Basis(context);
      this._beta = beta;
    }

    Bundle.prototype = {
      lineStart: function() {
        this._x = [];
        this._y = [];
        this._basis.lineStart();
      },
      lineEnd: function() {
        var x = this._x,
            y = this._y,
            j = x.length - 1;

        if (j > 0) {
          var x0 = x[0],
              y0 = y[0],
              dx = x[j] - x0,
              dy = y[j] - y0,
              i = -1,
              t;

          while (++i <= j) {
            t = i / j;
            this._basis.point(
              this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),
              this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)
            );
          }
        }

        this._x = this._y = null;
        this._basis.lineEnd();
      },
      point: function(x, y) {
        this._x.push(+x);
        this._y.push(+y);
      }
    };

    var bundle = (function custom(beta) {

      function bundle(context) {
        return beta === 1 ? new Basis(context) : new Bundle(context, beta);
      }

      bundle.beta = function(beta) {
        return custom(+beta);
      };

      return bundle;
    })(0.85);

    function point$2(that, x, y) {
      that._context.bezierCurveTo(
        that._x1 + that._k * (that._x2 - that._x0),
        that._y1 + that._k * (that._y2 - that._y0),
        that._x2 + that._k * (that._x1 - x),
        that._y2 + that._k * (that._y1 - y),
        that._x2,
        that._y2
      );
    }

    function Cardinal(context, tension) {
      this._context = context;
      this._k = (1 - tension) / 6;
    }

    Cardinal.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._x2 =
        this._y0 = this._y1 = this._y2 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 2: this._context.lineTo(this._x2, this._y2); break;
          case 3: point$2(this, this._x1, this._y1); break;
        }
        if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
          case 1: this._point = 2; this._x1 = x, this._y1 = y; break;
          case 2: this._point = 3; // proceed
          default: point$2(this, x, y); break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var cardinal = (function custom(tension) {

      function cardinal(context) {
        return new Cardinal(context, tension);
      }

      cardinal.tension = function(tension) {
        return custom(+tension);
      };

      return cardinal;
    })(0);

    function CardinalClosed(context, tension) {
      this._context = context;
      this._k = (1 - tension) / 6;
    }

    CardinalClosed.prototype = {
      areaStart: noop,
      areaEnd: noop,
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
        this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 1: {
            this._context.moveTo(this._x3, this._y3);
            this._context.closePath();
            break;
          }
          case 2: {
            this._context.lineTo(this._x3, this._y3);
            this._context.closePath();
            break;
          }
          case 3: {
            this.point(this._x3, this._y3);
            this.point(this._x4, this._y4);
            this.point(this._x5, this._y5);
            break;
          }
        }
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
          case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
          case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
          default: point$2(this, x, y); break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var cardinalClosed = (function custom(tension) {

      function cardinal(context) {
        return new CardinalClosed(context, tension);
      }

      cardinal.tension = function(tension) {
        return custom(+tension);
      };

      return cardinal;
    })(0);

    function CardinalOpen(context, tension) {
      this._context = context;
      this._k = (1 - tension) / 6;
    }

    CardinalOpen.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._x2 =
        this._y0 = this._y1 = this._y2 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: this._point = 1; break;
          case 1: this._point = 2; break;
          case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
          case 3: this._point = 4; // proceed
          default: point$2(this, x, y); break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var cardinalOpen = (function custom(tension) {

      function cardinal(context) {
        return new CardinalOpen(context, tension);
      }

      cardinal.tension = function(tension) {
        return custom(+tension);
      };

      return cardinal;
    })(0);

    function point$1(that, x, y) {
      var x1 = that._x1,
          y1 = that._y1,
          x2 = that._x2,
          y2 = that._y2;

      if (that._l01_a > epsilon) {
        var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
            n = 3 * that._l01_a * (that._l01_a + that._l12_a);
        x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
        y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
      }

      if (that._l23_a > epsilon) {
        var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
            m = 3 * that._l23_a * (that._l23_a + that._l12_a);
        x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
        y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
      }

      that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
    }

    function CatmullRom(context, alpha) {
      this._context = context;
      this._alpha = alpha;
    }

    CatmullRom.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._x2 =
        this._y0 = this._y1 = this._y2 = NaN;
        this._l01_a = this._l12_a = this._l23_a =
        this._l01_2a = this._l12_2a = this._l23_2a =
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 2: this._context.lineTo(this._x2, this._y2); break;
          case 3: this.point(this._x2, this._y2); break;
        }
        if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;

        if (this._point) {
          var x23 = this._x2 - x,
              y23 = this._y2 - y;
          this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }

        switch (this._point) {
          case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
          case 1: this._point = 2; break;
          case 2: this._point = 3; // proceed
          default: point$1(this, x, y); break;
        }

        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var catmullRom = (function custom(alpha) {

      function catmullRom(context) {
        return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);
      }

      catmullRom.alpha = function(alpha) {
        return custom(+alpha);
      };

      return catmullRom;
    })(0.5);

    function CatmullRomClosed(context, alpha) {
      this._context = context;
      this._alpha = alpha;
    }

    CatmullRomClosed.prototype = {
      areaStart: noop,
      areaEnd: noop,
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
        this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
        this._l01_a = this._l12_a = this._l23_a =
        this._l01_2a = this._l12_2a = this._l23_2a =
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 1: {
            this._context.moveTo(this._x3, this._y3);
            this._context.closePath();
            break;
          }
          case 2: {
            this._context.lineTo(this._x3, this._y3);
            this._context.closePath();
            break;
          }
          case 3: {
            this.point(this._x3, this._y3);
            this.point(this._x4, this._y4);
            this.point(this._x5, this._y5);
            break;
          }
        }
      },
      point: function(x, y) {
        x = +x, y = +y;

        if (this._point) {
          var x23 = this._x2 - x,
              y23 = this._y2 - y;
          this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }

        switch (this._point) {
          case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
          case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
          case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
          default: point$1(this, x, y); break;
        }

        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var catmullRomClosed = (function custom(alpha) {

      function catmullRom(context) {
        return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);
      }

      catmullRom.alpha = function(alpha) {
        return custom(+alpha);
      };

      return catmullRom;
    })(0.5);

    function CatmullRomOpen(context, alpha) {
      this._context = context;
      this._alpha = alpha;
    }

    CatmullRomOpen.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._x2 =
        this._y0 = this._y1 = this._y2 = NaN;
        this._l01_a = this._l12_a = this._l23_a =
        this._l01_2a = this._l12_2a = this._l23_2a =
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;

        if (this._point) {
          var x23 = this._x2 - x,
              y23 = this._y2 - y;
          this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }

        switch (this._point) {
          case 0: this._point = 1; break;
          case 1: this._point = 2; break;
          case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
          case 3: this._point = 4; // proceed
          default: point$1(this, x, y); break;
        }

        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var catmullRomOpen = (function custom(alpha) {

      function catmullRom(context) {
        return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);
      }

      catmullRom.alpha = function(alpha) {
        return custom(+alpha);
      };

      return catmullRom;
    })(0.5);

    function LinearClosed(context) {
      this._context = context;
    }

    LinearClosed.prototype = {
      areaStart: noop,
      areaEnd: noop,
      lineStart: function() {
        this._point = 0;
      },
      lineEnd: function() {
        if (this._point) this._context.closePath();
      },
      point: function(x, y) {
        x = +x, y = +y;
        if (this._point) this._context.lineTo(x, y);
        else this._point = 1, this._context.moveTo(x, y);
      }
    };

    function linearClosed(context) {
      return new LinearClosed(context);
    }

    function sign(x) {
      return x < 0 ? -1 : 1;
    }

    // Calculate the slopes of the tangents (Hermite-type interpolation) based on
    // the following paper: Steffen, M. 1990. A Simple Method for Monotonic
    // Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
    // NOV(II), P. 443, 1990.
    function slope3(that, x2, y2) {
      var h0 = that._x1 - that._x0,
          h1 = x2 - that._x1,
          s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
          s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
          p = (s0 * h1 + s1 * h0) / (h0 + h1);
      return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
    }

    // Calculate a one-sided slope.
    function slope2(that, t) {
      var h = that._x1 - that._x0;
      return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
    }

    // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
    // "you can express cubic Hermite interpolation in terms of cubic Bézier curves
    // with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".
    function point(that, t0, t1) {
      var x0 = that._x0,
          y0 = that._y0,
          x1 = that._x1,
          y1 = that._y1,
          dx = (x1 - x0) / 3;
      that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
    }

    function MonotoneX(context) {
      this._context = context;
    }

    MonotoneX.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 =
        this._y0 = this._y1 =
        this._t0 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 2: this._context.lineTo(this._x1, this._y1); break;
          case 3: point(this, this._t0, slope2(this, this._t0)); break;
        }
        if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        var t1 = NaN;

        x = +x, y = +y;
        if (x === this._x1 && y === this._y1) return; // Ignore coincident points.
        switch (this._point) {
          case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
          case 1: this._point = 2; break;
          case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;
          default: point(this, this._t0, t1 = slope3(this, x, y)); break;
        }

        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
        this._t0 = t1;
      }
    };

    function MonotoneY(context) {
      this._context = new ReflectContext(context);
    }

    (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
      MonotoneX.prototype.point.call(this, y, x);
    };

    function ReflectContext(context) {
      this._context = context;
    }

    ReflectContext.prototype = {
      moveTo: function(x, y) { this._context.moveTo(y, x); },
      closePath: function() { this._context.closePath(); },
      lineTo: function(x, y) { this._context.lineTo(y, x); },
      bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }
    };

    function monotoneX(context) {
      return new MonotoneX(context);
    }

    function monotoneY(context) {
      return new MonotoneY(context);
    }

    function Natural(context) {
      this._context = context;
    }

    Natural.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x = [];
        this._y = [];
      },
      lineEnd: function() {
        var x = this._x,
            y = this._y,
            n = x.length;

        if (n) {
          this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
          if (n === 2) {
            this._context.lineTo(x[1], y[1]);
          } else {
            var px = controlPoints(x),
                py = controlPoints(y);
            for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
              this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
            }
          }
        }

        if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();
        this._line = 1 - this._line;
        this._x = this._y = null;
      },
      point: function(x, y) {
        this._x.push(+x);
        this._y.push(+y);
      }
    };

    // See https://www.particleincell.com/2012/bezier-splines/ for derivation.
    function controlPoints(x) {
      var i,
          n = x.length - 1,
          m,
          a = new Array(n),
          b = new Array(n),
          r = new Array(n);
      a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
      for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
      a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
      for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
      a[n - 1] = r[n - 1] / b[n - 1];
      for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];
      b[n - 1] = (x[n] + a[n - 1]) / 2;
      for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];
      return [a, b];
    }

    function natural(context) {
      return new Natural(context);
    }

    function Step(context, t) {
      this._context = context;
      this._t = t;
    }

    Step.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x = this._y = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
        if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
        if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
          case 1: this._point = 2; // proceed
          default: {
            if (this._t <= 0) {
              this._context.lineTo(this._x, y);
              this._context.lineTo(x, y);
            } else {
              var x1 = this._x * (1 - this._t) + x * this._t;
              this._context.lineTo(x1, this._y);
              this._context.lineTo(x1, y);
            }
            break;
          }
        }
        this._x = x, this._y = y;
      }
    };

    function step(context) {
      return new Step(context, 0.5);
    }

    function stepBefore(context) {
      return new Step(context, 0);
    }

    function stepAfter(context) {
      return new Step(context, 1);
    }

    function none$1(series, order) {
      if (!((n = series.length) > 1)) return;
      for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
        s0 = s1, s1 = series[order[i]];
        for (j = 0; j < m; ++j) {
          s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
        }
      }
    }

    function none(series) {
      var n = series.length, o = new Array(n);
      while (--n >= 0) o[n] = n;
      return o;
    }

    function stackValue(d, key) {
      return d[key];
    }

    function stackSeries(key) {
      const series = [];
      series.key = key;
      return series;
    }

    function stack() {
      var keys = constant$1([]),
          order = none,
          offset = none$1,
          value = stackValue;

      function stack(data) {
        var sz = Array.from(keys.apply(this, arguments), stackSeries),
            i, n = sz.length, j = -1,
            oz;

        for (const d of data) {
          for (i = 0, ++j; i < n; ++i) {
            (sz[i][j] = [0, +value(d, sz[i].key, j, data)]).data = d;
          }
        }

        for (i = 0, oz = array(order(sz)); i < n; ++i) {
          sz[oz[i]].index = i;
        }

        offset(sz, oz);
        return sz;
      }

      stack.keys = function(_) {
        return arguments.length ? (keys = typeof _ === "function" ? _ : constant$1(Array.from(_)), stack) : keys;
      };

      stack.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : constant$1(+_), stack) : value;
      };

      stack.order = function(_) {
        return arguments.length ? (order = _ == null ? none : typeof _ === "function" ? _ : constant$1(Array.from(_)), stack) : order;
      };

      stack.offset = function(_) {
        return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;
      };

      return stack;
    }

    function expand(series, order) {
      if (!((n = series.length) > 0)) return;
      for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
        for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;
        if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
      }
      none$1(series, order);
    }

    function diverging(series, order) {
      if (!((n = series.length) > 0)) return;
      for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
        for (yp = yn = 0, i = 0; i < n; ++i) {
          if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {
            d[0] = yp, d[1] = yp += dy;
          } else if (dy < 0) {
            d[1] = yn, d[0] = yn += dy;
          } else {
            d[0] = 0, d[1] = dy;
          }
        }
      }
    }

    function silhouette(series, order) {
      if (!((n = series.length) > 0)) return;
      for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
        for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;
        s0[j][1] += s0[j][0] = -y / 2;
      }
      none$1(series, order);
    }

    function wiggle(series, order) {
      if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;
      for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
        for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
          var si = series[order[i]],
              sij0 = si[j][1] || 0,
              sij1 = si[j - 1][1] || 0,
              s3 = (sij0 - sij1) / 2;
          for (var k = 0; k < i; ++k) {
            var sk = series[order[k]],
                skj0 = sk[j][1] || 0,
                skj1 = sk[j - 1][1] || 0;
            s3 += skj0 - skj1;
          }
          s1 += sij0, s2 += s3 * sij0;
        }
        s0[j - 1][1] += s0[j - 1][0] = y;
        if (s1) y -= s2 / s1;
      }
      s0[j - 1][1] += s0[j - 1][0] = y;
      none$1(series, order);
    }

    function appearance(series) {
      var peaks = series.map(peak);
      return none(series).sort(function(a, b) { return peaks[a] - peaks[b]; });
    }

    function peak(series) {
      var i = -1, j = 0, n = series.length, vi, vj = -Infinity;
      while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;
      return j;
    }

    function ascending(series) {
      var sums = series.map(sum);
      return none(series).sort(function(a, b) { return sums[a] - sums[b]; });
    }

    function sum(series) {
      var s = 0, i = -1, n = series.length, v;
      while (++i < n) if (v = +series[i][1]) s += v;
      return s;
    }

    function descending(series) {
      return ascending(series).reverse();
    }

    function insideOut(series) {
      var n = series.length,
          i,
          j,
          sums = series.map(sum),
          order = appearance(series),
          top = 0,
          bottom = 0,
          tops = [],
          bottoms = [];

      for (i = 0; i < n; ++i) {
        j = order[i];
        if (top < bottom) {
          top += sums[j];
          tops.push(j);
        } else {
          bottom += sums[j];
          bottoms.push(j);
        }
      }

      return bottoms.reverse().concat(tops);
    }

    function reverse(series) {
      return none(series).reverse();
    }

    var constant = x => () => x;

    function ZoomEvent(type, {
      sourceEvent,
      target,
      transform,
      dispatch
    }) {
      Object.defineProperties(this, {
        type: {value: type, enumerable: true, configurable: true},
        sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},
        target: {value: target, enumerable: true, configurable: true},
        transform: {value: transform, enumerable: true, configurable: true},
        _: {value: dispatch}
      });
    }

    function Transform(k, x, y) {
      this.k = k;
      this.x = x;
      this.y = y;
    }

    Transform.prototype = {
      constructor: Transform,
      scale: function(k) {
        return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
      },
      translate: function(x, y) {
        return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
      },
      apply: function(point) {
        return [point[0] * this.k + this.x, point[1] * this.k + this.y];
      },
      applyX: function(x) {
        return x * this.k + this.x;
      },
      applyY: function(y) {
        return y * this.k + this.y;
      },
      invert: function(location) {
        return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
      },
      invertX: function(x) {
        return (x - this.x) / this.k;
      },
      invertY: function(y) {
        return (y - this.y) / this.k;
      },
      rescaleX: function(x) {
        return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
      },
      rescaleY: function(y) {
        return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
      },
      toString: function() {
        return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
      }
    };

    var identity = new Transform(1, 0, 0);

    transform.prototype = Transform.prototype;

    function transform(node) {
      while (!node.__zoom) if (!(node = node.parentNode)) return identity;
      return node.__zoom;
    }

    function nopropagation(event) {
      event.stopImmediatePropagation();
    }

    function noevent(event) {
      event.preventDefault();
      event.stopImmediatePropagation();
    }

    // Ignore right-click, since that should open the context menu.
    // except for pinch-to-zoom, which is sent as a wheel+ctrlKey event
    function defaultFilter(event) {
      return (!event.ctrlKey || event.type === 'wheel') && !event.button;
    }

    function defaultExtent() {
      var e = this;
      if (e instanceof SVGElement) {
        e = e.ownerSVGElement || e;
        if (e.hasAttribute("viewBox")) {
          e = e.viewBox.baseVal;
          return [[e.x, e.y], [e.x + e.width, e.y + e.height]];
        }
        return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];
      }
      return [[0, 0], [e.clientWidth, e.clientHeight]];
    }

    function defaultTransform() {
      return this.__zoom || identity;
    }

    function defaultWheelDelta(event) {
      return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);
    }

    function defaultTouchable() {
      return navigator.maxTouchPoints || ("ontouchstart" in this);
    }

    function defaultConstrain(transform, extent, translateExtent) {
      var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],
          dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],
          dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],
          dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
      return transform.translate(
        dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),
        dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)
      );
    }

    function zoom() {
      var filter = defaultFilter,
          extent = defaultExtent,
          constrain = defaultConstrain,
          wheelDelta = defaultWheelDelta,
          touchable = defaultTouchable,
          scaleExtent = [0, Infinity],
          translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],
          duration = 250,
          interpolate = interpolateZoom,
          listeners = dispatch("start", "zoom", "end"),
          touchstarting,
          touchfirst,
          touchending,
          touchDelay = 500,
          wheelDelay = 150,
          clickDistance2 = 0,
          tapDistance = 10;

      function zoom(selection) {
        selection
            .property("__zoom", defaultTransform)
            .on("wheel.zoom", wheeled)
            .on("mousedown.zoom", mousedowned)
            .on("dblclick.zoom", dblclicked)
          .filter(touchable)
            .on("touchstart.zoom", touchstarted)
            .on("touchmove.zoom", touchmoved)
            .on("touchend.zoom touchcancel.zoom", touchended)
            .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
      }

      zoom.transform = function(collection, transform, point, event) {
        var selection = collection.selection ? collection.selection() : collection;
        selection.property("__zoom", defaultTransform);
        if (collection !== selection) {
          schedule(collection, transform, point, event);
        } else {
          selection.interrupt().each(function() {
            gesture(this, arguments)
              .event(event)
              .start()
              .zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform)
              .end();
          });
        }
      };

      zoom.scaleBy = function(selection, k, p, event) {
        zoom.scaleTo(selection, function() {
          var k0 = this.__zoom.k,
              k1 = typeof k === "function" ? k.apply(this, arguments) : k;
          return k0 * k1;
        }, p, event);
      };

      zoom.scaleTo = function(selection, k, p, event) {
        zoom.transform(selection, function() {
          var e = extent.apply(this, arguments),
              t0 = this.__zoom,
              p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p,
              p1 = t0.invert(p0),
              k1 = typeof k === "function" ? k.apply(this, arguments) : k;
          return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
        }, p, event);
      };

      zoom.translateBy = function(selection, x, y, event) {
        zoom.transform(selection, function() {
          return constrain(this.__zoom.translate(
            typeof x === "function" ? x.apply(this, arguments) : x,
            typeof y === "function" ? y.apply(this, arguments) : y
          ), extent.apply(this, arguments), translateExtent);
        }, null, event);
      };

      zoom.translateTo = function(selection, x, y, p, event) {
        zoom.transform(selection, function() {
          var e = extent.apply(this, arguments),
              t = this.__zoom,
              p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;
          return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(
            typeof x === "function" ? -x.apply(this, arguments) : -x,
            typeof y === "function" ? -y.apply(this, arguments) : -y
          ), e, translateExtent);
        }, p, event);
      };

      function scale(transform, k) {
        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
        return k === transform.k ? transform : new Transform(k, transform.x, transform.y);
      }

      function translate(transform, p0, p1) {
        var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;
        return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);
      }

      function centroid(extent) {
        return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
      }

      function schedule(transition, transform, point, event) {
        transition
            .on("start.zoom", function() { gesture(this, arguments).event(event).start(); })
            .on("interrupt.zoom end.zoom", function() { gesture(this, arguments).event(event).end(); })
            .tween("zoom", function() {
              var that = this,
                  args = arguments,
                  g = gesture(that, args).event(event),
                  e = extent.apply(that, args),
                  p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point,
                  w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),
                  a = that.__zoom,
                  b = typeof transform === "function" ? transform.apply(that, args) : transform,
                  i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
              return function(t) {
                if (t === 1) t = b; // Avoid rounding error on end.
                else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }
                g.zoom(null, t);
              };
            });
      }

      function gesture(that, args, clean) {
        return (!clean && that.__zooming) || new Gesture(that, args);
      }

      function Gesture(that, args) {
        this.that = that;
        this.args = args;
        this.active = 0;
        this.sourceEvent = null;
        this.extent = extent.apply(that, args);
        this.taps = 0;
      }

      Gesture.prototype = {
        event: function(event) {
          if (event) this.sourceEvent = event;
          return this;
        },
        start: function() {
          if (++this.active === 1) {
            this.that.__zooming = this;
            this.emit("start");
          }
          return this;
        },
        zoom: function(key, transform) {
          if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);
          if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
          if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
          this.that.__zoom = transform;
          this.emit("zoom");
          return this;
        },
        end: function() {
          if (--this.active === 0) {
            delete this.that.__zooming;
            this.emit("end");
          }
          return this;
        },
        emit: function(type) {
          var d = select(this.that).datum();
          listeners.call(
            type,
            this.that,
            new ZoomEvent(type, {
              sourceEvent: this.sourceEvent,
              target: zoom,
              type,
              transform: this.that.__zoom,
              dispatch: listeners
            }),
            d
          );
        }
      };

      function wheeled(event, ...args) {
        if (!filter.apply(this, arguments)) return;
        var g = gesture(this, args).event(event),
            t = this.__zoom,
            k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),
            p = pointer(event);

        // If the mouse is in the same location as before, reuse it.
        // If there were recent wheel events, reset the wheel idle timeout.
        if (g.wheel) {
          if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
            g.mouse[1] = t.invert(g.mouse[0] = p);
          }
          clearTimeout(g.wheel);
        }

        // If this wheel event won’t trigger a transform change, ignore it.
        else if (t.k === k) return;

        // Otherwise, capture the mouse point and location at the start.
        else {
          g.mouse = [p, t.invert(p)];
          interrupt(this);
          g.start();
        }

        noevent(event);
        g.wheel = setTimeout(wheelidled, wheelDelay);
        g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));

        function wheelidled() {
          g.wheel = null;
          g.end();
        }
      }

      function mousedowned(event, ...args) {
        if (touchending || !filter.apply(this, arguments)) return;
        var g = gesture(this, args, true).event(event),
            v = select(event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),
            p = pointer(event, currentTarget),
            currentTarget = event.currentTarget,
            x0 = event.clientX,
            y0 = event.clientY;

        dragDisable(event.view);
        nopropagation(event);
        g.mouse = [p, this.__zoom.invert(p)];
        interrupt(this);
        g.start();

        function mousemoved(event) {
          noevent(event);
          if (!g.moved) {
            var dx = event.clientX - x0, dy = event.clientY - y0;
            g.moved = dx * dx + dy * dy > clickDistance2;
          }
          g.event(event)
           .zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));
        }

        function mouseupped(event) {
          v.on("mousemove.zoom mouseup.zoom", null);
          yesdrag(event.view, g.moved);
          noevent(event);
          g.event(event).end();
        }
      }

      function dblclicked(event, ...args) {
        if (!filter.apply(this, arguments)) return;
        var t0 = this.__zoom,
            p0 = pointer(event.changedTouches ? event.changedTouches[0] : event, this),
            p1 = t0.invert(p0),
            k1 = t0.k * (event.shiftKey ? 0.5 : 2),
            t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);

        noevent(event);
        if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0, event);
        else select(this).call(zoom.transform, t1, p0, event);
      }

      function touchstarted(event, ...args) {
        if (!filter.apply(this, arguments)) return;
        var touches = event.touches,
            n = touches.length,
            g = gesture(this, args, event.changedTouches.length === n).event(event),
            started, i, t, p;

        nopropagation(event);
        for (i = 0; i < n; ++i) {
          t = touches[i], p = pointer(t, this);
          p = [p, this.__zoom.invert(p), t.identifier];
          if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;
          else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;
        }

        if (touchstarting) touchstarting = clearTimeout(touchstarting);

        if (started) {
          if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);
          interrupt(this);
          g.start();
        }
      }

      function touchmoved(event, ...args) {
        if (!this.__zooming) return;
        var g = gesture(this, args).event(event),
            touches = event.changedTouches,
            n = touches.length, i, t, p, l;

        noevent(event);
        for (i = 0; i < n; ++i) {
          t = touches[i], p = pointer(t, this);
          if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;
          else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
        }
        t = g.that.__zoom;
        if (g.touch1) {
          var p0 = g.touch0[0], l0 = g.touch0[1],
              p1 = g.touch1[0], l1 = g.touch1[1],
              dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,
              dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
          t = scale(t, Math.sqrt(dp / dl));
          p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
          l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
        }
        else if (g.touch0) p = g.touch0[0], l = g.touch0[1];
        else return;

        g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
      }

      function touchended(event, ...args) {
        if (!this.__zooming) return;
        var g = gesture(this, args).event(event),
            touches = event.changedTouches,
            n = touches.length, i, t;

        nopropagation(event);
        if (touchending) clearTimeout(touchending);
        touchending = setTimeout(function() { touchending = null; }, touchDelay);
        for (i = 0; i < n; ++i) {
          t = touches[i];
          if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;
          else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
        }
        if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
        if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);
        else {
          g.end();
          // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.
          if (g.taps === 2) {
            t = pointer(t, this);
            if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {
              var p = select(this).on("dblclick.zoom");
              if (p) p.apply(this, arguments);
            }
          }
        }
      }

      zoom.wheelDelta = function(_) {
        return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : constant(+_), zoom) : wheelDelta;
      };

      zoom.filter = function(_) {
        return arguments.length ? (filter = typeof _ === "function" ? _ : constant(!!_), zoom) : filter;
      };

      zoom.touchable = function(_) {
        return arguments.length ? (touchable = typeof _ === "function" ? _ : constant(!!_), zoom) : touchable;
      };

      zoom.extent = function(_) {
        return arguments.length ? (extent = typeof _ === "function" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
      };

      zoom.scaleExtent = function(_) {
        return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
      };

      zoom.translateExtent = function(_) {
        return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
      };

      zoom.constrain = function(_) {
        return arguments.length ? (constrain = _, zoom) : constrain;
      };

      zoom.duration = function(_) {
        return arguments.length ? (duration = +_, zoom) : duration;
      };

      zoom.interpolate = function(_) {
        return arguments.length ? (interpolate = _, zoom) : interpolate;
      };

      zoom.on = function() {
        var value = listeners.on.apply(listeners, arguments);
        return value === listeners ? zoom : value;
      };

      zoom.clickDistance = function(_) {
        return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
      };

      zoom.tapDistance = function(_) {
        return arguments.length ? (tapDistance = +_, zoom) : tapDistance;
      };

      return zoom;
    }

    var d3 = /*#__PURE__*/Object.freeze({
        __proto__: null,
        version: version,
        bisect: bisect,
        bisectRight: bisectRight,
        bisectLeft: bisectLeft,
        bisectCenter: bisectCenter,
        ascending: ascending$3,
        bisector: bisector,
        count: count$1,
        cross: cross$2,
        cumsum: cumsum,
        descending: descending$2,
        deviation: deviation,
        extent: extent$1,
        Adder: Adder,
        fsum: fsum,
        fcumsum: fcumsum,
        group: group,
        groups: groups,
        index: index$4,
        indexes: indexes,
        rollup: rollup,
        rollups: rollups,
        groupSort: groupSort,
        bin: bin,
        histogram: bin,
        thresholdFreedmanDiaconis: freedmanDiaconis,
        thresholdScott: scott,
        thresholdSturges: thresholdSturges,
        max: max$3,
        maxIndex: maxIndex,
        mean: mean$1,
        median: median,
        merge: merge,
        min: min$2,
        minIndex: minIndex,
        nice: nice$1,
        pairs: pairs,
        permute: permute,
        quantile: quantile$1,
        quantileSorted: quantileSorted,
        quickselect: quickselect,
        range: sequence,
        least: least,
        leastIndex: leastIndex,
        greatest: greatest,
        greatestIndex: greatestIndex,
        scan: scan,
        shuffle: shuffle$1,
        shuffler: shuffler,
        sum: sum$1,
        ticks: ticks,
        tickIncrement: tickIncrement,
        tickStep: tickStep,
        transpose: transpose,
        variance: variance,
        zip: zip,
        every: every,
        some: some,
        filter: filter$1,
        map: map$1,
        reduce: reduce,
        reverse: reverse$1,
        sort: sort,
        difference: difference,
        disjoint: disjoint,
        intersection: intersection,
        subset: subset,
        superset: superset,
        union: union,
        InternMap: InternMap,
        InternSet: InternSet,
        axisTop: axisTop,
        axisRight: axisRight,
        axisBottom: axisBottom,
        axisLeft: axisLeft,
        brush: brush,
        brushX: brushX,
        brushY: brushY,
        brushSelection: brushSelection,
        chord: chord,
        chordTranspose: chordTranspose,
        chordDirected: chordDirected,
        ribbon: ribbon$1,
        ribbonArrow: ribbonArrow,
        color: color,
        rgb: rgb,
        hsl: hsl$2,
        lab: lab$1,
        hcl: hcl$2,
        lch: lch,
        gray: gray,
        cubehelix: cubehelix$3,
        contours: contours,
        contourDensity: density,
        Delaunay: Delaunay,
        Voronoi: Voronoi,
        dispatch: dispatch,
        drag: drag,
        dragDisable: dragDisable,
        dragEnable: yesdrag,
        dsvFormat: dsvFormat,
        csvParse: csvParse,
        csvParseRows: csvParseRows,
        csvFormat: csvFormat,
        csvFormatBody: csvFormatBody,
        csvFormatRows: csvFormatRows,
        csvFormatRow: csvFormatRow,
        csvFormatValue: csvFormatValue,
        tsvParse: tsvParse,
        tsvParseRows: tsvParseRows,
        tsvFormat: tsvFormat,
        tsvFormatBody: tsvFormatBody,
        tsvFormatRows: tsvFormatRows,
        tsvFormatRow: tsvFormatRow,
        tsvFormatValue: tsvFormatValue,
        autoType: autoType,
        easeLinear: linear$1,
        easeQuad: quadInOut,
        easeQuadIn: quadIn,
        easeQuadOut: quadOut,
        easeQuadInOut: quadInOut,
        easeCubic: cubicInOut,
        easeCubicIn: cubicIn,
        easeCubicOut: cubicOut,
        easeCubicInOut: cubicInOut,
        easePoly: polyInOut,
        easePolyIn: polyIn,
        easePolyOut: polyOut,
        easePolyInOut: polyInOut,
        easeSin: sinInOut,
        easeSinIn: sinIn,
        easeSinOut: sinOut,
        easeSinInOut: sinInOut,
        easeExp: expInOut,
        easeExpIn: expIn,
        easeExpOut: expOut,
        easeExpInOut: expInOut,
        easeCircle: circleInOut,
        easeCircleIn: circleIn,
        easeCircleOut: circleOut,
        easeCircleInOut: circleInOut,
        easeBounce: bounceOut,
        easeBounceIn: bounceIn,
        easeBounceOut: bounceOut,
        easeBounceInOut: bounceInOut,
        easeBack: backInOut,
        easeBackIn: backIn,
        easeBackOut: backOut,
        easeBackInOut: backInOut,
        easeElastic: elasticOut,
        easeElasticIn: elasticIn,
        easeElasticOut: elasticOut,
        easeElasticInOut: elasticInOut,
        blob: blob,
        buffer: buffer,
        dsv: dsv,
        csv: csv,
        tsv: tsv,
        image: image,
        json: json,
        text: text$1,
        xml: xml,
        html: html,
        svg: svg,
        forceCenter: center,
        forceCollide: collide,
        forceLink: link$2,
        forceManyBody: manyBody,
        forceRadial: radial$1,
        forceSimulation: simulation,
        forceX: x$1,
        forceY: y$1,
        formatDefaultLocale: defaultLocale$1,
        get format () { return format; },
        get formatPrefix () { return formatPrefix; },
        formatLocale: formatLocale$1,
        formatSpecifier: formatSpecifier,
        FormatSpecifier: FormatSpecifier,
        precisionFixed: precisionFixed,
        precisionPrefix: precisionPrefix,
        precisionRound: precisionRound,
        geoArea: area$2,
        geoBounds: bounds,
        geoCentroid: centroid$1,
        geoCircle: circle$2,
        geoClipAntimeridian: clipAntimeridian,
        geoClipCircle: clipCircle,
        geoClipExtent: extent,
        geoClipRectangle: clipRectangle,
        geoContains: contains$1,
        geoDistance: distance,
        geoGraticule: graticule,
        geoGraticule10: graticule10,
        geoInterpolate: interpolate,
        geoLength: length$1,
        geoPath: index$2,
        geoAlbers: albers,
        geoAlbersUsa: albersUsa,
        geoAzimuthalEqualArea: azimuthalEqualArea,
        geoAzimuthalEqualAreaRaw: azimuthalEqualAreaRaw,
        geoAzimuthalEquidistant: azimuthalEquidistant,
        geoAzimuthalEquidistantRaw: azimuthalEquidistantRaw,
        geoConicConformal: conicConformal,
        geoConicConformalRaw: conicConformalRaw,
        geoConicEqualArea: conicEqualArea,
        geoConicEqualAreaRaw: conicEqualAreaRaw,
        geoConicEquidistant: conicEquidistant,
        geoConicEquidistantRaw: conicEquidistantRaw,
        geoEqualEarth: equalEarth,
        geoEqualEarthRaw: equalEarthRaw,
        geoEquirectangular: equirectangular,
        geoEquirectangularRaw: equirectangularRaw,
        geoGnomonic: gnomonic,
        geoGnomonicRaw: gnomonicRaw,
        geoIdentity: identity$4,
        geoProjection: projection,
        geoProjectionMutator: projectionMutator,
        geoMercator: mercator,
        geoMercatorRaw: mercatorRaw,
        geoNaturalEarth1: naturalEarth1,
        geoNaturalEarth1Raw: naturalEarth1Raw,
        geoOrthographic: orthographic,
        geoOrthographicRaw: orthographicRaw,
        geoStereographic: stereographic,
        geoStereographicRaw: stereographicRaw,
        geoTransverseMercator: transverseMercator,
        geoTransverseMercatorRaw: transverseMercatorRaw,
        geoRotation: rotation,
        geoStream: geoStream,
        geoTransform: transform$1,
        cluster: cluster,
        hierarchy: hierarchy,
        pack: index$1,
        packSiblings: siblings,
        packEnclose: enclose,
        partition: partition,
        stratify: stratify,
        tree: tree,
        treemap: index,
        treemapBinary: binary,
        treemapDice: treemapDice,
        treemapSlice: treemapSlice,
        treemapSliceDice: sliceDice,
        treemapSquarify: squarify,
        treemapResquarify: resquarify,
        interpolate: interpolate$2,
        interpolateArray: array$3,
        interpolateBasis: basis$2,
        interpolateBasisClosed: basisClosed$1,
        interpolateDate: date$1,
        interpolateDiscrete: discrete,
        interpolateHue: hue,
        interpolateNumber: interpolateNumber,
        interpolateNumberArray: numberArray,
        interpolateObject: object$1,
        interpolateRound: interpolateRound,
        interpolateString: interpolateString,
        interpolateTransformCss: interpolateTransformCss,
        interpolateTransformSvg: interpolateTransformSvg,
        interpolateZoom: interpolateZoom,
        interpolateRgb: interpolateRgb,
        interpolateRgbBasis: rgbBasis,
        interpolateRgbBasisClosed: rgbBasisClosed,
        interpolateHsl: hsl$1,
        interpolateHslLong: hslLong,
        interpolateLab: lab,
        interpolateHcl: hcl$1,
        interpolateHclLong: hclLong,
        interpolateCubehelix: cubehelix$2,
        interpolateCubehelixLong: cubehelixLong,
        piecewise: piecewise,
        quantize: quantize$1,
        path: path,
        polygonArea: area$1,
        polygonCentroid: centroid,
        polygonHull: hull,
        polygonContains: contains,
        polygonLength: length,
        quadtree: quadtree,
        randomUniform: uniform,
        randomInt: int,
        randomNormal: normal,
        randomLogNormal: logNormal,
        randomBates: bates,
        randomIrwinHall: irwinHall,
        randomExponential: exponential,
        randomPareto: pareto,
        randomBernoulli: bernoulli,
        randomGeometric: geometric,
        randomBinomial: binomial,
        randomGamma: gamma,
        randomBeta: beta,
        randomWeibull: weibull,
        randomCauchy: cauchy,
        randomLogistic: logistic,
        randomPoisson: poisson,
        randomLcg: lcg,
        scaleBand: band,
        scalePoint: point$4,
        scaleIdentity: identity$2,
        scaleLinear: linear,
        scaleLog: log,
        scaleSymlog: symlog,
        scaleOrdinal: ordinal,
        scaleImplicit: implicit,
        scalePow: pow,
        scaleSqrt: sqrt$1,
        scaleRadial: radial,
        scaleQuantile: quantile,
        scaleQuantize: quantize,
        scaleThreshold: threshold,
        scaleTime: time,
        scaleUtc: utcTime,
        scaleSequential: sequential,
        scaleSequentialLog: sequentialLog,
        scaleSequentialPow: sequentialPow,
        scaleSequentialSqrt: sequentialSqrt,
        scaleSequentialSymlog: sequentialSymlog,
        scaleSequentialQuantile: sequentialQuantile,
        scaleDiverging: diverging$1,
        scaleDivergingLog: divergingLog,
        scaleDivergingPow: divergingPow,
        scaleDivergingSqrt: divergingSqrt,
        scaleDivergingSymlog: divergingSymlog,
        tickFormat: tickFormat,
        schemeCategory10: category10,
        schemeAccent: Accent,
        schemeDark2: Dark2,
        schemePaired: Paired,
        schemePastel1: Pastel1,
        schemePastel2: Pastel2,
        schemeSet1: Set1,
        schemeSet2: Set2,
        schemeSet3: Set3,
        schemeTableau10: Tableau10,
        interpolateBrBG: BrBG,
        schemeBrBG: scheme$q,
        interpolatePRGn: PRGn,
        schemePRGn: scheme$p,
        interpolatePiYG: PiYG,
        schemePiYG: scheme$o,
        interpolatePuOr: PuOr,
        schemePuOr: scheme$n,
        interpolateRdBu: RdBu,
        schemeRdBu: scheme$m,
        interpolateRdGy: RdGy,
        schemeRdGy: scheme$l,
        interpolateRdYlBu: RdYlBu,
        schemeRdYlBu: scheme$k,
        interpolateRdYlGn: RdYlGn,
        schemeRdYlGn: scheme$j,
        interpolateSpectral: Spectral,
        schemeSpectral: scheme$i,
        interpolateBuGn: BuGn,
        schemeBuGn: scheme$h,
        interpolateBuPu: BuPu,
        schemeBuPu: scheme$g,
        interpolateGnBu: GnBu,
        schemeGnBu: scheme$f,
        interpolateOrRd: OrRd,
        schemeOrRd: scheme$e,
        interpolatePuBuGn: PuBuGn,
        schemePuBuGn: scheme$d,
        interpolatePuBu: PuBu,
        schemePuBu: scheme$c,
        interpolatePuRd: PuRd,
        schemePuRd: scheme$b,
        interpolateRdPu: RdPu,
        schemeRdPu: scheme$a,
        interpolateYlGnBu: YlGnBu,
        schemeYlGnBu: scheme$9,
        interpolateYlGn: YlGn,
        schemeYlGn: scheme$8,
        interpolateYlOrBr: YlOrBr,
        schemeYlOrBr: scheme$7,
        interpolateYlOrRd: YlOrRd,
        schemeYlOrRd: scheme$6,
        interpolateBlues: Blues,
        schemeBlues: scheme$5,
        interpolateGreens: Greens,
        schemeGreens: scheme$4,
        interpolateGreys: Greys,
        schemeGreys: scheme$3,
        interpolatePurples: Purples,
        schemePurples: scheme$2,
        interpolateReds: Reds,
        schemeReds: scheme$1,
        interpolateOranges: Oranges,
        schemeOranges: scheme,
        interpolateCividis: cividis,
        interpolateCubehelixDefault: cubehelix,
        interpolateRainbow: rainbow,
        interpolateWarm: warm,
        interpolateCool: cool,
        interpolateSinebow: sinebow,
        interpolateTurbo: turbo,
        interpolateViridis: viridis,
        interpolateMagma: magma,
        interpolateInferno: inferno,
        interpolatePlasma: plasma,
        create: create$1,
        creator: creator,
        local: local$1,
        matcher: matcher,
        namespace: namespace,
        namespaces: namespaces,
        pointer: pointer,
        pointers: pointers,
        select: select,
        selectAll: selectAll,
        selection: selection,
        selector: selector,
        selectorAll: selectorAll,
        style: styleValue,
        window: defaultView,
        arc: arc,
        area: area,
        line: line,
        pie: pie,
        areaRadial: areaRadial,
        radialArea: areaRadial,
        lineRadial: lineRadial$1,
        radialLine: lineRadial$1,
        pointRadial: pointRadial,
        linkHorizontal: linkHorizontal,
        linkVertical: linkVertical,
        linkRadial: linkRadial,
        symbol: symbol,
        symbols: symbols,
        symbolCircle: circle,
        symbolCross: cross,
        symbolDiamond: diamond,
        symbolSquare: square,
        symbolStar: star,
        symbolTriangle: triangle,
        symbolWye: wye,
        curveBasisClosed: basisClosed,
        curveBasisOpen: basisOpen,
        curveBasis: basis,
        curveBumpX: bumpX,
        curveBumpY: bumpY,
        curveBundle: bundle,
        curveCardinalClosed: cardinalClosed,
        curveCardinalOpen: cardinalOpen,
        curveCardinal: cardinal,
        curveCatmullRomClosed: catmullRomClosed,
        curveCatmullRomOpen: catmullRomOpen,
        curveCatmullRom: catmullRom,
        curveLinearClosed: linearClosed,
        curveLinear: curveLinear,
        curveMonotoneX: monotoneX,
        curveMonotoneY: monotoneY,
        curveNatural: natural,
        curveStep: step,
        curveStepAfter: stepAfter,
        curveStepBefore: stepBefore,
        stack: stack,
        stackOffsetExpand: expand,
        stackOffsetDiverging: diverging,
        stackOffsetNone: none$1,
        stackOffsetSilhouette: silhouette,
        stackOffsetWiggle: wiggle,
        stackOrderAppearance: appearance,
        stackOrderAscending: ascending,
        stackOrderDescending: descending,
        stackOrderInsideOut: insideOut,
        stackOrderNone: none,
        stackOrderReverse: reverse,
        timeInterval: newInterval,
        timeMillisecond: millisecond$1,
        timeMilliseconds: milliseconds,
        utcMillisecond: millisecond$1,
        utcMilliseconds: milliseconds,
        timeSecond: utcSecond,
        timeSeconds: seconds,
        utcSecond: utcSecond,
        utcSeconds: seconds,
        timeMinute: timeMinute,
        timeMinutes: minutes,
        timeHour: timeHour,
        timeHours: hours,
        timeDay: timeDay,
        timeDays: days,
        timeWeek: sunday,
        timeWeeks: sundays,
        timeSunday: sunday,
        timeSundays: sundays,
        timeMonday: monday,
        timeMondays: mondays,
        timeTuesday: tuesday,
        timeTuesdays: tuesdays,
        timeWednesday: wednesday,
        timeWednesdays: wednesdays,
        timeThursday: thursday,
        timeThursdays: thursdays,
        timeFriday: friday,
        timeFridays: fridays,
        timeSaturday: saturday,
        timeSaturdays: saturdays,
        timeMonth: timeMonth,
        timeMonths: months,
        timeYear: timeYear,
        timeYears: years,
        utcMinute: utcMinute$1,
        utcMinutes: utcMinutes,
        utcHour: utcHour$1,
        utcHours: utcHours,
        utcDay: utcDay$1,
        utcDays: utcDays,
        utcWeek: utcSunday,
        utcWeeks: utcSundays,
        utcSunday: utcSunday,
        utcSundays: utcSundays,
        utcMonday: utcMonday,
        utcMondays: utcMondays,
        utcTuesday: utcTuesday,
        utcTuesdays: utcTuesdays,
        utcWednesday: utcWednesday,
        utcWednesdays: utcWednesdays,
        utcThursday: utcThursday,
        utcThursdays: utcThursdays,
        utcFriday: utcFriday,
        utcFridays: utcFridays,
        utcSaturday: utcSaturday,
        utcSaturdays: utcSaturdays,
        utcMonth: utcMonth$1,
        utcMonths: utcMonths,
        utcYear: utcYear$1,
        utcYears: utcYears,
        utcTicks: utcTicks,
        utcTickInterval: utcTickInterval,
        timeTicks: timeTicks,
        timeTickInterval: timeTickInterval,
        timeFormatDefaultLocale: defaultLocale,
        get timeFormat () { return timeFormat; },
        get timeParse () { return timeParse; },
        get utcFormat () { return utcFormat; },
        get utcParse () { return utcParse; },
        timeFormatLocale: formatLocale,
        isoFormat: formatIso$1,
        isoParse: parseIso$1,
        now: now,
        timer: timer,
        timerFlush: timerFlush,
        timeout: timeout,
        interval: interval,
        transition: transition$1,
        active: active,
        interrupt: interrupt,
        zoom: zoom,
        zoomTransform: transform,
        zoomIdentity: identity
    });

    var data = [
    	{
    		".universe": 1,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option1",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.3749,
    				"std.error": 0.4047,
    				statistic: 15.7515,
    				"p.value": 4.0228e-41,
    				"conf.low": 5.5785,
    				"conf.high": 7.1714,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.9138e-14,
    					6.1638e-14,
    					1.9397e-13,
    					5.9641e-13,
    					1.7919e-12,
    					5.2606e-12,
    					1.5091e-11,
    					4.2304e-11,
    					1.1588e-10,
    					3.102e-10,
    					8.1146e-10,
    					2.0744e-9,
    					5.1827e-9,
    					1.2654e-8,
    					3.0198e-8,
    					7.0432e-8,
    					1.6056e-7,
    					3.5776e-7,
    					7.7919e-7,
    					0.0000016589,
    					0.0000034527,
    					0.000007025,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0025,
    					0.004,
    					0.0062,
    					0.0095,
    					0.0141,
    					0.0207,
    					0.0296,
    					0.0415,
    					0.0571,
    					0.0769,
    					0.1015,
    					0.1315,
    					0.167,
    					0.2083,
    					0.255,
    					0.3066,
    					0.3625,
    					0.4214,
    					0.4821,
    					0.5432,
    					0.6034,
    					0.6612,
    					0.7154,
    					0.765,
    					0.8095,
    					0.8484,
    					0.8816,
    					0.9093,
    					0.9319,
    					0.9499,
    					0.9638,
    					0.9745,
    					0.9823,
    					0.988,
    					0.9921,
    					0.9948,
    					0.9967,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1627,
    				"std.error": 0.5339,
    				statistic: -2.1778,
    				"p.value": 0.0302,
    				"conf.low": -2.2134,
    				"conf.high": -0.112,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					8.6387e-13,
    					2.4697e-12,
    					6.9115e-12,
    					1.8933e-11,
    					5.077e-11,
    					1.3327e-10,
    					3.4247e-10,
    					8.6151e-10,
    					2.1216e-9,
    					5.1152e-9,
    					1.2074e-8,
    					2.7901e-8,
    					6.3128e-8,
    					1.3984e-7,
    					3.0332e-7,
    					6.4421e-7,
    					0.0000013397,
    					0.0000027283,
    					0.0000054409,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0017,
    					0.0028,
    					0.0043,
    					0.0066,
    					0.0098,
    					0.0144,
    					0.0208,
    					0.0294,
    					0.0407,
    					0.0553,
    					0.0738,
    					0.0968,
    					0.1245,
    					0.1574,
    					0.1956,
    					0.2389,
    					0.2869,
    					0.3391,
    					0.3946,
    					0.4523,
    					0.5111,
    					0.5696,
    					0.6266,
    					0.681,
    					0.7317,
    					0.778,
    					0.8194,
    					0.8556,
    					0.8865,
    					0.9124,
    					0.9336,
    					0.9506,
    					0.9639,
    					0.9742,
    					0.9819,
    					0.9875,
    					0.9915,
    					0.9944,
    					0.9964,
    					0.9977,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.5098,
    				"std.error": 0.5385,
    				statistic: -2.8038,
    				"p.value": 0.0054,
    				"conf.low": -2.5695,
    				"conf.high": -0.4501,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					7.5451e-26,
    					6.0161e-25,
    					4.6127e-24,
    					3.4009e-23,
    					2.4112e-22,
    					1.6439e-21,
    					1.0778e-20,
    					6.7955e-20,
    					4.1203e-19,
    					2.4026e-18,
    					1.3473e-17,
    					7.2665e-17,
    					3.7691e-16,
    					1.8803e-15,
    					9.0223e-15,
    					4.1639e-14,
    					1.8484e-13,
    					7.8925e-13,
    					3.2417e-12,
    					1.2809e-11,
    					4.8685e-11,
    					1.7803e-10,
    					6.2633e-10,
    					2.1201e-9,
    					6.9049e-9,
    					2.164e-8,
    					6.5262e-8,
    					1.8942e-7,
    					5.2912e-7,
    					0.0000014227,
    					0.0000036824,
    					0.000009176,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.001,
    					0.0019,
    					0.0035,
    					0.0063,
    					0.0108,
    					0.018,
    					0.0288,
    					0.0446,
    					0.0667,
    					0.0965,
    					0.135,
    					0.1829,
    					0.2403,
    					0.3062,
    					0.3791,
    					0.4566,
    					0.5358,
    					0.6136,
    					0.687,
    					0.7537,
    					0.8119,
    					0.8608,
    					0.9002,
    					0.9308,
    					0.9536,
    					0.9699,
    					0.9811,
    					0.9886,
    					0.9933,
    					0.9963,
    					0.998,
    					0.9989,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.045,
    				"std.error": 0.7138,
    				statistic: 2.8651,
    				"p.value": 0.0045,
    				"conf.low": 0.6404,
    				"conf.high": 3.4497,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.0938e-23,
    					2.6044e-22,
    					1.5999e-21,
    					9.4904e-21,
    					5.436e-20,
    					3.0067e-19,
    					1.6059e-18,
    					8.2825e-18,
    					4.1253e-17,
    					1.9842e-16,
    					9.2166e-16,
    					4.1345e-15,
    					1.7912e-14,
    					7.4945e-14,
    					3.0286e-13,
    					1.1821e-12,
    					4.4562e-12,
    					1.6226e-11,
    					5.7072e-11,
    					1.939e-10,
    					6.3641e-10,
    					2.0178e-9,
    					6.181e-9,
    					1.8292e-8,
    					5.2306e-8,
    					1.4452e-7,
    					3.8585e-7,
    					9.9555e-7,
    					0.0000024825,
    					0.0000059834,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0036,
    					0.0063,
    					0.0105,
    					0.0169,
    					0.0266,
    					0.0405,
    					0.0597,
    					0.0855,
    					0.1188,
    					0.1604,
    					0.2104,
    					0.2687,
    					0.334,
    					0.4049,
    					0.479,
    					0.5539,
    					0.6268,
    					0.6955,
    					0.7579,
    					0.8126,
    					0.859,
    					0.8968,
    					0.9267,
    					0.9495,
    					0.9662,
    					0.9781,
    					0.9862,
    					0.9916,
    					0.9951,
    					0.9972,
    					0.9984,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 2,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option1",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.7844,
    				"std.error": 0.322,
    				statistic: 17.9661,
    				"p.value": 1.8578e-49,
    				"conf.low": 5.1508,
    				"conf.high": 6.418,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					8.1098e-15,
    					3.5894e-14,
    					1.5315e-13,
    					6.2999e-13,
    					2.4984e-12,
    					9.5525e-12,
    					3.5214e-11,
    					1.2517e-10,
    					4.2898e-10,
    					1.4177e-9,
    					4.5183e-9,
    					1.3887e-8,
    					4.1162e-8,
    					1.1768e-7,
    					3.245e-7,
    					8.6319e-7,
    					0.0000022151,
    					0.0000054842,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0022,
    					0.0039,
    					0.0068,
    					0.0115,
    					0.0187,
    					0.0295,
    					0.045,
    					0.0665,
    					0.0951,
    					0.132,
    					0.1778,
    					0.2324,
    					0.2953,
    					0.3651,
    					0.4396,
    					0.5164,
    					0.5925,
    					0.6653,
    					0.7323,
    					0.7919,
    					0.8428,
    					0.8847,
    					0.918,
    					0.9435,
    					0.9623,
    					0.9756,
    					0.9848,
    					0.9908,
    					0.9946,
    					0.997,
    					0.9983,
    					0.9991,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5826,
    				"std.error": 0.4277,
    				statistic: -1.3622,
    				"p.value": 0.1741,
    				"conf.low": -1.4243,
    				"conf.high": 0.2591,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.4526e-24,
    					9.4522e-24,
    					5.9474e-23,
    					3.6186e-22,
    					2.1289e-21,
    					1.2112e-20,
    					6.6631e-20,
    					3.5447e-19,
    					1.8236e-18,
    					9.0724e-18,
    					4.3648e-17,
    					2.0308e-16,
    					9.1381e-16,
    					3.9766e-15,
    					1.6736e-14,
    					6.8125e-14,
    					2.682e-13,
    					1.0212e-12,
    					3.7613e-12,
    					1.34e-11,
    					4.6175e-11,
    					1.5392e-10,
    					4.9633e-10,
    					1.5483e-9,
    					4.6727e-9,
    					1.3644e-8,
    					3.8544e-8,
    					1.0536e-7,
    					2.7869e-7,
    					7.1336e-7,
    					0.0000017671,
    					0.0000042369,
    					0.0000098327,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0026,
    					0.0045,
    					0.0076,
    					0.0125,
    					0.0198,
    					0.0305,
    					0.0455,
    					0.0661,
    					0.0932,
    					0.1277,
    					0.1702,
    					0.2209,
    					0.2793,
    					0.3444,
    					0.4143,
    					0.4871,
    					0.5604,
    					0.6316,
    					0.6986,
    					0.7595,
    					0.8129,
    					0.8584,
    					0.8956,
    					0.9253,
    					0.948,
    					0.9648,
    					0.9769,
    					0.9853,
    					0.9909,
    					0.9946,
    					0.9968,
    					0.9982,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8591,
    				"std.error": 0.5827,
    				statistic: -1.4745,
    				"p.value": 0.1414,
    				"conf.low": -2.0058,
    				"conf.high": 0.2875,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.3366e-27,
    					1.6911e-26,
    					1.1836e-25,
    					8.0117e-25,
    					5.2445e-24,
    					3.3202e-23,
    					2.0328e-22,
    					1.2037e-21,
    					6.8935e-21,
    					3.8181e-20,
    					2.0453e-19,
    					1.0597e-18,
    					5.3104e-18,
    					2.5739e-17,
    					1.2067e-16,
    					5.4716e-16,
    					2.3999e-15,
    					1.0182e-14,
    					4.1786e-14,
    					1.6589e-13,
    					6.3706e-13,
    					2.3667e-12,
    					8.5059e-12,
    					2.9575e-11,
    					9.9487e-11,
    					3.2379e-10,
    					1.0196e-9,
    					3.1067e-9,
    					9.1595e-9,
    					2.6132e-8,
    					7.2149e-8,
    					1.9278e-7,
    					4.9855e-7,
    					0.0000012479,
    					0.0000030236,
    					0.0000070921,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0036,
    					0.0061,
    					0.0102,
    					0.0163,
    					0.0254,
    					0.0385,
    					0.0565,
    					0.0806,
    					0.1117,
    					0.1506,
    					0.1977,
    					0.2526,
    					0.3147,
    					0.3826,
    					0.4542,
    					0.5274,
    					0.5997,
    					0.6687,
    					0.7324,
    					0.7892,
    					0.8383,
    					0.8792,
    					0.9123,
    					0.9381,
    					0.9575,
    					0.9717,
    					0.9817,
    					0.9885,
    					0.993,
    					0.9959,
    					0.9976,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.8525,
    				"std.error": 0.7725,
    				statistic: 2.3981,
    				"p.value": 0.0171,
    				"conf.low": 0.3323,
    				"conf.high": 3.3727,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.9721e-19,
    					2.3186e-18,
    					1.0495e-17,
    					4.6106e-17,
    					1.9661e-16,
    					8.1381e-16,
    					3.2698e-15,
    					1.2752e-14,
    					4.8279e-14,
    					1.7743e-13,
    					6.3299e-13,
    					2.1923e-12,
    					7.3708e-12,
    					2.4059e-11,
    					7.6241e-11,
    					2.3457e-10,
    					7.007e-10,
    					2.0323e-9,
    					5.7234e-9,
    					1.5651e-8,
    					4.1562e-8,
    					1.0718e-7,
    					2.6841e-7,
    					6.5285e-7,
    					0.0000015423,
    					0.0000035389,
    					0.0000078883,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0017,
    					0.0029,
    					0.0049,
    					0.0081,
    					0.0128,
    					0.0198,
    					0.0297,
    					0.0435,
    					0.0621,
    					0.0864,
    					0.1171,
    					0.1549,
    					0.1999,
    					0.252,
    					0.3105,
    					0.3742,
    					0.4416,
    					0.5107,
    					0.5795,
    					0.6459,
    					0.7082,
    					0.7648,
    					0.8148,
    					0.8576,
    					0.8931,
    					0.9218,
    					0.9442,
    					0.9612,
    					0.9737,
    					0.9827,
    					0.9889,
    					0.993,
    					0.9958,
    					0.9975,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 3,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option1",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.3749,
    				"std.error": 0.4023,
    				statistic: 15.8471,
    				"p.value": 2.1725e-38,
    				"conf.low": 5.5822,
    				"conf.high": 7.1677,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.3426e-14,
    					4.3851e-14,
    					1.399e-13,
    					4.3598e-13,
    					1.3272e-12,
    					3.9469e-12,
    					1.1466e-11,
    					3.2539e-11,
    					9.0209e-11,
    					2.4432e-10,
    					6.4648e-10,
    					1.6712e-9,
    					4.2209e-9,
    					1.0416e-8,
    					2.5112e-8,
    					5.9159e-8,
    					1.3618e-7,
    					3.063e-7,
    					6.7326e-7,
    					0.0000014462,
    					0.0000030358,
    					0.0000062281,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0024,
    					0.0038,
    					0.0059,
    					0.0091,
    					0.0136,
    					0.02,
    					0.0288,
    					0.0406,
    					0.056,
    					0.0756,
    					0.1002,
    					0.13,
    					0.1656,
    					0.2069,
    					0.2537,
    					0.3056,
    					0.3617,
    					0.4209,
    					0.482,
    					0.5435,
    					0.604,
    					0.6621,
    					0.7165,
    					0.7664,
    					0.811,
    					0.8499,
    					0.883,
    					0.9107,
    					0.9331,
    					0.9509,
    					0.9647,
    					0.9751,
    					0.9829,
    					0.9884,
    					0.9924,
    					0.9951,
    					0.9969,
    					0.9981,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1627,
    				"std.error": 0.5307,
    				statistic: -2.191,
    				"p.value": 0.0295,
    				"conf.low": -2.2085,
    				"conf.high": -0.1169,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					6.343e-13,
    					1.8363e-12,
    					5.2024e-12,
    					1.4424e-11,
    					3.9136e-11,
    					1.0392e-10,
    					2.7006e-10,
    					6.8684e-10,
    					1.7097e-9,
    					4.1652e-9,
    					9.9321e-9,
    					2.3181e-8,
    					5.2956e-8,
    					1.1842e-7,
    					2.592e-7,
    					5.5538e-7,
    					0.000001165,
    					0.0000023922,
    					0.0000048093,
    					0.0000094663,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0026,
    					0.0041,
    					0.0063,
    					0.0095,
    					0.0139,
    					0.0202,
    					0.0286,
    					0.0398,
    					0.0542,
    					0.0726,
    					0.0954,
    					0.1231,
    					0.156,
    					0.1941,
    					0.2375,
    					0.2857,
    					0.3382,
    					0.394,
    					0.452,
    					0.5112,
    					0.57,
    					0.6274,
    					0.682,
    					0.7329,
    					0.7794,
    					0.8209,
    					0.857,
    					0.8879,
    					0.9137,
    					0.9348,
    					0.9516,
    					0.9648,
    					0.9749,
    					0.9824,
    					0.9879,
    					0.9919,
    					0.9946,
    					0.9965,
    					0.9978,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.4497,
    				"std.error": 0.6264,
    				statistic: -2.3141,
    				"p.value": 0.0216,
    				"conf.low": -2.6842,
    				"conf.high": -0.2152,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.6163e-20,
    					2.6596e-19,
    					1.2236e-18,
    					5.4693e-18,
    					2.3752e-17,
    					1.0022e-16,
    					4.1087e-16,
    					1.6366e-15,
    					6.3341e-15,
    					2.382e-14,
    					8.7038e-14,
    					3.0903e-13,
    					1.0662e-12,
    					3.5746e-12,
    					1.1646e-11,
    					3.6869e-11,
    					1.1344e-10,
    					3.3918e-10,
    					9.8563e-10,
    					2.7837e-9,
    					7.6411e-9,
    					2.0387e-8,
    					5.287e-8,
    					1.3328e-7,
    					3.2661e-7,
    					7.781e-7,
    					0.0000018022,
    					0.0000040583,
    					0.0000088859,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0017,
    					0.003,
    					0.0049,
    					0.0079,
    					0.0125,
    					0.0192,
    					0.0288,
    					0.042,
    					0.0598,
    					0.0829,
    					0.1122,
    					0.1482,
    					0.1913,
    					0.2412,
    					0.2976,
    					0.3592,
    					0.4248,
    					0.4925,
    					0.5605,
    					0.6267,
    					0.6893,
    					0.7469,
    					0.7983,
    					0.8429,
    					0.8805,
    					0.9112,
    					0.9357,
    					0.9545,
    					0.9686,
    					0.9789,
    					0.9862,
    					0.9912,
    					0.9945,
    					0.9967,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.4325,
    				"std.error": 0.8284,
    				statistic: 2.9364,
    				"p.value": 0.0037,
    				"conf.low": 0.8,
    				"conf.high": 4.0651,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.9545e-19,
    					8.36e-19,
    					3.4843e-18,
    					1.415e-17,
    					5.5995e-17,
    					2.1592e-16,
    					8.113e-16,
    					2.9705e-15,
    					1.0599e-14,
    					3.6851e-14,
    					1.2486e-13,
    					4.1228e-13,
    					1.3266e-12,
    					4.1602e-12,
    					1.2714e-11,
    					3.7869e-11,
    					1.0993e-10,
    					3.1103e-10,
    					8.577e-10,
    					2.3053e-9,
    					6.0397e-9,
    					1.5424e-8,
    					3.8395e-8,
    					9.3174e-8,
    					2.2042e-7,
    					5.0836e-7,
    					0.0000011431,
    					0.000002506,
    					0.000005357,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0027,
    					0.0044,
    					0.007,
    					0.0108,
    					0.0164,
    					0.0243,
    					0.0352,
    					0.0497,
    					0.0687,
    					0.0929,
    					0.1228,
    					0.1588,
    					0.2012,
    					0.2498,
    					0.3039,
    					0.3628,
    					0.425,
    					0.4892,
    					0.5537,
    					0.6168,
    					0.6769,
    					0.7328,
    					0.7833,
    					0.8277,
    					0.8659,
    					0.8978,
    					0.9238,
    					0.9445,
    					0.9604,
    					0.9724,
    					0.9812,
    					0.9875,
    					0.9919,
    					0.9949,
    					0.9968,
    					0.9981,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 4,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option2",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.3954,
    				"std.error": 0.376,
    				statistic: 17.0072,
    				"p.value": 7.7631e-48,
    				"conf.low": 5.6558,
    				"conf.high": 7.1349,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.2196e-16,
    					4.7545e-16,
    					1.8043e-15,
    					6.6658e-15,
    					2.3973e-14,
    					8.393e-14,
    					2.8606e-13,
    					9.4919e-13,
    					3.0662e-12,
    					9.6434e-12,
    					2.9528e-11,
    					8.8028e-11,
    					2.5551e-10,
    					7.2213e-10,
    					1.9872e-9,
    					5.325e-9,
    					1.3895e-8,
    					3.5305e-8,
    					8.7362e-8,
    					2.1053e-7,
    					4.9411e-7,
    					0.0000011295,
    					0.0000025149,
    					0.0000054545,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0018,
    					0.003,
    					0.0049,
    					0.0079,
    					0.0122,
    					0.0185,
    					0.0274,
    					0.0396,
    					0.056,
    					0.0772,
    					0.104,
    					0.137,
    					0.1765,
    					0.2225,
    					0.2748,
    					0.3324,
    					0.3944,
    					0.4591,
    					0.5249,
    					0.59,
    					0.6528,
    					0.7116,
    					0.7653,
    					0.8129,
    					0.854,
    					0.8886,
    					0.9168,
    					0.9394,
    					0.9568,
    					0.9699,
    					0.9796,
    					0.9865,
    					0.9912,
    					0.9945,
    					0.9966,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1388,
    				"std.error": 0.4924,
    				statistic: -2.313,
    				"p.value": 0.0213,
    				"conf.low": -2.1071,
    				"conf.high": -0.1705,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					6.8682e-15,
    					2.3719e-14,
    					7.9877e-14,
    					2.6231e-13,
    					8.3998e-13,
    					2.6231e-12,
    					7.9881e-12,
    					2.3723e-11,
    					6.8708e-11,
    					1.9407e-10,
    					5.3462e-10,
    					1.4364e-9,
    					3.764e-9,
    					9.6204e-9,
    					2.3984e-8,
    					5.8322e-8,
    					1.3834e-7,
    					3.2012e-7,
    					7.2264e-7,
    					0.0000015915,
    					0.0000034194,
    					0.0000071685,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0031,
    					0.005,
    					0.0078,
    					0.012,
    					0.0179,
    					0.0263,
    					0.0377,
    					0.0528,
    					0.0724,
    					0.0971,
    					0.1275,
    					0.1639,
    					0.2065,
    					0.2551,
    					0.3091,
    					0.3675,
    					0.4292,
    					0.4926,
    					0.5563,
    					0.6185,
    					0.6778,
    					0.7329,
    					0.7828,
    					0.8268,
    					0.8647,
    					0.8965,
    					0.9224,
    					0.9431,
    					0.9592,
    					0.9714,
    					0.9804,
    					0.9868,
    					0.9914,
    					0.9945,
    					0.9966,
    					0.9979,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.6952,
    				"std.error": 0.4935,
    				statistic: -3.4351,
    				"p.value": 0.0007,
    				"conf.low": -2.6657,
    				"conf.high": -0.7246,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.4623e-28,
    					1.592e-27,
    					1.6542e-26,
    					1.6404e-25,
    					1.5527e-24,
    					1.4026e-23,
    					1.2094e-22,
    					9.9526e-22,
    					7.818e-21,
    					5.8618e-20,
    					4.1953e-19,
    					2.8662e-18,
    					1.8692e-17,
    					1.1637e-16,
    					6.9159e-16,
    					3.924e-15,
    					2.1255e-14,
    					1.0993e-13,
    					5.4279e-13,
    					2.5591e-12,
    					1.1521e-11,
    					4.953e-11,
    					2.0334e-10,
    					7.9726e-10,
    					2.9856e-9,
    					1.0679e-8,
    					3.6488e-8,
    					1.191e-7,
    					3.7143e-7,
    					0.0000011068,
    					0.0000031519,
    					0.0000085787,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0007,
    					0.0014,
    					0.0027,
    					0.0052,
    					0.0095,
    					0.0166,
    					0.0279,
    					0.045,
    					0.0696,
    					0.1035,
    					0.148,
    					0.2038,
    					0.2706,
    					0.3468,
    					0.4297,
    					0.5159,
    					0.6013,
    					0.6821,
    					0.7551,
    					0.8179,
    					0.8696,
    					0.9101,
    					0.9404,
    					0.9621,
    					0.9768,
    					0.9864,
    					0.9924,
    					0.9959,
    					0.9979,
    					0.999,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.2779,
    				"std.error": 0.6531,
    				statistic: 3.4876,
    				"p.value": 0.0005,
    				"conf.low": 0.9934,
    				"conf.high": 3.5625,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					6.1621e-29,
    					6.0182e-28,
    					5.6364e-27,
    					5.0623e-26,
    					4.3602e-25,
    					3.6015e-24,
    					2.8529e-23,
    					2.1674e-22,
    					1.5791e-21,
    					1.1034e-20,
    					7.3945e-20,
    					4.7528e-19,
    					2.93e-18,
    					1.7325e-17,
    					9.8255e-17,
    					5.345e-16,
    					2.7891e-15,
    					1.3961e-14,
    					6.7033e-14,
    					3.0877e-13,
    					1.3644e-12,
    					5.7844e-12,
    					2.3527e-11,
    					9.1815e-11,
    					3.438e-10,
    					1.2353e-9,
    					4.2594e-9,
    					1.4094e-8,
    					4.4761e-8,
    					1.3644e-7,
    					3.9922e-7,
    					0.0000011214,
    					0.0000030242,
    					0.0000078311,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.001,
    					0.002,
    					0.0037,
    					0.0068,
    					0.0118,
    					0.0198,
    					0.032,
    					0.0497,
    					0.0747,
    					0.1082,
    					0.1513,
    					0.2046,
    					0.2677,
    					0.3394,
    					0.4174,
    					0.4988,
    					0.5802,
    					0.6584,
    					0.7302,
    					0.7936,
    					0.8472,
    					0.8907,
    					0.9244,
    					0.9496,
    					0.9676,
    					0.9799,
    					0.988,
    					0.9931,
    					0.9962,
    					0.998,
    					0.999,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 5,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option2",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.6301,
    				"std.error": 0.295,
    				statistic: 19.0855,
    				"p.value": 2.4292e-56,
    				"conf.low": 5.0499,
    				"conf.high": 6.2103,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.9774e-15,
    					1.0386e-14,
    					5.2226e-14,
    					2.514e-13,
    					1.1585e-12,
    					5.1113e-12,
    					2.1591e-11,
    					8.7325e-11,
    					3.3819e-10,
    					1.2542e-9,
    					4.4541e-9,
    					1.5149e-8,
    					4.9351e-8,
    					1.5399e-7,
    					4.6031e-7,
    					0.0000013182,
    					0.0000036171,
    					0.0000095109,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0013,
    					0.0025,
    					0.0048,
    					0.0086,
    					0.015,
    					0.025,
    					0.0402,
    					0.062,
    					0.0922,
    					0.132,
    					0.1824,
    					0.2433,
    					0.3138,
    					0.3918,
    					0.4745,
    					0.5583,
    					0.6395,
    					0.7149,
    					0.7818,
    					0.8387,
    					0.8849,
    					0.9208,
    					0.9475,
    					0.9665,
    					0.9794,
    					0.9879,
    					0.9931,
    					0.9963,
    					0.998,
    					0.999,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3248,
    				"std.error": 0.3914,
    				statistic: -0.8298,
    				"p.value": 0.4072,
    				"conf.low": -1.0946,
    				"conf.high": 0.445,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.0028e-32,
    					3.1943e-31,
    					3.2641e-30,
    					3.204e-29,
    					3.0211e-28,
    					2.7364e-27,
    					2.3809e-26,
    					1.9901e-25,
    					1.5979e-24,
    					1.2326e-23,
    					9.1335e-23,
    					6.502e-22,
    					4.4468e-21,
    					2.9217e-20,
    					1.8443e-19,
    					1.1185e-18,
    					6.5175e-18,
    					3.6488e-17,
    					1.9627e-16,
    					1.0144e-15,
    					5.0375e-15,
    					2.4039e-14,
    					1.1023e-13,
    					4.857e-13,
    					2.0567e-12,
    					8.3696e-12,
    					3.2733e-11,
    					1.2304e-10,
    					4.4452e-10,
    					1.5437e-9,
    					5.1529e-9,
    					1.6536e-8,
    					5.1013e-8,
    					1.5131e-7,
    					4.3153e-7,
    					0.0000011835,
    					0.0000031213,
    					0.0000079177,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0018,
    					0.0034,
    					0.0061,
    					0.0106,
    					0.0177,
    					0.0286,
    					0.0445,
    					0.0669,
    					0.0972,
    					0.1364,
    					0.1854,
    					0.2439,
    					0.3111,
    					0.3854,
    					0.4641,
    					0.5443,
    					0.6227,
    					0.6963,
    					0.7627,
    					0.8202,
    					0.8681,
    					0.9064,
    					0.9358,
    					0.9574,
    					0.9727,
    					0.9832,
    					0.99,
    					0.9942,
    					0.9968,
    					0.9983,
    					0.9991,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.7222,
    				"std.error": 0.5357,
    				statistic: -1.3482,
    				"p.value": 0.1785,
    				"conf.low": -1.7758,
    				"conf.high": 0.3314,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.5072e-33,
    					2.7336e-32,
    					2.8645e-31,
    					2.885e-30,
    					2.7927e-29,
    					2.5984e-28,
    					2.3236e-27,
    					1.9972e-26,
    					1.65e-25,
    					1.3103e-24,
    					1.0001e-23,
    					7.3375e-23,
    					5.1747e-22,
    					3.5079e-21,
    					2.2859e-20,
    					1.4319e-19,
    					8.6225e-19,
    					4.9913e-18,
    					2.7776e-17,
    					1.4859e-16,
    					7.6424e-16,
    					3.7789e-15,
    					1.7965e-14,
    					8.2113e-14,
    					3.6086e-13,
    					1.5249e-12,
    					6.1957e-12,
    					2.4207e-11,
    					9.0952e-11,
    					3.2863e-10,
    					1.142e-9,
    					3.8166e-9,
    					1.2269e-8,
    					3.7935e-8,
    					1.1284e-7,
    					3.2289e-7,
    					8.8895e-7,
    					0.0000023549,
    					0.0000060031,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0014,
    					0.0027,
    					0.005,
    					0.0087,
    					0.0147,
    					0.0239,
    					0.0376,
    					0.0571,
    					0.0838,
    					0.119,
    					0.1635,
    					0.2176,
    					0.2808,
    					0.3517,
    					0.4283,
    					0.5076,
    					0.5866,
    					0.6623,
    					0.7319,
    					0.7934,
    					0.8457,
    					0.8884,
    					0.9219,
    					0.9471,
    					0.9654,
    					0.9782,
    					0.9867,
    					0.9922,
    					0.9956,
    					0.9976,
    					0.9987,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.6302,
    				"std.error": 0.7122,
    				statistic: 2.289,
    				"p.value": 0.0227,
    				"conf.low": 0.2295,
    				"conf.high": 3.0309,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					9.1757e-21,
    					5.2795e-20,
    					2.9328e-19,
    					1.573e-18,
    					8.1461e-18,
    					4.0731e-17,
    					1.9664e-16,
    					9.1668e-16,
    					4.1262e-15,
    					1.7934e-14,
    					7.5274e-14,
    					3.0509e-13,
    					1.1941e-12,
    					4.5135e-12,
    					1.6476e-11,
    					5.8086e-11,
    					1.9778e-10,
    					6.5046e-10,
    					2.0663e-9,
    					6.3403e-9,
    					1.8794e-8,
    					5.3815e-8,
    					1.4888e-7,
    					3.9794e-7,
    					0.0000010277,
    					0.0000025649,
    					0.0000061861,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0021,
    					0.0037,
    					0.0065,
    					0.0108,
    					0.0175,
    					0.0274,
    					0.0416,
    					0.0613,
    					0.0877,
    					0.1217,
    					0.164,
    					0.2148,
    					0.2738,
    					0.3399,
    					0.4113,
    					0.4857,
    					0.5607,
    					0.6335,
    					0.7018,
    					0.7637,
    					0.8177,
    					0.8633,
    					0.9004,
    					0.9295,
    					0.9516,
    					0.9678,
    					0.9792,
    					0.987,
    					0.9921,
    					0.9954,
    					0.9974,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 6,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option2",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.3954,
    				"std.error": 0.3712,
    				statistic: 17.2295,
    				"p.value": 6.7488e-45,
    				"conf.low": 5.6645,
    				"conf.high": 7.1263,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					4.9747e-17,
    					2.0091e-16,
    					7.8927e-16,
    					3.0162e-15,
    					1.1213e-14,
    					4.0551e-14,
    					1.4266e-13,
    					4.8827e-13,
    					1.6258e-12,
    					5.2664e-12,
    					1.6597e-11,
    					5.089e-11,
    					1.5182e-10,
    					4.4068e-10,
    					1.2446e-9,
    					3.4204e-9,
    					9.1465e-9,
    					2.3801e-8,
    					6.0272e-8,
    					1.4853e-7,
    					3.5625e-7,
    					8.3162e-7,
    					0.0000018895,
    					0.000004179,
    					0.000008997,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0027,
    					0.0045,
    					0.0072,
    					0.0113,
    					0.0173,
    					0.0259,
    					0.0377,
    					0.0536,
    					0.0745,
    					0.101,
    					0.1339,
    					0.1734,
    					0.2196,
    					0.2722,
    					0.3304,
    					0.393,
    					0.4585,
    					0.5252,
    					0.5912,
    					0.6547,
    					0.7141,
    					0.7681,
    					0.816,
    					0.8571,
    					0.8916,
    					0.9196,
    					0.9417,
    					0.9588,
    					0.9716,
    					0.9809,
    					0.9874,
    					0.9919,
    					0.995,
    					0.9969,
    					0.9982,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1388,
    				"std.error": 0.486,
    				statistic: -2.3432,
    				"p.value": 0.0199,
    				"conf.low": -2.0958,
    				"conf.high": -0.1818,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.1102e-15,
    					1.1091e-14,
    					3.8543e-14,
    					1.3052e-13,
    					4.3073e-13,
    					1.3852e-12,
    					4.3413e-12,
    					1.326e-11,
    					3.9469e-11,
    					1.145e-10,
    					3.2374e-10,
    					8.9216e-10,
    					2.3963e-9,
    					6.2736e-9,
    					1.601e-8,
    					3.9824e-8,
    					9.6569e-8,
    					2.2828e-7,
    					5.2607e-7,
    					0.000001182,
    					0.0000025892,
    					0.0000055302,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0028,
    					0.0045,
    					0.0071,
    					0.0111,
    					0.0168,
    					0.0248,
    					0.0358,
    					0.0505,
    					0.0698,
    					0.0942,
    					0.1244,
    					0.1608,
    					0.2035,
    					0.2524,
    					0.3068,
    					0.3658,
    					0.4283,
    					0.4925,
    					0.557,
    					0.62,
    					0.68,
    					0.7356,
    					0.7858,
    					0.8299,
    					0.8678,
    					0.8994,
    					0.9251,
    					0.9455,
    					0.9612,
    					0.973,
    					0.9816,
    					0.9878,
    					0.9921,
    					0.995,
    					0.9969,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.4875,
    				"std.error": 0.573,
    				statistic: -2.596,
    				"p.value": 0.01,
    				"conf.low": -2.6158,
    				"conf.high": -0.3592,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.2043e-23,
    					2.0235e-22,
    					1.2344e-21,
    					7.2744e-21,
    					4.1414e-20,
    					2.2778e-19,
    					1.2103e-18,
    					6.213e-18,
    					3.0814e-17,
    					1.4765e-16,
    					6.8351e-16,
    					3.0572e-15,
    					1.3212e-14,
    					5.5171e-14,
    					2.226e-13,
    					8.6786e-13,
    					3.2695e-12,
    					1.1902e-11,
    					4.1873e-11,
    					1.4236e-10,
    					4.6775e-10,
    					1.4854e-9,
    					4.559e-9,
    					1.3525e-8,
    					3.8783e-8,
    					1.0751e-7,
    					2.881e-7,
    					7.4642e-7,
    					0.0000018698,
    					0.000004529,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0029,
    					0.0051,
    					0.0086,
    					0.014,
    					0.0222,
    					0.0342,
    					0.0509,
    					0.0736,
    					0.1034,
    					0.1411,
    					0.1871,
    					0.2414,
    					0.3033,
    					0.3714,
    					0.4438,
    					0.5182,
    					0.5919,
    					0.6625,
    					0.7278,
    					0.7861,
    					0.8364,
    					0.8783,
    					0.912,
    					0.9382,
    					0.9579,
    					0.9722,
    					0.9822,
    					0.9889,
    					0.9933,
    					0.9961,
    					0.9978,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.4442,
    				"std.error": 0.7573,
    				statistic: 3.2274,
    				"p.value": 0.0014,
    				"conf.low": 0.9529,
    				"conf.high": 3.9355,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.9845e-23,
    					3.4033e-22,
    					1.8762e-21,
    					1.0026e-20,
    					5.1941e-20,
    					2.6085e-19,
    					1.27e-18,
    					5.9939e-18,
    					2.7426e-17,
    					1.2166e-16,
    					5.2319e-16,
    					2.1814e-15,
    					8.8179e-15,
    					3.4559e-14,
    					1.3132e-13,
    					4.8383e-13,
    					1.7284e-12,
    					5.987e-12,
    					2.0109e-11,
    					6.5495e-11,
    					2.0685e-10,
    					6.3355e-10,
    					1.8818e-9,
    					5.4208e-9,
    					1.5145e-8,
    					4.1038e-8,
    					1.0786e-7,
    					2.75e-7,
    					6.8011e-7,
    					0.0000016318,
    					0.0000037984,
    					0.000008579,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0034,
    					0.0058,
    					0.0094,
    					0.0149,
    					0.023,
    					0.0346,
    					0.0505,
    					0.0717,
    					0.0993,
    					0.1338,
    					0.1759,
    					0.2254,
    					0.2821,
    					0.3448,
    					0.4121,
    					0.4821,
    					0.5526,
    					0.6216,
    					0.6868,
    					0.7467,
    					0.7999,
    					0.8458,
    					0.8841,
    					0.9151,
    					0.9395,
    					0.958,
    					0.9716,
    					0.9813,
    					0.9881,
    					0.9926,
    					0.9955,
    					0.9974,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 7,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option3",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.1759,
    				"std.error": 0.3523,
    				statistic: 17.5286,
    				"p.value": 3.7304e-48,
    				"conf.low": 5.4826,
    				"conf.high": 6.8692,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.2015e-16,
    					9.2806e-16,
    					3.7942e-15,
    					1.5044e-14,
    					5.7852e-14,
    					2.1577e-13,
    					7.8054e-13,
    					2.7387e-12,
    					9.3203e-12,
    					3.0767e-11,
    					9.8517e-11,
    					3.0601e-10,
    					9.2205e-10,
    					2.6952e-9,
    					7.6432e-9,
    					2.1029e-8,
    					5.6134e-8,
    					1.4539e-7,
    					3.6539e-7,
    					8.9111e-7,
    					0.000002109,
    					0.0000048442,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0023,
    					0.0039,
    					0.0065,
    					0.0105,
    					0.0165,
    					0.0253,
    					0.0376,
    					0.0545,
    					0.0769,
    					0.1056,
    					0.1415,
    					0.1847,
    					0.2354,
    					0.293,
    					0.3563,
    					0.4238,
    					0.4937,
    					0.5638,
    					0.6319,
    					0.6961,
    					0.7548,
    					0.8067,
    					0.8513,
    					0.8885,
    					0.9185,
    					0.9419,
    					0.9597,
    					0.9728,
    					0.9821,
    					0.9886,
    					0.9929,
    					0.9957,
    					0.9975,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.8706,
    				"std.error": 0.507,
    				statistic: -1.7172,
    				"p.value": 0.087,
    				"conf.low": -1.8682,
    				"conf.high": 0.127,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.9346e-16,
    					2.0734e-15,
    					7.0738e-15,
    					2.3566e-14,
    					7.6668e-14,
    					2.4357e-13,
    					7.5565e-13,
    					2.2894e-12,
    					6.7739e-12,
    					1.9573e-11,
    					5.5236e-11,
    					1.5223e-10,
    					4.0977e-10,
    					1.0773e-9,
    					2.7662e-9,
    					6.9378e-9,
    					1.6996e-8,
    					4.067e-8,
    					9.5063e-8,
    					2.1707e-7,
    					4.8419e-7,
    					0.0000010552,
    					0.0000022465,
    					0.0000046729,
    					0.0000094975,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0032,
    					0.0051,
    					0.0079,
    					0.012,
    					0.0178,
    					0.0259,
    					0.0367,
    					0.0511,
    					0.0695,
    					0.0928,
    					0.1213,
    					0.1555,
    					0.1955,
    					0.2412,
    					0.2922,
    					0.3477,
    					0.4066,
    					0.4678,
    					0.5297,
    					0.5909,
    					0.65,
    					0.7057,
    					0.7568,
    					0.8028,
    					0.843,
    					0.8775,
    					0.9062,
    					0.9296,
    					0.9483,
    					0.9628,
    					0.9738,
    					0.9819,
    					0.9878,
    					0.9919,
    					0.9948,
    					0.9967,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.1194,
    				"std.error": 0.4967,
    				statistic: -2.2539,
    				"p.value": 0.0249,
    				"conf.low": -2.0967,
    				"conf.high": -0.1421,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.506e-34,
    					6.1002e-33,
    					7.8861e-32,
    					9.735e-31,
    					1.1476e-29,
    					1.2918e-28,
    					1.3887e-27,
    					1.4255e-26,
    					1.3975e-25,
    					1.3084e-24,
    					1.1698e-23,
    					9.9884e-23,
    					8.1453e-22,
    					6.3438e-21,
    					4.7188e-20,
    					3.3524e-19,
    					2.2748e-18,
    					1.4744e-17,
    					9.1275e-17,
    					5.3974e-16,
    					3.0488e-15,
    					1.6451e-14,
    					8.4803e-14,
    					4.1762e-13,
    					1.9648e-12,
    					8.8319e-12,
    					3.7932e-11,
    					1.5567e-10,
    					6.1047e-10,
    					2.2878e-9,
    					8.1941e-9,
    					2.805e-8,
    					9.1785e-8,
    					2.8711e-7,
    					8.5861e-7,
    					0.0000024552,
    					0.0000067135,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0011,
    					0.0022,
    					0.0043,
    					0.0079,
    					0.014,
    					0.0237,
    					0.0387,
    					0.0605,
    					0.0909,
    					0.1314,
    					0.183,
    					0.2455,
    					0.3181,
    					0.3984,
    					0.4833,
    					0.5689,
    					0.6514,
    					0.7273,
    					0.794,
    					0.8499,
    					0.8946,
    					0.9288,
    					0.9538,
    					0.9712,
    					0.9827,
    					0.9901,
    					0.9945,
    					0.9971,
    					0.9985,
    					0.9993,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5536,
    				"std.error": 0.6986,
    				statistic: 2.224,
    				"p.value": 0.0269,
    				"conf.low": 0.179,
    				"conf.high": 2.9282,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.6857e-21,
    					2.8269e-20,
    					1.6443e-19,
    					9.2216e-19,
    					4.9864e-18,
    					2.5997e-17,
    					1.3069e-16,
    					6.335e-16,
    					2.961e-15,
    					1.3346e-14,
    					5.8003e-14,
    					2.431e-13,
    					9.8256e-13,
    					3.8299e-12,
    					1.4397e-11,
    					5.2199e-11,
    					1.8253e-10,
    					6.1566e-10,
    					2.003e-9,
    					6.2861e-9,
    					1.9031e-8,
    					5.5585e-8,
    					1.5663e-7,
    					4.2588e-7,
    					0.0000011173,
    					0.0000028289,
    					0.0000069125,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0025,
    					0.0044,
    					0.0077,
    					0.0128,
    					0.0206,
    					0.0323,
    					0.0488,
    					0.0716,
    					0.1017,
    					0.1401,
    					0.1874,
    					0.2434,
    					0.3074,
    					0.3778,
    					0.4526,
    					0.5292,
    					0.6046,
    					0.6763,
    					0.742,
    					0.8001,
    					0.8494,
    					0.8899,
    					0.922,
    					0.9464,
    					0.9643,
    					0.977,
    					0.9856,
    					0.9913,
    					0.9949,
    					0.9971,
    					0.9984,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 8,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option3",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.7909,
    				"std.error": 0.2893,
    				statistic: 20.0139,
    				"p.value": 1.3125e-57,
    				"conf.low": 5.2215,
    				"conf.high": 6.3602,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.3822e-18,
    					3.3917e-17,
    					2.0423e-16,
    					1.1751e-15,
    					6.461e-15,
    					3.3948e-14,
    					1.7046e-13,
    					8.18e-13,
    					3.7516e-12,
    					1.6446e-11,
    					6.8905e-11,
    					2.7597e-10,
    					1.0566e-9,
    					3.8673e-9,
    					1.3533e-8,
    					4.5281e-8,
    					1.4488e-7,
    					4.4329e-7,
    					0.0000012973,
    					0.0000036313,
    					0.0000097245,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0007,
    					0.0014,
    					0.0028,
    					0.0053,
    					0.0097,
    					0.0168,
    					0.0281,
    					0.0451,
    					0.0695,
    					0.1029,
    					0.1468,
    					0.2017,
    					0.2673,
    					0.3423,
    					0.4241,
    					0.5093,
    					0.594,
    					0.6746,
    					0.7477,
    					0.8111,
    					0.8636,
    					0.9052,
    					0.9365,
    					0.9592,
    					0.9747,
    					0.985,
    					0.9915,
    					0.9953,
    					0.9976,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5513,
    				"std.error": 0.412,
    				statistic: -1.3383,
    				"p.value": 0.1818,
    				"conf.low": -1.362,
    				"conf.high": 0.2593,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.1187e-26,
    					8.532e-26,
    					6.2755e-25,
    					4.4515e-24,
    					3.0453e-23,
    					2.0093e-22,
    					1.2785e-21,
    					7.8466e-21,
    					4.6445e-20,
    					2.6515e-19,
    					1.46e-18,
    					7.754e-18,
    					3.9721e-17,
    					1.9627e-16,
    					9.3543e-16,
    					4.3006e-15,
    					1.9072e-14,
    					8.1592e-14,
    					3.3673e-13,
    					1.3406e-12,
    					5.1492e-12,
    					1.9081e-11,
    					6.8217e-11,
    					2.3532e-10,
    					7.8323e-10,
    					2.5155e-9,
    					7.7959e-9,
    					2.3316e-8,
    					6.7299e-8,
    					1.8748e-7,
    					5.0412e-7,
    					0.0000013085,
    					0.0000032787,
    					0.0000079316,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0015,
    					0.0027,
    					0.0047,
    					0.0081,
    					0.0135,
    					0.0216,
    					0.0336,
    					0.0506,
    					0.0738,
    					0.1044,
    					0.1433,
    					0.191,
    					0.2473,
    					0.3114,
    					0.3818,
    					0.4564,
    					0.5326,
    					0.6076,
    					0.6788,
    					0.7439,
    					0.8014,
    					0.8504,
    					0.8905,
    					0.9223,
    					0.9465,
    					0.9643,
    					0.9769,
    					0.9856,
    					0.9913,
    					0.9949,
    					0.9971,
    					0.9984,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.6821,
    				"std.error": 0.5659,
    				statistic: -1.2054,
    				"p.value": 0.229,
    				"conf.low": -1.7956,
    				"conf.high": 0.4314,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2e-30,
    					1.7274e-29,
    					1.4398e-28,
    					1.1582e-27,
    					8.9923e-27,
    					6.7381e-26,
    					4.8729e-25,
    					3.4013e-24,
    					2.2914e-23,
    					1.4899e-22,
    					9.3503e-22,
    					5.6639e-21,
    					3.3115e-20,
    					1.8688e-19,
    					1.018e-18,
    					5.3527e-18,
    					2.7168e-17,
    					1.331e-16,
    					6.295e-16,
    					2.874e-15,
    					1.2667e-14,
    					5.3894e-14,
    					2.2137e-13,
    					8.7788e-13,
    					3.3611e-12,
    					1.2425e-11,
    					4.4345e-11,
    					1.5282e-10,
    					5.0855e-10,
    					1.6342e-9,
    					5.0711e-9,
    					1.5197e-8,
    					4.3985e-8,
    					1.2296e-7,
    					3.3202e-7,
    					8.6601e-7,
    					0.0000021822,
    					0.0000053125,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0019,
    					0.0035,
    					0.006,
    					0.0101,
    					0.0164,
    					0.0259,
    					0.0396,
    					0.0586,
    					0.0842,
    					0.1174,
    					0.159,
    					0.2091,
    					0.2675,
    					0.3332,
    					0.4044,
    					0.4789,
    					0.5542,
    					0.6276,
    					0.6966,
    					0.7593,
    					0.8141,
    					0.8604,
    					0.8982,
    					0.9279,
    					0.9505,
    					0.967,
    					0.9787,
    					0.9867,
    					0.9919,
    					0.9953,
    					0.9973,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.6857,
    				"std.error": 0.7767,
    				statistic: 2.1702,
    				"p.value": 0.0308,
    				"conf.low": 0.1573,
    				"conf.high": 3.2141,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.0547e-18,
    					2.2349e-17,
    					9.5947e-17,
    					3.9995e-16,
    					1.6188e-15,
    					6.362e-15,
    					2.4278e-14,
    					8.9968e-14,
    					3.2374e-13,
    					1.1313e-12,
    					3.8388e-12,
    					1.265e-11,
    					4.0484e-11,
    					1.2583e-10,
    					3.7982e-10,
    					1.1135e-9,
    					3.1708e-9,
    					8.77e-9,
    					2.3561e-8,
    					6.1489e-8,
    					1.5589e-7,
    					3.8393e-7,
    					9.1867e-7,
    					0.0000021358,
    					0.0000048246,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0021,
    					0.0035,
    					0.0058,
    					0.0094,
    					0.0147,
    					0.0225,
    					0.0334,
    					0.0485,
    					0.0685,
    					0.0944,
    					0.1269,
    					0.1664,
    					0.2131,
    					0.2667,
    					0.3264,
    					0.3909,
    					0.4585,
    					0.5273,
    					0.5954,
    					0.6606,
    					0.7214,
    					0.7763,
    					0.8245,
    					0.8655,
    					0.8994,
    					0.9266,
    					0.9478,
    					0.9638,
    					0.9756,
    					0.9839,
    					0.9897,
    					0.9936,
    					0.9961,
    					0.9977,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 9,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option3",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.1759,
    				"std.error": 0.3547,
    				statistic: 17.4102,
    				"p.value": 6.2618e-44,
    				"conf.low": 5.477,
    				"conf.high": 6.8748,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.4566e-16,
    					1.4296e-15,
    					5.7365e-15,
    					2.2334e-14,
    					8.4368e-14,
    					3.0923e-13,
    					1.0998e-12,
    					3.7953e-12,
    					1.2709e-11,
    					4.1298e-11,
    					1.3023e-10,
    					3.9852e-10,
    					1.1835e-9,
    					3.4112e-9,
    					9.5422e-9,
    					2.5908e-8,
    					6.8277e-8,
    					1.7466e-7,
    					4.3372e-7,
    					0.0000010456,
    					0.0000024471,
    					0.0000055608,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.0041,
    					0.0068,
    					0.0109,
    					0.0171,
    					0.0261,
    					0.0386,
    					0.0557,
    					0.0783,
    					0.1072,
    					0.1431,
    					0.1864,
    					0.2369,
    					0.2942,
    					0.3572,
    					0.4243,
    					0.4937,
    					0.5634,
    					0.631,
    					0.6949,
    					0.7533,
    					0.8051,
    					0.8497,
    					0.8869,
    					0.917,
    					0.9407,
    					0.9587,
    					0.972,
    					0.9815,
    					0.9881,
    					0.9926,
    					0.9955,
    					0.9973,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.8706,
    				"std.error": 0.5104,
    				statistic: -1.7056,
    				"p.value": 0.0894,
    				"conf.low": -1.8762,
    				"conf.high": 0.1351,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					9.1961e-16,
    					3.1601e-15,
    					1.0607e-14,
    					3.4779e-14,
    					1.1139e-13,
    					3.4851e-13,
    					1.0652e-12,
    					3.1802e-12,
    					9.2759e-12,
    					2.643e-11,
    					7.3574e-11,
    					2.0008e-10,
    					5.3161e-10,
    					1.38e-9,
    					3.4998e-9,
    					8.6725e-9,
    					2.0998e-8,
    					4.9676e-8,
    					1.1484e-7,
    					2.5941e-7,
    					5.7264e-7,
    					0.0000012353,
    					0.0000026045,
    					0.0000053666,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0034,
    					0.0054,
    					0.0083,
    					0.0125,
    					0.0185,
    					0.0267,
    					0.0377,
    					0.0522,
    					0.0709,
    					0.0943,
    					0.1229,
    					0.1571,
    					0.1971,
    					0.2427,
    					0.2935,
    					0.3487,
    					0.4073,
    					0.468,
    					0.5295,
    					0.5903,
    					0.6491,
    					0.7044,
    					0.7554,
    					0.8012,
    					0.8414,
    					0.8759,
    					0.9047,
    					0.9283,
    					0.9471,
    					0.9618,
    					0.973,
    					0.9813,
    					0.9873,
    					0.9916,
    					0.9945,
    					0.9965,
    					0.9978,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.0672,
    				"std.error": 0.6041,
    				statistic: -1.7666,
    				"p.value": 0.0786,
    				"conf.low": -2.2574,
    				"conf.high": 0.123,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.8135e-24,
    					2.8601e-23,
    					1.6474e-22,
    					9.1981e-22,
    					4.9786e-21,
    					2.6123e-20,
    					1.3288e-19,
    					6.5523e-19,
    					3.1323e-18,
    					1.4516e-17,
    					6.5222e-17,
    					2.841e-16,
    					1.1998e-15,
    					4.9124e-15,
    					1.95e-14,
    					7.5055e-14,
    					2.8009e-13,
    					1.0135e-12,
    					3.5558e-12,
    					1.2097e-11,
    					3.9906e-11,
    					1.2766e-10,
    					3.9603e-10,
    					1.1915e-9,
    					3.4763e-9,
    					9.8369e-9,
    					2.6998e-8,
    					7.1871e-8,
    					1.8558e-7,
    					4.6486e-7,
    					0.0000011296,
    					0.000002663,
    					0.0000060913,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0027,
    					0.0046,
    					0.0077,
    					0.0123,
    					0.0192,
    					0.0292,
    					0.0431,
    					0.0619,
    					0.0867,
    					0.1181,
    					0.1569,
    					0.2033,
    					0.257,
    					0.3172,
    					0.3828,
    					0.4519,
    					0.5224,
    					0.5923,
    					0.6594,
    					0.7217,
    					0.7779,
    					0.827,
    					0.8686,
    					0.9026,
    					0.9298,
    					0.9507,
    					0.9663,
    					0.9776,
    					0.9855,
    					0.9909,
    					0.9944,
    					0.9967,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.0049,
    				"std.error": 0.836,
    				statistic: 2.3983,
    				"p.value": 0.0173,
    				"conf.low": 0.3578,
    				"conf.high": 3.652,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.4972e-17,
    					1.3442e-16,
    					5.0365e-16,
    					1.8398e-15,
    					6.552e-15,
    					2.2749e-14,
    					7.7005e-14,
    					2.5414e-13,
    					8.1773e-13,
    					2.5654e-12,
    					7.8471e-12,
    					2.3404e-11,
    					6.806e-11,
    					1.9299e-10,
    					5.3362e-10,
    					1.4388e-9,
    					3.783e-9,
    					9.6996e-9,
    					2.4254e-8,
    					5.9146e-8,
    					1.4067e-7,
    					3.2631e-7,
    					7.3829e-7,
    					0.0000016294,
    					0.0000035077,
    					0.0000073666,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.0032,
    					0.0051,
    					0.0081,
    					0.0124,
    					0.0186,
    					0.0272,
    					0.0389,
    					0.0545,
    					0.0746,
    					0.1,
    					0.1311,
    					0.1684,
    					0.2119,
    					0.2613,
    					0.3161,
    					0.3752,
    					0.4374,
    					0.5012,
    					0.565,
    					0.6271,
    					0.6861,
    					0.7406,
    					0.7898,
    					0.8331,
    					0.8701,
    					0.9011,
    					0.9262,
    					0.9462,
    					0.9616,
    					0.9732,
    					0.9817,
    					0.9878,
    					0.9921,
    					0.9949,
    					0.9969,
    					0.9981,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 10,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option4",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5759,
    				"std.error": 0.4256,
    				statistic: 15.4515,
    				"p.value": 2.7774e-44,
    				"conf.low": 5.7397,
    				"conf.high": 7.412,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					8.7361e-15,
    					2.6972e-14,
    					8.1545e-14,
    					2.4142e-13,
    					6.9996e-13,
    					1.9873e-12,
    					5.5257e-12,
    					1.5046e-11,
    					4.0124e-11,
    					1.0479e-10,
    					2.6802e-10,
    					6.7139e-10,
    					1.6472e-9,
    					3.9582e-9,
    					9.3158e-9,
    					2.1475e-8,
    					4.8492e-8,
    					1.0725e-7,
    					2.3237e-7,
    					4.9317e-7,
    					0.0000010253,
    					0.0000020884,
    					0.0000041673,
    					0.0000081472,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0022,
    					0.0034,
    					0.0053,
    					0.0079,
    					0.0117,
    					0.017,
    					0.0241,
    					0.0337,
    					0.0462,
    					0.0622,
    					0.0821,
    					0.1066,
    					0.1359,
    					0.1703,
    					0.2099,
    					0.2543,
    					0.3033,
    					0.3561,
    					0.4118,
    					0.4693,
    					0.5275,
    					0.5851,
    					0.6409,
    					0.6939,
    					0.7431,
    					0.7878,
    					0.8276,
    					0.8623,
    					0.8919,
    					0.9166,
    					0.9368,
    					0.953,
    					0.9657,
    					0.9754,
    					0.9827,
    					0.988,
    					0.9919,
    					0.9946,
    					0.9965,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.9203,
    				"std.error": 0.483,
    				statistic: -1.9054,
    				"p.value": 0.0573,
    				"conf.low": -1.8694,
    				"conf.high": 0.0287,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.2158e-17,
    					2.0315e-16,
    					7.7077e-16,
    					2.8487e-15,
    					1.0256e-14,
    					3.5971e-14,
    					1.229e-13,
    					4.0908e-13,
    					1.3265e-12,
    					4.1904e-12,
    					1.2897e-11,
    					3.867e-11,
    					1.1297e-10,
    					3.2155e-10,
    					8.9175e-10,
    					2.4097e-9,
    					6.3448e-9,
    					1.6279e-8,
    					4.07e-8,
    					9.9164e-8,
    					2.3546e-7,
    					5.4487e-7,
    					0.0000012289,
    					0.0000027014,
    					0.0000057885,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0018,
    					0.0029,
    					0.0048,
    					0.0076,
    					0.0118,
    					0.0178,
    					0.0263,
    					0.0379,
    					0.0534,
    					0.0736,
    					0.0991,
    					0.1306,
    					0.1684,
    					0.2127,
    					0.263,
    					0.3188,
    					0.3791,
    					0.4424,
    					0.5073,
    					0.572,
    					0.6347,
    					0.6941,
    					0.7488,
    					0.7978,
    					0.8406,
    					0.877,
    					0.9071,
    					0.9314,
    					0.9505,
    					0.965,
    					0.9759,
    					0.9838,
    					0.9893,
    					0.9931,
    					0.9957,
    					0.9974,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.5859,
    				"std.error": 0.5685,
    				statistic: -2.7894,
    				"p.value": 0.0055,
    				"conf.low": -2.7029,
    				"conf.high": -0.4689,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					8.2627e-23,
    					5.1996e-22,
    					3.1592e-21,
    					1.8533e-20,
    					1.0498e-19,
    					5.7412e-19,
    					3.0319e-18,
    					1.546e-17,
    					7.6121e-17,
    					3.6192e-16,
    					1.6616e-15,
    					7.3669e-15,
    					3.1541e-14,
    					1.3041e-13,
    					5.2073e-13,
    					2.0081e-12,
    					7.479e-12,
    					2.6903e-11,
    					9.3472e-11,
    					3.1368e-10,
    					1.0168e-9,
    					3.1841e-9,
    					9.6319e-9,
    					2.8148e-8,
    					7.9475e-8,
    					2.1681e-7,
    					5.715e-7,
    					0.0000014557,
    					0.0000035835,
    					0.0000085259,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0026,
    					0.0046,
    					0.0078,
    					0.0129,
    					0.0206,
    					0.032,
    					0.048,
    					0.07,
    					0.099,
    					0.1358,
    					0.1812,
    					0.235,
    					0.2966,
    					0.3647,
    					0.4374,
    					0.5122,
    					0.5866,
    					0.6581,
    					0.7243,
    					0.7834,
    					0.8345,
    					0.8771,
    					0.9113,
    					0.9379,
    					0.9578,
    					0.9722,
    					0.9822,
    					0.989,
    					0.9934,
    					0.9962,
    					0.9978,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5428,
    				"std.error": 0.6478,
    				statistic: 2.3817,
    				"p.value": 0.0176,
    				"conf.low": 0.2701,
    				"conf.high": 2.8155,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.204e-24,
    					3.3767e-23,
    					2.5992e-22,
    					1.9175e-21,
    					1.3557e-20,
    					9.1868e-20,
    					5.9665e-19,
    					3.714e-18,
    					2.2159e-17,
    					1.2672e-16,
    					6.9465e-16,
    					3.65e-15,
    					1.8384e-14,
    					8.8765e-14,
    					4.1087e-13,
    					1.8232e-12,
    					7.7566e-12,
    					3.1639e-11,
    					1.2374e-10,
    					4.6401e-10,
    					1.6686e-9,
    					5.7541e-9,
    					1.903e-8,
    					6.0363e-8,
    					1.8366e-7,
    					5.3602e-7,
    					0.0000015009,
    					0.0000040322,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0013,
    					0.0025,
    					0.0047,
    					0.0084,
    					0.0145,
    					0.024,
    					0.0384,
    					0.0591,
    					0.0877,
    					0.1255,
    					0.1735,
    					0.2317,
    					0.2994,
    					0.3749,
    					0.4556,
    					0.5381,
    					0.619,
    					0.695,
    					0.7634,
    					0.8224,
    					0.8711,
    					0.9097,
    					0.939,
    					0.9602,
    					0.975,
    					0.9849,
    					0.9912,
    					0.9951,
    					0.9974,
    					0.9986,
    					0.9993,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 11,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option4",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.9437,
    				"std.error": 0.3368,
    				statistic: 17.6482,
    				"p.value": 1.6934e-54,
    				"conf.low": 5.282,
    				"conf.high": 6.6054,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.8034e-15,
    					1.1919e-14,
    					4.9006e-14,
    					1.9486e-13,
    					7.4934e-13,
    					2.7868e-12,
    					1.0024e-11,
    					3.4873e-11,
    					1.1735e-10,
    					3.8193e-10,
    					1.2024e-9,
    					3.662e-9,
    					1.0789e-8,
    					3.0751e-8,
    					8.4797e-8,
    					2.2624e-7,
    					5.8406e-7,
    					0.0000014591,
    					0.0000035274,
    					0.0000082533,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0023,
    					0.0041,
    					0.0069,
    					0.0114,
    					0.0181,
    					0.0281,
    					0.0423,
    					0.0617,
    					0.0875,
    					0.1207,
    					0.1618,
    					0.2111,
    					0.2682,
    					0.3323,
    					0.4016,
    					0.4742,
    					0.5477,
    					0.6195,
    					0.6875,
    					0.7496,
    					0.8044,
    					0.8513,
    					0.89,
    					0.9209,
    					0.9447,
    					0.9625,
    					0.9753,
    					0.9842,
    					0.9902,
    					0.9941,
    					0.9966,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.4572,
    				"std.error": 0.3828,
    				statistic: -1.1945,
    				"p.value": 0.2329,
    				"conf.low": -1.2093,
    				"conf.high": 0.2949,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					7.7824e-32,
    					8.5854e-31,
    					9.0813e-30,
    					9.2105e-29,
    					8.957e-28,
    					8.3521e-27,
    					7.4677e-26,
    					6.4024e-25,
    					5.2634e-24,
    					4.1493e-23,
    					3.1366e-22,
    					2.2738e-21,
    					1.5806e-20,
    					1.0537e-19,
    					6.7362e-19,
    					4.1299e-18,
    					2.4283e-17,
    					1.3694e-16,
    					7.4061e-16,
    					3.8417e-15,
    					1.9114e-14,
    					9.1215e-14,
    					4.1754e-13,
    					1.8334e-12,
    					7.7224e-12,
    					3.1205e-11,
    					1.2097e-10,
    					4.4991e-10,
    					1.6055e-9,
    					5.4974e-9,
    					1.8063e-8,
    					5.6955e-8,
    					1.7236e-7,
    					5.0062e-7,
    					0.0000013958,
    					0.000003736,
    					0.0000096011,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0023,
    					0.0043,
    					0.0077,
    					0.0133,
    					0.0222,
    					0.0356,
    					0.055,
    					0.0819,
    					0.1176,
    					0.1633,
    					0.2191,
    					0.2845,
    					0.3581,
    					0.4373,
    					0.5191,
    					0.6002,
    					0.6771,
    					0.7471,
    					0.8082,
    					0.8593,
    					0.9002,
    					0.9317,
    					0.9549,
    					0.9713,
    					0.9824,
    					0.9896,
    					0.9941,
    					0.9968,
    					0.9983,
    					0.9991,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8748,
    				"std.error": 0.6221,
    				statistic: -1.4063,
    				"p.value": 0.1603,
    				"conf.low": -2.0971,
    				"conf.high": 0.3474,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.983e-24,
    					2.2559e-23,
    					1.2408e-22,
    					6.627e-22,
    					3.4373e-21,
    					1.7314e-20,
    					8.4695e-20,
    					4.0235e-19,
    					1.8562e-18,
    					8.3169e-18,
    					3.619e-17,
    					1.5294e-16,
    					6.2774e-16,
    					2.5024e-15,
    					9.6885e-15,
    					3.6433e-14,
    					1.3307e-13,
    					4.7209e-13,
    					1.6268e-12,
    					5.4452e-12,
    					1.7704e-11,
    					5.5917e-11,
    					1.7156e-10,
    					5.1134e-10,
    					1.4806e-9,
    					4.1651e-9,
    					1.1383e-8,
    					3.0228e-8,
    					7.7993e-8,
    					1.9553e-7,
    					4.7637e-7,
    					0.0000011278,
    					0.0000025949,
    					0.0000058028,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0023,
    					0.0039,
    					0.0064,
    					0.0102,
    					0.0159,
    					0.0241,
    					0.0357,
    					0.0514,
    					0.0723,
    					0.099,
    					0.1324,
    					0.1729,
    					0.2204,
    					0.2747,
    					0.3348,
    					0.3995,
    					0.4671,
    					0.5357,
    					0.6032,
    					0.6678,
    					0.7277,
    					0.7817,
    					0.829,
    					0.8691,
    					0.9022,
    					0.9287,
    					0.9493,
    					0.9649,
    					0.9763,
    					0.9844,
    					0.99,
    					0.9938,
    					0.9962,
    					0.9978,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.4107,
    				"std.error": 0.7132,
    				statistic: 1.978,
    				"p.value": 0.0485,
    				"conf.low": 0.0094,
    				"conf.high": 2.8119,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.7651e-19,
    					9.5445e-19,
    					4.9835e-18,
    					2.5126e-17,
    					1.2233e-16,
    					5.7513e-16,
    					2.6112e-15,
    					1.1448e-14,
    					4.8474e-14,
    					1.9822e-13,
    					7.828e-13,
    					2.9857e-12,
    					1.0999e-11,
    					3.9135e-11,
    					1.345e-10,
    					4.4651e-10,
    					1.4319e-9,
    					4.4358e-9,
    					1.3276e-8,
    					3.8386e-8,
    					1.0724e-7,
    					2.8947e-7,
    					7.5506e-7,
    					0.0000019033,
    					0.0000046369,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0017,
    					0.0031,
    					0.0054,
    					0.0091,
    					0.0148,
    					0.0235,
    					0.0361,
    					0.0537,
    					0.0775,
    					0.1087,
    					0.1479,
    					0.1957,
    					0.2517,
    					0.3153,
    					0.3849,
    					0.4584,
    					0.5334,
    					0.6072,
    					0.6774,
    					0.7417,
    					0.7986,
    					0.8473,
    					0.8875,
    					0.9195,
    					0.944,
    					0.9623,
    					0.9754,
    					0.9844,
    					0.9904,
    					0.9943,
    					0.9967,
    					0.9982,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 12,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option4",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5759,
    				"std.error": 0.4212,
    				statistic: 15.6138,
    				"p.value": 2.0858e-42,
    				"conf.low": 5.7477,
    				"conf.high": 7.4041,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					4.6472e-15,
    					1.4688e-14,
    					4.544e-14,
    					1.376e-13,
    					4.0784e-13,
    					1.1833e-12,
    					3.3605e-12,
    					9.3422e-12,
    					2.5423e-11,
    					6.7726e-11,
    					1.7662e-10,
    					4.5089e-10,
    					1.1269e-9,
    					2.7571e-9,
    					6.6042e-9,
    					1.5488e-8,
    					3.556e-8,
    					7.994e-8,
    					1.7595e-7,
    					3.7921e-7,
    					8.0026e-7,
    					0.0000016537,
    					0.0000033465,
    					0.0000066317,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0031,
    					0.0049,
    					0.0074,
    					0.011,
    					0.0161,
    					0.023,
    					0.0323,
    					0.0445,
    					0.0602,
    					0.0799,
    					0.1042,
    					0.1334,
    					0.1678,
    					0.2074,
    					0.2521,
    					0.3014,
    					0.3546,
    					0.4109,
    					0.469,
    					0.5278,
    					0.586,
    					0.6424,
    					0.6958,
    					0.7453,
    					0.7903,
    					0.8302,
    					0.8648,
    					0.8943,
    					0.9188,
    					0.9388,
    					0.9547,
    					0.9671,
    					0.9766,
    					0.9836,
    					0.9888,
    					0.9924,
    					0.995,
    					0.9968,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.9203,
    				"std.error": 0.478,
    				statistic: -1.9254,
    				"p.value": 0.055,
    				"conf.low": -1.8603,
    				"conf.high": 0.0196,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.494e-17,
    					9.9932e-17,
    					3.8982e-16,
    					1.4805e-15,
    					5.4742e-15,
    					1.9707e-14,
    					6.9072e-14,
    					2.3571e-13,
    					7.832e-13,
    					2.5338e-12,
    					7.982e-12,
    					2.4484e-11,
    					7.3128e-11,
    					2.1269e-10,
    					6.0239e-10,
    					1.6615e-9,
    					4.4626e-9,
    					1.1674e-8,
    					2.974e-8,
    					7.3793e-8,
    					1.7834e-7,
    					4.1982e-7,
    					9.6266e-7,
    					0.0000021503,
    					0.0000046793,
    					0.0000099205,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0027,
    					0.0044,
    					0.0071,
    					0.011,
    					0.0168,
    					0.025,
    					0.0364,
    					0.0516,
    					0.0715,
    					0.0968,
    					0.1281,
    					0.1659,
    					0.2102,
    					0.2608,
    					0.317,
    					0.3778,
    					0.4418,
    					0.5074,
    					0.5727,
    					0.6361,
    					0.696,
    					0.751,
    					0.8002,
    					0.8431,
    					0.8794,
    					0.9094,
    					0.9334,
    					0.9522,
    					0.9665,
    					0.977,
    					0.9847,
    					0.99,
    					0.9936,
    					0.996,
    					0.9976,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.5071,
    				"std.error": 0.6659,
    				statistic: -2.2632,
    				"p.value": 0.0242,
    				"conf.low": -2.8166,
    				"conf.high": -0.1975,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.4296e-17,
    					5.5959e-17,
    					2.1352e-16,
    					7.9421e-16,
    					2.8799e-15,
    					1.018e-14,
    					3.5082e-14,
    					1.1786e-13,
    					3.8602e-13,
    					1.2326e-12,
    					3.8374e-12,
    					1.1647e-11,
    					3.4468e-11,
    					9.945e-11,
    					2.7978e-10,
    					7.6746e-10,
    					2.0528e-9,
    					5.354e-9,
    					1.3617e-8,
    					3.3773e-8,
    					8.1687e-8,
    					1.9269e-7,
    					4.4329e-7,
    					9.9466e-7,
    					0.0000021769,
    					0.0000046472,
    					0.0000096776,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.0039,
    					0.0061,
    					0.0096,
    					0.0145,
    					0.0216,
    					0.0314,
    					0.0446,
    					0.0619,
    					0.084,
    					0.1117,
    					0.1453,
    					0.1851,
    					0.2311,
    					0.2828,
    					0.3395,
    					0.4001,
    					0.4633,
    					0.5273,
    					0.5907,
    					0.6518,
    					0.7091,
    					0.7616,
    					0.8085,
    					0.8492,
    					0.8837,
    					0.9122,
    					0.9352,
    					0.9532,
    					0.9669,
    					0.9771,
    					0.9846,
    					0.9898,
    					0.9934,
    					0.9959,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.8738,
    				"std.error": 0.762,
    				statistic: 2.459,
    				"p.value": 0.0144,
    				"conf.low": 0.3753,
    				"conf.high": 3.3724,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.2942e-19,
    					6.3251e-19,
    					2.9978e-18,
    					1.378e-17,
    					6.1427e-17,
    					2.6558e-16,
    					1.1136e-15,
    					4.5289e-15,
    					1.7864e-14,
    					6.8344e-14,
    					2.5361e-13,
    					9.1284e-13,
    					3.187e-12,
    					1.0793e-11,
    					3.5458e-11,
    					1.13e-10,
    					3.4934e-10,
    					1.0477e-9,
    					3.0486e-9,
    					8.6065e-9,
    					2.3574e-8,
    					6.2651e-8,
    					1.6157e-7,
    					4.0433e-7,
    					9.8194e-7,
    					0.0000023144,
    					0.0000052944,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.0041,
    					0.0068,
    					0.011,
    					0.0172,
    					0.0263,
    					0.039,
    					0.0563,
    					0.0793,
    					0.1086,
    					0.1451,
    					0.189,
    					0.2403,
    					0.2983,
    					0.362,
    					0.4298,
    					0.4997,
    					0.5696,
    					0.6374,
    					0.7011,
    					0.7592,
    					0.8106,
    					0.8546,
    					0.8911,
    					0.9205,
    					0.9435,
    					0.9609,
    					0.9736,
    					0.9827,
    					0.989,
    					0.9932,
    					0.9959,
    					0.9976,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 13,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option5",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2282,
    				"std.error": 0.3361,
    				statistic: 18.5286,
    				"p.value": 1.1037e-58,
    				"conf.low": 5.5677,
    				"conf.high": 6.8886,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.0871e-18,
    					1.0411e-17,
    					5.0209e-17,
    					2.3412e-16,
    					1.0555e-15,
    					4.6014e-15,
    					1.9395e-14,
    					7.9048e-14,
    					3.1153e-13,
    					1.1872e-12,
    					4.3753e-12,
    					1.5593e-11,
    					5.374e-11,
    					1.7912e-10,
    					5.7744e-10,
    					1.8004e-9,
    					5.4295e-9,
    					1.5838e-8,
    					4.4691e-8,
    					1.2199e-7,
    					3.2216e-7,
    					8.2313e-7,
    					0.0000020349,
    					0.0000048679,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0029,
    					0.005,
    					0.0084,
    					0.0137,
    					0.0217,
    					0.0332,
    					0.0494,
    					0.0714,
    					0.1001,
    					0.1365,
    					0.1811,
    					0.2338,
    					0.294,
    					0.3606,
    					0.4317,
    					0.5051,
    					0.5783,
    					0.649,
    					0.7148,
    					0.774,
    					0.8256,
    					0.869,
    					0.9043,
    					0.9321,
    					0.9532,
    					0.9686,
    					0.9796,
    					0.9872,
    					0.9921,
    					0.9953,
    					0.9973,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5728,
    				"std.error": 0.4201,
    				statistic: -1.3635,
    				"p.value": 0.1733,
    				"conf.low": -1.3981,
    				"conf.high": 0.2525,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.6754e-25,
    					1.1722e-24,
    					7.9203e-24,
    					5.1684e-23,
    					3.2572e-22,
    					1.9825e-21,
    					1.1653e-20,
    					6.6161e-20,
    					3.6278e-19,
    					1.9213e-18,
    					9.8276e-18,
    					4.8554e-17,
    					2.3171e-16,
    					1.068e-15,
    					4.7553e-15,
    					2.0452e-14,
    					8.4966e-14,
    					3.4099e-13,
    					1.322e-12,
    					4.9513e-12,
    					1.7915e-11,
    					6.2628e-11,
    					2.1152e-10,
    					6.9027e-10,
    					2.1765e-9,
    					6.6314e-9,
    					1.9525e-8,
    					5.5553e-8,
    					1.5276e-7,
    					4.0599e-7,
    					0.0000010429,
    					0.0000025898,
    					0.0000062171,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0021,
    					0.0037,
    					0.0063,
    					0.0105,
    					0.017,
    					0.0267,
    					0.0406,
    					0.0598,
    					0.0855,
    					0.1187,
    					0.1601,
    					0.21,
    					0.268,
    					0.3331,
    					0.4037,
    					0.4775,
    					0.5522,
    					0.6251,
    					0.6937,
    					0.7561,
    					0.811,
    					0.8575,
    					0.8955,
    					0.9256,
    					0.9486,
    					0.9656,
    					0.9776,
    					0.9859,
    					0.9914,
    					0.9949,
    					0.9971,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.1681,
    				"std.error": 0.4659,
    				statistic: -2.5069,
    				"p.value": 0.0125,
    				"conf.low": -2.0835,
    				"conf.high": -0.2526,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					7.4513e-38,
    					1.4014e-36,
    					2.5009e-35,
    					4.2349e-34,
    					6.8049e-33,
    					1.0376e-31,
    					1.5013e-30,
    					2.0613e-29,
    					2.6857e-28,
    					3.3207e-27,
    					3.8964e-26,
    					4.3388e-25,
    					4.5852e-24,
    					4.5986e-23,
    					4.3772e-22,
    					3.9543e-21,
    					3.3904e-20,
    					2.7591e-19,
    					2.1312e-18,
    					1.5626e-17,
    					1.0875e-16,
    					7.1845e-16,
    					4.5057e-15,
    					2.6826e-14,
    					1.5163e-13,
    					8.1372e-13,
    					4.1462e-12,
    					2.006e-11,
    					9.2163e-11,
    					4.0211e-10,
    					1.6662e-9,
    					6.5577e-9,
    					2.4516e-8,
    					8.707e-8,
    					2.938e-7,
    					9.4204e-7,
    					0.0000028705,
    					0.000008314,
    					0,
    					0.0001,
    					0.0001,
    					0.0004,
    					0.0008,
    					0.0017,
    					0.0035,
    					0.0068,
    					0.0126,
    					0.0223,
    					0.0377,
    					0.0607,
    					0.0936,
    					0.138,
    					0.1951,
    					0.2645,
    					0.3446,
    					0.4325,
    					0.5238,
    					0.6139,
    					0.6982,
    					0.7731,
    					0.8362,
    					0.8866,
    					0.9248,
    					0.9523,
    					0.9711,
    					0.9833,
    					0.9908,
    					0.9952,
    					0.9976,
    					0.9988,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.1721,
    				"std.error": 0.575,
    				statistic: 2.0384,
    				"p.value": 0.042,
    				"conf.low": 0.0424,
    				"conf.high": 2.3018,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.8521e-27,
    					7.0544e-26,
    					8.0564e-25,
    					8.717e-24,
    					8.9361e-23,
    					8.6794e-22,
    					7.9875e-21,
    					6.9649e-20,
    					5.7547e-19,
    					4.5055e-18,
    					3.3426e-17,
    					2.35e-16,
    					1.5658e-15,
    					9.8867e-15,
    					5.9167e-14,
    					3.356e-13,
    					1.8043e-12,
    					9.1953e-12,
    					4.4424e-11,
    					2.0346e-10,
    					8.8353e-10,
    					3.6379e-9,
    					1.4204e-8,
    					5.2597e-8,
    					1.8473e-7,
    					6.1544e-7,
    					0.0000019453,
    					0.0000058344,
    					0,
    					0,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0014,
    					0.003,
    					0.0059,
    					0.0112,
    					0.0202,
    					0.0347,
    					0.0568,
    					0.0887,
    					0.1324,
    					0.1889,
    					0.2584,
    					0.3391,
    					0.428,
    					0.5207,
    					0.6124,
    					0.6981,
    					0.7741,
    					0.8379,
    					0.8886,
    					0.9269,
    					0.9541,
    					0.9726,
    					0.9843,
    					0.9915,
    					0.9956,
    					0.9978,
    					0.999,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 14,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option5",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.7998,
    				"std.error": 0.275,
    				statistic: 21.0929,
    				"p.value": 4.8107e-71,
    				"conf.low": 5.2596,
    				"conf.high": 6.3401,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					7.4225e-20,
    					5.7257e-19,
    					4.1996e-18,
    					2.9288e-17,
    					1.9422e-16,
    					1.2247e-15,
    					7.3437e-15,
    					4.1877e-14,
    					2.2711e-13,
    					1.1714e-12,
    					5.7463e-12,
    					2.6813e-11,
    					1.1901e-10,
    					5.0248e-10,
    					2.0184e-9,
    					7.7141e-9,
    					2.8053e-8,
    					9.708e-8,
    					3.1973e-7,
    					0.0000010023,
    					0.0000029912,
    					0.0000084988,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0008,
    					0.0016,
    					0.0033,
    					0.0063,
    					0.0117,
    					0.0206,
    					0.0347,
    					0.0559,
    					0.0863,
    					0.1276,
    					0.1809,
    					0.2464,
    					0.3228,
    					0.4075,
    					0.4968,
    					0.5862,
    					0.6714,
    					0.7485,
    					0.8148,
    					0.869,
    					0.9111,
    					0.9422,
    					0.964,
    					0.9786,
    					0.9878,
    					0.9934,
    					0.9966,
    					0.9983,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3178,
    				"std.error": 0.3382,
    				statistic: -0.9398,
    				"p.value": 0.3478,
    				"conf.low": -0.9822,
    				"conf.high": 0.3466,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.2085e-42,
    					2.8679e-41,
    					6.4482e-40,
    					1.3737e-38,
    					2.7726e-37,
    					5.3024e-36,
    					9.6078e-35,
    					1.6495e-33,
    					2.6834e-32,
    					4.1362e-31,
    					6.0411e-30,
    					8.3607e-29,
    					1.0964e-27,
    					1.3625e-26,
    					1.6044e-25,
    					1.7904e-24,
    					1.8933e-23,
    					1.8974e-22,
    					1.8019e-21,
    					1.6219e-20,
    					1.3835e-19,
    					1.1185e-18,
    					8.5709e-18,
    					6.225e-17,
    					4.2855e-16,
    					2.7966e-15,
    					1.73e-14,
    					1.0145e-13,
    					5.64e-13,
    					2.9728e-12,
    					1.4857e-11,
    					7.0402e-11,
    					3.1636e-10,
    					1.3481e-9,
    					5.4488e-9,
    					2.0889e-8,
    					7.5965e-8,
    					2.6209e-7,
    					8.5801e-7,
    					0.0000026656,
    					0.0000078599,
    					0,
    					0.0001,
    					0.0001,
    					0.0004,
    					0.0008,
    					0.0017,
    					0.0036,
    					0.0071,
    					0.0132,
    					0.0234,
    					0.0396,
    					0.0639,
    					0.0986,
    					0.1453,
    					0.205,
    					0.2773,
    					0.3602,
    					0.4503,
    					0.543,
    					0.6334,
    					0.717,
    					0.7901,
    					0.8508,
    					0.8984,
    					0.9339,
    					0.959,
    					0.9757,
    					0.9863,
    					0.9926,
    					0.9962,
    					0.9982,
    					0.9991,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.6398,
    				"std.error": 0.519,
    				statistic: -1.2329,
    				"p.value": 0.2182,
    				"conf.low": -1.6595,
    				"conf.high": 0.3798,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.0558e-36,
    					4.0204e-35,
    					5.0705e-34,
    					6.1301e-33,
    					7.1044e-32,
    					7.893e-31,
    					8.4064e-30,
    					8.583e-29,
    					8.4009e-28,
    					7.8829e-27,
    					7.0912e-26,
    					6.1156e-25,
    					5.0564e-24,
    					4.0081e-23,
    					3.046e-22,
    					2.2194e-21,
    					1.5504e-20,
    					1.0385e-19,
    					6.6692e-19,
    					4.1067e-18,
    					2.4247e-17,
    					1.3727e-16,
    					7.4524e-16,
    					3.8796e-15,
    					1.9368e-14,
    					9.2722e-14,
    					4.2571e-13,
    					1.8745e-12,
    					7.9166e-12,
    					3.2067e-11,
    					1.2459e-10,
    					4.6434e-10,
    					1.6601e-9,
    					5.6938e-9,
    					1.8736e-8,
    					5.9154e-8,
    					1.7921e-7,
    					5.2102e-7,
    					0.0000014537,
    					0.0000038933,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0024,
    					0.0045,
    					0.008,
    					0.0138,
    					0.023,
    					0.0368,
    					0.0567,
    					0.0843,
    					0.1209,
    					0.1675,
    					0.2242,
    					0.2906,
    					0.3649,
    					0.4447,
    					0.5268,
    					0.6078,
    					0.6843,
    					0.7537,
    					0.8139,
    					0.864,
    					0.904,
    					0.9346,
    					0.957,
    					0.9728,
    					0.9834,
    					0.9903,
    					0.9945,
    					0.997,
    					0.9984,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.2787,
    				"std.error": 0.6405,
    				statistic: 1.9962,
    				"p.value": 0.0465,
    				"conf.low": 0.0202,
    				"conf.high": 2.5372,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					8.3528e-23,
    					6.4544e-22,
    					4.7754e-21,
    					3.3828e-20,
    					2.2946e-19,
    					1.4903e-18,
    					9.268e-18,
    					5.5192e-17,
    					3.1474e-16,
    					1.7188e-15,
    					8.9887e-15,
    					4.5019e-14,
    					2.1594e-13,
    					9.9199e-13,
    					4.3648e-12,
    					1.8395e-11,
    					7.4262e-11,
    					2.8718e-10,
    					1.0639e-9,
    					3.776e-9,
    					1.284e-8,
    					4.1838e-8,
    					1.3063e-7,
    					3.9087e-7,
    					0.000001121,
    					0.0000030814,
    					0.0000081204,
    					0,
    					0,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0022,
    					0.0042,
    					0.0077,
    					0.0134,
    					0.0224,
    					0.0362,
    					0.0563,
    					0.0842,
    					0.1215,
    					0.169,
    					0.2271,
    					0.295,
    					0.371,
    					0.4524,
    					0.5358,
    					0.6177,
    					0.6946,
    					0.7638,
    					0.8233,
    					0.8724,
    					0.9111,
    					0.9403,
    					0.9613,
    					0.9759,
    					0.9856,
    					0.9917,
    					0.9954,
    					0.9976,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 15,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option5",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2282,
    				"std.error": 0.3327,
    				statistic: 18.7213,
    				"p.value": 3.2243e-55,
    				"conf.low": 5.574,
    				"conf.high": 6.8824,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					9.4094e-19,
    					4.8519e-18,
    					2.4172e-17,
    					1.1635e-16,
    					5.4108e-16,
    					2.4313e-15,
    					1.0556e-14,
    					4.4285e-14,
    					1.7952e-13,
    					7.0318e-13,
    					2.6617e-12,
    					9.736e-12,
    					3.4416e-11,
    					1.1757e-10,
    					3.8818e-10,
    					1.2387e-9,
    					3.8205e-9,
    					1.139e-8,
    					3.2823e-8,
    					9.1439e-8,
    					2.4626e-7,
    					6.4123e-7,
    					0.0000016144,
    					0.0000039301,
    					0.0000092523,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0015,
    					0.0026,
    					0.0046,
    					0.0079,
    					0.0129,
    					0.0206,
    					0.0318,
    					0.0477,
    					0.0693,
    					0.0978,
    					0.134,
    					0.1786,
    					0.2315,
    					0.2921,
    					0.3592,
    					0.431,
    					0.5052,
    					0.5792,
    					0.6504,
    					0.7168,
    					0.7764,
    					0.8281,
    					0.8715,
    					0.9066,
    					0.9341,
    					0.9548,
    					0.97,
    					0.9806,
    					0.9879,
    					0.9927,
    					0.9957,
    					0.9976,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5728,
    				"std.error": 0.4157,
    				statistic: -1.3777,
    				"p.value": 0.1691,
    				"conf.low": -1.3903,
    				"conf.high": 0.2448,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.3869e-26,
    					3.924e-25,
    					2.7584e-24,
    					1.8713e-23,
    					1.2251e-22,
    					7.7404e-22,
    					4.7198e-21,
    					2.7775e-20,
    					1.5775e-19,
    					8.6471e-19,
    					4.5747e-18,
    					2.3359e-17,
    					1.1512e-16,
    					5.4762e-16,
    					2.5144e-15,
    					1.1143e-14,
    					4.7671e-14,
    					1.9686e-13,
    					7.8472e-13,
    					3.0197e-12,
    					1.1218e-11,
    					4.0234e-11,
    					1.3931e-10,
    					4.6572e-10,
    					1.5033e-9,
    					4.6853e-9,
    					1.4101e-8,
    					4.0981e-8,
    					1.1502e-7,
    					3.118e-7,
    					8.1635e-7,
    					0.0000020646,
    					0.000005044,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0019,
    					0.0034,
    					0.0059,
    					0.0099,
    					0.0161,
    					0.0255,
    					0.039,
    					0.0579,
    					0.0833,
    					0.1163,
    					0.1576,
    					0.2076,
    					0.2659,
    					0.3315,
    					0.4027,
    					0.4773,
    					0.5527,
    					0.6263,
    					0.6955,
    					0.7584,
    					0.8134,
    					0.8599,
    					0.8979,
    					0.9277,
    					0.9504,
    					0.967,
    					0.9787,
    					0.9867,
    					0.9919,
    					0.9953,
    					0.9973,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.0682,
    				"std.error": 0.5475,
    				statistic: -1.951,
    				"p.value": 0.0518,
    				"conf.low": -2.1448,
    				"conf.high": 0.0085,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					7.6746e-29,
    					6.6906e-28,
    					5.6157e-27,
    					4.5381e-26,
    					3.5309e-25,
    					2.6451e-24,
    					1.9078e-23,
    					1.3249e-22,
    					8.8593e-22,
    					5.704e-21,
    					3.5362e-20,
    					2.1109e-19,
    					1.2134e-18,
    					6.7159e-18,
    					3.5795e-17,
    					1.8372e-16,
    					9.0808e-16,
    					4.3224e-15,
    					1.9814e-14,
    					8.7471e-14,
    					3.7191e-13,
    					1.523e-12,
    					6.0068e-12,
    					2.282e-11,
    					8.3506e-11,
    					2.9435e-10,
    					9.9953e-10,
    					3.2697e-9,
    					1.0305e-8,
    					3.1291e-8,
    					9.1552e-8,
    					2.5812e-7,
    					7.0129e-7,
    					0.0000018363,
    					0.0000046346,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0021,
    					0.0038,
    					0.0066,
    					0.0112,
    					0.0184,
    					0.0293,
    					0.0449,
    					0.0668,
    					0.096,
    					0.1336,
    					0.1804,
    					0.2363,
    					0.3006,
    					0.3718,
    					0.4476,
    					0.5255,
    					0.6023,
    					0.6754,
    					0.7423,
    					0.8012,
    					0.8512,
    					0.892,
    					0.924,
    					0.9483,
    					0.9659,
    					0.9783,
    					0.9866,
    					0.992,
    					0.9954,
    					0.9975,
    					0.9986,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5336,
    				"std.error": 0.6794,
    				statistic: 2.2572,
    				"p.value": 0.0246,
    				"conf.low": 0.1975,
    				"conf.high": 2.8698,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.0174e-22,
    					3.3311e-21,
    					2.1278e-20,
    					1.3077e-19,
    					7.7323e-19,
    					4.3992e-18,
    					2.4082e-17,
    					1.2685e-16,
    					6.4294e-16,
    					3.1357e-15,
    					1.4716e-14,
    					6.6462e-14,
    					2.8886e-13,
    					1.2082e-12,
    					4.8633e-12,
    					1.8841e-11,
    					7.0254e-11,
    					2.5214e-10,
    					8.7106e-10,
    					2.8967e-9,
    					9.2732e-9,
    					2.858e-8,
    					8.4805e-8,
    					2.423e-7,
    					6.666e-7,
    					0.0000017661,
    					0.0000045065,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0021,
    					0.0039,
    					0.0069,
    					0.0117,
    					0.0193,
    					0.0307,
    					0.0471,
    					0.07,
    					0.1006,
    					0.1399,
    					0.1886,
    					0.2465,
    					0.3127,
    					0.3857,
    					0.463,
    					0.5417,
    					0.6188,
    					0.6914,
    					0.7572,
    					0.8146,
    					0.8627,
    					0.9015,
    					0.9316,
    					0.954,
    					0.9701,
    					0.9813,
    					0.9886,
    					0.9933,
    					0.9962,
    					0.998,
    					0.9989,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 16,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option1",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.554,
    				"std.error": 0.4127,
    				statistic: 15.8804,
    				"p.value": 9.6531e-40,
    				"conf.low": 5.7411,
    				"conf.high": 7.3668,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.0134e-15,
    					6.6166e-15,
    					2.1264e-14,
    					6.683e-14,
    					2.0541e-13,
    					6.1743e-13,
    					1.8151e-12,
    					5.2185e-12,
    					1.4674e-11,
    					4.0354e-11,
    					1.0854e-10,
    					2.8556e-10,
    					7.3478e-10,
    					1.8494e-9,
    					4.5528e-9,
    					1.0964e-8,
    					2.5826e-8,
    					5.9511e-8,
    					1.3415e-7,
    					2.9583e-7,
    					6.3822e-7,
    					0.0000013471,
    					0.000002782,
    					0.0000056213,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.0031,
    					0.0049,
    					0.0074,
    					0.0112,
    					0.0164,
    					0.0237,
    					0.0334,
    					0.0463,
    					0.0628,
    					0.0836,
    					0.1092,
    					0.1401,
    					0.1763,
    					0.218,
    					0.2649,
    					0.3164,
    					0.3717,
    					0.4298,
    					0.4895,
    					0.5495,
    					0.6083,
    					0.6647,
    					0.7177,
    					0.7662,
    					0.8097,
    					0.8479,
    					0.8806,
    					0.908,
    					0.9304,
    					0.9484,
    					0.9625,
    					0.9732,
    					0.9813,
    					0.9872,
    					0.9914,
    					0.9943,
    					0.9964,
    					0.9977,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.2805,
    				"std.error": 0.5642,
    				statistic: -2.2696,
    				"p.value": 0.0241,
    				"conf.low": -2.3917,
    				"conf.high": -0.1693,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.9912e-11,
    					1.2451e-10,
    					3.0475e-10,
    					7.3181e-10,
    					1.7242e-9,
    					3.9858e-9,
    					9.0405e-9,
    					2.012e-8,
    					4.3938e-8,
    					9.4151e-8,
    					1.9797e-7,
    					4.0849e-7,
    					8.2714e-7,
    					0.0000016436,
    					0.0000032053,
    					0.0000061349,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0035,
    					0.0053,
    					0.0078,
    					0.0114,
    					0.0162,
    					0.0228,
    					0.0315,
    					0.0427,
    					0.057,
    					0.0749,
    					0.0967,
    					0.1228,
    					0.1535,
    					0.1889,
    					0.229,
    					0.2734,
    					0.3217,
    					0.3732,
    					0.4271,
    					0.4824,
    					0.538,
    					0.5929,
    					0.6461,
    					0.6965,
    					0.7434,
    					0.7863,
    					0.8247,
    					0.8583,
    					0.8873,
    					0.9118,
    					0.9321,
    					0.9486,
    					0.9617,
    					0.972,
    					0.9798,
    					0.9857,
    					0.9901,
    					0.9932,
    					0.9955,
    					0.997,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.7883,
    				"std.error": 0.5454,
    				statistic: -3.2789,
    				"p.value": 0.0012,
    				"conf.low": -2.8625,
    				"conf.high": -0.7141,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.4211e-23,
    					3.7159e-22,
    					2.4518e-21,
    					1.5572e-20,
    					9.5202e-20,
    					5.603e-19,
    					3.1743e-18,
    					1.7313e-17,
    					9.09e-17,
    					4.5947e-16,
    					2.2359e-15,
    					1.0475e-14,
    					4.7251e-14,
    					2.0521e-13,
    					8.5809e-13,
    					3.4549e-12,
    					1.3394e-11,
    					5.0005e-11,
    					1.7977e-10,
    					6.2241e-10,
    					2.0753e-9,
    					6.6647e-9,
    					2.0615e-8,
    					6.1421e-8,
    					1.7629e-7,
    					4.8744e-7,
    					0.0000012985,
    					0.0000033332,
    					0.000008245,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0009,
    					0.0017,
    					0.0031,
    					0.0055,
    					0.0095,
    					0.0158,
    					0.0254,
    					0.0395,
    					0.0594,
    					0.0864,
    					0.1216,
    					0.1658,
    					0.2193,
    					0.2815,
    					0.3512,
    					0.4263,
    					0.5042,
    					0.5819,
    					0.6566,
    					0.7255,
    					0.7869,
    					0.8394,
    					0.8826,
    					0.9169,
    					0.943,
    					0.9622,
    					0.9758,
    					0.985,
    					0.991,
    					0.9948,
    					0.9971,
    					0.9984,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.2636,
    				"std.error": 0.7591,
    				statistic: 2.9818,
    				"p.value": 0.0031,
    				"conf.low": 0.7685,
    				"conf.high": 3.7587,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					7.6671e-22,
    					4.1484e-21,
    					2.1761e-20,
    					1.1068e-19,
    					5.4579e-19,
    					2.6096e-18,
    					1.2098e-17,
    					5.4378e-17,
    					2.37e-16,
    					1.0016e-15,
    					4.1043e-15,
    					1.6308e-14,
    					6.2838e-14,
    					2.3479e-13,
    					8.5073e-13,
    					2.9893e-12,
    					1.0186e-11,
    					3.3663e-11,
    					1.0789e-10,
    					3.3538e-10,
    					1.0112e-9,
    					2.957e-9,
    					8.3877e-9,
    					2.3079e-8,
    					6.1602e-8,
    					1.5951e-7,
    					4.0073e-7,
    					9.7672e-7,
    					0.0000023099,
    					0.000005301,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0025,
    					0.0042,
    					0.007,
    					0.0112,
    					0.0176,
    					0.0269,
    					0.0399,
    					0.0576,
    					0.081,
    					0.1109,
    					0.1481,
    					0.1927,
    					0.2448,
    					0.3035,
    					0.3679,
    					0.4362,
    					0.5065,
    					0.5766,
    					0.6443,
    					0.7077,
    					0.7653,
    					0.8161,
    					0.8593,
    					0.8951,
    					0.9238,
    					0.9461,
    					0.9628,
    					0.9751,
    					0.9838,
    					0.9897,
    					0.9936,
    					0.9962,
    					0.9978,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 17,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option1",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.7607,
    				"std.error": 0.3244,
    				statistic: 17.7588,
    				"p.value": 3.3758e-46,
    				"conf.low": 5.1218,
    				"conf.high": 6.3995,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.2257e-14,
    					9.5071e-14,
    					3.917e-13,
    					1.5567e-12,
    					5.9681e-12,
    					2.2071e-11,
    					7.8745e-11,
    					2.7104e-10,
    					9.0003e-10,
    					2.8837e-9,
    					8.9145e-9,
    					2.6592e-8,
    					7.6546e-8,
    					2.1264e-7,
    					5.701e-7,
    					0.0000014753,
    					0.0000036851,
    					0.000008886,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0016,
    					0.0029,
    					0.0051,
    					0.0088,
    					0.0145,
    					0.0231,
    					0.0358,
    					0.0537,
    					0.078,
    					0.1099,
    					0.1503,
    					0.1994,
    					0.2571,
    					0.3225,
    					0.3939,
    					0.469,
    					0.5453,
    					0.62,
    					0.6904,
    					0.7544,
    					0.8106,
    					0.858,
    					0.8967,
    					0.9271,
    					0.9501,
    					0.9669,
    					0.9788,
    					0.9868,
    					0.9921,
    					0.9954,
    					0.9974,
    					0.9986,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3315,
    				"std.error": 0.4526,
    				statistic: -0.7325,
    				"p.value": 0.4646,
    				"conf.low": -1.2229,
    				"conf.high": 0.5599,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.5199e-24,
    					8.923e-24,
    					5.0835e-23,
    					2.8105e-22,
    					1.5079e-21,
    					7.8516e-21,
    					3.9676e-20,
    					1.9457e-19,
    					9.2603e-19,
    					4.2774e-18,
    					1.9175e-17,
    					8.3428e-17,
    					3.523e-16,
    					1.4439e-15,
    					5.7437e-15,
    					2.2176e-14,
    					8.3109e-14,
    					3.0232e-13,
    					1.0675e-12,
    					3.6586e-12,
    					1.2173e-11,
    					3.9314e-11,
    					1.2326e-10,
    					3.7518e-10,
    					1.1087e-9,
    					3.1806e-9,
    					8.8595e-9,
    					2.396e-8,
    					6.2921e-8,
    					1.6045e-7,
    					3.9731e-7,
    					9.5545e-7,
    					0.0000022315,
    					0.0000050619,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0022,
    					0.0037,
    					0.0062,
    					0.01,
    					0.0157,
    					0.024,
    					0.0356,
    					0.0516,
    					0.0728,
    					0.1,
    					0.1341,
    					0.1753,
    					0.2238,
    					0.2792,
    					0.3405,
    					0.4063,
    					0.4749,
    					0.5442,
    					0.6122,
    					0.6769,
    					0.7367,
    					0.7902,
    					0.8368,
    					0.876,
    					0.9081,
    					0.9336,
    					0.9533,
    					0.968,
    					0.9786,
    					0.9861,
    					0.9912,
    					0.9946,
    					0.9968,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8172,
    				"std.error": 0.6106,
    				statistic: -1.3385,
    				"p.value": 0.182,
    				"conf.low": -2.0198,
    				"conf.high": 0.3853,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.137e-25,
    					1.3134e-24,
    					7.83e-24,
    					4.528e-23,
    					2.5399e-22,
    					1.382e-21,
    					7.2948e-21,
    					3.7351e-20,
    					1.8551e-19,
    					8.9385e-19,
    					4.1779e-18,
    					1.8944e-17,
    					8.333e-17,
    					3.556e-16,
    					1.4722e-15,
    					5.9129e-15,
    					2.3041e-14,
    					8.7108e-14,
    					3.1951e-13,
    					1.1371e-12,
    					3.9264e-12,
    					1.3155e-11,
    					4.2767e-11,
    					1.3491e-10,
    					4.1298e-10,
    					1.2268e-9,
    					3.5366e-9,
    					9.8943e-9,
    					2.6865e-8,
    					7.0799e-8,
    					1.811e-7,
    					4.4965e-7,
    					0.0000010837,
    					0.0000025358,
    					0.0000057603,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0025,
    					0.0042,
    					0.007,
    					0.0112,
    					0.0176,
    					0.0267,
    					0.0395,
    					0.0569,
    					0.0799,
    					0.1093,
    					0.1457,
    					0.1895,
    					0.2406,
    					0.2984,
    					0.3618,
    					0.4292,
    					0.4988,
    					0.5684,
    					0.636,
    					0.6995,
    					0.7575,
    					0.8089,
    					0.8529,
    					0.8896,
    					0.9192,
    					0.9424,
    					0.96,
    					0.9729,
    					0.9822,
    					0.9886,
    					0.9929,
    					0.9957,
    					0.9975,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.1659,
    				"std.error": 0.8559,
    				statistic: 1.3622,
    				"p.value": 0.1744,
    				"conf.low": -0.5198,
    				"conf.high": 2.8516,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.6836e-13,
    					1.1448e-12,
    					3.4731e-12,
    					1.0285e-11,
    					2.9732e-11,
    					8.3904e-11,
    					2.3115e-10,
    					6.2165e-10,
    					1.6322e-9,
    					4.1839e-9,
    					1.0471e-8,
    					2.5585e-8,
    					6.104e-8,
    					1.4219e-7,
    					3.2343e-7,
    					7.184e-7,
    					0.0000015582,
    					0.0000033007,
    					0.0000068283,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0027,
    					0.0043,
    					0.0068,
    					0.0104,
    					0.0156,
    					0.0229,
    					0.0329,
    					0.0462,
    					0.0635,
    					0.0854,
    					0.1127,
    					0.1456,
    					0.1844,
    					0.2291,
    					0.2792,
    					0.3342,
    					0.393,
    					0.4544,
    					0.5168,
    					0.5789,
    					0.639,
    					0.6959,
    					0.7484,
    					0.7957,
    					0.8373,
    					0.8729,
    					0.9027,
    					0.927,
    					0.9464,
    					0.9614,
    					0.9728,
    					0.9813,
    					0.9874,
    					0.9917,
    					0.9946,
    					0.9966,
    					0.9979,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 18,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option1",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.554,
    				"std.error": 0.42,
    				statistic: 15.6065,
    				"p.value": 2.4137e-35,
    				"conf.low": 5.7253,
    				"conf.high": 7.3826,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.8807e-15,
    					1.8566e-14,
    					5.7368e-14,
    					1.7349e-13,
    					5.1347e-13,
    					1.4874e-12,
    					4.2171e-12,
    					1.1702e-11,
    					3.1785e-11,
    					8.45e-11,
    					2.1988e-10,
    					5.6006e-10,
    					1.3964e-9,
    					3.4079e-9,
    					8.1416e-9,
    					1.9041e-8,
    					4.3593e-8,
    					9.7707e-8,
    					2.144e-7,
    					4.6058e-7,
    					9.6876e-7,
    					0.0000019951,
    					0.000004023,
    					0.0000079434,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0023,
    					0.0036,
    					0.0055,
    					0.0084,
    					0.0124,
    					0.018,
    					0.0256,
    					0.0358,
    					0.0492,
    					0.0661,
    					0.0874,
    					0.1133,
    					0.1443,
    					0.1805,
    					0.222,
    					0.2684,
    					0.3193,
    					0.3738,
    					0.431,
    					0.4897,
    					0.5486,
    					0.6064,
    					0.662,
    					0.7143,
    					0.7624,
    					0.8056,
    					0.8437,
    					0.8765,
    					0.9042,
    					0.927,
    					0.9454,
    					0.9599,
    					0.9711,
    					0.9796,
    					0.9859,
    					0.9904,
    					0.9936,
    					0.9958,
    					0.9973,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.2805,
    				"std.error": 0.5741,
    				statistic: -2.2305,
    				"p.value": 0.0269,
    				"conf.low": -2.4133,
    				"conf.high": -0.1477,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.0377e-10,
    					2.5108e-10,
    					5.9641e-10,
    					1.3909e-9,
    					3.1847e-9,
    					7.1592e-9,
    					1.5802e-8,
    					3.4245e-8,
    					7.2868e-8,
    					1.5225e-7,
    					3.1235e-7,
    					6.2925e-7,
    					0.0000012448,
    					0.0000024183,
    					0.0000046137,
    					0.0000086443,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0027,
    					0.004,
    					0.006,
    					0.0087,
    					0.0126,
    					0.0178,
    					0.0247,
    					0.0338,
    					0.0455,
    					0.0602,
    					0.0784,
    					0.1006,
    					0.1269,
    					0.1577,
    					0.193,
    					0.2328,
    					0.2768,
    					0.3245,
    					0.3753,
    					0.4283,
    					0.4827,
    					0.5374,
    					0.5914,
    					0.6437,
    					0.6934,
    					0.7398,
    					0.7823,
    					0.8205,
    					0.8541,
    					0.8833,
    					0.9081,
    					0.9287,
    					0.9456,
    					0.9591,
    					0.9698,
    					0.978,
    					0.9843,
    					0.989,
    					0.9924,
    					0.9948,
    					0.9965,
    					0.9977,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.6105,
    				"std.error": 0.6659,
    				statistic: -2.4186,
    				"p.value": 0.0166,
    				"conf.low": -2.9245,
    				"conf.high": -0.2966,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.3419e-17,
    					2.0401e-16,
    					7.5952e-16,
    					2.7565e-15,
    					9.7528e-15,
    					3.3639e-14,
    					1.1311e-13,
    					3.7081e-13,
    					1.1851e-12,
    					3.6927e-12,
    					1.1218e-11,
    					3.3227e-11,
    					9.5956e-11,
    					2.7019e-10,
    					7.418e-10,
    					1.9859e-9,
    					5.1841e-9,
    					1.3196e-8,
    					3.2758e-8,
    					7.9301e-8,
    					1.8722e-7,
    					4.3109e-7,
    					9.6811e-7,
    					0.0000021206,
    					0.0000045309,
    					0.0000094436,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0023,
    					0.0038,
    					0.0061,
    					0.0094,
    					0.0143,
    					0.0213,
    					0.031,
    					0.0441,
    					0.0612,
    					0.0832,
    					0.1107,
    					0.1441,
    					0.1837,
    					0.2294,
    					0.281,
    					0.3376,
    					0.3981,
    					0.4611,
    					0.5252,
    					0.5886,
    					0.6498,
    					0.7073,
    					0.76,
    					0.807,
    					0.848,
    					0.8827,
    					0.9114,
    					0.9345,
    					0.9526,
    					0.9665,
    					0.9768,
    					0.9843,
    					0.9897,
    					0.9933,
    					0.9958,
    					0.9974,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.1149,
    				"std.error": 0.9254,
    				statistic: 2.2855,
    				"p.value": 0.0234,
    				"conf.low": 0.289,
    				"conf.high": 3.9407,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					9.3248e-15,
    					2.8555e-14,
    					8.565e-14,
    					2.5164e-13,
    					7.2421e-13,
    					2.0416e-12,
    					5.6377e-12,
    					1.525e-11,
    					4.0409e-11,
    					1.0489e-10,
    					2.6673e-10,
    					6.6444e-10,
    					1.6215e-9,
    					3.8768e-9,
    					9.0807e-9,
    					2.0839e-8,
    					4.6853e-8,
    					1.0321e-7,
    					2.2278e-7,
    					4.7115e-7,
    					9.7638e-7,
    					0.0000019827,
    					0.0000039455,
    					0.0000076944,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.002,
    					0.0032,
    					0.0049,
    					0.0074,
    					0.0109,
    					0.0159,
    					0.0226,
    					0.0317,
    					0.0435,
    					0.0586,
    					0.0776,
    					0.1009,
    					0.1289,
    					0.1619,
    					0.2001,
    					0.2431,
    					0.2907,
    					0.3423,
    					0.397,
    					0.4538,
    					0.5116,
    					0.5691,
    					0.6252,
    					0.6787,
    					0.7288,
    					0.7747,
    					0.8158,
    					0.8519,
    					0.8829,
    					0.909,
    					0.9305,
    					0.9479,
    					0.9616,
    					0.9722,
    					0.9803,
    					0.9863,
    					0.9906,
    					0.9937,
    					0.9959,
    					0.9973,
    					0.9983,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 19,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option2",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5491,
    				"std.error": 0.3694,
    				statistic: 17.7274,
    				"p.value": 3.4225e-48,
    				"conf.low": 5.822,
    				"conf.high": 7.2762,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					9.6859e-19,
    					4.2467e-18,
    					1.8107e-17,
    					7.5077e-17,
    					3.0273e-16,
    					1.1871e-15,
    					4.5272e-15,
    					1.6791e-14,
    					6.0566e-14,
    					2.1247e-13,
    					7.2494e-13,
    					2.4057e-12,
    					7.7648e-12,
    					2.4377e-11,
    					7.4436e-11,
    					2.211e-10,
    					6.388e-10,
    					1.7954e-9,
    					4.9088e-9,
    					1.3056e-8,
    					3.3785e-8,
    					8.5056e-8,
    					2.0834e-7,
    					4.9653e-7,
    					0.0000011515,
    					0.0000025986,
    					0.0000057067,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0034,
    					0.0056,
    					0.0089,
    					0.0138,
    					0.021,
    					0.031,
    					0.0448,
    					0.0631,
    					0.0867,
    					0.1164,
    					0.1527,
    					0.1957,
    					0.2455,
    					0.3013,
    					0.3623,
    					0.4269,
    					0.4936,
    					0.5604,
    					0.6256,
    					0.6874,
    					0.7443,
    					0.7952,
    					0.8396,
    					0.8772,
    					0.9081,
    					0.9329,
    					0.9521,
    					0.9667,
    					0.9774,
    					0.985,
    					0.9903,
    					0.9939,
    					0.9963,
    					0.9978,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.2585,
    				"std.error": 0.513,
    				statistic: -2.453,
    				"p.value": 0.0148,
    				"conf.low": -2.2682,
    				"conf.high": -0.2488,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.1851e-13,
    					1.2671e-12,
    					3.7485e-12,
    					1.0836e-11,
    					3.0608e-11,
    					8.4485e-11,
    					2.2788e-10,
    					6.0064e-10,
    					1.5471e-9,
    					3.8944e-9,
    					9.5805e-9,
    					2.3034e-8,
    					5.4124e-8,
    					1.243e-7,
    					2.7903e-7,
    					6.1222e-7,
    					0.0000013131,
    					0.0000027529,
    					0.0000056421,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0034,
    					0.0054,
    					0.0083,
    					0.0125,
    					0.0184,
    					0.0265,
    					0.0375,
    					0.0519,
    					0.0703,
    					0.0934,
    					0.1217,
    					0.1556,
    					0.1951,
    					0.2402,
    					0.2904,
    					0.3451,
    					0.4032,
    					0.4636,
    					0.5248,
    					0.5854,
    					0.644,
    					0.6994,
    					0.7506,
    					0.7967,
    					0.8373,
    					0.8722,
    					0.9016,
    					0.9256,
    					0.9449,
    					0.96,
    					0.9716,
    					0.9802,
    					0.9865,
    					0.991,
    					0.9941,
    					0.9962,
    					0.9976,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.7324,
    				"std.error": 0.5002,
    				statistic: -3.4633,
    				"p.value": 0.0006,
    				"conf.low": -2.7169,
    				"conf.high": -0.7479,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.6945e-27,
    					1.7046e-26,
    					1.6386e-25,
    					1.5053e-24,
    					1.3214e-23,
    					1.1086e-22,
    					8.8875e-22,
    					6.8096e-21,
    					4.9863e-20,
    					3.4896e-19,
    					2.3341e-18,
    					1.4921e-17,
    					9.117e-17,
    					5.3245e-16,
    					2.9724e-15,
    					1.5861e-14,
    					8.0905e-14,
    					3.9451e-13,
    					1.8391e-12,
    					8.1963e-12,
    					3.4924e-11,
    					1.4228e-10,
    					5.5429e-10,
    					2.0648e-9,
    					7.3558e-9,
    					2.5062e-8,
    					8.1671e-8,
    					2.5458e-7,
    					7.5918e-7,
    					0.000002166,
    					0.0000059133,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.001,
    					0.002,
    					0.0038,
    					0.0071,
    					0.0125,
    					0.0214,
    					0.035,
    					0.055,
    					0.0831,
    					0.1209,
    					0.1694,
    					0.2289,
    					0.2986,
    					0.3766,
    					0.46,
    					0.5453,
    					0.6284,
    					0.706,
    					0.7751,
    					0.8339,
    					0.8818,
    					0.9189,
    					0.9465,
    					0.9661,
    					0.9793,
    					0.9879,
    					0.9932,
    					0.9963,
    					0.9981,
    					0.9991,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.157,
    				"std.error": 0.6965,
    				statistic: 3.0968,
    				"p.value": 0.0021,
    				"conf.low": 0.7861,
    				"conf.high": 3.5278,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					6.7911e-25,
    					4.8843e-24,
    					3.386e-23,
    					2.2626e-22,
    					1.4573e-21,
    					9.0474e-21,
    					5.4143e-20,
    					3.1233e-19,
    					1.7368e-18,
    					9.3099e-18,
    					4.8108e-17,
    					2.3965e-16,
    					1.1509e-15,
    					5.3281e-15,
    					2.3781e-14,
    					1.0234e-13,
    					4.2458e-13,
    					1.6984e-12,
    					6.5507e-12,
    					2.4362e-11,
    					8.7366e-11,
    					3.0212e-10,
    					1.0075e-9,
    					3.2403e-9,
    					1.0051e-8,
    					3.0068e-8,
    					8.6766e-8,
    					2.4152e-7,
    					6.4854e-7,
    					0.0000016802,
    					0.0000041998,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0018,
    					0.0033,
    					0.0057,
    					0.0098,
    					0.0161,
    					0.0256,
    					0.0395,
    					0.0589,
    					0.0852,
    					0.1193,
    					0.1622,
    					0.2139,
    					0.2742,
    					0.3419,
    					0.415,
    					0.4913,
    					0.5678,
    					0.6419,
    					0.711,
    					0.7731,
    					0.8268,
    					0.8717,
    					0.9078,
    					0.9357,
    					0.9566,
    					0.9716,
    					0.9821,
    					0.989,
    					0.9935,
    					0.9963,
    					0.9979,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 20,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option2",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.8861,
    				"std.error": 0.2951,
    				statistic: 19.9463,
    				"p.value": 2.1708e-56,
    				"conf.low": 5.3053,
    				"conf.high": 6.4669,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.3775e-18,
    					8.6538e-18,
    					5.2037e-17,
    					2.9952e-16,
    					1.6503e-15,
    					8.7043e-15,
    					4.395e-14,
    					2.1244e-13,
    					9.8311e-13,
    					4.3558e-12,
    					1.8478e-11,
    					7.5053e-11,
    					2.9191e-10,
    					1.0872e-9,
    					3.878e-9,
    					1.3248e-8,
    					4.3346e-8,
    					1.3585e-7,
    					4.0789e-7,
    					0.0000011733,
    					0.0000032339,
    					0.0000085414,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0024,
    					0.0045,
    					0.0081,
    					0.0141,
    					0.0236,
    					0.0381,
    					0.059,
    					0.0881,
    					0.1267,
    					0.1758,
    					0.2355,
    					0.3049,
    					0.3821,
    					0.4644,
    					0.5482,
    					0.6299,
    					0.7062,
    					0.7742,
    					0.8323,
    					0.8798,
    					0.9169,
    					0.9446,
    					0.9645,
    					0.9781,
    					0.987,
    					0.9926,
    					0.9959,
    					0.9979,
    					0.9989,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.4447,
    				"std.error": 0.4117,
    				statistic: -1.0804,
    				"p.value": 0.2809,
    				"conf.low": -1.2549,
    				"conf.high": 0.3654,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					6.1537e-28,
    					4.9452e-27,
    					3.8323e-26,
    					2.864e-25,
    					2.064e-24,
    					1.4345e-23,
    					9.6147e-23,
    					6.2147e-22,
    					3.874e-21,
    					2.329e-20,
    					1.3503e-19,
    					7.5509e-19,
    					4.0723e-18,
    					2.1183e-17,
    					1.0627e-16,
    					5.1424e-16,
    					2.4001e-15,
    					1.0805e-14,
    					4.6922e-14,
    					1.9655e-13,
    					7.9422e-13,
    					3.0959e-12,
    					1.1642e-11,
    					4.2235e-11,
    					1.4783e-10,
    					4.9919e-10,
    					1.6265e-9,
    					5.1135e-9,
    					1.5513e-8,
    					4.5416e-8,
    					1.2832e-7,
    					3.499e-7,
    					9.2091e-7,
    					0.0000023397,
    					0.0000057384,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0021,
    					0.0039,
    					0.0067,
    					0.0112,
    					0.0183,
    					0.0288,
    					0.0438,
    					0.0647,
    					0.0925,
    					0.1284,
    					0.173,
    					0.2263,
    					0.2878,
    					0.3563,
    					0.4297,
    					0.5057,
    					0.5815,
    					0.6543,
    					0.7219,
    					0.7822,
    					0.8343,
    					0.8775,
    					0.9121,
    					0.9389,
    					0.9588,
    					0.9731,
    					0.983,
    					0.9896,
    					0.9938,
    					0.9965,
    					0.998,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.0611,
    				"std.error": 0.5725,
    				statistic: -1.8536,
    				"p.value": 0.0648,
    				"conf.low": -2.1878,
    				"conf.high": 0.0656,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.3241e-26,
    					9.6324e-26,
    					6.7684e-25,
    					4.594e-24,
    					3.0119e-23,
    					1.9075e-22,
    					1.1669e-21,
    					6.8958e-21,
    					3.9365e-20,
    					2.1707e-19,
    					1.1564e-18,
    					5.951e-18,
    					2.9586e-17,
    					1.421e-16,
    					6.5934e-16,
    					2.9557e-15,
    					1.2801e-14,
    					5.3566e-14,
    					2.1656e-13,
    					8.4597e-13,
    					3.1931e-12,
    					1.1646e-11,
    					4.1042e-11,
    					1.3977e-10,
    					4.6e-10,
    					1.4631e-9,
    					4.4972e-9,
    					1.3361e-8,
    					3.8366e-8,
    					1.0649e-7,
    					2.8573e-7,
    					7.4114e-7,
    					0.0000018586,
    					0.0000045067,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0029,
    					0.0051,
    					0.0086,
    					0.0141,
    					0.0223,
    					0.0343,
    					0.0511,
    					0.0739,
    					0.1038,
    					0.1416,
    					0.1877,
    					0.2422,
    					0.3042,
    					0.3725,
    					0.445,
    					0.5194,
    					0.5932,
    					0.6638,
    					0.729,
    					0.7872,
    					0.8374,
    					0.8792,
    					0.9127,
    					0.9388,
    					0.9584,
    					0.9725,
    					0.9824,
    					0.9891,
    					0.9934,
    					0.9962,
    					0.9978,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3512,
    				"std.error": 0.7957,
    				statistic: 1.6982,
    				"p.value": 0.0905,
    				"conf.low": -0.2148,
    				"conf.high": 2.9172,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					9.4563e-16,
    					3.6388e-15,
    					1.3615e-14,
    					4.9534e-14,
    					1.7524e-13,
    					6.0286e-13,
    					2.0168e-12,
    					6.5609e-12,
    					2.0756e-11,
    					6.3859e-11,
    					1.9107e-10,
    					5.5602e-10,
    					1.5736e-9,
    					4.3317e-9,
    					1.1598e-8,
    					3.0204e-8,
    					7.6515e-8,
    					1.8855e-7,
    					4.5202e-7,
    					0.0000010542,
    					0.0000023922,
    					0.0000052815,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0033,
    					0.0054,
    					0.0086,
    					0.0135,
    					0.0205,
    					0.0304,
    					0.044,
    					0.0621,
    					0.0856,
    					0.1151,
    					0.1513,
    					0.1942,
    					0.244,
    					0.2998,
    					0.3608,
    					0.4256,
    					0.4925,
    					0.5596,
    					0.625,
    					0.687,
    					0.7441,
    					0.7952,
    					0.8398,
    					0.8774,
    					0.9084,
    					0.9331,
    					0.9524,
    					0.9669,
    					0.9776,
    					0.9852,
    					0.9904,
    					0.994,
    					0.9963,
    					0.9978,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 21,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option2",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5491,
    				"std.error": 0.3732,
    				statistic: 17.5492,
    				"p.value": 4.8133e-43,
    				"conf.low": 5.8134,
    				"conf.high": 7.2847,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.1077e-18,
    					8.9752e-18,
    					3.7188e-17,
    					1.4992e-16,
    					5.8814e-16,
    					2.245e-15,
    					8.3388e-15,
    					3.014e-14,
    					1.0601e-13,
    					3.6281e-13,
    					1.2084e-12,
    					3.9167e-12,
    					1.2355e-11,
    					3.7926e-11,
    					1.1331e-10,
    					3.2946e-10,
    					9.3238e-10,
    					2.5682e-9,
    					6.8855e-9,
    					1.7969e-8,
    					4.5646e-8,
    					1.1288e-7,
    					2.7173e-7,
    					6.3683e-7,
    					0.0000014531,
    					0.0000032282,
    					0.0000069833,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0022,
    					0.0037,
    					0.006,
    					0.0095,
    					0.0146,
    					0.022,
    					0.0324,
    					0.0464,
    					0.065,
    					0.0889,
    					0.1187,
    					0.1551,
    					0.1981,
    					0.2477,
    					0.3031,
    					0.3636,
    					0.4276,
    					0.4936,
    					0.5598,
    					0.6244,
    					0.6856,
    					0.7421,
    					0.7929,
    					0.8372,
    					0.8748,
    					0.9059,
    					0.9309,
    					0.9504,
    					0.9653,
    					0.9762,
    					0.9842,
    					0.9897,
    					0.9935,
    					0.9959,
    					0.9976,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.2585,
    				"std.error": 0.5183,
    				statistic: -2.4284,
    				"p.value": 0.016,
    				"conf.low": -2.2801,
    				"conf.high": -0.2369,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					7.0518e-13,
    					2.0891e-12,
    					6.0502e-12,
    					1.7129e-11,
    					4.741e-11,
    					1.2829e-10,
    					3.3937e-10,
    					8.7773e-10,
    					2.2195e-9,
    					5.4873e-9,
    					1.3265e-8,
    					3.1352e-8,
    					7.2459e-8,
    					1.6375e-7,
    					3.6187e-7,
    					7.8203e-7,
    					0.0000016528,
    					0.0000034161,
    					0.0000069057,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0024,
    					0.0037,
    					0.0058,
    					0.0089,
    					0.0133,
    					0.0194,
    					0.0278,
    					0.039,
    					0.0536,
    					0.0723,
    					0.0957,
    					0.1241,
    					0.158,
    					0.1975,
    					0.2424,
    					0.2923,
    					0.3466,
    					0.4042,
    					0.4639,
    					0.5245,
    					0.5845,
    					0.6426,
    					0.6976,
    					0.7484,
    					0.7943,
    					0.8349,
    					0.8698,
    					0.8993,
    					0.9236,
    					0.9431,
    					0.9585,
    					0.9703,
    					0.9792,
    					0.9857,
    					0.9904,
    					0.9937,
    					0.9959,
    					0.9974,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.7241,
    				"std.error": 0.6144,
    				statistic: -2.8061,
    				"p.value": 0.0055,
    				"conf.low": -2.9353,
    				"conf.high": -0.5129,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.3939e-19,
    					2.9795e-18,
    					1.3474e-17,
    					5.9135e-17,
    					2.5187e-16,
    					1.0411e-15,
    					4.1768e-15,
    					1.6263e-14,
    					6.1456e-14,
    					2.2541e-13,
    					8.0244e-13,
    					2.7727e-12,
    					9.2996e-12,
    					3.0276e-11,
    					9.5677e-11,
    					2.9351e-10,
    					8.7408e-10,
    					2.527e-9,
    					7.0927e-9,
    					1.9327e-8,
    					5.1135e-8,
    					1.3136e-7,
    					3.2768e-7,
    					7.9372e-7,
    					0.0000018671,
    					0.0000042655,
    					0.0000094646,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0034,
    					0.0056,
    					0.0091,
    					0.0144,
    					0.0221,
    					0.0331,
    					0.0481,
    					0.0682,
    					0.0943,
    					0.127,
    					0.1669,
    					0.2141,
    					0.2683,
    					0.3286,
    					0.3938,
    					0.4621,
    					0.5315,
    					0.6,
    					0.6655,
    					0.7263,
    					0.7811,
    					0.829,
    					0.8696,
    					0.903,
    					0.9296,
    					0.9502,
    					0.9657,
    					0.977,
    					0.985,
    					0.9905,
    					0.9941,
    					0.9965,
    					0.9979,
    					0.9988,
    					0.9993,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.165,
    				"std.error": 0.853,
    				statistic: 2.5381,
    				"p.value": 0.0119,
    				"conf.low": 0.4835,
    				"conf.high": 3.8465,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.925e-17,
    					1.0983e-16,
    					4.0244e-16,
    					1.439e-15,
    					5.0217e-15,
    					1.7101e-14,
    					5.6837e-14,
    					1.8435e-13,
    					5.8358e-13,
    					1.8029e-12,
    					5.4363e-12,
    					1.5998e-11,
    					4.5953e-11,
    					1.2883e-10,
    					3.5253e-10,
    					9.4162e-10,
    					2.455e-9,
    					6.2479e-9,
    					1.5522e-8,
    					3.7645e-8,
    					8.9128e-8,
    					2.0601e-7,
    					4.6491e-7,
    					0.0000010243,
    					0.0000022037,
    					0.0000046291,
    					0.0000094954,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0021,
    					0.0034,
    					0.0055,
    					0.0085,
    					0.0129,
    					0.0191,
    					0.0277,
    					0.0393,
    					0.0547,
    					0.0744,
    					0.0992,
    					0.1295,
    					0.1656,
    					0.2078,
    					0.2557,
    					0.3087,
    					0.3662,
    					0.4267,
    					0.4891,
    					0.5518,
    					0.6131,
    					0.6718,
    					0.7265,
    					0.7763,
    					0.8204,
    					0.8587,
    					0.891,
    					0.9176,
    					0.939,
    					0.9558,
    					0.9686,
    					0.9782,
    					0.9852,
    					0.9902,
    					0.9936,
    					0.996,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 22,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option3",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.6062,
    				"std.error": 0.3849,
    				statistic: 17.1632,
    				"p.value": 9.877e-44,
    				"conf.low": 5.848,
    				"conf.high": 7.3644,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.7878e-18,
    					2.3161e-17,
    					9.033e-17,
    					3.4336e-16,
    					1.2721e-15,
    					4.5932e-15,
    					1.6165e-14,
    					5.5452e-14,
    					1.8541e-13,
    					6.0423e-13,
    					1.9194e-12,
    					5.9434e-12,
    					1.7939e-11,
    					5.2782e-11,
    					1.5139e-10,
    					4.2328e-10,
    					1.1538e-9,
    					3.0659e-9,
    					7.9428e-9,
    					2.0062e-8,
    					4.9406e-8,
    					1.1863e-7,
    					2.7775e-7,
    					6.3412e-7,
    					0.0000014118,
    					0.0000030651,
    					0.0000064901,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0018,
    					0.003,
    					0.0049,
    					0.0077,
    					0.0118,
    					0.0178,
    					0.0262,
    					0.0377,
    					0.053,
    					0.0728,
    					0.0979,
    					0.1288,
    					0.1658,
    					0.2091,
    					0.2585,
    					0.3133,
    					0.3725,
    					0.4349,
    					0.4991,
    					0.5632,
    					0.6257,
    					0.685,
    					0.74,
    					0.7895,
    					0.833,
    					0.8702,
    					0.9013,
    					0.9265,
    					0.9465,
    					0.9619,
    					0.9735,
    					0.982,
    					0.988,
    					0.9922,
    					0.9951,
    					0.9969,
    					0.9982,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.3938,
    				"std.error": 0.5566,
    				statistic: -2.5043,
    				"p.value": 0.0129,
    				"conf.low": -2.4901,
    				"conf.high": -0.2975,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.0605e-10,
    					2.6364e-10,
    					6.4268e-10,
    					1.5363e-9,
    					3.6014e-9,
    					8.2793e-9,
    					1.8666e-8,
    					4.127e-8,
    					8.9489e-8,
    					1.9032e-7,
    					3.9697e-7,
    					8.1213e-7,
    					0.0000016297,
    					0.0000032077,
    					0.0000061933,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0024,
    					0.0038,
    					0.0057,
    					0.0084,
    					0.0123,
    					0.0176,
    					0.0247,
    					0.0342,
    					0.0464,
    					0.0618,
    					0.081,
    					0.1044,
    					0.1324,
    					0.1651,
    					0.2027,
    					0.2449,
    					0.2915,
    					0.3419,
    					0.3952,
    					0.4505,
    					0.5069,
    					0.5631,
    					0.618,
    					0.6707,
    					0.7202,
    					0.7658,
    					0.8069,
    					0.8433,
    					0.8748,
    					0.9017,
    					0.924,
    					0.9423,
    					0.9569,
    					0.9684,
    					0.9772,
    					0.9838,
    					0.9888,
    					0.9923,
    					0.9948,
    					0.9966,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.384,
    				"std.error": 0.5263,
    				statistic: -2.6297,
    				"p.value": 0.0091,
    				"conf.low": -2.4207,
    				"conf.high": -0.3473,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.2176e-28,
    					3.8866e-27,
    					3.4375e-26,
    					2.9181e-25,
    					2.3776e-24,
    					1.8595e-23,
    					1.3958e-22,
    					1.0057e-21,
    					6.9559e-21,
    					4.6179e-20,
    					2.9429e-19,
    					1.8003e-18,
    					1.0572e-17,
    					5.9598e-17,
    					3.2253e-16,
    					1.6757e-15,
    					8.3584e-15,
    					4.0027e-14,
    					1.8404e-13,
    					8.1243e-13,
    					3.4437e-12,
    					1.4016e-11,
    					5.4781e-11,
    					2.056e-10,
    					7.4108e-10,
    					2.5654e-9,
    					8.5295e-9,
    					2.724e-8,
    					8.3565e-8,
    					2.4627e-7,
    					6.973e-7,
    					0.000001897,
    					0.0000049594,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0007,
    					0.0014,
    					0.0026,
    					0.0048,
    					0.0085,
    					0.0146,
    					0.024,
    					0.038,
    					0.0581,
    					0.0857,
    					0.1222,
    					0.1683,
    					0.2244,
    					0.2898,
    					0.363,
    					0.4415,
    					0.5224,
    					0.6025,
    					0.6784,
    					0.7475,
    					0.8078,
    					0.8585,
    					0.8992,
    					0.9306,
    					0.9539,
    					0.9704,
    					0.9817,
    					0.9891,
    					0.9937,
    					0.9965,
    					0.9982,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.7092,
    				"std.error": 0.7629,
    				statistic: 2.2405,
    				"p.value": 0.026,
    				"conf.low": 0.2065,
    				"conf.high": 3.2119,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					9.817e-19,
    					4.6053e-18,
    					2.0953e-17,
    					9.2466e-17,
    					3.9577e-16,
    					1.643e-15,
    					6.6161e-15,
    					2.5841e-14,
    					9.7902e-14,
    					3.5979e-13,
    					1.2826e-12,
    					4.4354e-12,
    					1.4879e-11,
    					4.8424e-11,
    					1.5289e-10,
    					4.683e-10,
    					1.3917e-9,
    					4.0128e-9,
    					1.1227e-8,
    					3.0476e-8,
    					8.0281e-8,
    					2.0522e-7,
    					5.0912e-7,
    					0.0000012258,
    					0.0000028646,
    					0.0000064978,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0027,
    					0.0047,
    					0.0077,
    					0.0123,
    					0.0191,
    					0.0289,
    					0.0427,
    					0.0612,
    					0.0855,
    					0.1165,
    					0.1546,
    					0.2002,
    					0.2531,
    					0.3125,
    					0.3772,
    					0.4455,
    					0.5156,
    					0.5851,
    					0.6521,
    					0.7146,
    					0.7712,
    					0.8209,
    					0.8632,
    					0.8981,
    					0.926,
    					0.9477,
    					0.964,
    					0.9758,
    					0.9842,
    					0.99,
    					0.9938,
    					0.9963,
    					0.9978,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 23,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option3",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.0749,
    				"std.error": 0.3109,
    				statistic: 19.5428,
    				"p.value": 1.1115e-51,
    				"conf.low": 5.4626,
    				"conf.high": 6.6872,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.1532e-19,
    					1.8666e-18,
    					1.0622e-17,
    					5.8111e-17,
    					3.0562e-16,
    					1.5453e-15,
    					7.5117e-15,
    					3.5107e-14,
    					1.5775e-13,
    					6.8156e-13,
    					2.8314e-12,
    					1.131e-11,
    					4.3444e-11,
    					1.6048e-10,
    					5.7007e-10,
    					1.9476e-9,
    					6.3998e-9,
    					2.0227e-8,
    					6.1495e-8,
    					1.7985e-7,
    					5.0604e-7,
    					0.00000137,
    					0.0000035687,
    					0.0000089462,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.001,
    					0.0019,
    					0.0036,
    					0.0064,
    					0.011,
    					0.0183,
    					0.0293,
    					0.0454,
    					0.0679,
    					0.0982,
    					0.1374,
    					0.1862,
    					0.2444,
    					0.3112,
    					0.385,
    					0.4631,
    					0.5427,
    					0.6206,
    					0.6939,
    					0.7602,
    					0.8177,
    					0.8658,
    					0.9043,
    					0.934,
    					0.956,
    					0.9717,
    					0.9824,
    					0.9894,
    					0.9939,
    					0.9966,
    					0.9982,
    					0.999,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.7812,
    				"std.error": 0.4525,
    				statistic: -1.7264,
    				"p.value": 0.0856,
    				"conf.low": -1.6726,
    				"conf.high": 0.1101,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.4321e-20,
    					1.2041e-19,
    					5.785e-19,
    					2.6974e-18,
    					1.2207e-17,
    					5.3611e-17,
    					2.2852e-16,
    					9.454e-16,
    					3.796e-15,
    					1.4794e-14,
    					5.596e-14,
    					2.0546e-13,
    					7.3221e-13,
    					2.5329e-12,
    					8.5052e-12,
    					2.7723e-11,
    					8.7722e-11,
    					2.6946e-10,
    					8.0356e-10,
    					2.3264e-9,
    					6.5392e-9,
    					1.7846e-8,
    					4.729e-8,
    					1.2168e-7,
    					3.0402e-7,
    					7.3766e-7,
    					0.0000017382,
    					0.0000039782,
    					0.0000088433,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0032,
    					0.0054,
    					0.0087,
    					0.0138,
    					0.0212,
    					0.0318,
    					0.0464,
    					0.0659,
    					0.0913,
    					0.1233,
    					0.1625,
    					0.2089,
    					0.2623,
    					0.322,
    					0.3867,
    					0.4547,
    					0.524,
    					0.5926,
    					0.6585,
    					0.7199,
    					0.7753,
    					0.824,
    					0.8654,
    					0.8995,
    					0.9269,
    					0.9481,
    					0.9642,
    					0.9759,
    					0.9842,
    					0.9899,
    					0.9937,
    					0.9962,
    					0.9978,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.7703,
    				"std.error": 0.5968,
    				statistic: -1.2908,
    				"p.value": 0.198,
    				"conf.low": -1.9459,
    				"conf.high": 0.4052,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					7.356e-27,
    					4.9871e-26,
    					3.275e-25,
    					2.0831e-24,
    					1.2834e-23,
    					7.6593e-23,
    					4.4276e-22,
    					2.4792e-21,
    					1.3447e-20,
    					7.0651e-20,
    					3.5958e-19,
    					1.7728e-18,
    					8.4668e-18,
    					3.9172e-17,
    					1.7557e-16,
    					7.6233e-16,
    					3.2067e-15,
    					1.3068e-14,
    					5.1594e-14,
    					1.9735e-13,
    					7.3139e-13,
    					2.6262e-12,
    					9.1369e-12,
    					3.0801e-11,
    					1.0061e-10,
    					3.1845e-10,
    					9.7677e-10,
    					2.9033e-9,
    					8.3634e-9,
    					2.3349e-8,
    					6.3177e-8,
    					1.6569e-7,
    					4.2121e-7,
    					0.000001038,
    					0.0000024798,
    					0.0000057436,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0028,
    					0.0048,
    					0.0079,
    					0.0127,
    					0.0199,
    					0.0304,
    					0.0449,
    					0.0647,
    					0.0905,
    					0.1234,
    					0.1639,
    					0.2121,
    					0.2677,
    					0.3298,
    					0.397,
    					0.4674,
    					0.5389,
    					0.6091,
    					0.676,
    					0.7376,
    					0.7925,
    					0.84,
    					0.8798,
    					0.912,
    					0.9373,
    					0.9566,
    					0.9707,
    					0.9808,
    					0.9878,
    					0.9924,
    					0.9955,
    					0.9974,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.093,
    				"std.error": 0.86,
    				statistic: 1.271,
    				"p.value": 0.205,
    				"conf.low": -0.601,
    				"conf.high": 2.7869,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					8.6984e-13,
    					2.6407e-12,
    					7.8273e-12,
    					2.2653e-11,
    					6.4014e-11,
    					1.7663e-10,
    					4.7589e-10,
    					1.252e-9,
    					3.2166e-9,
    					8.0698e-9,
    					1.9771e-8,
    					4.7305e-8,
    					1.1054e-7,
    					2.5227e-7,
    					5.623e-7,
    					0.0000012242,
    					0.0000026034,
    					0.0000054082,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0023,
    					0.0036,
    					0.0058,
    					0.0089,
    					0.0134,
    					0.0198,
    					0.0285,
    					0.0404,
    					0.0559,
    					0.0758,
    					0.1006,
    					0.1309,
    					0.167,
    					0.209,
    					0.2566,
    					0.3094,
    					0.3664,
    					0.4264,
    					0.4883,
    					0.5504,
    					0.6114,
    					0.6697,
    					0.7241,
    					0.7737,
    					0.8179,
    					0.8562,
    					0.8887,
    					0.9155,
    					0.9372,
    					0.9543,
    					0.9674,
    					0.9772,
    					0.9845,
    					0.9896,
    					0.9932,
    					0.9957,
    					0.9973,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 24,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option3",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.6062,
    				"std.error": 0.3904,
    				statistic: 16.9233,
    				"p.value": 5.4821e-39,
    				"conf.low": 5.8359,
    				"conf.high": 7.3765,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.6215e-17,
    					6.2469e-17,
    					2.3472e-16,
    					8.6019e-16,
    					3.0746e-15,
    					1.0719e-14,
    					3.6449e-14,
    					1.2089e-13,
    					3.9111e-13,
    					1.2342e-12,
    					3.799e-12,
    					1.1407e-11,
    					3.3411e-11,
    					9.5461e-11,
    					2.6608e-10,
    					7.2349e-10,
    					1.9192e-9,
    					4.9668e-9,
    					1.2541e-8,
    					3.0893e-8,
    					7.4255e-8,
    					1.7415e-7,
    					3.9852e-7,
    					8.8992e-7,
    					0.0000019393,
    					0.0000041242,
    					0.00000856,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0021,
    					0.0034,
    					0.0054,
    					0.0084,
    					0.0129,
    					0.0192,
    					0.0279,
    					0.0398,
    					0.0555,
    					0.0757,
    					0.1011,
    					0.1321,
    					0.1692,
    					0.2124,
    					0.2614,
    					0.3157,
    					0.3742,
    					0.4359,
    					0.4991,
    					0.5623,
    					0.624,
    					0.6826,
    					0.737,
    					0.7862,
    					0.8296,
    					0.8669,
    					0.8981,
    					0.9236,
    					0.944,
    					0.9598,
    					0.9718,
    					0.9806,
    					0.987,
    					0.9915,
    					0.9945,
    					0.9966,
    					0.9979,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.3938,
    				"std.error": 0.5645,
    				statistic: -2.4693,
    				"p.value": 0.0145,
    				"conf.low": -2.5077,
    				"conf.high": -0.28,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.8821e-10,
    					4.5646e-10,
    					1.0861e-9,
    					2.5358e-9,
    					5.8091e-9,
    					1.3057e-8,
    					2.8799e-8,
    					6.2327e-8,
    					1.3236e-7,
    					2.7585e-7,
    					5.6413e-7,
    					0.0000011322,
    					0.00000223,
    					0.0000043108,
    					0.0000081786,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0028,
    					0.0042,
    					0.0063,
    					0.0092,
    					0.0133,
    					0.0189,
    					0.0264,
    					0.0361,
    					0.0487,
    					0.0645,
    					0.084,
    					0.1077,
    					0.1358,
    					0.1685,
    					0.206,
    					0.248,
    					0.2942,
    					0.344,
    					0.3966,
    					0.4512,
    					0.5068,
    					0.5622,
    					0.6164,
    					0.6685,
    					0.7174,
    					0.7626,
    					0.8036,
    					0.8399,
    					0.8715,
    					0.8985,
    					0.9211,
    					0.9397,
    					0.9547,
    					0.9665,
    					0.9756,
    					0.9826,
    					0.9878,
    					0.9916,
    					0.9943,
    					0.9962,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.3016,
    				"std.error": 0.6431,
    				statistic: -2.0239,
    				"p.value": 0.0445,
    				"conf.low": -2.5707,
    				"conf.high": -0.0325,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.8894e-20,
    					2.6774e-19,
    					1.1843e-18,
    					5.0968e-18,
    					2.1343e-17,
    					8.6967e-17,
    					3.4481e-16,
    					1.3302e-15,
    					4.9938e-15,
    					1.8242e-14,
    					6.4845e-14,
    					2.2431e-13,
    					7.5506e-13,
    					2.4734e-12,
    					7.8852e-12,
    					2.4464e-11,
    					7.3866e-11,
    					2.1707e-10,
    					6.2083e-10,
    					1.7282e-9,
    					4.6826e-9,
    					1.235e-8,
    					3.1704e-8,
    					7.923e-8,
    					1.9275e-7,
    					4.565e-7,
    					0.0000010526,
    					0.0000023631,
    					0.0000051655,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0018,
    					0.003,
    					0.005,
    					0.0079,
    					0.0123,
    					0.0188,
    					0.0279,
    					0.0403,
    					0.057,
    					0.0787,
    					0.1061,
    					0.1399,
    					0.1803,
    					0.2273,
    					0.2805,
    					0.3391,
    					0.4019,
    					0.4673,
    					0.5336,
    					0.599,
    					0.6618,
    					0.7203,
    					0.7735,
    					0.8204,
    					0.8606,
    					0.8943,
    					0.9216,
    					0.9432,
    					0.9599,
    					0.9723,
    					0.9813,
    					0.9877,
    					0.9921,
    					0.9951,
    					0.997,
    					0.9982,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.7056,
    				"std.error": 0.9257,
    				statistic: 1.8425,
    				"p.value": 0.0671,
    				"conf.low": -0.1211,
    				"conf.high": 3.5323,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.7011e-13,
    					7.76e-13,
    					2.1838e-12,
    					6.0201e-12,
    					1.6257e-11,
    					4.3005e-11,
    					1.1145e-10,
    					2.8293e-10,
    					7.0364e-10,
    					1.7144e-9,
    					4.0923e-9,
    					9.5703e-9,
    					2.1928e-8,
    					4.9225e-8,
    					1.0827e-7,
    					2.3334e-7,
    					4.9275e-7,
    					0.0000010196,
    					0.0000020675,
    					0.0000041083,
    					0.0000080003,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0033,
    					0.005,
    					0.0076,
    					0.0112,
    					0.0162,
    					0.0231,
    					0.0322,
    					0.0442,
    					0.0595,
    					0.0787,
    					0.1022,
    					0.1305,
    					0.1638,
    					0.2021,
    					0.2454,
    					0.2932,
    					0.3449,
    					0.3998,
    					0.4566,
    					0.5144,
    					0.5718,
    					0.6278,
    					0.6812,
    					0.7311,
    					0.7767,
    					0.8176,
    					0.8534,
    					0.8842,
    					0.9101,
    					0.9314,
    					0.9486,
    					0.9622,
    					0.9727,
    					0.9806,
    					0.9865,
    					0.9908,
    					0.9938,
    					0.9959,
    					0.9974,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 25,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option4",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.64,
    				"std.error": 0.4265,
    				statistic: 15.567,
    				"p.value": 4.0514e-43,
    				"conf.low": 5.8015,
    				"conf.high": 7.4785,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.07e-15,
    					9.6367e-15,
    					2.9624e-14,
    					8.9186e-14,
    					2.6296e-13,
    					7.5932e-13,
    					2.1474e-12,
    					5.9479e-12,
    					1.6135e-11,
    					4.2871e-11,
    					1.1156e-10,
    					2.8436e-10,
    					7.0994e-10,
    					1.7361e-9,
    					4.1585e-9,
    					9.7571e-9,
    					2.2426e-8,
    					5.0491e-8,
    					1.1136e-7,
    					2.4062e-7,
    					5.0935e-7,
    					0.0000010563,
    					0.0000021463,
    					0.0000042729,
    					0.0000083349,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0022,
    					0.0034,
    					0.0053,
    					0.0079,
    					0.0117,
    					0.017,
    					0.0241,
    					0.0337,
    					0.0461,
    					0.062,
    					0.0819,
    					0.1063,
    					0.1354,
    					0.1697,
    					0.209,
    					0.2533,
    					0.3021,
    					0.3547,
    					0.4102,
    					0.4675,
    					0.5256,
    					0.5831,
    					0.6389,
    					0.6919,
    					0.7411,
    					0.786,
    					0.8259,
    					0.8608,
    					0.8905,
    					0.9154,
    					0.9358,
    					0.9522,
    					0.965,
    					0.9749,
    					0.9823,
    					0.9877,
    					0.9917,
    					0.9945,
    					0.9964,
    					0.9977,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.9902,
    				"std.error": 0.4975,
    				statistic: -1.9905,
    				"p.value": 0.0472,
    				"conf.low": -1.9682,
    				"conf.high": -0.0122,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.2069e-15,
    					4.2588e-15,
    					1.4661e-14,
    					4.9241e-14,
    					1.6136e-13,
    					5.1586e-13,
    					1.6091e-12,
    					4.8971e-12,
    					1.4542e-11,
    					4.2132e-11,
    					1.1911e-10,
    					3.2858e-10,
    					8.8448e-10,
    					2.3233e-9,
    					5.9552e-9,
    					1.4897e-8,
    					3.6365e-8,
    					8.6639e-8,
    					2.0145e-7,
    					4.5719e-7,
    					0.0000010127,
    					0.0000021897,
    					0.0000046217,
    					0.0000095227,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0022,
    					0.0035,
    					0.0056,
    					0.0088,
    					0.0133,
    					0.0198,
    					0.0287,
    					0.0407,
    					0.0566,
    					0.077,
    					0.1026,
    					0.1338,
    					0.171,
    					0.2142,
    					0.2632,
    					0.3173,
    					0.3757,
    					0.437,
    					0.4999,
    					0.5628,
    					0.6242,
    					0.6826,
    					0.7367,
    					0.7857,
    					0.8289,
    					0.8661,
    					0.8974,
    					0.9229,
    					0.9433,
    					0.9592,
    					0.9713,
    					0.9802,
    					0.9867,
    					0.9912,
    					0.9944,
    					0.9964,
    					0.9978,
    					0.9987,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.9028,
    				"std.error": 0.5817,
    				statistic: -3.2713,
    				"p.value": 0.0012,
    				"conf.low": -3.0463,
    				"conf.high": -0.7593,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.1723e-19,
    					6.1588e-19,
    					3.1291e-18,
    					1.5375e-17,
    					7.3064e-17,
    					3.3579e-16,
    					1.4925e-15,
    					6.4164e-15,
    					2.6679e-14,
    					1.0729e-13,
    					4.1737e-13,
    					1.5704e-12,
    					5.7155e-12,
    					2.0122e-11,
    					6.8529e-11,
    					2.2578e-10,
    					7.1963e-10,
    					2.2191e-9,
    					6.6204e-9,
    					1.9111e-8,
    					5.3379e-8,
    					1.4427e-7,
    					3.7736e-7,
    					9.5521e-7,
    					0.0000023402,
    					0.0000055494,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0017,
    					0.0031,
    					0.0053,
    					0.0089,
    					0.0144,
    					0.0226,
    					0.0345,
    					0.0511,
    					0.0736,
    					0.1028,
    					0.1397,
    					0.1847,
    					0.2377,
    					0.2982,
    					0.3649,
    					0.4359,
    					0.509,
    					0.5819,
    					0.652,
    					0.7173,
    					0.776,
    					0.8271,
    					0.8701,
    					0.9051,
    					0.9325,
    					0.9534,
    					0.9688,
    					0.9797,
    					0.9872,
    					0.9921,
    					0.9953,
    					0.9973,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.7862,
    				"std.error": 0.6767,
    				statistic: 2.6395,
    				"p.value": 0.0086,
    				"conf.low": 0.4559,
    				"conf.high": 3.1165,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					8.5613e-24,
    					6.2097e-23,
    					4.3319e-22,
    					2.9065e-21,
    					1.8757e-20,
    					1.1642e-19,
    					6.9506e-19,
    					3.9914e-18,
    					2.2047e-17,
    					1.1714e-16,
    					5.9871e-16,
    					2.9436e-15,
    					1.3922e-14,
    					6.3343e-14,
    					2.7726e-13,
    					1.1676e-12,
    					4.7305e-12,
    					1.844e-11,
    					6.9163e-11,
    					2.4961e-10,
    					8.6684e-10,
    					2.8969e-9,
    					9.3169e-9,
    					2.8839e-8,
    					8.5917e-8,
    					2.4638e-7,
    					6.8016e-7,
    					0.0000018076,
    					0.0000046253,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0022,
    					0.004,
    					0.0071,
    					0.0122,
    					0.02,
    					0.0318,
    					0.0488,
    					0.0724,
    					0.1038,
    					0.1442,
    					0.194,
    					0.2531,
    					0.3204,
    					0.3943,
    					0.4722,
    					0.5512,
    					0.6282,
    					0.7003,
    					0.7654,
    					0.8218,
    					0.8687,
    					0.9064,
    					0.9354,
    					0.9569,
    					0.9722,
    					0.9827,
    					0.9896,
    					0.9939,
    					0.9966,
    					0.9982,
    					0.999,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 26,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option4",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.9052,
    				"std.error": 0.3435,
    				statistic: 17.1905,
    				"p.value": 4.4887e-50,
    				"conf.low": 5.2299,
    				"conf.high": 6.5805,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.2188e-14,
    					8.7501e-14,
    					3.3415e-13,
    					1.2357e-12,
    					4.4253e-12,
    					1.5347e-11,
    					5.1548e-11,
    					1.6768e-10,
    					5.2826e-10,
    					1.6119e-9,
    					4.7643e-9,
    					1.364e-8,
    					3.7826e-8,
    					1.0162e-7,
    					2.6449e-7,
    					6.6696e-7,
    					0.0000016296,
    					0.000003858,
    					0.0000088511,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0022,
    					0.0039,
    					0.0065,
    					0.0106,
    					0.0169,
    					0.0261,
    					0.0392,
    					0.0571,
    					0.081,
    					0.1117,
    					0.15,
    					0.1961,
    					0.2499,
    					0.3106,
    					0.3771,
    					0.4474,
    					0.5193,
    					0.5907,
    					0.6592,
    					0.7228,
    					0.7799,
    					0.8296,
    					0.8715,
    					0.9057,
    					0.9326,
    					0.9532,
    					0.9683,
    					0.9792,
    					0.9867,
    					0.9918,
    					0.9951,
    					0.9971,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3859,
    				"std.error": 0.3978,
    				statistic: -0.9702,
    				"p.value": 0.3325,
    				"conf.low": -1.1678,
    				"conf.high": 0.396,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.611e-30,
    					1.5438e-29,
    					1.423e-28,
    					1.2615e-27,
    					1.0757e-26,
    					8.823e-26,
    					6.9604e-25,
    					5.2817e-24,
    					3.8551e-23,
    					2.7066e-22,
    					1.8279e-21,
    					1.1875e-20,
    					7.4205e-20,
    					4.4608e-19,
    					2.5796e-18,
    					1.435e-17,
    					7.6801e-17,
    					3.9542e-16,
    					1.9587e-15,
    					9.334e-15,
    					4.2797e-14,
    					1.888e-13,
    					8.0136e-13,
    					3.2729e-12,
    					1.2862e-11,
    					4.8642e-11,
    					1.7702e-10,
    					6.1999e-10,
    					2.0898e-9,
    					6.7797e-9,
    					2.117e-8,
    					6.3634e-8,
    					1.8413e-7,
    					5.1293e-7,
    					0.0000013757,
    					0.000003553,
    					0.0000088365,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.001,
    					0.0018,
    					0.0034,
    					0.006,
    					0.0104,
    					0.0173,
    					0.0277,
    					0.0429,
    					0.0643,
    					0.0932,
    					0.1306,
    					0.1774,
    					0.2335,
    					0.2983,
    					0.3703,
    					0.447,
    					0.5259,
    					0.6037,
    					0.6776,
    					0.7451,
    					0.8043,
    					0.8543,
    					0.895,
    					0.9267,
    					0.9505,
    					0.9677,
    					0.9796,
    					0.9876,
    					0.9927,
    					0.9959,
    					0.9977,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.0542,
    				"std.error": 0.6567,
    				statistic: -1.6051,
    				"p.value": 0.1093,
    				"conf.low": -2.3452,
    				"conf.high": 0.2369,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.0255e-20,
    					4.6584e-20,
    					2.0612e-19,
    					8.8841e-19,
    					3.7299e-18,
    					1.5254e-17,
    					6.077e-17,
    					2.3583e-16,
    					8.9153e-16,
    					3.2832e-15,
    					1.1779e-14,
    					4.1165e-14,
    					1.4016e-13,
    					4.6489e-13,
    					1.5023e-12,
    					4.7296e-12,
    					1.4507e-11,
    					4.3353e-11,
    					1.2623e-10,
    					3.5812e-10,
    					9.8994e-10,
    					2.6664e-9,
    					6.9983e-9,
    					1.7899e-8,
    					4.4611e-8,
    					1.0836e-7,
    					2.565e-7,
    					5.9175e-7,
    					0.0000013306,
    					0.0000029164,
    					0.0000062309,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0031,
    					0.005,
    					0.0079,
    					0.0122,
    					0.0184,
    					0.0272,
    					0.0391,
    					0.055,
    					0.0756,
    					0.1017,
    					0.1337,
    					0.172,
    					0.2168,
    					0.2676,
    					0.3238,
    					0.3843,
    					0.4479,
    					0.5127,
    					0.5773,
    					0.6398,
    					0.6988,
    					0.753,
    					0.8015,
    					0.8437,
    					0.8796,
    					0.9092,
    					0.9331,
    					0.9517,
    					0.966,
    					0.9766,
    					0.9843,
    					0.9897,
    					0.9934,
    					0.9959,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3213,
    				"std.error": 0.7699,
    				statistic: 1.7163,
    				"p.value": 0.0869,
    				"conf.low": -0.1922,
    				"conf.high": 2.8347,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.4675e-16,
    					6.1409e-16,
    					2.4938e-15,
    					9.8284e-15,
    					3.7593e-14,
    					1.3955e-13,
    					5.0279e-13,
    					1.7582e-12,
    					5.9674e-12,
    					1.9659e-11,
    					6.2862e-11,
    					1.9512e-10,
    					5.8788e-10,
    					1.7194e-9,
    					4.8821e-9,
    					1.3458e-8,
    					3.6015e-8,
    					9.3579e-8,
    					2.3608e-7,
    					5.7834e-7,
    					0.0000013758,
    					0.0000031782,
    					0.0000071304,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0028,
    					0.0047,
    					0.0077,
    					0.0123,
    					0.0191,
    					0.0288,
    					0.0423,
    					0.0606,
    					0.0845,
    					0.1149,
    					0.1523,
    					0.197,
    					0.2489,
    					0.3073,
    					0.371,
    					0.4384,
    					0.5078,
    					0.5768,
    					0.6436,
    					0.7063,
    					0.7633,
    					0.8136,
    					0.8567,
    					0.8925,
    					0.9214,
    					0.9439,
    					0.9611,
    					0.9737,
    					0.9827,
    					0.9889,
    					0.9931,
    					0.9958,
    					0.9975,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 27,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option4",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.64,
    				"std.error": 0.4219,
    				statistic: 15.7366,
    				"p.value": 1.3721e-40,
    				"conf.low": 5.8095,
    				"conf.high": 7.4705,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.5601e-15,
    					5.0195e-15,
    					1.5809e-14,
    					4.8736e-14,
    					1.4708e-13,
    					4.345e-13,
    					1.2566e-12,
    					3.5574e-12,
    					9.8594e-12,
    					2.6751e-11,
    					7.1055e-11,
    					1.8478e-10,
    					4.7042e-10,
    					1.1726e-9,
    					2.8615e-9,
    					6.8371e-9,
    					1.5995e-8,
    					3.6639e-8,
    					8.2178e-8,
    					1.8049e-7,
    					3.8816e-7,
    					8.1749e-7,
    					0.000001686,
    					0.0000034055,
    					0.0000067367,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0008,
    					0.0012,
    					0.002,
    					0.0031,
    					0.0049,
    					0.0074,
    					0.011,
    					0.016,
    					0.0229,
    					0.0322,
    					0.0444,
    					0.06,
    					0.0796,
    					0.1038,
    					0.1328,
    					0.1671,
    					0.2065,
    					0.251,
    					0.3001,
    					0.3531,
    					0.4092,
    					0.4672,
    					0.5259,
    					0.584,
    					0.6403,
    					0.6938,
    					0.7434,
    					0.7885,
    					0.8285,
    					0.8634,
    					0.893,
    					0.9177,
    					0.9379,
    					0.954,
    					0.9665,
    					0.9761,
    					0.9833,
    					0.9885,
    					0.9923,
    					0.9949,
    					0.9967,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.9902,
    				"std.error": 0.4921,
    				statistic: -2.0121,
    				"p.value": 0.0451,
    				"conf.low": -1.9589,
    				"conf.high": -0.0216,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					6.0111e-16,
    					2.1796e-15,
    					7.706e-15,
    					2.6566e-14,
    					8.9306e-14,
    					2.9274e-13,
    					9.3574e-13,
    					2.9167e-12,
    					8.8658e-12,
    					2.628e-11,
    					7.5969e-11,
    					2.1417e-10,
    					5.8884e-10,
    					1.5789e-9,
    					4.1293e-9,
    					1.0533e-8,
    					2.6205e-8,
    					6.3595e-8,
    					1.5054e-7,
    					3.4762e-7,
    					7.8306e-7,
    					0.0000017209,
    					0.0000036896,
    					0.0000077183,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0032,
    					0.0052,
    					0.0082,
    					0.0125,
    					0.0187,
    					0.0274,
    					0.0391,
    					0.0547,
    					0.0748,
    					0.1001,
    					0.1312,
    					0.1684,
    					0.2117,
    					0.2609,
    					0.3155,
    					0.3744,
    					0.4363,
    					0.4999,
    					0.5635,
    					0.6255,
    					0.6844,
    					0.739,
    					0.7882,
    					0.8315,
    					0.8687,
    					0.8998,
    					0.9251,
    					0.9453,
    					0.9609,
    					0.9726,
    					0.9813,
    					0.9875,
    					0.9918,
    					0.9948,
    					0.9967,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.789,
    				"std.error": 0.692,
    				statistic: -2.5852,
    				"p.value": 0.0102,
    				"conf.low": -3.151,
    				"conf.high": -0.4269,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.5449e-15,
    					1.8463e-14,
    					6.0046e-14,
    					1.9074e-13,
    					5.9181e-13,
    					1.7935e-12,
    					5.3094e-12,
    					1.5352e-11,
    					4.3364e-11,
    					1.1965e-10,
    					3.2248e-10,
    					8.4908e-10,
    					2.184e-9,
    					5.488e-9,
    					1.3473e-8,
    					3.2314e-8,
    					7.5722e-8,
    					1.7337e-7,
    					3.8785e-7,
    					8.4783e-7,
    					0.000001811,
    					0.0000037803,
    					0.0000077115,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0028,
    					0.0044,
    					0.0068,
    					0.0104,
    					0.0155,
    					0.0226,
    					0.0324,
    					0.0453,
    					0.062,
    					0.0833,
    					0.1096,
    					0.1415,
    					0.179,
    					0.2223,
    					0.2711,
    					0.3246,
    					0.382,
    					0.4422,
    					0.5037,
    					0.5651,
    					0.625,
    					0.682,
    					0.735,
    					0.7831,
    					0.8257,
    					0.8626,
    					0.8938,
    					0.9195,
    					0.9402,
    					0.9565,
    					0.969,
    					0.9783,
    					0.9852,
    					0.9901,
    					0.9935,
    					0.9958,
    					0.9974,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.9256,
    				"std.error": 0.812,
    				statistic: 2.3714,
    				"p.value": 0.0184,
    				"conf.low": 0.3273,
    				"conf.high": 3.5238,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					9.82e-18,
    					4.0223e-17,
    					1.6037e-16,
    					6.2241e-16,
    					2.3514e-15,
    					8.6472e-15,
    					3.0956e-14,
    					1.0788e-13,
    					3.6598e-13,
    					1.2087e-12,
    					3.8861e-12,
    					1.2164e-11,
    					3.7068e-11,
    					1.0998e-10,
    					3.1768e-10,
    					8.9347e-10,
    					2.4467e-9,
    					6.524e-9,
    					1.6939e-8,
    					4.2828e-8,
    					1.0545e-7,
    					2.5284e-7,
    					5.9042e-7,
    					0.0000013428,
    					0.0000029747,
    					0.0000064186,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0034,
    					0.0055,
    					0.0087,
    					0.0134,
    					0.0203,
    					0.0298,
    					0.0429,
    					0.0603,
    					0.0827,
    					0.1109,
    					0.1454,
    					0.1864,
    					0.234,
    					0.2876,
    					0.3464,
    					0.4091,
    					0.4743,
    					0.5402,
    					0.6049,
    					0.6669,
    					0.7247,
    					0.777,
    					0.8231,
    					0.8627,
    					0.8958,
    					0.9227,
    					0.9439,
    					0.9603,
    					0.9725,
    					0.9815,
    					0.9878,
    					0.9921,
    					0.9951,
    					0.997,
    					0.9982,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 28,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option5",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.6218,
    				"std.error": 0.3679,
    				statistic: 18.0005,
    				"p.value": 1.383e-53,
    				"conf.low": 5.8986,
    				"conf.high": 7.345,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.1719e-19,
    					5.3771e-19,
    					2.3986e-18,
    					1.0402e-17,
    					4.386e-17,
    					1.798e-16,
    					7.1664e-16,
    					2.7772e-15,
    					1.0464e-14,
    					3.8336e-14,
    					1.3656e-13,
    					4.73e-13,
    					1.5931e-12,
    					5.2173e-12,
    					1.6615e-11,
    					5.1456e-11,
    					1.5497e-10,
    					4.5387e-10,
    					1.2928e-9,
    					3.5811e-9,
    					9.6483e-9,
    					2.5283e-8,
    					6.4443e-8,
    					1.5977e-7,
    					3.8532e-7,
    					9.0403e-7,
    					0.0000020634,
    					0.0000045821,
    					0.0000099005,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0018,
    					0.003,
    					0.005,
    					0.008,
    					0.0125,
    					0.0191,
    					0.0285,
    					0.0415,
    					0.0588,
    					0.0813,
    					0.1099,
    					0.145,
    					0.1869,
    					0.2356,
    					0.2906,
    					0.3509,
    					0.4153,
    					0.482,
    					0.5493,
    					0.6151,
    					0.6778,
    					0.7358,
    					0.788,
    					0.8335,
    					0.8723,
    					0.9042,
    					0.9299,
    					0.9499,
    					0.9651,
    					0.9762,
    					0.9842,
    					0.9898,
    					0.9936,
    					0.9961,
    					0.9976,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1034,
    				"std.error": 0.4587,
    				statistic: -2.4057,
    				"p.value": 0.0166,
    				"conf.low": -2.0051,
    				"conf.high": -0.2017,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.6785e-17,
    					1.5497e-16,
    					6.3411e-16,
    					2.5204e-15,
    					9.731e-15,
    					3.6494e-14,
    					1.3295e-13,
    					4.7051e-13,
    					1.6175e-12,
    					5.4021e-12,
    					1.7527e-11,
    					5.5246e-11,
    					1.6918e-10,
    					5.0336e-10,
    					1.4551e-9,
    					4.087e-9,
    					1.1154e-8,
    					2.958e-8,
    					7.6229e-8,
    					1.909e-7,
    					4.6463e-7,
    					0.0000010991,
    					0.0000025268,
    					0.0000056469,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0022,
    					0.0038,
    					0.0062,
    					0.0099,
    					0.0155,
    					0.0235,
    					0.0348,
    					0.0502,
    					0.0707,
    					0.0969,
    					0.1298,
    					0.1696,
    					0.2165,
    					0.2702,
    					0.3298,
    					0.3941,
    					0.4614,
    					0.5298,
    					0.5974,
    					0.6622,
    					0.7224,
    					0.7769,
    					0.8247,
    					0.8655,
    					0.8992,
    					0.9263,
    					0.9475,
    					0.9635,
    					0.9752,
    					0.9837,
    					0.9895,
    					0.9934,
    					0.996,
    					0.9976,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.4776,
    				"std.error": 0.506,
    				statistic: -2.9203,
    				"p.value": 0.0037,
    				"conf.low": -2.4723,
    				"conf.high": -0.4829,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.5069e-29,
    					2.6609e-28,
    					2.7018e-27,
    					2.6241e-26,
    					2.4381e-25,
    					2.1669e-24,
    					1.8423e-23,
    					1.4984e-22,
    					1.1659e-21,
    					8.6786e-21,
    					6.1803e-20,
    					4.2106e-19,
    					2.7446e-18,
    					1.7116e-17,
    					1.0213e-16,
    					5.8304e-16,
    					3.1849e-15,
    					1.6647e-14,
    					8.3264e-14,
    					3.9852e-13,
    					1.8253e-12,
    					8.0013e-12,
    					3.3567e-11,
    					1.3478e-10,
    					5.1799e-10,
    					1.9056e-9,
    					6.7109e-9,
    					2.2625e-8,
    					7.3034e-8,
    					2.2573e-7,
    					6.6811e-7,
    					0.0000018938,
    					0.0000051416,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0017,
    					0.0033,
    					0.0061,
    					0.0109,
    					0.0186,
    					0.0306,
    					0.0484,
    					0.0737,
    					0.108,
    					0.1525,
    					0.2077,
    					0.2734,
    					0.3479,
    					0.4288,
    					0.5128,
    					0.5962,
    					0.6755,
    					0.7475,
    					0.8101,
    					0.8621,
    					0.9035,
    					0.9349,
    					0.9577,
    					0.9736,
    					0.9841,
    					0.9908,
    					0.9949,
    					0.9973,
    					0.9986,
    					0.9993,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3803,
    				"std.error": 0.6256,
    				statistic: 2.2062,
    				"p.value": 0.0279,
    				"conf.low": 0.1504,
    				"conf.high": 2.6102,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.576e-24,
    					1.3897e-23,
    					1.1708e-22,
    					9.4247e-22,
    					7.2486e-21,
    					5.3268e-20,
    					3.7403e-19,
    					2.5095e-18,
    					1.6089e-17,
    					9.8568e-17,
    					5.7706e-16,
    					3.2285e-15,
    					1.7262e-14,
    					8.8203e-14,
    					4.3075e-13,
    					2.0106e-12,
    					8.9704e-12,
    					3.8255e-11,
    					1.5595e-10,
    					6.0777e-10,
    					2.2645e-9,
    					8.0667e-9,
    					2.7477e-8,
    					8.9497e-8,
    					2.7878e-7,
    					8.3059e-7,
    					0.0000023671,
    					0.0000064535,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0011,
    					0.0021,
    					0.0041,
    					0.0075,
    					0.0133,
    					0.0227,
    					0.037,
    					0.0579,
    					0.0873,
    					0.1265,
    					0.1765,
    					0.2376,
    					0.3087,
    					0.3878,
    					0.4719,
    					0.5573,
    					0.6401,
    					0.7168,
    					0.7846,
    					0.8419,
    					0.8882,
    					0.9239,
    					0.9501,
    					0.9686,
    					0.981,
    					0.989,
    					0.9939,
    					0.9967,
    					0.9983,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 29,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option5",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.056,
    				"std.error": 0.2982,
    				statistic: 20.3096,
    				"p.value": 1.1624e-63,
    				"conf.low": 5.4698,
    				"conf.high": 6.6422,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.7804e-20,
    					1.2115e-19,
    					7.898e-19,
    					4.9325e-18,
    					2.9513e-17,
    					1.6918e-16,
    					9.2915e-16,
    					4.8893e-15,
    					2.4651e-14,
    					1.1909e-13,
    					5.5131e-13,
    					2.4456e-12,
    					1.0396e-11,
    					4.2353e-11,
    					1.6536e-10,
    					6.1881e-10,
    					2.2195e-9,
    					7.6311e-9,
    					2.5151e-8,
    					7.9471e-8,
    					2.4076e-7,
    					6.9937e-7,
    					0.0000019482,
    					0.0000052049,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0016,
    					0.0031,
    					0.0056,
    					0.01,
    					0.0171,
    					0.0282,
    					0.0446,
    					0.0679,
    					0.0997,
    					0.1412,
    					0.1931,
    					0.2552,
    					0.3264,
    					0.4046,
    					0.4868,
    					0.5696,
    					0.6494,
    					0.7231,
    					0.7882,
    					0.8434,
    					0.8882,
    					0.923,
    					0.9488,
    					0.9673,
    					0.9798,
    					0.9881,
    					0.9932,
    					0.9963,
    					0.998,
    					0.999,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.6612,
    				"std.error": 0.3661,
    				statistic: -1.806,
    				"p.value": 0.0717,
    				"conf.low": -1.3809,
    				"conf.high": 0.0585,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.0437e-31,
    					1.2764e-30,
    					1.4908e-29,
    					1.663e-28,
    					1.7718e-27,
    					1.803e-26,
    					1.7524e-25,
    					1.6268e-24,
    					1.4425e-23,
    					1.2218e-22,
    					9.8843e-22,
    					7.6385e-21,
    					5.6386e-20,
    					3.9761e-19,
    					2.6784e-18,
    					1.7236e-17,
    					1.0596e-16,
    					6.2231e-16,
    					3.4919e-15,
    					1.872e-14,
    					9.5886e-14,
    					4.6928e-13,
    					2.1946e-12,
    					9.8074e-12,
    					4.1882e-11,
    					1.7093e-10,
    					6.6672e-10,
    					2.4856e-9,
    					8.8576e-9,
    					3.0174e-8,
    					9.8268e-8,
    					3.0598e-7,
    					9.1103e-7,
    					0.000002594,
    					0.0000070642,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0011,
    					0.0023,
    					0.0044,
    					0.0081,
    					0.0143,
    					0.0241,
    					0.0392,
    					0.0612,
    					0.0919,
    					0.1326,
    					0.1843,
    					0.2471,
    					0.3197,
    					0.4,
    					0.4848,
    					0.5702,
    					0.6525,
    					0.7282,
    					0.7946,
    					0.8503,
    					0.8949,
    					0.929,
    					0.9538,
    					0.9712,
    					0.9827,
    					0.9901,
    					0.9945,
    					0.9971,
    					0.9985,
    					0.9993,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.7928,
    				"std.error": 0.5723,
    				statistic: -1.3852,
    				"p.value": 0.1668,
    				"conf.low": -1.918,
    				"conf.high": 0.3323,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					7.6846e-29,
    					6.1028e-28,
    					4.6813e-27,
    					3.4684e-26,
    					2.4822e-25,
    					1.7158e-24,
    					1.1457e-23,
    					7.3893e-23,
    					4.6036e-22,
    					2.7704e-21,
    					1.6105e-20,
    					9.0439e-20,
    					4.906e-19,
    					2.5709e-18,
    					1.3015e-17,
    					6.3647e-17,
    					3.0071e-16,
    					1.3725e-15,
    					6.0524e-15,
    					2.5785e-14,
    					1.0614e-13,
    					4.221e-13,
    					1.622e-12,
    					6.0221e-12,
    					2.1605e-11,
    					7.4899e-11,
    					2.5092e-10,
    					8.1232e-10,
    					2.5415e-9,
    					7.6851e-9,
    					2.246e-8,
    					6.3446e-8,
    					1.7324e-7,
    					4.5729e-7,
    					0.0000011669,
    					0.0000028791,
    					0.0000068683,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0022,
    					0.0039,
    					0.0066,
    					0.011,
    					0.0177,
    					0.0277,
    					0.0419,
    					0.0615,
    					0.0877,
    					0.1214,
    					0.1633,
    					0.2136,
    					0.2719,
    					0.3373,
    					0.4079,
    					0.4817,
    					0.5561,
    					0.6286,
    					0.6968,
    					0.7588,
    					0.8131,
    					0.8591,
    					0.8968,
    					0.9265,
    					0.9492,
    					0.966,
    					0.9779,
    					0.9861,
    					0.9915,
    					0.995,
    					0.9971,
    					0.9984,
    					0.9991,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.0747,
    				"std.error": 0.7142,
    				statistic: 1.5047,
    				"p.value": 0.1332,
    				"conf.low": -0.3293,
    				"conf.high": 2.4788,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.2523e-17,
    					6.176e-17,
    					2.9415e-16,
    					1.3531e-15,
    					6.0109e-15,
    					2.5791e-14,
    					1.0688e-13,
    					4.2778e-13,
    					1.6538e-12,
    					6.1757e-12,
    					2.2277e-11,
    					7.7621e-11,
    					2.6127e-10,
    					8.496e-10,
    					2.6691e-9,
    					8.1012e-9,
    					2.3758e-8,
    					6.7321e-8,
    					1.8434e-7,
    					4.8778e-7,
    					0.0000012474,
    					0.0000030833,
    					0.0000073664,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0007,
    					0.0013,
    					0.0023,
    					0.0041,
    					0.0071,
    					0.0118,
    					0.0189,
    					0.0294,
    					0.0444,
    					0.0651,
    					0.0925,
    					0.1277,
    					0.1712,
    					0.2232,
    					0.2831,
    					0.3499,
    					0.4217,
    					0.4961,
    					0.5707,
    					0.6429,
    					0.7103,
    					0.771,
    					0.8238,
    					0.8682,
    					0.9042,
    					0.9324,
    					0.9537,
    					0.9692,
    					0.9802,
    					0.9876,
    					0.9925,
    					0.9956,
    					0.9975,
    					0.9986,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 30,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option5",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.6218,
    				"std.error": 0.3634,
    				statistic: 18.2215,
    				"p.value": 1.0111e-49,
    				"conf.low": 5.9065,
    				"conf.high": 7.3371,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					4.2613e-20,
    					2.0293e-19,
    					9.3884e-19,
    					4.2199e-18,
    					1.8428e-17,
    					7.8188e-17,
    					3.2231e-16,
    					1.2909e-15,
    					5.0235e-15,
    					1.8994e-14,
    					6.9781e-14,
    					2.491e-13,
    					8.6405e-13,
    					2.9123e-12,
    					9.5385e-12,
    					3.0359e-11,
    					9.3898e-11,
    					2.8223e-10,
    					8.2443e-10,
    					2.3405e-9,
    					6.4579e-9,
    					1.7319e-8,
    					4.5144e-8,
    					1.1438e-7,
    					2.8172e-7,
    					6.7452e-7,
    					0.0000015701,
    					0.0000035532,
    					0.0000078185,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0027,
    					0.0045,
    					0.0074,
    					0.0117,
    					0.018,
    					0.027,
    					0.0396,
    					0.0566,
    					0.0788,
    					0.1071,
    					0.142,
    					0.184,
    					0.2329,
    					0.2883,
    					0.3492,
    					0.4143,
    					0.4818,
    					0.5499,
    					0.6165,
    					0.6799,
    					0.7383,
    					0.7908,
    					0.8365,
    					0.8752,
    					0.9069,
    					0.9323,
    					0.9519,
    					0.9667,
    					0.9776,
    					0.9853,
    					0.9906,
    					0.9941,
    					0.9964,
    					0.9979,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1034,
    				"std.error": 0.4531,
    				statistic: -2.4352,
    				"p.value": 0.0155,
    				"conf.low": -1.9953,
    				"conf.high": -0.2115,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.5389e-17,
    					6.7144e-17,
    					2.8434e-16,
    					1.1688e-15,
    					4.6633e-15,
    					1.806e-14,
    					6.7893e-14,
    					2.4776e-13,
    					8.7764e-13,
    					3.018e-12,
    					1.0075e-11,
    					3.2651e-11,
    					1.0273e-10,
    					3.1379e-10,
    					9.3061e-10,
    					2.6796e-9,
    					7.4918e-9,
    					2.0339e-8,
    					5.3616e-8,
    					1.3725e-7,
    					3.4122e-7,
    					8.2386e-7,
    					0.000001932,
    					0.0000044006,
    					0.0000097369,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0034,
    					0.0057,
    					0.0092,
    					0.0145,
    					0.0222,
    					0.0331,
    					0.0482,
    					0.0682,
    					0.0942,
    					0.1269,
    					0.1667,
    					0.2137,
    					0.2677,
    					0.3279,
    					0.3928,
    					0.4609,
    					0.5302,
    					0.5986,
    					0.664,
    					0.7249,
    					0.7797,
    					0.8277,
    					0.8684,
    					0.902,
    					0.9288,
    					0.9496,
    					0.9652,
    					0.9766,
    					0.9847,
    					0.9903,
    					0.994,
    					0.9964,
    					0.9979,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.3587,
    				"std.error": 0.6012,
    				statistic: -2.2599,
    				"p.value": 0.0246,
    				"conf.low": -2.542,
    				"conf.high": -0.1753,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.6713e-22,
    					2.037e-21,
    					1.0953e-20,
    					5.7077e-20,
    					2.8825e-19,
    					1.4108e-18,
    					6.6921e-18,
    					3.0765e-17,
    					1.3708e-16,
    					5.9197e-16,
    					2.4777e-15,
    					1.0052e-14,
    					3.9525e-14,
    					1.5064e-13,
    					5.5654e-13,
    					1.993e-12,
    					6.9185e-12,
    					2.3281e-11,
    					7.5948e-11,
    					2.4019e-10,
    					7.364e-10,
    					2.189e-9,
    					6.3086e-9,
    					1.7629e-8,
    					4.7766e-8,
    					1.255e-7,
    					3.1977e-7,
    					7.9014e-7,
    					0.0000018936,
    					0.0000044015,
    					0.0000099242,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0022,
    					0.0039,
    					0.0065,
    					0.0105,
    					0.0166,
    					0.0255,
    					0.0381,
    					0.0553,
    					0.0782,
    					0.1076,
    					0.1443,
    					0.1886,
    					0.2404,
    					0.2991,
    					0.3635,
    					0.4321,
    					0.5029,
    					0.5735,
    					0.6418,
    					0.7059,
    					0.7641,
    					0.8153,
    					0.8589,
    					0.895,
    					0.9239,
    					0.9463,
    					0.9631,
    					0.9753,
    					0.984,
    					0.9899,
    					0.9938,
    					0.9963,
    					0.9979,
    					0.9988,
    					0.9993,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5169,
    				"std.error": 0.7528,
    				statistic: 2.015,
    				"p.value": 0.0448,
    				"conf.low": 0.0351,
    				"conf.high": 2.9987,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.3256e-18,
    					1.5539e-17,
    					7.0359e-17,
    					3.0875e-16,
    					1.313e-15,
    					5.4118e-15,
    					2.1618e-14,
    					8.3692e-14,
    					3.1404e-13,
    					1.1421e-12,
    					4.0261e-12,
    					1.3757e-11,
    					4.5562e-11,
    					1.4628e-10,
    					4.5525e-10,
    					1.3735e-9,
    					4.0173e-9,
    					1.1392e-8,
    					3.1319e-8,
    					8.3486e-8,
    					2.1579e-7,
    					5.4086e-7,
    					0.0000013146,
    					0.0000030989,
    					0.0000070848,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0018,
    					0.0031,
    					0.0053,
    					0.0087,
    					0.0139,
    					0.0215,
    					0.0325,
    					0.0478,
    					0.0684,
    					0.0951,
    					0.1289,
    					0.1702,
    					0.2192,
    					0.2754,
    					0.3379,
    					0.4052,
    					0.4754,
    					0.5464,
    					0.616,
    					0.682,
    					0.7427,
    					0.7967,
    					0.8433,
    					0.8823,
    					0.9138,
    					0.9386,
    					0.9574,
    					0.9713,
    					0.9811,
    					0.988,
    					0.9925,
    					0.9955,
    					0.9974,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 31,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.1843,
    				"std.error": 0.4391,
    				statistic: 14.0852,
    				"p.value": 2.7149e-34,
    				"conf.low": 5.3199,
    				"conf.high": 7.0486,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.062e-11,
    					7.8106e-11,
    					1.9537e-10,
    					4.7922e-10,
    					1.1527e-9,
    					2.719e-9,
    					6.2896e-9,
    					1.4268e-8,
    					3.1744e-8,
    					6.9265e-8,
    					1.4823e-7,
    					3.1111e-7,
    					6.4047e-7,
    					0.0000012933,
    					0.0000025615,
    					0.0000049765,
    					0.0000094846,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0033,
    					0.005,
    					0.0074,
    					0.0108,
    					0.0156,
    					0.0221,
    					0.0307,
    					0.0418,
    					0.0561,
    					0.074,
    					0.0959,
    					0.1223,
    					0.1533,
    					0.1892,
    					0.2299,
    					0.275,
    					0.3241,
    					0.3765,
    					0.4312,
    					0.4874,
    					0.5437,
    					0.5992,
    					0.6528,
    					0.7034,
    					0.7504,
    					0.7931,
    					0.8312,
    					0.8644,
    					0.8928,
    					0.9167,
    					0.9363,
    					0.9522,
    					0.9647,
    					0.9744,
    					0.9817,
    					0.9872,
    					0.9912,
    					0.9941,
    					0.9961,
    					0.9974,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.2455,
    				"std.error": 0.5631,
    				statistic: -2.2119,
    				"p.value": 0.0278,
    				"conf.low": -2.354,
    				"conf.high": -0.137,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.0306e-11,
    					7.6521e-11,
    					1.8954e-10,
    					4.606e-10,
    					1.0981e-9,
    					2.5684e-9,
    					5.8936e-9,
    					1.3269e-8,
    					2.931e-8,
    					6.3524e-8,
    					1.3509e-7,
    					2.8188e-7,
    					5.7713e-7,
    					0.0000011595,
    					0.0000022861,
    					0.0000044231,
    					0.0000083984,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0018,
    					0.0028,
    					0.0043,
    					0.0065,
    					0.0095,
    					0.0137,
    					0.0195,
    					0.0271,
    					0.0371,
    					0.0499,
    					0.0661,
    					0.086,
    					0.1101,
    					0.1388,
    					0.1721,
    					0.2101,
    					0.2527,
    					0.2994,
    					0.3496,
    					0.4027,
    					0.4576,
    					0.5133,
    					0.5688,
    					0.623,
    					0.6748,
    					0.7234,
    					0.7682,
    					0.8086,
    					0.8444,
    					0.8755,
    					0.9019,
    					0.924,
    					0.9421,
    					0.9566,
    					0.968,
    					0.9768,
    					0.9835,
    					0.9885,
    					0.9921,
    					0.9946,
    					0.9964,
    					0.9977,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.2078,
    				"std.error": 0.5742,
    				statistic: -2.1035,
    				"p.value": 0.0363,
    				"conf.low": -2.3381,
    				"conf.high": -0.0774,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.7488e-25,
    					1.8851e-24,
    					1.2491e-23,
    					7.9962e-23,
    					4.9457e-22,
    					2.9555e-21,
    					1.7064e-20,
    					9.5195e-20,
    					5.1312e-19,
    					2.6724e-18,
    					1.3449e-17,
    					6.5397e-17,
    					3.0728e-16,
    					1.3952e-15,
    					6.1212e-15,
    					2.5953e-14,
    					1.0633e-13,
    					4.2104e-13,
    					1.6111e-12,
    					5.9584e-12,
    					2.1297e-11,
    					7.3571e-11,
    					2.4565e-10,
    					7.9284e-10,
    					2.4735e-9,
    					7.4595e-9,
    					2.1748e-8,
    					6.1297e-8,
    					1.6704e-7,
    					4.4013e-7,
    					0.0000011214,
    					0.0000027629,
    					0.0000065834,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0021,
    					0.0037,
    					0.0063,
    					0.0105,
    					0.017,
    					0.0266,
    					0.0403,
    					0.0593,
    					0.0847,
    					0.1175,
    					0.1584,
    					0.2076,
    					0.2649,
    					0.3293,
    					0.3992,
    					0.4725,
    					0.5468,
    					0.6195,
    					0.6881,
    					0.7508,
    					0.806,
    					0.8531,
    					0.8918,
    					0.9226,
    					0.9462,
    					0.9637,
    					0.9763,
    					0.9849,
    					0.9907,
    					0.9945,
    					0.9968,
    					0.9982,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.1041,
    				"std.error": 0.7517,
    				statistic: 2.7991,
    				"p.value": 0.0055,
    				"conf.low": 0.6243,
    				"conf.high": 3.584,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.3761e-21,
    					1.28e-20,
    					6.6815e-20,
    					3.3793e-19,
    					1.6562e-18,
    					7.865e-18,
    					3.6193e-17,
    					1.6139e-16,
    					6.9739e-16,
    					2.9203e-15,
    					1.185e-14,
    					4.6602e-14,
    					1.776e-13,
    					6.5597e-13,
    					2.3481e-12,
    					8.1464e-12,
    					2.7392e-11,
    					8.9275e-11,
    					2.8202e-10,
    					8.6356e-10,
    					2.5632e-9,
    					7.3753e-9,
    					2.0573e-8,
    					5.5634e-8,
    					1.4587e-7,
    					3.7081e-7,
    					9.1402e-7,
    					0.0000021847,
    					0.0000050643,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0025,
    					0.0043,
    					0.0071,
    					0.0116,
    					0.0182,
    					0.0278,
    					0.0413,
    					0.0597,
    					0.084,
    					0.1151,
    					0.1535,
    					0.1996,
    					0.2532,
    					0.3136,
    					0.3794,
    					0.4488,
    					0.5199,
    					0.5904,
    					0.658,
    					0.721,
    					0.7776,
    					0.8271,
    					0.8689,
    					0.9032,
    					0.9304,
    					0.9513,
    					0.9668,
    					0.978,
    					0.9858,
    					0.9911,
    					0.9946,
    					0.9968,
    					0.9982,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 32,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.5244,
    				"std.error": 0.3375,
    				statistic: 16.3672,
    				"p.value": 1.6574e-42,
    				"conf.low": 4.8599,
    				"conf.high": 6.1889,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.8163e-11,
    					9.5063e-11,
    					3.1042e-10,
    					9.8063e-10,
    					2.9971e-9,
    					8.8626e-9,
    					2.5357e-8,
    					7.02e-8,
    					1.8806e-7,
    					4.8755e-7,
    					0.0000012233,
    					0.0000029707,
    					0.0000069828,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0036,
    					0.0061,
    					0.0102,
    					0.0164,
    					0.0255,
    					0.0386,
    					0.0567,
    					0.0809,
    					0.1121,
    					0.1512,
    					0.1984,
    					0.2536,
    					0.316,
    					0.384,
    					0.4558,
    					0.5292,
    					0.6015,
    					0.6705,
    					0.7341,
    					0.7909,
    					0.8398,
    					0.8805,
    					0.9133,
    					0.9389,
    					0.9582,
    					0.9722,
    					0.982,
    					0.9888,
    					0.9932,
    					0.996,
    					0.9977,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.4539,
    				"std.error": 0.4491,
    				statistic: -1.0107,
    				"p.value": 0.313,
    				"conf.low": -1.3381,
    				"conf.high": 0.4302,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.0909e-23,
    					6.2767e-23,
    					3.503e-22,
    					1.8964e-21,
    					9.9582e-21,
    					5.0725e-20,
    					2.5065e-19,
    					1.2014e-18,
    					5.5863e-18,
    					2.5198e-17,
    					1.1026e-16,
    					4.6804e-16,
    					1.9275e-15,
    					7.7005e-15,
    					2.9847e-14,
    					1.1224e-13,
    					4.0948e-13,
    					1.4495e-12,
    					4.978e-12,
    					1.6588e-11,
    					5.3637e-11,
    					1.6828e-10,
    					5.1233e-10,
    					1.5136e-9,
    					4.3394e-9,
    					1.2074e-8,
    					3.2602e-8,
    					8.5444e-8,
    					2.1735e-7,
    					5.3666e-7,
    					0.0000012863,
    					0.0000029929,
    					0.0000067609,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0028,
    					0.0047,
    					0.0077,
    					0.0123,
    					0.0192,
    					0.029,
    					0.0427,
    					0.0612,
    					0.0854,
    					0.1162,
    					0.1541,
    					0.1995,
    					0.2521,
    					0.3111,
    					0.3755,
    					0.4436,
    					0.5134,
    					0.5828,
    					0.6497,
    					0.7122,
    					0.7689,
    					0.8188,
    					0.8613,
    					0.8964,
    					0.9246,
    					0.9465,
    					0.9631,
    					0.9752,
    					0.9838,
    					0.9897,
    					0.9936,
    					0.9961,
    					0.9977,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.1609,
    				"std.error": 0.6288,
    				statistic: -0.2558,
    				"p.value": 0.7983,
    				"conf.low": -1.3987,
    				"conf.high": 1.077,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.8694e-29,
    					4.5434e-28,
    					2.9198e-27,
    					1.8232e-26,
    					1.1063e-25,
    					6.522e-25,
    					3.7363e-24,
    					2.0798e-23,
    					1.1249e-22,
    					5.9127e-22,
    					3.0198e-21,
    					1.4987e-20,
    					7.2276e-20,
    					3.3872e-19,
    					1.5425e-18,
    					6.8266e-18,
    					2.9359e-17,
    					1.227e-16,
    					4.9837e-16,
    					1.9671e-15,
    					7.5461e-15,
    					2.8133e-14,
    					1.0193e-13,
    					3.5895e-13,
    					1.2286e-12,
    					4.0869e-12,
    					1.3214e-11,
    					4.1529e-11,
    					1.2686e-10,
    					3.7671e-10,
    					1.0874e-9,
    					3.0511e-9,
    					8.3229e-9,
    					2.2072e-8,
    					5.6906e-8,
    					1.4265e-7,
    					3.4769e-7,
    					8.2401e-7,
    					0.000001899,
    					0.000004256,
    					0.0000092766,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0018,
    					0.003,
    					0.005,
    					0.008,
    					0.0126,
    					0.0193,
    					0.0288,
    					0.042,
    					0.0597,
    					0.0827,
    					0.1118,
    					0.1476,
    					0.1904,
    					0.24,
    					0.296,
    					0.3573,
    					0.4225,
    					0.4899,
    					0.5577,
    					0.6237,
    					0.6864,
    					0.744,
    					0.7956,
    					0.8404,
    					0.8783,
    					0.9094,
    					0.9341,
    					0.9533,
    					0.9677,
    					0.9782,
    					0.9857,
    					0.9908,
    					0.9943,
    					0.9965,
    					0.9979,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.2185,
    				"std.error": 0.8168,
    				statistic: 1.4917,
    				"p.value": 0.1369,
    				"conf.low": -0.3895,
    				"conf.high": 2.8265,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.7291e-14,
    					6.0558e-14,
    					2.0653e-13,
    					6.8589e-13,
    					2.2182e-12,
    					6.9864e-12,
    					2.1429e-11,
    					6.401e-11,
    					1.8622e-10,
    					5.2762e-10,
    					1.456e-9,
    					3.9136e-9,
    					1.0246e-8,
    					2.6129e-8,
    					6.4906e-8,
    					1.5706e-7,
    					3.7025e-7,
    					8.5032e-7,
    					0.0000019026,
    					0.0000041479,
    					0.0000088113,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.004,
    					0.0065,
    					0.0101,
    					0.0155,
    					0.0232,
    					0.0338,
    					0.0481,
    					0.0669,
    					0.091,
    					0.1209,
    					0.1572,
    					0.1999,
    					0.249,
    					0.3039,
    					0.3636,
    					0.4268,
    					0.492,
    					0.5573,
    					0.6212,
    					0.6818,
    					0.738,
    					0.7886,
    					0.8329,
    					0.8708,
    					0.9023,
    					0.9277,
    					0.9477,
    					0.9631,
    					0.9745,
    					0.9828,
    					0.9887,
    					0.9928,
    					0.9955,
    					0.9972,
    					0.9983,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 33,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.1843,
    				"std.error": 0.4395,
    				statistic: 14.0718,
    				"p.value": 5.3242e-32,
    				"conf.low": 5.3179,
    				"conf.high": 7.0507,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.1922e-11,
    					8.1285e-11,
    					2.0298e-10,
    					4.9704e-10,
    					1.1936e-9,
    					2.811e-9,
    					6.4925e-9,
    					1.4706e-8,
    					3.267e-8,
    					7.1183e-8,
    					1.5212e-7,
    					3.1884e-7,
    					6.5551e-7,
    					0.0000013219,
    					0.000002615,
    					0.0000050743,
    					0.0000096596,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0033,
    					0.005,
    					0.0074,
    					0.0109,
    					0.0157,
    					0.0222,
    					0.0308,
    					0.042,
    					0.0563,
    					0.0742,
    					0.0961,
    					0.1225,
    					0.1536,
    					0.1895,
    					0.2301,
    					0.2752,
    					0.3243,
    					0.3766,
    					0.4313,
    					0.4874,
    					0.5437,
    					0.5991,
    					0.6526,
    					0.7033,
    					0.7502,
    					0.7929,
    					0.8309,
    					0.8642,
    					0.8926,
    					0.9165,
    					0.9362,
    					0.952,
    					0.9645,
    					0.9743,
    					0.9816,
    					0.9871,
    					0.9911,
    					0.994,
    					0.996,
    					0.9974,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.2455,
    				"std.error": 0.5636,
    				statistic: -2.2098,
    				"p.value": 0.0282,
    				"conf.low": -2.3566,
    				"conf.high": -0.1343,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.1596e-11,
    					7.9639e-11,
    					1.9693e-10,
    					4.7777e-10,
    					1.1372e-9,
    					2.6556e-9,
    					6.0845e-9,
    					1.3678e-8,
    					3.0169e-8,
    					6.5294e-8,
    					1.3866e-7,
    					2.8893e-7,
    					5.908e-7,
    					0.0000011855,
    					0.0000023343,
    					0.000004511,
    					0.0000085553,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.0029,
    					0.0044,
    					0.0065,
    					0.0096,
    					0.0138,
    					0.0195,
    					0.0272,
    					0.0372,
    					0.0501,
    					0.0663,
    					0.0862,
    					0.1104,
    					0.139,
    					0.1723,
    					0.2103,
    					0.2529,
    					0.2995,
    					0.3498,
    					0.4028,
    					0.4576,
    					0.5133,
    					0.5687,
    					0.6228,
    					0.6746,
    					0.7232,
    					0.768,
    					0.8084,
    					0.8442,
    					0.8753,
    					0.9017,
    					0.9238,
    					0.9419,
    					0.9564,
    					0.9679,
    					0.9767,
    					0.9834,
    					0.9884,
    					0.992,
    					0.9946,
    					0.9964,
    					0.9977,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8208,
    				"std.error": 0.6867,
    				statistic: -1.1953,
    				"p.value": 0.2333,
    				"conf.low": -2.1745,
    				"conf.high": 0.533,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.8529e-20,
    					7.8078e-20,
    					3.2119e-19,
    					1.2899e-18,
    					5.0575e-18,
    					1.9359e-17,
    					7.2345e-17,
    					2.6395e-16,
    					9.4021e-16,
    					3.2698e-15,
    					1.1103e-14,
    					3.6808e-14,
    					1.1914e-13,
    					3.7654e-13,
    					1.1619e-12,
    					3.501e-12,
    					1.03e-11,
    					2.959e-11,
    					8.3006e-11,
    					2.2738e-10,
    					6.0822e-10,
    					1.5888e-9,
    					4.0529e-9,
    					1.0097e-8,
    					2.4566e-8,
    					5.8376e-8,
    					1.3548e-7,
    					3.0711e-7,
    					6.8e-7,
    					0.0000014707,
    					0.0000031072,
    					0.0000064131,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0025,
    					0.004,
    					0.0063,
    					0.0097,
    					0.0146,
    					0.0215,
    					0.0308,
    					0.0434,
    					0.0598,
    					0.0806,
    					0.1066,
    					0.1381,
    					0.1754,
    					0.2185,
    					0.2672,
    					0.3209,
    					0.3785,
    					0.439,
    					0.501,
    					0.5629,
    					0.6233,
    					0.6809,
    					0.7344,
    					0.7829,
    					0.8259,
    					0.863,
    					0.8943,
    					0.9201,
    					0.9408,
    					0.9571,
    					0.9695,
    					0.9788,
    					0.9856,
    					0.9904,
    					0.9937,
    					0.996,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.01,
    				"std.error": 0.8821,
    				statistic: 2.2788,
    				"p.value": 0.0237,
    				"conf.low": 0.2711,
    				"conf.high": 3.749,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.2188e-15,
    					4.0957e-15,
    					1.3453e-14,
    					4.3194e-14,
    					1.3556e-13,
    					4.1586e-13,
    					1.247e-12,
    					3.6554e-12,
    					1.0474e-11,
    					2.9339e-11,
    					8.0339e-11,
    					2.1506e-10,
    					5.6281e-10,
    					1.4399e-9,
    					3.6016e-9,
    					8.8076e-9,
    					2.1059e-8,
    					4.9229e-8,
    					1.1253e-7,
    					2.515e-7,
    					5.4964e-7,
    					0.0000011747,
    					0.000002455,
    					0.0000050177,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.0031,
    					0.0048,
    					0.0074,
    					0.0111,
    					0.0164,
    					0.0238,
    					0.0337,
    					0.0468,
    					0.0637,
    					0.0849,
    					0.1112,
    					0.1427,
    					0.1798,
    					0.2225,
    					0.2704,
    					0.3229,
    					0.3793,
    					0.4384,
    					0.4988,
    					0.5593,
    					0.6185,
    					0.675,
    					0.7277,
    					0.7758,
    					0.8186,
    					0.856,
    					0.8877,
    					0.9142,
    					0.9356,
    					0.9527,
    					0.9659,
    					0.9759,
    					0.9833,
    					0.9887,
    					0.9925,
    					0.9951,
    					0.9969,
    					0.9981,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 34,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2265,
    				"std.error": 0.3837,
    				statistic: 16.2268,
    				"p.value": 8.6816e-44,
    				"conf.low": 5.4716,
    				"conf.high": 6.9813,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.5505e-14,
    					5.3435e-14,
    					1.7946e-13,
    					5.874e-13,
    					1.8737e-12,
    					5.8252e-12,
    					1.765e-11,
    					5.2123e-11,
    					1.5003e-10,
    					4.2089e-10,
    					1.1509e-9,
    					3.0677e-9,
    					7.9706e-9,
    					2.0188e-8,
    					4.9844e-8,
    					1.1997e-7,
    					2.8153e-7,
    					6.4411e-7,
    					0.0000014368,
    					0.0000031251,
    					0.0000066281,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0031,
    					0.005,
    					0.0079,
    					0.0122,
    					0.0183,
    					0.027,
    					0.0388,
    					0.0544,
    					0.0747,
    					0.1004,
    					0.1319,
    					0.1696,
    					0.2137,
    					0.2637,
    					0.3192,
    					0.379,
    					0.4419,
    					0.5063,
    					0.5705,
    					0.6329,
    					0.692,
    					0.7465,
    					0.7954,
    					0.8382,
    					0.8747,
    					0.9051,
    					0.9296,
    					0.949,
    					0.9638,
    					0.9749,
    					0.983,
    					0.9888,
    					0.9927,
    					0.9954,
    					0.9972,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1619,
    				"std.error": 0.501,
    				statistic: -2.3193,
    				"p.value": 0.021,
    				"conf.low": -2.1475,
    				"conf.high": -0.1764,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.7346e-14,
    					8.9947e-14,
    					2.8875e-13,
    					9.0469e-13,
    					2.7665e-12,
    					8.2571e-12,
    					2.4054e-11,
    					6.8397e-11,
    					1.8983e-10,
    					5.1429e-10,
    					1.36e-9,
    					3.5109e-9,
    					8.8475e-9,
    					2.1766e-8,
    					5.2274e-8,
    					1.2257e-7,
    					2.8058e-7,
    					6.2711e-7,
    					0.0000013686,
    					0.0000029164,
    					0.0000060686,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0025,
    					0.0041,
    					0.0064,
    					0.0099,
    					0.0149,
    					0.0219,
    					0.0315,
    					0.0444,
    					0.0612,
    					0.0827,
    					0.1093,
    					0.1417,
    					0.18,
    					0.2241,
    					0.2739,
    					0.3286,
    					0.3873,
    					0.4486,
    					0.5112,
    					0.5735,
    					0.634,
    					0.6914,
    					0.7444,
    					0.7923,
    					0.8344,
    					0.8705,
    					0.9008,
    					0.9255,
    					0.9453,
    					0.9606,
    					0.9723,
    					0.9809,
    					0.9871,
    					0.9915,
    					0.9945,
    					0.9965,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.134,
    				"std.error": 0.5171,
    				statistic: -2.1931,
    				"p.value": 0.029,
    				"conf.low": -2.1512,
    				"conf.high": -0.1167,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.8992e-31,
    					2.0925e-30,
    					2.2094e-29,
    					2.2358e-28,
    					2.1682e-27,
    					2.0151e-26,
    					1.7949e-25,
    					1.5323e-24,
    					1.2537e-23,
    					9.8309e-23,
    					7.3887e-22,
    					5.3225e-21,
    					3.6749e-20,
    					2.432e-19,
    					1.5427e-18,
    					9.3802e-18,
    					5.4671e-17,
    					3.0545e-16,
    					1.6359e-15,
    					8.3994e-15,
    					4.1343e-14,
    					1.9509e-13,
    					8.8262e-13,
    					3.8285e-12,
    					1.5923e-11,
    					6.3498e-11,
    					2.4282e-10,
    					8.9045e-10,
    					3.1316e-9,
    					1.0563e-8,
    					3.4171e-8,
    					1.0604e-7,
    					3.1567e-7,
    					9.0155e-7,
    					0.0000024705,
    					0.0000064964,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0009,
    					0.0018,
    					0.0034,
    					0.0063,
    					0.011,
    					0.0186,
    					0.0304,
    					0.0476,
    					0.0719,
    					0.1048,
    					0.1475,
    					0.2003,
    					0.2633,
    					0.335,
    					0.4132,
    					0.4951,
    					0.5773,
    					0.6561,
    					0.7287,
    					0.7928,
    					0.8469,
    					0.8907,
    					0.9247,
    					0.9499,
    					0.9679,
    					0.9802,
    					0.9883,
    					0.9933,
    					0.9963,
    					0.9981,
    					0.999,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.8492,
    				"std.error": 0.678,
    				statistic: 2.7274,
    				"p.value": 0.0067,
    				"conf.low": 0.5154,
    				"conf.high": 3.1831,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.0665e-24,
    					2.981e-23,
    					2.102e-22,
    					1.4258e-21,
    					9.3033e-21,
    					5.8395e-20,
    					3.526e-19,
    					2.0482e-18,
    					1.1446e-17,
    					6.1534e-17,
    					3.1826e-16,
    					1.5837e-15,
    					7.582e-15,
    					3.4925e-14,
    					1.5479e-13,
    					6.601e-13,
    					2.7087e-12,
    					1.0696e-11,
    					4.0641e-11,
    					1.4861e-10,
    					5.2298e-10,
    					1.7713e-9,
    					5.7744e-9,
    					1.8119e-8,
    					5.4728e-8,
    					1.5914e-7,
    					4.4549e-7,
    					0.0000012008,
    					0.0000031165,
    					0.0000077894,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0009,
    					0.0017,
    					0.0031,
    					0.0056,
    					0.0096,
    					0.0161,
    					0.0259,
    					0.0404,
    					0.0608,
    					0.0884,
    					0.1246,
    					0.1699,
    					0.2247,
    					0.2882,
    					0.3592,
    					0.4354,
    					0.5141,
    					0.5923,
    					0.6669,
    					0.7354,
    					0.796,
    					0.8474,
    					0.8894,
    					0.9224,
    					0.9473,
    					0.9654,
    					0.9781,
    					0.9866,
    					0.9921,
    					0.9955,
    					0.9975,
    					0.9987,
    					0.9993,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 35,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.6264,
    				"std.error": 0.3062,
    				statistic: 18.3769,
    				"p.value": 3.2128e-52,
    				"conf.low": 5.0241,
    				"conf.high": 6.2288,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.0528e-14,
    					9.5687e-14,
    					4.2833e-13,
    					1.8413e-12,
    					7.6022e-12,
    					3.0145e-11,
    					1.1481e-10,
    					4.1998e-10,
    					1.4758e-9,
    					4.9817e-9,
    					1.6155e-8,
    					5.0333e-8,
    					1.5068e-7,
    					4.3342e-7,
    					0.0000011981,
    					0.0000031831,
    					0.0000081284,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.001,
    					0.0019,
    					0.0036,
    					0.0065,
    					0.0113,
    					0.0188,
    					0.0303,
    					0.0472,
    					0.0708,
    					0.1025,
    					0.1436,
    					0.1945,
    					0.2551,
    					0.3244,
    					0.4003,
    					0.4802,
    					0.5609,
    					0.6391,
    					0.7119,
    					0.777,
    					0.8327,
    					0.8786,
    					0.9148,
    					0.9422,
    					0.9622,
    					0.9761,
    					0.9855,
    					0.9915,
    					0.9952,
    					0.9974,
    					0.9986,
    					0.9993,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5196,
    				"std.error": 0.4048,
    				statistic: -1.2835,
    				"p.value": 0.2002,
    				"conf.low": -1.3159,
    				"conf.high": 0.2768,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					6.187e-28,
    					5.1483e-27,
    					4.1261e-26,
    					3.185e-25,
    					2.368e-24,
    					1.6957e-23,
    					1.1696e-22,
    					7.77e-22,
    					4.9721e-21,
    					3.0647e-20,
    					1.8196e-19,
    					1.0406e-18,
    					5.7328e-18,
    					3.0423e-17,
    					1.5553e-16,
    					7.6592e-16,
    					3.6337e-15,
    					1.6608e-14,
    					7.3132e-14,
    					3.1025e-13,
    					1.2681e-12,
    					4.994e-12,
    					1.895e-11,
    					6.9288e-11,
    					2.4412e-10,
    					8.2885e-10,
    					2.712e-9,
    					8.552e-9,
    					2.5992e-8,
    					7.6142e-8,
    					2.1501e-7,
    					5.853e-7,
    					0.0000015361,
    					0.0000038868,
    					0.0000094836,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0018,
    					0.0033,
    					0.0058,
    					0.0099,
    					0.0163,
    					0.0261,
    					0.0403,
    					0.0603,
    					0.0873,
    					0.1224,
    					0.1664,
    					0.2196,
    					0.2813,
    					0.3503,
    					0.4247,
    					0.5019,
    					0.579,
    					0.6532,
    					0.7219,
    					0.7832,
    					0.8359,
    					0.8795,
    					0.9142,
    					0.9408,
    					0.9605,
    					0.9745,
    					0.984,
    					0.9904,
    					0.9944,
    					0.9968,
    					0.9983,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.0844,
    				"std.error": 0.5687,
    				statistic: -0.1485,
    				"p.value": 0.8821,
    				"conf.low": -1.2032,
    				"conf.high": 1.0343,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.3263e-35,
    					1.3653e-34,
    					1.3567e-33,
    					1.3015e-32,
    					1.2054e-31,
    					1.0779e-30,
    					9.3044e-30,
    					7.7543e-29,
    					6.2392e-28,
    					4.8467e-27,
    					3.6349e-26,
    					2.632e-25,
    					1.8401e-24,
    					1.242e-23,
    					8.0941e-23,
    					5.093e-22,
    					3.0942e-21,
    					1.8151e-20,
    					1.0281e-19,
    					5.6225e-19,
    					2.9692e-18,
    					1.514e-17,
    					7.4551e-17,
    					3.5447e-16,
    					1.6276e-15,
    					7.2165e-15,
    					3.09e-14,
    					1.2778e-13,
    					5.1029e-13,
    					1.9682e-12,
    					7.3316e-12,
    					2.6378e-11,
    					9.1668e-11,
    					3.077e-10,
    					9.977e-10,
    					3.125e-9,
    					9.4558e-9,
    					2.7642e-8,
    					7.8071e-8,
    					2.1305e-7,
    					5.6179e-7,
    					0.0000014315,
    					0.0000035253,
    					0.0000083909,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0026,
    					0.0045,
    					0.0077,
    					0.0128,
    					0.0204,
    					0.0317,
    					0.0476,
    					0.0694,
    					0.0982,
    					0.1349,
    					0.18,
    					0.2336,
    					0.295,
    					0.363,
    					0.4355,
    					0.5103,
    					0.5848,
    					0.6563,
    					0.7226,
    					0.782,
    					0.8333,
    					0.876,
    					0.9105,
    					0.9372,
    					0.9573,
    					0.9718,
    					0.982,
    					0.9888,
    					0.9933,
    					0.9961,
    					0.9978,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.1776,
    				"std.error": 0.7393,
    				statistic: 1.5927,
    				"p.value": 0.1122,
    				"conf.low": -0.277,
    				"conf.high": 2.6321,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.4383e-17,
    					2.02e-16,
    					8.8995e-16,
    					3.7955e-15,
    					1.567e-14,
    					6.263e-14,
    					2.4233e-13,
    					9.0776e-13,
    					3.2921e-12,
    					1.1559e-11,
    					3.9296e-11,
    					1.2935e-10,
    					4.1225e-10,
    					1.2722e-9,
    					3.802e-9,
    					1.1003e-8,
    					3.0837e-8,
    					8.3701e-8,
    					2.2004e-7,
    					5.603e-7,
    					0.000001382,
    					0.0000033022,
    					0.0000076443,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0036,
    					0.0061,
    					0.01,
    					0.0159,
    					0.0248,
    					0.0373,
    					0.0547,
    					0.0779,
    					0.1079,
    					0.1454,
    					0.1909,
    					0.2441,
    					0.3045,
    					0.3707,
    					0.441,
    					0.5132,
    					0.585,
    					0.654,
    					0.7183,
    					0.7762,
    					0.8266,
    					0.8692,
    					0.9039,
    					0.9313,
    					0.9523,
    					0.9678,
    					0.9788,
    					0.9865,
    					0.9917,
    					0.995,
    					0.9971,
    					0.9983,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 36,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2265,
    				"std.error": 0.3803,
    				statistic: 16.3744,
    				"p.value": 2.9493e-41,
    				"conf.low": 5.4775,
    				"conf.high": 6.9754,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					9.075e-15,
    					3.1978e-14,
    					1.0976e-13,
    					3.6699e-13,
    					1.1953e-12,
    					3.7922e-12,
    					1.1721e-11,
    					3.529e-11,
    					1.0351e-10,
    					2.9579e-10,
    					8.2349e-10,
    					2.2336e-9,
    					5.9028e-9,
    					1.5199e-8,
    					3.8134e-8,
    					9.3226e-8,
    					2.2209e-7,
    					5.1558e-7,
    					0.0000011665,
    					0.000002572,
    					0.0000055272,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0029,
    					0.0047,
    					0.0074,
    					0.0116,
    					0.0175,
    					0.0259,
    					0.0374,
    					0.0528,
    					0.0729,
    					0.0983,
    					0.1297,
    					0.1674,
    					0.2116,
    					0.2619,
    					0.3177,
    					0.3779,
    					0.4414,
    					0.5063,
    					0.5711,
    					0.6341,
    					0.6936,
    					0.7484,
    					0.7975,
    					0.8404,
    					0.8769,
    					0.9071,
    					0.9314,
    					0.9505,
    					0.9651,
    					0.9759,
    					0.9838,
    					0.9894,
    					0.9932,
    					0.9957,
    					0.9974,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1619,
    				"std.error": 0.4965,
    				statistic: -2.3404,
    				"p.value": 0.0201,
    				"conf.low": -2.1397,
    				"conf.high": -0.1841,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.6169e-14,
    					5.4335e-14,
    					1.7812e-13,
    					5.6962e-13,
    					1.7771e-12,
    					5.4091e-12,
    					1.6062e-11,
    					4.6534e-11,
    					1.3153e-10,
    					3.6273e-10,
    					9.7602e-10,
    					2.5625e-9,
    					6.5644e-9,
    					1.6409e-8,
    					4.0026e-8,
    					9.5277e-8,
    					2.2132e-7,
    					5.0174e-7,
    					0.0000011101,
    					0.0000023972,
    					0.0000050528,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0023,
    					0.0038,
    					0.006,
    					0.0093,
    					0.0141,
    					0.0209,
    					0.0303,
    					0.043,
    					0.0595,
    					0.0808,
    					0.1073,
    					0.1395,
    					0.1778,
    					0.2221,
    					0.2721,
    					0.3272,
    					0.3863,
    					0.4481,
    					0.5113,
    					0.5742,
    					0.6352,
    					0.693,
    					0.7463,
    					0.7944,
    					0.8366,
    					0.8727,
    					0.9028,
    					0.9274,
    					0.9469,
    					0.962,
    					0.9734,
    					0.9817,
    					0.9878,
    					0.992,
    					0.9949,
    					0.9968,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.6845,
    				"std.error": 0.6072,
    				statistic: -1.1272,
    				"p.value": 0.2608,
    				"conf.low": -1.8805,
    				"conf.high": 0.5116,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.1545e-26,
    					7.5205e-26,
    					4.7502e-25,
    					2.9094e-24,
    					1.7279e-23,
    					9.9509e-23,
    					5.557e-22,
    					3.0093e-21,
    					1.5802e-20,
    					8.047e-20,
    					3.9737e-19,
    					1.9029e-18,
    					8.8372e-18,
    					3.98e-17,
    					1.7383e-16,
    					7.3631e-16,
    					3.0247e-15,
    					1.2051e-14,
    					4.6565e-14,
    					1.7451e-13,
    					6.3432e-13,
    					2.2364e-12,
    					7.6476e-12,
    					2.5367e-11,
    					8.1621e-11,
    					2.5475e-10,
    					7.7132e-10,
    					2.2656e-9,
    					6.4559e-9,
    					1.7848e-8,
    					4.7874e-8,
    					1.246e-7,
    					3.1465e-7,
    					7.7108e-7,
    					0.0000018338,
    					0.0000042324,
    					0.0000094811,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0021,
    					0.0036,
    					0.006,
    					0.0097,
    					0.0153,
    					0.0236,
    					0.0353,
    					0.0513,
    					0.0727,
    					0.1004,
    					0.135,
    					0.177,
    					0.2264,
    					0.2829,
    					0.3453,
    					0.4123,
    					0.4819,
    					0.5521,
    					0.6207,
    					0.6856,
    					0.7453,
    					0.7985,
    					0.8443,
    					0.8827,
    					0.9139,
    					0.9384,
    					0.9571,
    					0.9709,
    					0.9808,
    					0.9877,
    					0.9923,
    					0.9953,
    					0.9972,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.8199,
    				"std.error": 0.7874,
    				statistic: 2.3113,
    				"p.value": 0.0216,
    				"conf.low": 0.269,
    				"conf.high": 3.3708,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.1484e-18,
    					1.3771e-17,
    					5.8533e-17,
    					2.4175e-16,
    					9.7028e-16,
    					3.7843e-15,
    					1.4343e-14,
    					5.2828e-14,
    					1.8909e-13,
    					6.5778e-13,
    					2.2238e-12,
    					7.3065e-12,
    					2.3332e-11,
    					7.2416e-11,
    					2.1845e-10,
    					6.4054e-10,
    					1.8256e-9,
    					5.0577e-9,
    					1.3621e-8,
    					3.566e-8,
    					9.0761e-8,
    					2.2458e-7,
    					5.4031e-7,
    					0.0000012639,
    					0.0000028749,
    					0.0000063589,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0023,
    					0.0039,
    					0.0064,
    					0.0102,
    					0.0158,
    					0.024,
    					0.0353,
    					0.0508,
    					0.0712,
    					0.0975,
    					0.1301,
    					0.1697,
    					0.2163,
    					0.2695,
    					0.3286,
    					0.3923,
    					0.4591,
    					0.527,
    					0.5941,
    					0.6586,
    					0.7188,
    					0.7733,
    					0.8212,
    					0.8623,
    					0.8964,
    					0.9239,
    					0.9454,
    					0.9618,
    					0.974,
    					0.9827,
    					0.9888,
    					0.9929,
    					0.9957,
    					0.9974,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 37,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2804,
    				"std.error": 0.4049,
    				statistic: 15.5091,
    				"p.value": 2.6679e-39,
    				"conf.low": 5.4831,
    				"conf.high": 7.0776,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.1599e-13,
    					3.6017e-13,
    					1.0928e-12,
    					3.2399e-12,
    					9.3866e-12,
    					2.6574e-11,
    					7.3518e-11,
    					1.9876e-10,
    					5.2512e-10,
    					1.3559e-9,
    					3.4213e-9,
    					8.4375e-9,
    					2.0337e-8,
    					4.7909e-8,
    					1.1031e-7,
    					2.4827e-7,
    					5.4619e-7,
    					0.0000011746,
    					0.0000024693,
    					0.0000050748,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0032,
    					0.005,
    					0.0078,
    					0.0117,
    					0.0173,
    					0.025,
    					0.0355,
    					0.0492,
    					0.0669,
    					0.0892,
    					0.1166,
    					0.1495,
    					0.188,
    					0.2321,
    					0.2815,
    					0.3354,
    					0.393,
    					0.453,
    					0.514,
    					0.5748,
    					0.6338,
    					0.6899,
    					0.7418,
    					0.7888,
    					0.8304,
    					0.8663,
    					0.8966,
    					0.9216,
    					0.9417,
    					0.9575,
    					0.9697,
    					0.9788,
    					0.9855,
    					0.9903,
    					0.9936,
    					0.9959,
    					0.9974,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.4202,
    				"std.error": 0.545,
    				statistic: -2.6057,
    				"p.value": 0.0097,
    				"conf.low": -2.4932,
    				"conf.high": -0.3472,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					6.0449e-11,
    					1.5503e-10,
    					3.8956e-10,
    					9.5912e-10,
    					2.3137e-9,
    					5.4689e-9,
    					1.2667e-8,
    					2.8747e-8,
    					6.393e-8,
    					1.3932e-7,
    					2.9754e-7,
    					6.2271e-7,
    					0.0000012772,
    					0.0000025675,
    					0.0000050586,
    					0.0000097686,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0024,
    					0.0037,
    					0.0056,
    					0.0084,
    					0.0123,
    					0.0178,
    					0.0251,
    					0.0349,
    					0.0476,
    					0.0638,
    					0.0839,
    					0.1085,
    					0.1378,
    					0.1721,
    					0.2115,
    					0.2557,
    					0.3043,
    					0.3566,
    					0.4118,
    					0.4687,
    					0.5263,
    					0.5834,
    					0.6388,
    					0.6913,
    					0.7403,
    					0.7849,
    					0.8247,
    					0.8594,
    					0.8892,
    					0.9142,
    					0.9347,
    					0.9511,
    					0.9641,
    					0.9741,
    					0.9817,
    					0.9873,
    					0.9913,
    					0.9942,
    					0.9962,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8057,
    				"std.error": 0.5308,
    				statistic: -1.5181,
    				"p.value": 0.1302,
    				"conf.low": -1.8507,
    				"conf.high": 0.2392,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.3551e-33,
    					4.8098e-32,
    					5.1016e-31,
    					5.1969e-30,
    					5.0845e-29,
    					4.7778e-28,
    					4.3119e-27,
    					3.7376e-26,
    					3.1117e-25,
    					2.4882e-24,
    					1.9111e-23,
    					1.4098e-22,
    					9.99e-22,
    					6.7995e-21,
    					4.4454e-20,
    					2.7918e-19,
    					1.6842e-18,
    					9.7597e-18,
    					5.4331e-17,
    					2.9055e-16,
    					1.4927e-15,
    					7.3677e-15,
    					3.4937e-14,
    					1.5917e-13,
    					6.9671e-13,
    					2.9302e-12,
    					1.1842e-11,
    					4.5984e-11,
    					1.7159e-10,
    					6.1535e-10,
    					2.1207e-9,
    					7.0246e-9,
    					2.2364e-8,
    					6.8441e-8,
    					2.0134e-7,
    					5.6946e-7,
    					0.0000015485,
    					0.000004049,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0022,
    					0.0041,
    					0.0072,
    					0.0124,
    					0.0206,
    					0.0329,
    					0.0506,
    					0.0754,
    					0.1084,
    					0.1507,
    					0.2027,
    					0.2643,
    					0.3341,
    					0.4103,
    					0.49,
    					0.5701,
    					0.6474,
    					0.719,
    					0.7828,
    					0.8373,
    					0.882,
    					0.9172,
    					0.9439,
    					0.9633,
    					0.9768,
    					0.9859,
    					0.9917,
    					0.9953,
    					0.9974,
    					0.9987,
    					0.9993,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.7219,
    				"std.error": 0.7353,
    				statistic: 2.3419,
    				"p.value": 0.0199,
    				"conf.low": 0.2744,
    				"conf.high": 3.1694,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.289e-20,
    					2.2684e-19,
    					1.1608e-18,
    					5.7479e-18,
    					2.754e-17,
    					1.2768e-16,
    					5.7283e-16,
    					2.4868e-15,
    					1.0447e-14,
    					4.2473e-14,
    					1.671e-13,
    					6.3623e-13,
    					2.3444e-12,
    					8.3607e-12,
    					2.8857e-11,
    					9.6404e-11,
    					3.1172e-10,
    					9.7566e-10,
    					2.9559e-9,
    					8.6692e-9,
    					2.4614e-8,
    					6.7656e-8,
    					1.8005e-7,
    					4.6394e-7,
    					0.0000011576,
    					0.0000027968,
    					0.0000065443,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0019,
    					0.0033,
    					0.0057,
    					0.0094,
    					0.0151,
    					0.0236,
    					0.0357,
    					0.0526,
    					0.0753,
    					0.1048,
    					0.1418,
    					0.1868,
    					0.2398,
    					0.3,
    					0.3662,
    					0.4367,
    					0.5093,
    					0.5815,
    					0.6511,
    					0.716,
    					0.7744,
    					0.8254,
    					0.8684,
    					0.9034,
    					0.9311,
    					0.9522,
    					0.9678,
    					0.9789,
    					0.9866,
    					0.9917,
    					0.995,
    					0.9971,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 38,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.7385,
    				"std.error": 0.3075,
    				statistic: 18.6596,
    				"p.value": 1.3407e-50,
    				"conf.low": 5.133,
    				"conf.high": 6.3439,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.5308e-15,
    					7.5695e-15,
    					3.5955e-14,
    					1.6406e-13,
    					7.1919e-13,
    					3.0288e-12,
    					1.2255e-11,
    					4.764e-11,
    					1.7795e-10,
    					6.3866e-10,
    					2.2027e-9,
    					7.3003e-9,
    					2.3253e-8,
    					7.1187e-8,
    					2.0947e-7,
    					5.9251e-7,
    					0.0000016112,
    					0.0000042124,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0023,
    					0.0042,
    					0.0075,
    					0.0128,
    					0.0212,
    					0.0338,
    					0.052,
    					0.0772,
    					0.1109,
    					0.1539,
    					0.2067,
    					0.269,
    					0.3395,
    					0.4161,
    					0.4961,
    					0.5762,
    					0.6533,
    					0.7245,
    					0.7877,
    					0.8414,
    					0.8854,
    					0.9199,
    					0.9459,
    					0.9647,
    					0.9778,
    					0.9865,
    					0.9921,
    					0.9956,
    					0.9976,
    					0.9987,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.7067,
    				"std.error": 0.4383,
    				statistic: -1.6122,
    				"p.value": 0.1081,
    				"conf.low": -1.5697,
    				"conf.high": 0.1563,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.895e-22,
    					1.6388e-21,
    					8.9855e-21,
    					4.7718e-20,
    					2.4544e-19,
    					1.2228e-18,
    					5.9006e-18,
    					2.758e-17,
    					1.2487e-16,
    					5.4759e-16,
    					2.3262e-15,
    					9.5723e-15,
    					3.8157e-14,
    					1.4735e-13,
    					5.512e-13,
    					1.9976e-12,
    					7.0133e-12,
    					2.3856e-11,
    					7.8617e-11,
    					2.5102e-10,
    					7.7661e-10,
    					2.3281e-9,
    					6.7626e-9,
    					1.9036e-8,
    					5.1927e-8,
    					1.3728e-7,
    					3.5174e-7,
    					8.7351e-7,
    					0.0000021028,
    					0.0000049069,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0025,
    					0.0043,
    					0.0073,
    					0.0118,
    					0.0185,
    					0.0284,
    					0.0422,
    					0.0611,
    					0.086,
    					0.1178,
    					0.1571,
    					0.2042,
    					0.2588,
    					0.3201,
    					0.3868,
    					0.457,
    					0.5286,
    					0.5993,
    					0.6669,
    					0.7294,
    					0.7854,
    					0.8341,
    					0.875,
    					0.9082,
    					0.9344,
    					0.9544,
    					0.9692,
    					0.9798,
    					0.9871,
    					0.992,
    					0.9952,
    					0.9972,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: 0.2713,
    				"std.error": 0.5933,
    				statistic: 0.4572,
    				"p.value": 0.6479,
    				"conf.low": -0.8968,
    				"conf.high": 1.4394,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.6061e-36,
    					4.3723e-35,
    					4.0183e-34,
    					3.5755e-33,
    					3.0802e-32,
    					2.5691e-31,
    					2.0746e-30,
    					1.6221e-29,
    					1.2279e-28,
    					8.9999e-28,
    					6.3868e-27,
    					4.3884e-26,
    					2.9195e-25,
    					1.8806e-24,
    					1.173e-23,
    					7.0837e-23,
    					4.1423e-22,
    					2.3454e-21,
    					1.2859e-20,
    					6.827e-20,
    					3.5096e-19,
    					1.7471e-18,
    					8.4221e-18,
    					3.9315e-17,
    					1.7772e-16,
    					7.7801e-16,
    					3.2983e-15,
    					1.3542e-14,
    					5.3843e-14,
    					2.0734e-13,
    					7.733e-13,
    					2.7933e-12,
    					9.7729e-12,
    					3.3118e-11,
    					1.0871e-10,
    					3.4563e-10,
    					1.0645e-9,
    					3.1762e-9,
    					9.1807e-9,
    					2.5709e-8,
    					6.9751e-8,
    					1.8336e-7,
    					4.6705e-7,
    					0.0000011528,
    					0.0000027577,
    					0.0000063931,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0017,
    					0.0031,
    					0.0052,
    					0.0087,
    					0.014,
    					0.0218,
    					0.0331,
    					0.0487,
    					0.0699,
    					0.0974,
    					0.1322,
    					0.1748,
    					0.2251,
    					0.2828,
    					0.3467,
    					0.4154,
    					0.4867,
    					0.5585,
    					0.6284,
    					0.6943,
    					0.7544,
    					0.8075,
    					0.853,
    					0.8906,
    					0.9208,
    					0.9441,
    					0.9617,
    					0.9745,
    					0.9835,
    					0.9896,
    					0.9937,
    					0.9962,
    					0.9978,
    					0.9988,
    					0.9993,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.6331,
    				"std.error": 0.8042,
    				statistic: 0.7872,
    				"p.value": 0.4318,
    				"conf.low": -0.9502,
    				"conf.high": 2.2165,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.5767e-12,
    					5.0949e-12,
    					1.6019e-11,
    					4.9012e-11,
    					1.4592e-10,
    					4.2276e-10,
    					1.1919e-9,
    					3.2704e-9,
    					8.7329e-9,
    					2.2695e-8,
    					5.7407e-8,
    					1.4133e-7,
    					3.3869e-7,
    					7.9008e-7,
    					0.0000017941,
    					0.0000039663,
    					0.0000085369,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0026,
    					0.0043,
    					0.0069,
    					0.0108,
    					0.0166,
    					0.0248,
    					0.0362,
    					0.0516,
    					0.0718,
    					0.0976,
    					0.1295,
    					0.1681,
    					0.2133,
    					0.265,
    					0.3224,
    					0.3843,
    					0.4494,
    					0.5158,
    					0.5818,
    					0.6456,
    					0.7056,
    					0.7603,
    					0.809,
    					0.8511,
    					0.8865,
    					0.9154,
    					0.9385,
    					0.9563,
    					0.9697,
    					0.9795,
    					0.9864,
    					0.9913,
    					0.9945,
    					0.9966,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 39,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2804,
    				"std.error": 0.4041,
    				statistic: 15.5409,
    				"p.value": 1.8871e-36,
    				"conf.low": 5.4836,
    				"conf.high": 7.0771,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.0368e-13,
    					3.2342e-13,
    					9.857e-13,
    					2.9352e-12,
    					8.5403e-12,
    					2.4279e-11,
    					6.7445e-11,
    					1.8307e-10,
    					4.8556e-10,
    					1.2585e-9,
    					3.1874e-9,
    					7.8889e-9,
    					1.9081e-8,
    					4.5105e-8,
    					1.042e-7,
    					2.3528e-7,
    					5.1922e-7,
    					0.00000112,
    					0.0000023613,
    					0.0000048668,
    					0.0000098055,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0031,
    					0.005,
    					0.0077,
    					0.0116,
    					0.0171,
    					0.0248,
    					0.0352,
    					0.0489,
    					0.0665,
    					0.0888,
    					0.1161,
    					0.149,
    					0.1875,
    					0.2317,
    					0.2811,
    					0.3351,
    					0.3927,
    					0.4529,
    					0.5141,
    					0.575,
    					0.6341,
    					0.6902,
    					0.7422,
    					0.7893,
    					0.8309,
    					0.8668,
    					0.8971,
    					0.922,
    					0.9421,
    					0.9579,
    					0.97,
    					0.979,
    					0.9856,
    					0.9904,
    					0.9937,
    					0.996,
    					0.9975,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.4202,
    				"std.error": 0.5439,
    				statistic: -2.611,
    				"p.value": 0.0097,
    				"conf.low": -2.4926,
    				"conf.high": -0.3478,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.5412e-11,
    					1.4265e-10,
    					3.5978e-10,
    					8.89e-10,
    					2.1521e-9,
    					5.1045e-9,
    					1.1862e-8,
    					2.7009e-8,
    					6.0257e-8,
    					1.3172e-7,
    					2.8216e-7,
    					5.9226e-7,
    					0.0000012183,
    					0.0000024557,
    					0.0000048512,
    					0.0000093924,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0036,
    					0.0055,
    					0.0083,
    					0.0122,
    					0.0176,
    					0.0249,
    					0.0346,
    					0.0473,
    					0.0634,
    					0.0835,
    					0.108,
    					0.1373,
    					0.1717,
    					0.211,
    					0.2553,
    					0.3039,
    					0.3563,
    					0.4116,
    					0.4687,
    					0.5264,
    					0.5836,
    					0.639,
    					0.6917,
    					0.7407,
    					0.7853,
    					0.8252,
    					0.8599,
    					0.8897,
    					0.9146,
    					0.9351,
    					0.9515,
    					0.9644,
    					0.9744,
    					0.9819,
    					0.9874,
    					0.9914,
    					0.9943,
    					0.9962,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.2706,
    				"std.error": 0.646,
    				statistic: -0.4189,
    				"p.value": 0.6757,
    				"conf.low": -1.5444,
    				"conf.high": 1.0031,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.1262e-26,
    					6.5633e-26,
    					3.7222e-25,
    					2.0543e-24,
    					1.1033e-23,
    					5.7667e-23,
    					2.9332e-22,
    					1.452e-21,
    					6.9947e-21,
    					3.2793e-20,
    					1.4963e-19,
    					6.6441e-19,
    					2.8714e-18,
    					1.2077e-17,
    					4.9438e-17,
    					1.9697e-16,
    					7.6377e-16,
    					2.8826e-15,
    					1.0589e-14,
    					3.786e-14,
    					1.3176e-13,
    					4.4632e-13,
    					1.4716e-12,
    					4.7233e-12,
    					1.4757e-11,
    					4.488e-11,
    					1.3287e-10,
    					3.8297e-10,
    					1.0746e-9,
    					2.9353e-9,
    					7.8066e-9,
    					2.0214e-8,
    					5.0963e-8,
    					1.2511e-7,
    					2.9906e-7,
    					6.9613e-7,
    					0.000001578,
    					0.0000034837,
    					0.0000074906,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0023,
    					0.0038,
    					0.0061,
    					0.0096,
    					0.0148,
    					0.0223,
    					0.0326,
    					0.0467,
    					0.0653,
    					0.0891,
    					0.1189,
    					0.1551,
    					0.198,
    					0.2472,
    					0.3024,
    					0.3625,
    					0.4262,
    					0.4919,
    					0.5578,
    					0.6221,
    					0.6832,
    					0.7397,
    					0.7905,
    					0.835,
    					0.8728,
    					0.9041,
    					0.9294,
    					0.9492,
    					0.9643,
    					0.9755,
    					0.9836,
    					0.9893,
    					0.9932,
    					0.9957,
    					0.9974,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3467,
    				"std.error": 0.8628,
    				statistic: 1.5607,
    				"p.value": 0.1201,
    				"conf.low": -0.3546,
    				"conf.high": 3.0479,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.2004e-13,
    					3.7842e-13,
    					1.1649e-12,
    					3.5015e-12,
    					1.0278e-11,
    					2.9464e-11,
    					8.2482e-11,
    					2.255e-10,
    					6.0207e-10,
    					1.5699e-9,
    					3.9983e-9,
    					9.9452e-9,
    					2.4162e-8,
    					5.7336e-8,
    					1.329e-7,
    					3.0091e-7,
    					6.6556e-7,
    					0.0000014381,
    					0.0000030357,
    					0.0000062606,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0025,
    					0.0039,
    					0.0062,
    					0.0095,
    					0.0143,
    					0.0209,
    					0.0301,
    					0.0424,
    					0.0585,
    					0.0789,
    					0.1044,
    					0.1354,
    					0.1722,
    					0.2148,
    					0.2629,
    					0.316,
    					0.3733,
    					0.4334,
    					0.4952,
    					0.5571,
    					0.6176,
    					0.6753,
    					0.7292,
    					0.7781,
    					0.8216,
    					0.8593,
    					0.8911,
    					0.9175,
    					0.9387,
    					0.9554,
    					0.9682,
    					0.9778,
    					0.9848,
    					0.9899,
    					0.9934,
    					0.9958,
    					0.9974,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 40,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.243,
    				"std.error": 0.4574,
    				statistic: 13.6485,
    				"p.value": 6.1048e-36,
    				"conf.low": 5.3441,
    				"conf.high": 7.1418,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					7.4408e-11,
    					1.7964e-10,
    					4.2596e-10,
    					9.9199e-10,
    					2.2689e-9,
    					5.0971e-9,
    					1.1247e-8,
    					2.4374e-8,
    					5.1885e-8,
    					1.0849e-7,
    					2.2282e-7,
    					4.4955e-7,
    					8.9097e-7,
    					0.0000017347,
    					0.0000033178,
    					0.0000062342,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.002,
    					0.0031,
    					0.0046,
    					0.0068,
    					0.0099,
    					0.014,
    					0.0197,
    					0.0272,
    					0.0368,
    					0.0492,
    					0.0646,
    					0.0836,
    					0.1065,
    					0.1336,
    					0.1651,
    					0.2011,
    					0.2413,
    					0.2856,
    					0.3335,
    					0.3842,
    					0.437,
    					0.4909,
    					0.545,
    					0.5982,
    					0.6497,
    					0.6986,
    					0.7442,
    					0.7858,
    					0.8233,
    					0.8563,
    					0.8848,
    					0.9091,
    					0.9294,
    					0.946,
    					0.9593,
    					0.9699,
    					0.978,
    					0.9842,
    					0.9889,
    					0.9923,
    					0.9947,
    					0.9965,
    					0.9977,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.549,
    				"std.error": 0.5123,
    				statistic: -1.0717,
    				"p.value": 0.2844,
    				"conf.low": -1.5557,
    				"conf.high": 0.4576,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					6.1304e-18,
    					2.2966e-17,
    					8.4051e-17,
    					3.0052e-16,
    					1.0497e-15,
    					3.5822e-15,
    					1.1943e-14,
    					3.8901e-14,
    					1.238e-13,
    					3.8491e-13,
    					1.1693e-12,
    					3.4706e-12,
    					1.0065e-11,
    					2.8519e-11,
    					7.8961e-11,
    					2.1362e-10,
    					5.6471e-10,
    					1.4587e-9,
    					3.6822e-9,
    					9.0832e-9,
    					2.1896e-8,
    					5.1584e-8,
    					1.1877e-7,
    					2.6726e-7,
    					5.8779e-7,
    					0.0000012636,
    					0.0000026551,
    					0.0000054534,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0034,
    					0.0053,
    					0.0082,
    					0.0124,
    					0.0182,
    					0.0263,
    					0.0372,
    					0.0515,
    					0.0699,
    					0.093,
    					0.1212,
    					0.155,
    					0.1945,
    					0.2396,
    					0.2898,
    					0.3446,
    					0.4027,
    					0.4631,
    					0.5244,
    					0.5851,
    					0.6439,
    					0.6994,
    					0.7506,
    					0.7968,
    					0.8374,
    					0.8724,
    					0.9017,
    					0.9258,
    					0.9451,
    					0.9602,
    					0.9717,
    					0.9803,
    					0.9866,
    					0.9911,
    					0.9942,
    					0.9963,
    					0.9977,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.2369,
    				"std.error": 0.6001,
    				statistic: -2.0611,
    				"p.value": 0.0398,
    				"conf.low": -2.4161,
    				"conf.high": -0.0576,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.2223e-23,
    					2.4431e-22,
    					1.3698e-21,
    					7.4418e-21,
    					3.9178e-20,
    					1.9987e-19,
    					9.8804e-19,
    					4.7332e-18,
    					2.1973e-17,
    					9.8852e-17,
    					4.3097e-16,
    					1.8209e-15,
    					7.456e-15,
    					2.9588e-14,
    					1.138e-13,
    					4.2418e-13,
    					1.5325e-12,
    					5.3664e-12,
    					1.8214e-11,
    					5.9922e-11,
    					1.9109e-10,
    					5.9072e-10,
    					1.7702e-9,
    					5.1427e-9,
    					1.4484e-8,
    					3.955e-8,
    					1.0471e-7,
    					2.688e-7,
    					6.6913e-7,
    					0.0000016152,
    					0.0000037814,
    					0.000008586,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0035,
    					0.006,
    					0.0097,
    					0.0155,
    					0.0239,
    					0.0358,
    					0.0523,
    					0.0743,
    					0.1027,
    					0.1384,
    					0.1816,
    					0.2324,
    					0.2903,
    					0.3541,
    					0.4224,
    					0.4931,
    					0.564,
    					0.6329,
    					0.6977,
    					0.7569,
    					0.8091,
    					0.8538,
    					0.8909,
    					0.9207,
    					0.9439,
    					0.9614,
    					0.9741,
    					0.9831,
    					0.9893,
    					0.9934,
    					0.9961,
    					0.9977,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.1992,
    				"std.error": 0.6788,
    				statistic: 1.7666,
    				"p.value": 0.078,
    				"conf.low": -0.1347,
    				"conf.high": 2.5331,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.8398e-20,
    					2.9279e-19,
    					1.7041e-18,
    					9.5425e-18,
    					5.1412e-17,
    					2.6651e-16,
    					1.3293e-15,
    					6.3793e-15,
    					2.9459e-14,
    					1.309e-13,
    					5.5973e-13,
    					2.3032e-12,
    					9.1204e-12,
    					3.4757e-11,
    					1.2748e-10,
    					4.5003e-10,
    					1.5291e-9,
    					5.0012e-9,
    					1.5746e-8,
    					4.7724e-8,
    					1.3926e-7,
    					3.9126e-7,
    					0.0000010585,
    					0.0000027576,
    					0.000006919,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0015,
    					0.0029,
    					0.0051,
    					0.0089,
    					0.015,
    					0.0242,
    					0.0379,
    					0.0573,
    					0.0838,
    					0.1185,
    					0.1624,
    					0.2157,
    					0.2779,
    					0.3478,
    					0.4232,
    					0.5017,
    					0.58,
    					0.6553,
    					0.7249,
    					0.7867,
    					0.8396,
    					0.8831,
    					0.9175,
    					0.9437,
    					0.9628,
    					0.9762,
    					0.9854,
    					0.9913,
    					0.995,
    					0.9972,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 41,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.5883,
    				"std.error": 0.3487,
    				statistic: 16.0252,
    				"p.value": 2.1664e-46,
    				"conf.low": 4.903,
    				"conf.high": 6.2735,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.3757e-11,
    					1.0912e-10,
    					3.4196e-10,
    					1.0389e-9,
    					3.06e-9,
    					8.7383e-9,
    					2.4194e-8,
    					6.4955e-8,
    					1.691e-7,
    					4.2688e-7,
    					0.0000010451,
    					0.0000024815,
    					0.000005715,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0008,
    					0.0015,
    					0.0027,
    					0.0046,
    					0.0076,
    					0.0122,
    					0.0191,
    					0.0291,
    					0.0431,
    					0.0621,
    					0.087,
    					0.1187,
    					0.1579,
    					0.2047,
    					0.2589,
    					0.3196,
    					0.3857,
    					0.4553,
    					0.5262,
    					0.5964,
    					0.6635,
    					0.7258,
    					0.7818,
    					0.8306,
    					0.8717,
    					0.9054,
    					0.932,
    					0.9525,
    					0.9677,
    					0.9786,
    					0.9862,
    					0.9914,
    					0.9948,
    					0.9969,
    					0.9982,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.0614,
    				"std.error": 0.3952,
    				statistic: -0.1552,
    				"p.value": 0.8767,
    				"conf.low": -0.838,
    				"conf.high": 0.7153,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.7041e-35,
    					4.2971e-34,
    					4.7921e-33,
    					5.1374e-32,
    					5.2946e-31,
    					5.2455e-30,
    					4.9959e-29,
    					4.5743e-28,
    					4.0264e-27,
    					3.4072e-26,
    					2.7719e-25,
    					2.168e-24,
    					1.6302e-23,
    					1.1785e-22,
    					8.1913e-22,
    					5.4738e-21,
    					3.5169e-20,
    					2.1726e-19,
    					1.2904e-18,
    					7.3696e-18,
    					4.047e-17,
    					2.1369e-16,
    					1.085e-15,
    					5.2975e-15,
    					2.4873e-14,
    					1.123e-13,
    					4.8765e-13,
    					2.0364e-12,
    					8.1789e-12,
    					3.1594e-11,
    					1.1739e-10,
    					4.1953e-10,
    					1.4423e-9,
    					4.7697e-9,
    					1.5175e-8,
    					4.6452e-8,
    					1.3681e-7,
    					3.8772e-7,
    					0.0000010574,
    					0.0000027755,
    					0.0000070118,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0016,
    					0.003,
    					0.0054,
    					0.0094,
    					0.0157,
    					0.0255,
    					0.0399,
    					0.0602,
    					0.0879,
    					0.1242,
    					0.1698,
    					0.2249,
    					0.289,
    					0.3605,
    					0.4373,
    					0.5166,
    					0.5952,
    					0.6701,
    					0.7387,
    					0.7992,
    					0.8504,
    					0.892,
    					0.9246,
    					0.9491,
    					0.9668,
    					0.9791,
    					0.9873,
    					0.9925,
    					0.9958,
    					0.9977,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.2314,
    				"std.error": 0.6635,
    				statistic: -0.3487,
    				"p.value": 0.7275,
    				"conf.low": -1.5353,
    				"conf.high": 1.0725,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.1793e-25,
    					6.3343e-25,
    					3.3156e-24,
    					1.6913e-23,
    					8.4079e-23,
    					4.0735e-22,
    					1.9233e-21,
    					8.85e-21,
    					3.9688e-20,
    					1.7346e-19,
    					7.3886e-19,
    					3.0673e-18,
    					1.2411e-17,
    					4.894e-17,
    					1.881e-16,
    					7.0461e-16,
    					2.5726e-15,
    					9.1552e-15,
    					3.1756e-14,
    					1.0737e-13,
    					3.5383e-13,
    					1.1366e-12,
    					3.559e-12,
    					1.0863e-11,
    					3.2322e-11,
    					9.3749e-11,
    					2.6508e-10,
    					7.3071e-10,
    					1.9637e-9,
    					5.1448e-9,
    					1.3142e-8,
    					3.273e-8,
    					7.9481e-8,
    					1.882e-7,
    					4.3453e-7,
    					9.7836e-7,
    					0.0000021482,
    					0.0000046002,
    					0.0000096075,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.0039,
    					0.0062,
    					0.0097,
    					0.0148,
    					0.0219,
    					0.0319,
    					0.0453,
    					0.0629,
    					0.0854,
    					0.1135,
    					0.1475,
    					0.1879,
    					0.2344,
    					0.2867,
    					0.344,
    					0.405,
    					0.4685,
    					0.5328,
    					0.5963,
    					0.6573,
    					0.7144,
    					0.7666,
    					0.813,
    					0.8532,
    					0.8872,
    					0.9151,
    					0.9375,
    					0.955,
    					0.9684,
    					0.9782,
    					0.9854,
    					0.9904,
    					0.9938,
    					0.9961,
    					0.9976,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.7712,
    				"std.error": 0.7532,
    				statistic: 1.0238,
    				"p.value": 0.3064,
    				"conf.low": -0.7089,
    				"conf.high": 2.2513,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.2083e-14,
    					4.7371e-14,
    					1.8e-13,
    					6.6292e-13,
    					2.3665e-12,
    					8.1886e-12,
    					2.7466e-11,
    					8.9303e-11,
    					2.8147e-10,
    					8.6006e-10,
    					2.5477e-9,
    					7.317e-9,
    					2.0374e-8,
    					5.5008e-8,
    					1.44e-7,
    					3.6557e-7,
    					8.9995e-7,
    					0.0000021487,
    					0.0000049755,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.0042,
    					0.007,
    					0.0113,
    					0.0178,
    					0.0272,
    					0.0405,
    					0.0586,
    					0.0825,
    					0.1131,
    					0.151,
    					0.1966,
    					0.2497,
    					0.3095,
    					0.3748,
    					0.444,
    					0.5149,
    					0.5853,
    					0.6531,
    					0.7163,
    					0.7734,
    					0.8234,
    					0.8658,
    					0.9006,
    					0.9283,
    					0.9496,
    					0.9656,
    					0.9771,
    					0.9852,
    					0.9907,
    					0.9943,
    					0.9966,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 42,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.243,
    				"std.error": 0.4544,
    				statistic: 13.7386,
    				"p.value": 1.656e-34,
    				"conf.low": 5.3492,
    				"conf.high": 7.1367,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.6334e-11,
    					1.3757e-10,
    					3.2986e-10,
    					7.7663e-10,
    					1.7954e-9,
    					4.0758e-9,
    					9.0853e-9,
    					1.9887e-8,
    					4.2747e-8,
    					9.0232e-8,
    					1.8704e-7,
    					3.8078e-7,
    					7.6129e-7,
    					0.0000014948,
    					0.0000028828,
    					0.0000054604,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0019,
    					0.0029,
    					0.0044,
    					0.0065,
    					0.0095,
    					0.0135,
    					0.019,
    					0.0264,
    					0.0359,
    					0.0481,
    					0.0634,
    					0.0822,
    					0.105,
    					0.132,
    					0.1635,
    					0.1995,
    					0.2399,
    					0.2844,
    					0.3324,
    					0.3834,
    					0.4365,
    					0.4908,
    					0.5453,
    					0.5989,
    					0.6507,
    					0.6998,
    					0.7456,
    					0.7874,
    					0.8249,
    					0.8579,
    					0.8864,
    					0.9106,
    					0.9307,
    					0.9471,
    					0.9603,
    					0.9707,
    					0.9787,
    					0.9848,
    					0.9893,
    					0.9926,
    					0.995,
    					0.9966,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.549,
    				"std.error": 0.5089,
    				statistic: -1.0788,
    				"p.value": 0.2814,
    				"conf.low": -1.55,
    				"conf.high": 0.452,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.7524e-18,
    					1.4302e-17,
    					5.3239e-17,
    					1.9355e-16,
    					6.8719e-16,
    					2.383e-15,
    					8.0705e-15,
    					2.6696e-14,
    					8.6247e-14,
    					2.7215e-13,
    					8.3878e-13,
    					2.5251e-12,
    					7.4247e-12,
    					2.1325e-11,
    					5.9827e-11,
    					1.6395e-10,
    					4.389e-10,
    					1.1478e-9,
    					2.9321e-9,
    					7.3175e-9,
    					1.7841e-8,
    					4.2496e-8,
    					9.8897e-8,
    					2.2487e-7,
    					4.9958e-7,
    					0.0000010845,
    					0.0000023004,
    					0.0000047684,
    					0.0000096595,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0032,
    					0.0051,
    					0.0079,
    					0.0119,
    					0.0176,
    					0.0255,
    					0.0363,
    					0.0504,
    					0.0686,
    					0.0915,
    					0.1197,
    					0.1534,
    					0.1929,
    					0.2381,
    					0.2886,
    					0.3436,
    					0.4021,
    					0.4629,
    					0.5246,
    					0.5857,
    					0.6448,
    					0.7006,
    					0.752,
    					0.7983,
    					0.839,
    					0.8739,
    					0.9032,
    					0.9271,
    					0.9463,
    					0.9612,
    					0.9725,
    					0.981,
    					0.9871,
    					0.9914,
    					0.9944,
    					0.9965,
    					0.9978,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8861,
    				"std.error": 0.721,
    				statistic: -1.229,
    				"p.value": 0.2199,
    				"conf.low": -2.3041,
    				"conf.high": 0.532,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.1955e-18,
    					7.9995e-18,
    					2.852e-17,
    					9.9488e-17,
    					3.3959e-16,
    					1.1342e-15,
    					3.7068e-15,
    					1.1854e-14,
    					3.7096e-14,
    					1.1359e-13,
    					3.4037e-13,
    					9.9806e-13,
    					2.8639e-12,
    					8.0419e-12,
    					2.2099e-11,
    					5.9429e-11,
    					1.5641e-10,
    					4.0286e-10,
    					1.0155e-9,
    					2.5054e-9,
    					6.0497e-9,
    					1.4298e-8,
    					3.3074e-8,
    					7.4886e-8,
    					1.6597e-7,
    					3.6007e-7,
    					7.6468e-7,
    					0.0000015898,
    					0.0000032356,
    					0.0000064474,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0008,
    					0.0012,
    					0.002,
    					0.0032,
    					0.0049,
    					0.0075,
    					0.0112,
    					0.0164,
    					0.0235,
    					0.0331,
    					0.0456,
    					0.0617,
    					0.082,
    					0.1068,
    					0.1367,
    					0.1719,
    					0.2124,
    					0.258,
    					0.3082,
    					0.3622,
    					0.4191,
    					0.4778,
    					0.537,
    					0.5954,
    					0.6517,
    					0.7048,
    					0.7539,
    					0.7982,
    					0.8374,
    					0.8713,
    					0.8999,
    					0.9235,
    					0.9427,
    					0.9579,
    					0.9696,
    					0.9785,
    					0.9851,
    					0.9898,
    					0.9932,
    					0.9956,
    					0.9972,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.2588,
    				"std.error": 0.8143,
    				statistic: 1.5458,
    				"p.value": 0.1231,
    				"conf.low": -0.3429,
    				"conf.high": 2.8606,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					9.8445e-15,
    					3.5019e-14,
    					1.2129e-13,
    					4.0899e-13,
    					1.3428e-12,
    					4.2928e-12,
    					1.3363e-11,
    					4.0501e-11,
    					1.1953e-10,
    					3.4354e-10,
    					9.6144e-10,
    					2.6203e-9,
    					6.9547e-9,
    					1.7977e-8,
    					4.5256e-8,
    					1.1096e-7,
    					2.65e-7,
    					6.1645e-7,
    					0.0000013969,
    					0.0000030834,
    					0.0000066309,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0034,
    					0.0055,
    					0.0087,
    					0.0135,
    					0.0203,
    					0.0298,
    					0.0429,
    					0.0602,
    					0.0825,
    					0.1105,
    					0.1448,
    					0.1857,
    					0.233,
    					0.2863,
    					0.3448,
    					0.4073,
    					0.4722,
    					0.5379,
    					0.6025,
    					0.6645,
    					0.7223,
    					0.7747,
    					0.821,
    					0.8609,
    					0.8942,
    					0.9213,
    					0.9428,
    					0.9594,
    					0.9718,
    					0.9809,
    					0.9874,
    					0.9919,
    					0.9949,
    					0.9969,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 43,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2327,
    				"std.error": 0.374,
    				statistic: 16.6668,
    				"p.value": 2.6667e-49,
    				"conf.low": 5.4979,
    				"conf.high": 6.9676,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.8858e-15,
    					1.0635e-14,
    					3.8142e-14,
    					1.3313e-13,
    					4.5224e-13,
    					1.4951e-12,
    					4.811e-12,
    					1.5067e-11,
    					4.5927e-11,
    					1.3626e-10,
    					3.9352e-10,
    					1.1062e-9,
    					3.0271e-9,
    					8.0634e-9,
    					2.091e-8,
    					5.2787e-8,
    					1.2974e-7,
    					3.1046e-7,
    					7.2334e-7,
    					0.000001641,
    					0.0000036252,
    					0.0000077991,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.0039,
    					0.0063,
    					0.01,
    					0.0154,
    					0.0231,
    					0.0338,
    					0.0483,
    					0.0673,
    					0.0918,
    					0.1223,
    					0.1593,
    					0.2029,
    					0.253,
    					0.3089,
    					0.3696,
    					0.4338,
    					0.4997,
    					0.5657,
    					0.6299,
    					0.6907,
    					0.7466,
    					0.7967,
    					0.8404,
    					0.8774,
    					0.908,
    					0.9325,
    					0.9516,
    					0.9661,
    					0.9769,
    					0.9846,
    					0.99,
    					0.9936,
    					0.9961,
    					0.9976,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.6143,
    				"std.error": 0.4483,
    				statistic: -1.3703,
    				"p.value": 0.1712,
    				"conf.low": -1.4952,
    				"conf.high": 0.2666,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.1289e-22,
    					1.7025e-21,
    					8.9855e-21,
    					4.5996e-20,
    					2.2837e-19,
    					1.0998e-18,
    					5.137e-18,
    					2.3274e-17,
    					1.0229e-16,
    					4.3603e-16,
    					1.803e-15,
    					7.2323e-15,
    					2.8141e-14,
    					1.0622e-13,
    					3.8896e-13,
    					1.3817e-12,
    					4.7616e-12,
    					1.592e-11,
    					5.164e-11,
    					1.6252e-10,
    					4.9625e-10,
    					1.4703e-9,
    					4.2269e-9,
    					1.1792e-8,
    					3.1921e-8,
    					8.386e-8,
    					2.1381e-7,
    					5.2908e-7,
    					0.0000012708,
    					0.0000029626,
    					0.0000067048,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0028,
    					0.0047,
    					0.0078,
    					0.0124,
    					0.0193,
    					0.0292,
    					0.043,
    					0.0616,
    					0.086,
    					0.117,
    					0.1552,
    					0.2008,
    					0.2537,
    					0.313,
    					0.3777,
    					0.446,
    					0.5159,
    					0.5854,
    					0.6522,
    					0.7147,
    					0.7712,
    					0.8208,
    					0.8631,
    					0.898,
    					0.9259,
    					0.9475,
    					0.9639,
    					0.9758,
    					0.9842,
    					0.9899,
    					0.9938,
    					0.9963,
    					0.9978,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8417,
    				"std.error": 0.4959,
    				statistic: -1.6972,
    				"p.value": 0.0903,
    				"conf.low": -1.8162,
    				"conf.high": 0.1328,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.3169e-37,
    					5.1026e-36,
    					7.4944e-35,
    					1.0509e-33,
    					1.407e-32,
    					1.7986e-31,
    					2.1952e-30,
    					2.5581e-29,
    					2.8463e-28,
    					3.0239e-27,
    					3.0675e-26,
    					2.9712e-25,
    					2.748e-24,
    					2.4269e-23,
    					2.0467e-22,
    					1.6482e-21,
    					1.2675e-20,
    					9.3081e-20,
    					6.5278e-19,
    					4.372e-18,
    					2.7965e-17,
    					1.7083e-16,
    					9.9669e-16,
    					5.5541e-15,
    					2.9562e-14,
    					1.5029e-13,
    					7.2989e-13,
    					3.386e-12,
    					1.5006e-11,
    					6.3536e-11,
    					2.5701e-10,
    					9.9338e-10,
    					3.6687e-9,
    					1.2948e-8,
    					4.3671e-8,
    					1.4078e-7,
    					4.338e-7,
    					0.0000012778,
    					0.0000035987,
    					0.0000096911,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0007,
    					0.0015,
    					0.0029,
    					0.0055,
    					0.0099,
    					0.0173,
    					0.0289,
    					0.0463,
    					0.0714,
    					0.1057,
    					0.1506,
    					0.2067,
    					0.2736,
    					0.3497,
    					0.4324,
    					0.5182,
    					0.6031,
    					0.6834,
    					0.7559,
    					0.8184,
    					0.8697,
    					0.91,
    					0.9402,
    					0.9619,
    					0.9766,
    					0.9862,
    					0.9922,
    					0.9958,
    					0.9978,
    					0.9989,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.7808,
    				"std.error": 0.6017,
    				statistic: 1.2977,
    				"p.value": 0.195,
    				"conf.low": -0.4015,
    				"conf.high": 1.9631,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.7141e-22,
    					4.8173e-21,
    					3.8661e-20,
    					2.9538e-19,
    					2.1484e-18,
    					1.4876e-17,
    					9.8068e-17,
    					6.1552e-16,
    					3.6784e-15,
    					2.093e-14,
    					1.134e-13,
    					5.8505e-13,
    					2.8744e-12,
    					1.3449e-11,
    					5.9928e-11,
    					2.5434e-10,
    					1.0282e-9,
    					3.9595e-9,
    					1.4525e-8,
    					5.0769e-8,
    					1.6908e-7,
    					5.3659e-7,
    					0.000001623,
    					0.0000046791,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.001,
    					0.0021,
    					0.0041,
    					0.0077,
    					0.0139,
    					0.024,
    					0.0397,
    					0.0629,
    					0.0955,
    					0.139,
    					0.1944,
    					0.2616,
    					0.3389,
    					0.4237,
    					0.5123,
    					0.6002,
    					0.6833,
    					0.7581,
    					0.8221,
    					0.8742,
    					0.9146,
    					0.9444,
    					0.9653,
    					0.9793,
    					0.9881,
    					0.9935,
    					0.9966,
    					0.9983,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 44,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.6699,
    				"std.error": 0.2863,
    				statistic: 19.8069,
    				"p.value": 7.3103e-64,
    				"conf.low": 5.1074,
    				"conf.high": 6.2324,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					8.967e-17,
    					5.369e-16,
    					3.0689e-15,
    					1.6746e-14,
    					8.7239e-14,
    					4.3391e-13,
    					2.0606e-12,
    					9.3432e-12,
    					4.0454e-11,
    					1.6726e-10,
    					6.6041e-10,
    					2.4904e-9,
    					8.9696e-9,
    					3.0859e-8,
    					1.0142e-7,
    					3.1843e-7,
    					9.5527e-7,
    					0.0000027385,
    					0.0000075029,
    					0,
    					0,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0025,
    					0.0048,
    					0.0088,
    					0.0155,
    					0.0261,
    					0.0423,
    					0.0659,
    					0.0985,
    					0.1416,
    					0.196,
    					0.2614,
    					0.3365,
    					0.4188,
    					0.5048,
    					0.5906,
    					0.6722,
    					0.7464,
    					0.8106,
    					0.8637,
    					0.9056,
    					0.9371,
    					0.9598,
    					0.9753,
    					0.9855,
    					0.9918,
    					0.9956,
    					0.9977,
    					0.9989,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.193,
    				"std.error": 0.3496,
    				statistic: -0.552,
    				"p.value": 0.5812,
    				"conf.low": -0.8799,
    				"conf.high": 0.494,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.0288e-42,
    					8.4603e-41,
    					1.6891e-39,
    					3.2063e-38,
    					5.7866e-37,
    					9.9294e-36,
    					1.6199e-34,
    					2.5128e-33,
    					3.7061e-32,
    					5.1972e-31,
    					6.9299e-30,
    					8.786e-29,
    					1.0592e-27,
    					1.2142e-26,
    					1.3235e-25,
    					1.3718e-24,
    					1.3521e-23,
    					1.2673e-22,
    					1.1296e-21,
    					9.5745e-21,
    					7.7181e-20,
    					5.917e-19,
    					4.3142e-18,
    					2.9917e-17,
    					1.9732e-16,
    					1.2379e-15,
    					7.3867e-15,
    					4.1928e-14,
    					2.2639e-13,
    					1.1629e-12,
    					5.6829e-12,
    					2.6422e-11,
    					1.1688e-10,
    					4.9201e-10,
    					1.9708e-9,
    					7.513e-9,
    					2.7259e-8,
    					9.4139e-8,
    					3.0949e-7,
    					9.6874e-7,
    					0.0000028873,
    					0.0000081951,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0007,
    					0.0016,
    					0.0032,
    					0.0061,
    					0.0113,
    					0.0199,
    					0.0336,
    					0.0543,
    					0.0839,
    					0.1242,
    					0.1765,
    					0.2409,
    					0.3163,
    					0.4003,
    					0.4891,
    					0.5785,
    					0.664,
    					0.7417,
    					0.809,
    					0.8642,
    					0.9074,
    					0.9394,
    					0.9621,
    					0.9773,
    					0.987,
    					0.9929,
    					0.9963,
    					0.9981,
    					0.9991,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: 0.3221,
    				"std.error": 0.5599,
    				statistic: 0.5753,
    				"p.value": 0.5654,
    				"conf.low": -0.7781,
    				"conf.high": 1.4222,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					8.8032e-41,
    					1.1198e-39,
    					1.3735e-38,
    					1.6246e-37,
    					1.8529e-36,
    					2.038e-35,
    					2.1615e-34,
    					2.2108e-33,
    					2.1805e-32,
    					2.0739e-31,
    					1.9022e-30,
    					1.6825e-29,
    					1.4352e-28,
    					1.1806e-27,
    					9.3657e-27,
    					7.1653e-26,
    					5.2867e-25,
    					3.7618e-24,
    					2.5815e-23,
    					1.7086e-22,
    					1.0906e-21,
    					6.7139e-21,
    					3.9864e-20,
    					2.2829e-19,
    					1.261e-18,
    					6.7178e-18,
    					3.452e-17,
    					1.711e-16,
    					8.1803e-16,
    					3.7725e-15,
    					1.6782e-14,
    					7.202e-14,
    					2.9814e-13,
    					1.1907e-12,
    					4.5875e-12,
    					1.7052e-11,
    					6.1155e-11,
    					2.1161e-10,
    					7.0649e-10,
    					2.276e-9,
    					7.0756e-9,
    					2.1227e-8,
    					6.1458e-8,
    					1.7174e-7,
    					4.632e-7,
    					0.000001206,
    					0.000003031,
    					0.0000073548,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0014,
    					0.0025,
    					0.0045,
    					0.0077,
    					0.0129,
    					0.0208,
    					0.0324,
    					0.0489,
    					0.0715,
    					0.1014,
    					0.1396,
    					0.1865,
    					0.242,
    					0.3055,
    					0.3755,
    					0.4498,
    					0.526,
    					0.6012,
    					0.6728,
    					0.7385,
    					0.7967,
    					0.8464,
    					0.8873,
    					0.9198,
    					0.9446,
    					0.963,
    					0.976,
    					0.9849,
    					0.9909,
    					0.9946,
    					0.9969,
    					0.9983,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.0699,
    				"std.error": 0.6766,
    				statistic: 0.1034,
    				"p.value": 0.9177,
    				"conf.low": -1.2595,
    				"conf.high": 1.3994,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.5351e-14,
    					2.0029e-13,
    					8.5096e-13,
    					3.4784e-12,
    					1.368e-11,
    					5.1762e-11,
    					1.8846e-10,
    					6.6024e-10,
    					2.2259e-9,
    					7.2213e-9,
    					2.2547e-8,
    					6.7757e-8,
    					1.9599e-7,
    					5.457e-7,
    					0.0000014627,
    					0.0000037748,
    					0.0000093801,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.001,
    					0.0019,
    					0.0036,
    					0.0063,
    					0.0109,
    					0.018,
    					0.0288,
    					0.0446,
    					0.0666,
    					0.0963,
    					0.1347,
    					0.1824,
    					0.2396,
    					0.3053,
    					0.3779,
    					0.4552,
    					0.5342,
    					0.6119,
    					0.6854,
    					0.7521,
    					0.8105,
    					0.8595,
    					0.8991,
    					0.9299,
    					0.9529,
    					0.9694,
    					0.9808,
    					0.9884,
    					0.9932,
    					0.9962,
    					0.9979,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 45,
    		cycle_length: "cl_option1",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2327,
    				"std.error": 0.3713,
    				statistic: 16.7876,
    				"p.value": 1.4746e-46,
    				"conf.low": 5.5025,
    				"conf.high": 6.963,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.8391e-15,
    					6.9051e-15,
    					2.5222e-14,
    					8.9623e-14,
    					3.0981e-13,
    					1.0419e-12,
    					3.409e-12,
    					1.0851e-11,
    					3.3606e-11,
    					1.0126e-10,
    					2.9688e-10,
    					8.4691e-10,
    					2.3508e-9,
    					6.3494e-9,
    					1.6688e-8,
    					4.2685e-8,
    					1.0625e-7,
    					2.5739e-7,
    					6.0685e-7,
    					0.0000013926,
    					0.0000031108,
    					0.0000067642,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0022,
    					0.0037,
    					0.006,
    					0.0096,
    					0.0148,
    					0.0223,
    					0.0328,
    					0.0471,
    					0.0659,
    					0.0902,
    					0.1206,
    					0.1575,
    					0.2012,
    					0.2514,
    					0.3076,
    					0.3687,
    					0.4333,
    					0.4997,
    					0.5662,
    					0.6308,
    					0.6919,
    					0.7482,
    					0.7984,
    					0.8422,
    					0.8791,
    					0.9096,
    					0.9339,
    					0.9528,
    					0.9671,
    					0.9776,
    					0.9852,
    					0.9904,
    					0.994,
    					0.9963,
    					0.9978,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.6143,
    				"std.error": 0.4451,
    				statistic: -1.3803,
    				"p.value": 0.1684,
    				"conf.low": -1.4897,
    				"conf.high": 0.2611,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.5836e-22,
    					8.8296e-22,
    					4.7729e-21,
    					2.5012e-20,
    					1.2708e-19,
    					6.2597e-19,
    					2.9894e-18,
    					1.3841e-17,
    					6.2135e-17,
    					2.7044e-16,
    					1.1413e-15,
    					4.67e-15,
    					1.8528e-14,
    					7.1277e-14,
    					2.6588e-13,
    					9.6175e-13,
    					3.3734e-12,
    					1.1475e-11,
    					3.7849e-11,
    					1.2108e-10,
    					3.7562e-10,
    					1.1302e-9,
    					3.2981e-9,
    					9.3352e-9,
    					2.563e-8,
    					6.8256e-8,
    					1.7633e-7,
    					4.4193e-7,
    					0.0000010746,
    					0.000002535,
    					0.0000058029,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0015,
    					0.0026,
    					0.0045,
    					0.0074,
    					0.0119,
    					0.0186,
    					0.0283,
    					0.0418,
    					0.0602,
    					0.0844,
    					0.1153,
    					0.1534,
    					0.1991,
    					0.2521,
    					0.3118,
    					0.3768,
    					0.4456,
    					0.516,
    					0.586,
    					0.6533,
    					0.7161,
    					0.7728,
    					0.8226,
    					0.8648,
    					0.8996,
    					0.9273,
    					0.9488,
    					0.9649,
    					0.9766,
    					0.9848,
    					0.9904,
    					0.9941,
    					0.9965,
    					0.998,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.2407,
    				"std.error": 0.6044,
    				statistic: -0.3983,
    				"p.value": 0.6907,
    				"conf.low": -1.4295,
    				"conf.high": 0.9481,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.9112e-30,
    					1.4414e-29,
    					1.0537e-28,
    					7.4668e-28,
    					5.129e-27,
    					3.4153e-26,
    					2.2045e-25,
    					1.3794e-24,
    					8.3666e-24,
    					4.9195e-23,
    					2.8041e-22,
    					1.5495e-21,
    					8.3004e-21,
    					4.3105e-20,
    					2.1701e-19,
    					1.0592e-18,
    					5.0119e-18,
    					2.2992e-17,
    					1.0226e-16,
    					4.4095e-16,
    					1.8435e-15,
    					7.4725e-15,
    					2.9368e-14,
    					1.1191e-13,
    					4.1351e-13,
    					1.4815e-12,
    					5.1469e-12,
    					1.7339e-11,
    					5.6643e-11,
    					1.7944e-10,
    					5.5131e-10,
    					1.6427e-9,
    					4.7469e-9,
    					1.3305e-8,
    					3.6169e-8,
    					9.5376e-8,
    					2.4397e-7,
    					6.0539e-7,
    					0.0000014574,
    					0.0000034041,
    					0.0000077148,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0018,
    					0.0032,
    					0.0054,
    					0.0088,
    					0.014,
    					0.0217,
    					0.0327,
    					0.0479,
    					0.0683,
    					0.0949,
    					0.1284,
    					0.1693,
    					0.2178,
    					0.2734,
    					0.3352,
    					0.4019,
    					0.4716,
    					0.5422,
    					0.6114,
    					0.6773,
    					0.738,
    					0.7923,
    					0.8393,
    					0.8787,
    					0.9108,
    					0.9361,
    					0.9554,
    					0.9698,
    					0.98,
    					0.9872,
    					0.992,
    					0.9951,
    					0.9971,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.4913,
    				"std.error": 0.7265,
    				statistic: 0.6763,
    				"p.value": 0.4993,
    				"conf.low": -0.9376,
    				"conf.high": 1.9202,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.701e-14,
    					1.0919e-13,
    					4.2684e-13,
    					1.6136e-12,
    					5.8985e-12,
    					2.0852e-11,
    					7.1293e-11,
    					2.3573e-10,
    					7.5387e-10,
    					2.3318e-9,
    					6.9766e-9,
    					2.019e-8,
    					5.6524e-8,
    					1.5309e-7,
    					4.0112e-7,
    					0.0000010169,
    					0.0000024945,
    					0.0000059213,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0019,
    					0.0033,
    					0.0057,
    					0.0094,
    					0.0153,
    					0.024,
    					0.0364,
    					0.0538,
    					0.0772,
    					0.1077,
    					0.1459,
    					0.1923,
    					0.2467,
    					0.3085,
    					0.3763,
    					0.4481,
    					0.5217,
    					0.5945,
    					0.6642,
    					0.7287,
    					0.7863,
    					0.836,
    					0.8776,
    					0.9112,
    					0.9373,
    					0.9571,
    					0.9714,
    					0.9816,
    					0.9885,
    					0.993,
    					0.9959,
    					0.9976,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 46,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option1",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5631,
    				"std.error": 0.4501,
    				statistic: 14.5803,
    				"p.value": 8.3983e-35,
    				"conf.low": 5.6763,
    				"conf.high": 7.4499,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.5733e-13,
    					7.0353e-13,
    					1.8878e-12,
    					4.9717e-12,
    					1.2851e-11,
    					3.2604e-11,
    					8.119e-11,
    					1.9844e-10,
    					4.7608e-10,
    					1.1211e-9,
    					2.5914e-9,
    					5.8798e-9,
    					1.3096e-8,
    					2.8632e-8,
    					6.1453e-8,
    					1.2948e-7,
    					2.6782e-7,
    					5.4386e-7,
    					0.0000010843,
    					0.0000021223,
    					0.0000040787,
    					0.0000076963,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0025,
    					0.0038,
    					0.0057,
    					0.0084,
    					0.0121,
    					0.0172,
    					0.024,
    					0.033,
    					0.0445,
    					0.0591,
    					0.0771,
    					0.0991,
    					0.1254,
    					0.1561,
    					0.1915,
    					0.2313,
    					0.2754,
    					0.3233,
    					0.3743,
    					0.4276,
    					0.4823,
    					0.5373,
    					0.5916,
    					0.6442,
    					0.6941,
    					0.7407,
    					0.7834,
    					0.8217,
    					0.8554,
    					0.8845,
    					0.9092,
    					0.9297,
    					0.9465,
    					0.9599,
    					0.9705,
    					0.9786,
    					0.9848,
    					0.9893,
    					0.9927,
    					0.995,
    					0.9967,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.415,
    				"std.error": 0.5975,
    				statistic: -2.3683,
    				"p.value": 0.0187,
    				"conf.low": -2.5921,
    				"conf.high": -0.2379,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.031e-9,
    					4.4674e-9,
    					9.6618e-9,
    					2.0545e-8,
    					4.2956e-8,
    					8.8308e-8,
    					1.7851e-7,
    					3.5483e-7,
    					6.9354e-7,
    					0.000001333,
    					0.0000025195,
    					0.0000046832,
    					0.000008561,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0022,
    					0.0033,
    					0.0049,
    					0.0071,
    					0.0101,
    					0.0143,
    					0.0198,
    					0.027,
    					0.0364,
    					0.0482,
    					0.0629,
    					0.0809,
    					0.1026,
    					0.1282,
    					0.1579,
    					0.1918,
    					0.2298,
    					0.2717,
    					0.3171,
    					0.3654,
    					0.416,
    					0.468,
    					0.5206,
    					0.5728,
    					0.6237,
    					0.6726,
    					0.7187,
    					0.7614,
    					0.8003,
    					0.8351,
    					0.8657,
    					0.8922,
    					0.9147,
    					0.9334,
    					0.9488,
    					0.9613,
    					0.9711,
    					0.9788,
    					0.9847,
    					0.9891,
    					0.9923,
    					0.9947,
    					0.9964,
    					0.9976,
    					0.9984,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.7585,
    				"std.error": 0.5975,
    				statistic: -2.9432,
    				"p.value": 0.0036,
    				"conf.low": -2.9356,
    				"conf.high": -0.5814,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.1383e-19,
    					5.7287e-19,
    					2.7932e-18,
    					1.3194e-17,
    					6.0378e-17,
    					2.6769e-16,
    					1.1499e-15,
    					4.7853e-15,
    					1.9295e-14,
    					7.5382e-14,
    					2.8535e-13,
    					1.0466e-12,
    					3.7195e-12,
    					1.2809e-11,
    					4.2746e-11,
    					1.3824e-10,
    					4.3321e-10,
    					1.3157e-9,
    					3.8728e-9,
    					1.1048e-8,
    					3.055e-8,
    					8.188e-8,
    					2.1273e-7,
    					5.3577e-7,
    					0.0000013082,
    					0.0000030968,
    					0.000007108,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0018,
    					0.0032,
    					0.0054,
    					0.0089,
    					0.0142,
    					0.0222,
    					0.0335,
    					0.0492,
    					0.0703,
    					0.0977,
    					0.1324,
    					0.1746,
    					0.2245,
    					0.2817,
    					0.3451,
    					0.4131,
    					0.4839,
    					0.5552,
    					0.6248,
    					0.6905,
    					0.7506,
    					0.8039,
    					0.8496,
    					0.8876,
    					0.9182,
    					0.9421,
    					0.9601,
    					0.9732,
    					0.9826,
    					0.989,
    					0.9932,
    					0.9959,
    					0.9976,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.3816,
    				"std.error": 0.8103,
    				statistic: 2.9393,
    				"p.value": 0.0036,
    				"conf.low": 0.7854,
    				"conf.high": 3.9779,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.594e-20,
    					2.5273e-19,
    					1.1112e-18,
    					4.7553e-18,
    					1.9805e-17,
    					8.0282e-17,
    					3.1674e-16,
    					1.2163e-15,
    					4.5458e-15,
    					1.6537e-14,
    					5.8554e-14,
    					2.0181e-13,
    					6.7704e-13,
    					2.2109e-12,
    					7.0282e-12,
    					2.1748e-11,
    					6.5512e-11,
    					1.9211e-10,
    					5.4844e-10,
    					1.5243e-9,
    					4.1245e-9,
    					1.0866e-8,
    					2.7871e-8,
    					6.961e-8,
    					1.6929e-7,
    					4.009e-7,
    					9.2453e-7,
    					0.0000020764,
    					0.0000045418,
    					0.000009676,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0027,
    					0.0045,
    					0.0071,
    					0.0112,
    					0.0171,
    					0.0254,
    					0.037,
    					0.0525,
    					0.0727,
    					0.0985,
    					0.1304,
    					0.1688,
    					0.2139,
    					0.2652,
    					0.3221,
    					0.3836,
    					0.4481,
    					0.5141,
    					0.5796,
    					0.643,
    					0.7027,
    					0.7574,
    					0.8061,
    					0.8483,
    					0.8839,
    					0.9132,
    					0.9365,
    					0.9547,
    					0.9684,
    					0.9785,
    					0.9857,
    					0.9907,
    					0.9941,
    					0.9964,
    					0.9978,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 47,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option1",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.8577,
    				"std.error": 0.3592,
    				statistic: 16.3094,
    				"p.value": 1.3275e-40,
    				"conf.low": 5.1501,
    				"conf.high": 6.5652,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					6.8823e-13,
    					2.3655e-12,
    					7.8953e-12,
    					2.559e-11,
    					8.0546e-11,
    					2.4621e-10,
    					7.3089e-10,
    					2.1073e-9,
    					5.9009e-9,
    					1.6049e-8,
    					4.24e-8,
    					1.0881e-7,
    					2.7123e-7,
    					6.5685e-7,
    					0.0000015454,
    					0.0000035327,
    					0.0000078464,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0017,
    					0.0029,
    					0.0048,
    					0.0078,
    					0.0124,
    					0.0192,
    					0.0289,
    					0.0424,
    					0.0604,
    					0.0841,
    					0.1141,
    					0.151,
    					0.1951,
    					0.2463,
    					0.3039,
    					0.3668,
    					0.4336,
    					0.5023,
    					0.5709,
    					0.6375,
    					0.7001,
    					0.7573,
    					0.808,
    					0.8517,
    					0.8881,
    					0.9177,
    					0.9409,
    					0.9587,
    					0.9718,
    					0.9813,
    					0.9879,
    					0.9924,
    					0.9953,
    					0.9972,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.6563,
    				"std.error": 0.4821,
    				statistic: -1.3612,
    				"p.value": 0.1747,
    				"conf.low": -1.6061,
    				"conf.high": 0.2935,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.9107e-19,
    					1.672e-18,
    					6.9628e-18,
    					2.824e-17,
    					1.1156e-16,
    					4.2927e-16,
    					1.6088e-15,
    					5.8731e-15,
    					2.0883e-14,
    					7.2332e-14,
    					2.4404e-13,
    					8.0202e-13,
    					2.5676e-12,
    					8.0075e-12,
    					2.4327e-11,
    					7.2e-11,
    					2.076e-10,
    					5.8315e-10,
    					1.5959e-9,
    					4.2554e-9,
    					1.1055e-8,
    					2.7984e-8,
    					6.9023e-8,
    					1.6589e-7,
    					3.8854e-7,
    					8.8681e-7,
    					0.0000019726,
    					0.0000042765,
    					0.0000090366,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.004,
    					0.0064,
    					0.01,
    					0.0153,
    					0.0228,
    					0.0331,
    					0.0472,
    					0.0656,
    					0.0891,
    					0.1184,
    					0.154,
    					0.196,
    					0.2442,
    					0.2983,
    					0.3572,
    					0.4197,
    					0.4844,
    					0.5494,
    					0.6132,
    					0.674,
    					0.7305,
    					0.7817,
    					0.8267,
    					0.8653,
    					0.8976,
    					0.9238,
    					0.9446,
    					0.9606,
    					0.9727,
    					0.9815,
    					0.9877,
    					0.9921,
    					0.995,
    					0.9969,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.9553,
    				"std.error": 0.6489,
    				statistic: -1.4721,
    				"p.value": 0.1423,
    				"conf.low": -2.2337,
    				"conf.high": 0.3231,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					8.3858e-22,
    					4.0492e-21,
    					1.9033e-20,
    					8.7084e-20,
    					3.8788e-19,
    					1.6818e-18,
    					7.0988e-18,
    					2.9169e-17,
    					1.1668e-16,
    					4.5436e-16,
    					1.7225e-15,
    					6.3575e-15,
    					2.2844e-14,
    					7.9912e-14,
    					2.7217e-13,
    					9.025e-13,
    					2.9138e-12,
    					9.1593e-12,
    					2.8034e-11,
    					8.3546e-11,
    					2.4244e-10,
    					6.8506e-10,
    					1.885e-9,
    					5.0509e-9,
    					1.318e-8,
    					3.3494e-8,
    					8.2896e-8,
    					1.9982e-7,
    					4.6914e-7,
    					0.0000010729,
    					0.00000239,
    					0.0000051865,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0029,
    					0.0047,
    					0.0076,
    					0.0118,
    					0.0179,
    					0.0265,
    					0.0384,
    					0.0543,
    					0.075,
    					0.1012,
    					0.1335,
    					0.1724,
    					0.2177,
    					0.2693,
    					0.3264,
    					0.3878,
    					0.4522,
    					0.5179,
    					0.5831,
    					0.6461,
    					0.7054,
    					0.7595,
    					0.8078,
    					0.8496,
    					0.8849,
    					0.9138,
    					0.937,
    					0.9549,
    					0.9685,
    					0.9785,
    					0.9857,
    					0.9907,
    					0.9941,
    					0.9964,
    					0.9978,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.9795,
    				"std.error": 0.9037,
    				statistic: 2.1904,
    				"p.value": 0.0295,
    				"conf.low": 0.1992,
    				"conf.high": 3.7599,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					7.1762e-15,
    					2.2677e-14,
    					7.0121e-14,
    					2.1217e-13,
    					6.2822e-13,
    					1.8202e-12,
    					5.1609e-12,
    					1.432e-11,
    					3.8882e-11,
    					1.0332e-10,
    					2.6869e-10,
    					6.8382e-10,
    					1.7033e-9,
    					4.1521e-9,
    					9.9066e-9,
    					2.3134e-8,
    					5.2878e-8,
    					1.183e-7,
    					2.5908e-7,
    					5.5538e-7,
    					0.0000011655,
    					0.0000023943,
    					0.0000048153,
    					0.0000094814,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0026,
    					0.0041,
    					0.0063,
    					0.0095,
    					0.014,
    					0.0202,
    					0.0287,
    					0.0399,
    					0.0545,
    					0.0729,
    					0.0958,
    					0.1235,
    					0.1565,
    					0.1948,
    					0.2383,
    					0.2866,
    					0.3392,
    					0.395,
    					0.4532,
    					0.5123,
    					0.5712,
    					0.6285,
    					0.6831,
    					0.734,
    					0.7804,
    					0.8218,
    					0.8578,
    					0.8886,
    					0.9143,
    					0.9353,
    					0.952,
    					0.9651,
    					0.9751,
    					0.9826,
    					0.9881,
    					0.992,
    					0.9947,
    					0.9966,
    					0.9978,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 48,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option1",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5631,
    				"std.error": 0.4508,
    				statistic: 14.5595,
    				"p.value": 5.6445e-32,
    				"conf.low": 5.6735,
    				"conf.high": 7.4528,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.7755e-13,
    					7.5669e-13,
    					2.0249e-12,
    					5.3183e-12,
    					1.3711e-11,
    					3.4695e-11,
    					8.6176e-11,
    					2.1011e-10,
    					5.0283e-10,
    					1.1813e-9,
    					2.7242e-9,
    					6.167e-9,
    					1.3705e-8,
    					2.99e-8,
    					6.4037e-8,
    					1.3465e-7,
    					2.7795e-7,
    					5.6334e-7,
    					0.000001121,
    					0.0000021901,
    					0.0000042015,
    					0.0000079143,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.001,
    					0.0016,
    					0.0025,
    					0.0039,
    					0.0058,
    					0.0085,
    					0.0122,
    					0.0174,
    					0.0242,
    					0.0332,
    					0.0447,
    					0.0593,
    					0.0774,
    					0.0994,
    					0.1257,
    					0.1565,
    					0.1918,
    					0.2316,
    					0.2757,
    					0.3235,
    					0.3745,
    					0.4277,
    					0.4823,
    					0.5372,
    					0.5914,
    					0.644,
    					0.6939,
    					0.7405,
    					0.7831,
    					0.8213,
    					0.855,
    					0.8842,
    					0.9089,
    					0.9294,
    					0.9462,
    					0.9597,
    					0.9703,
    					0.9785,
    					0.9846,
    					0.9892,
    					0.9926,
    					0.995,
    					0.9967,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.415,
    				"std.error": 0.5983,
    				statistic: -2.3649,
    				"p.value": 0.0191,
    				"conf.low": -2.5959,
    				"conf.high": -0.2341,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.1365e-9,
    					4.6892e-9,
    					1.012e-8,
    					2.1474e-8,
    					4.4806e-8,
    					9.193e-8,
    					1.8547e-7,
    					3.6797e-7,
    					7.1789e-7,
    					0.0000013774,
    					0.0000025988,
    					0.0000048224,
    					0.0000088009,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0022,
    					0.0033,
    					0.0049,
    					0.0071,
    					0.0102,
    					0.0144,
    					0.0199,
    					0.0272,
    					0.0366,
    					0.0484,
    					0.0632,
    					0.0812,
    					0.1029,
    					0.1285,
    					0.1582,
    					0.1921,
    					0.2301,
    					0.272,
    					0.3173,
    					0.3656,
    					0.4161,
    					0.4681,
    					0.5205,
    					0.5727,
    					0.6236,
    					0.6724,
    					0.7184,
    					0.7611,
    					0.8,
    					0.8348,
    					0.8654,
    					0.8919,
    					0.9144,
    					0.9332,
    					0.9486,
    					0.9611,
    					0.9709,
    					0.9786,
    					0.9845,
    					0.989,
    					0.9923,
    					0.9947,
    					0.9964,
    					0.9976,
    					0.9984,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.6608,
    				"std.error": 0.7001,
    				statistic: -2.3724,
    				"p.value": 0.0188,
    				"conf.low": -3.0424,
    				"conf.high": -0.2791,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.634e-15,
    					8.7747e-15,
    					2.8566e-14,
    					9.0884e-14,
    					2.8257e-13,
    					8.586e-13,
    					2.5497e-12,
    					7.3995e-12,
    					2.0988e-11,
    					5.8181e-11,
    					1.5763e-10,
    					4.1744e-10,
    					1.0805e-9,
    					2.7335e-9,
    					6.7595e-9,
    					1.6339e-8,
    					3.8608e-8,
    					8.9176e-8,
    					2.0136e-7,
    					4.4451e-7,
    					9.5931e-7,
    					0.0000020242,
    					0.000004176,
    					0.0000084238,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0028,
    					0.0044,
    					0.0068,
    					0.0103,
    					0.0153,
    					0.0223,
    					0.0317,
    					0.0443,
    					0.0605,
    					0.0811,
    					0.1067,
    					0.1375,
    					0.174,
    					0.216,
    					0.2634,
    					0.3157,
    					0.3719,
    					0.4309,
    					0.4916,
    					0.5524,
    					0.6121,
    					0.6692,
    					0.7226,
    					0.7714,
    					0.815,
    					0.853,
    					0.8854,
    					0.9123,
    					0.9342,
    					0.9517,
    					0.9652,
    					0.9754,
    					0.983,
    					0.9885,
    					0.9924,
    					0.995,
    					0.9968,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.7383,
    				"std.error": 0.9653,
    				statistic: 2.8368,
    				"p.value": 0.0051,
    				"conf.low": 0.8332,
    				"conf.high": 4.6434,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					6.8217e-16,
    					2.0873e-15,
    					6.2661e-15,
    					1.8456e-14,
    					5.3335e-14,
    					1.5123e-13,
    					4.2071e-13,
    					1.1484e-12,
    					3.0758e-12,
    					8.083e-12,
    					2.0843e-11,
    					5.2737e-11,
    					1.3093e-10,
    					3.1898e-10,
    					7.6256e-10,
    					1.7889e-9,
    					4.1181e-9,
    					9.3033e-9,
    					2.0625e-8,
    					4.4874e-8,
    					9.5816e-8,
    					2.0079e-7,
    					4.1296e-7,
    					8.336e-7,
    					0.0000016516,
    					0.0000032119,
    					0.0000061312,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0022,
    					0.0034,
    					0.0052,
    					0.0076,
    					0.0111,
    					0.0159,
    					0.0223,
    					0.0308,
    					0.0418,
    					0.0557,
    					0.0732,
    					0.0945,
    					0.1201,
    					0.1503,
    					0.1851,
    					0.2245,
    					0.2683,
    					0.316,
    					0.367,
    					0.4204,
    					0.4754,
    					0.5308,
    					0.5857,
    					0.6389,
    					0.6895,
    					0.7368,
    					0.7801,
    					0.819,
    					0.8533,
    					0.8829,
    					0.9081,
    					0.9289,
    					0.946,
    					0.9596,
    					0.9703,
    					0.9785,
    					0.9847,
    					0.9893,
    					0.9927,
    					0.9951,
    					0.9967,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 49,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option2",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.56,
    				"std.error": 0.4131,
    				statistic: 15.88,
    				"p.value": 4.4326e-41,
    				"conf.low": 5.7469,
    				"conf.high": 7.3731,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.9011e-15,
    					6.2471e-15,
    					2.0076e-14,
    					6.3099e-14,
    					1.9396e-13,
    					5.8308e-13,
    					1.7144e-12,
    					4.9299e-12,
    					1.3866e-11,
    					3.8143e-11,
    					1.0263e-10,
    					2.7009e-10,
    					6.9527e-10,
    					1.7507e-9,
    					4.312e-9,
    					1.0389e-8,
    					2.4487e-8,
    					5.6459e-8,
    					1.2735e-7,
    					2.8103e-7,
    					6.0673e-7,
    					0.0000012816,
    					0.0000026488,
    					0.0000053568,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0019,
    					0.003,
    					0.0047,
    					0.0072,
    					0.0108,
    					0.0159,
    					0.023,
    					0.0325,
    					0.045,
    					0.0612,
    					0.0816,
    					0.1068,
    					0.1371,
    					0.1728,
    					0.2139,
    					0.2603,
    					0.3113,
    					0.3663,
    					0.4242,
    					0.4837,
    					0.5436,
    					0.6025,
    					0.6592,
    					0.7125,
    					0.7615,
    					0.8055,
    					0.8442,
    					0.8774,
    					0.9054,
    					0.9283,
    					0.9467,
    					0.9611,
    					0.9722,
    					0.9805,
    					0.9866,
    					0.991,
    					0.9941,
    					0.9962,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.3777,
    				"std.error": 0.546,
    				statistic: -2.5235,
    				"p.value": 0.0122,
    				"conf.low": -2.4524,
    				"conf.high": -0.3031,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.8791e-11,
    					1.0028e-10,
    					2.5399e-10,
    					6.3036e-10,
    					1.533e-9,
    					3.6531e-9,
    					8.5305e-9,
    					1.952e-8,
    					4.3773e-8,
    					9.6195e-8,
    					2.0717e-7,
    					4.3727e-7,
    					9.0457e-7,
    					0.000001834,
    					0.0000036447,
    					0.0000070994,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.0029,
    					0.0045,
    					0.0069,
    					0.0102,
    					0.0148,
    					0.0211,
    					0.0295,
    					0.0406,
    					0.0549,
    					0.0729,
    					0.095,
    					0.1218,
    					0.1534,
    					0.1901,
    					0.2317,
    					0.2779,
    					0.3283,
    					0.3819,
    					0.438,
    					0.4953,
    					0.5527,
    					0.609,
    					0.6631,
    					0.7141,
    					0.761,
    					0.8034,
    					0.8409,
    					0.8734,
    					0.9009,
    					0.9238,
    					0.9424,
    					0.9573,
    					0.9688,
    					0.9777,
    					0.9843,
    					0.9892,
    					0.9927,
    					0.9951,
    					0.9968,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.8845,
    				"std.error": 0.5414,
    				statistic: -3.4805,
    				"p.value": 0.0006,
    				"conf.low": -2.9502,
    				"conf.high": -0.8187,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.5382e-22,
    					1.0472e-21,
    					6.8593e-21,
    					4.3223e-20,
    					2.6204e-19,
    					1.5284e-18,
    					8.5771e-18,
    					4.631e-17,
    					2.4058e-16,
    					1.2026e-15,
    					5.784e-15,
    					2.6768e-14,
    					1.1921e-13,
    					5.1087e-13,
    					2.1068e-12,
    					8.3615e-12,
    					3.1937e-11,
    					1.174e-10,
    					4.1539e-10,
    					1.4146e-9,
    					4.6373e-9,
    					1.4634e-8,
    					4.4455e-8,
    					1.3002e-7,
    					3.6615e-7,
    					9.9285e-7,
    					0.0000025926,
    					0.0000065201,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0015,
    					0.0027,
    					0.0049,
    					0.0086,
    					0.0145,
    					0.0235,
    					0.0368,
    					0.0558,
    					0.0817,
    					0.1159,
    					0.1591,
    					0.2117,
    					0.2734,
    					0.3427,
    					0.4179,
    					0.4962,
    					0.5746,
    					0.6502,
    					0.7203,
    					0.7827,
    					0.8362,
    					0.8804,
    					0.9154,
    					0.9421,
    					0.9616,
    					0.9754,
    					0.9848,
    					0.9909,
    					0.9948,
    					0.9971,
    					0.9984,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.6307,
    				"std.error": 0.7359,
    				statistic: 3.5748,
    				"p.value": 0.0004,
    				"conf.low": 1.1822,
    				"conf.high": 4.0792,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.5113e-25,
    					1.6551e-24,
    					1.0555e-23,
    					6.5125e-23,
    					3.8881e-22,
    					2.2461e-21,
    					1.2555e-20,
    					6.7905e-20,
    					3.554e-19,
    					1.7999e-18,
    					8.8205e-18,
    					4.1829e-17,
    					1.9196e-16,
    					8.5248e-16,
    					3.6637e-15,
    					1.5238e-14,
    					6.1334e-14,
    					2.3893e-13,
    					9.008e-13,
    					3.287e-12,
    					1.1609e-11,
    					3.9684e-11,
    					1.3131e-10,
    					4.2057e-10,
    					1.304e-9,
    					3.9138e-9,
    					1.1372e-8,
    					3.1991e-8,
    					8.7132e-8,
    					2.2978e-7,
    					5.8677e-7,
    					0.000001451,
    					0.0000034749,
    					0.0000080597,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0022,
    					0.0038,
    					0.0064,
    					0.0105,
    					0.0168,
    					0.0261,
    					0.0393,
    					0.0574,
    					0.0816,
    					0.1128,
    					0.1517,
    					0.1985,
    					0.2532,
    					0.3149,
    					0.3822,
    					0.4533,
    					0.526,
    					0.5978,
    					0.6664,
    					0.7299,
    					0.7866,
    					0.8358,
    					0.8769,
    					0.9102,
    					0.9363,
    					0.9561,
    					0.9706,
    					0.9809,
    					0.9879,
    					0.9926,
    					0.9956,
    					0.9975,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 50,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option2",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.6671,
    				"std.error": 0.3245,
    				statistic: 17.4619,
    				"p.value": 6.9188e-47,
    				"conf.low": 5.0283,
    				"conf.high": 6.3059,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.0063e-13,
    					8.106e-13,
    					3.1593e-12,
    					1.1878e-11,
    					4.3084e-11,
    					1.5076e-10,
    					5.09e-10,
    					1.658e-9,
    					5.2113e-9,
    					1.5805e-8,
    					4.6257e-8,
    					1.3065e-7,
    					3.5613e-7,
    					9.3699e-7,
    					0.0000023796,
    					0.000005834,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0022,
    					0.0039,
    					0.0068,
    					0.0114,
    					0.0185,
    					0.029,
    					0.0442,
    					0.0652,
    					0.0933,
    					0.1294,
    					0.1741,
    					0.2277,
    					0.2894,
    					0.358,
    					0.4316,
    					0.5076,
    					0.5834,
    					0.6562,
    					0.7236,
    					0.7837,
    					0.8355,
    					0.8785,
    					0.913,
    					0.9395,
    					0.9592,
    					0.9734,
    					0.9832,
    					0.9897,
    					0.9939,
    					0.9965,
    					0.9981,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3424,
    				"std.error": 0.4375,
    				statistic: -0.7827,
    				"p.value": 0.4345,
    				"conf.low": -1.2036,
    				"conf.high": 0.5188,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.1268e-26,
    					3.3886e-25,
    					2.1689e-24,
    					1.3443e-23,
    					8.0692e-23,
    					4.6904e-22,
    					2.6403e-21,
    					1.4394e-20,
    					7.599e-20,
    					3.8853e-19,
    					1.9239e-18,
    					9.2263e-18,
    					4.2852e-17,
    					1.9277e-16,
    					8.3985e-16,
    					3.544e-15,
    					1.4485e-14,
    					5.7343e-14,
    					2.1988e-13,
    					8.1672e-13,
    					2.9385e-12,
    					1.0241e-11,
    					3.4577e-11,
    					1.1309e-10,
    					3.5834e-10,
    					1.1e-9,
    					3.2717e-9,
    					9.4281e-9,
    					2.6325e-8,
    					7.1225e-8,
    					1.8674e-7,
    					4.7447e-7,
    					0.0000011684,
    					0.0000027885,
    					0.000006451,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0017,
    					0.0031,
    					0.0052,
    					0.0086,
    					0.0139,
    					0.0216,
    					0.0328,
    					0.0484,
    					0.0693,
    					0.0967,
    					0.1312,
    					0.1735,
    					0.2235,
    					0.2808,
    					0.3444,
    					0.4128,
    					0.4839,
    					0.5556,
    					0.6254,
    					0.6914,
    					0.7517,
    					0.8051,
    					0.8508,
    					0.8888,
    					0.9193,
    					0.943,
    					0.9608,
    					0.9738,
    					0.983,
    					0.9893,
    					0.9934,
    					0.9961,
    					0.9977,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.6836,
    				"std.error": 0.594,
    				statistic: -1.1509,
    				"p.value": 0.2508,
    				"conf.low": -1.8529,
    				"conf.high": 0.4856,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					8.801e-28,
    					6.234e-27,
    					4.2757e-26,
    					2.8397e-25,
    					1.8262e-24,
    					1.1372e-23,
    					6.8575e-23,
    					4.0043e-22,
    					2.2642e-21,
    					1.2398e-20,
    					6.5743e-20,
    					3.3759e-19,
    					1.6788e-18,
    					8.0846e-18,
    					3.7705e-17,
    					1.703e-16,
    					7.4496e-16,
    					3.156e-15,
    					1.2949e-14,
    					5.1461e-14,
    					1.9807e-13,
    					7.3844e-13,
    					2.6665e-12,
    					9.3269e-12,
    					3.1601e-11,
    					1.0372e-10,
    					3.2975e-10,
    					1.0157e-9,
    					3.0307e-9,
    					8.7616e-9,
    					2.4541e-8,
    					6.6604e-8,
    					1.7516e-7,
    					4.4636e-7,
    					0.0000011023,
    					0.0000026384,
    					0.0000061207,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0017,
    					0.003,
    					0.0051,
    					0.0084,
    					0.0135,
    					0.0212,
    					0.0322,
    					0.0475,
    					0.0682,
    					0.0952,
    					0.1294,
    					0.1713,
    					0.221,
    					0.2781,
    					0.3415,
    					0.4098,
    					0.4809,
    					0.5527,
    					0.6227,
    					0.689,
    					0.7496,
    					0.8033,
    					0.8493,
    					0.8876,
    					0.9183,
    					0.9423,
    					0.9603,
    					0.9735,
    					0.9828,
    					0.9891,
    					0.9933,
    					0.996,
    					0.9977,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.6328,
    				"std.error": 0.8324,
    				statistic: 1.9616,
    				"p.value": 0.0508,
    				"conf.low": -0.0056,
    				"conf.high": 3.2711,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.0416e-15,
    					3.7721e-15,
    					1.3315e-14,
    					4.581e-14,
    					1.5363e-13,
    					5.0221e-13,
    					1.6003e-12,
    					4.9708e-12,
    					1.5051e-11,
    					4.4428e-11,
    					1.2784e-10,
    					3.5863e-10,
    					9.8078e-10,
    					2.615e-9,
    					6.7979e-9,
    					1.7229e-8,
    					4.2578e-8,
    					1.026e-7,
    					2.4106e-7,
    					5.5233e-7,
    					0.0000012341,
    					0.0000026892,
    					0.0000057151,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0028,
    					0.0045,
    					0.0071,
    					0.011,
    					0.0166,
    					0.0245,
    					0.0353,
    					0.0498,
    					0.0687,
    					0.0928,
    					0.1225,
    					0.1583,
    					0.2004,
    					0.2486,
    					0.3024,
    					0.3608,
    					0.4227,
    					0.4866,
    					0.5508,
    					0.6137,
    					0.6737,
    					0.7295,
    					0.7801,
    					0.8248,
    					0.8633,
    					0.8955,
    					0.9219,
    					0.9428,
    					0.9591,
    					0.9714,
    					0.9804,
    					0.9869,
    					0.9915,
    					0.9946,
    					0.9966,
    					0.9979,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 51,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option2",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.56,
    				"std.error": 0.4099,
    				statistic: 16.0049,
    				"p.value": 5.3194e-38,
    				"conf.low": 5.7519,
    				"conf.high": 7.3681,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.1581e-15,
    					3.8767e-15,
    					1.2687e-14,
    					4.059e-14,
    					1.2696e-13,
    					3.8825e-13,
    					1.1608e-12,
    					3.393e-12,
    					9.697e-12,
    					2.7096e-11,
    					7.4029e-11,
    					1.9776e-10,
    					5.1655e-10,
    					1.3193e-9,
    					3.2949e-9,
    					8.0466e-9,
    					1.9216e-8,
    					4.4878e-8,
    					1.0249e-7,
    					2.2893e-7,
    					5.0009e-7,
    					0.0000010684,
    					0.0000022327,
    					0.0000045637,
    					0.0000091247,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0017,
    					0.0028,
    					0.0044,
    					0.0068,
    					0.0103,
    					0.0153,
    					0.0221,
    					0.0314,
    					0.0438,
    					0.0597,
    					0.08,
    					0.105,
    					0.1352,
    					0.1709,
    					0.2121,
    					0.2587,
    					0.31,
    					0.3653,
    					0.4236,
    					0.4836,
    					0.544,
    					0.6033,
    					0.6604,
    					0.714,
    					0.7632,
    					0.8074,
    					0.8461,
    					0.8793,
    					0.9071,
    					0.9298,
    					0.948,
    					0.9623,
    					0.9732,
    					0.9813,
    					0.9872,
    					0.9914,
    					0.9944,
    					0.9964,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.3777,
    				"std.error": 0.5417,
    				statistic: -2.5434,
    				"p.value": 0.0117,
    				"conf.low": -2.4457,
    				"conf.high": -0.3098,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.7564e-11,
    					7.2306e-11,
    					1.8579e-10,
    					4.6761e-10,
    					1.1529e-9,
    					2.7843e-9,
    					6.587e-9,
    					1.5266e-8,
    					3.4659e-8,
    					7.7089e-8,
    					1.6798e-7,
    					3.5862e-7,
    					7.5012e-7,
    					0.0000015373,
    					0.000003087,
    					0.0000060742,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0028,
    					0.0043,
    					0.0065,
    					0.0097,
    					0.0141,
    					0.0203,
    					0.0285,
    					0.0394,
    					0.0535,
    					0.0713,
    					0.0933,
    					0.1199,
    					0.1515,
    					0.1882,
    					0.2299,
    					0.2764,
    					0.327,
    					0.381,
    					0.4375,
    					0.4952,
    					0.5531,
    					0.6098,
    					0.6643,
    					0.7156,
    					0.7628,
    					0.8053,
    					0.8428,
    					0.8752,
    					0.9027,
    					0.9254,
    					0.9438,
    					0.9585,
    					0.9699,
    					0.9785,
    					0.985,
    					0.9897,
    					0.9931,
    					0.9954,
    					0.997,
    					0.9981,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.5765,
    				"std.error": 0.635,
    				statistic: -2.4828,
    				"p.value": 0.0138,
    				"conf.low": -2.8284,
    				"conf.high": -0.3246,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.0243e-18,
    					4.503e-18,
    					1.9249e-17,
    					8.0005e-17,
    					3.2334e-16,
    					1.2707e-15,
    					4.8555e-15,
    					1.8042e-14,
    					6.5189e-14,
    					2.2905e-13,
    					7.8262e-13,
    					2.6004e-12,
    					8.4029e-12,
    					2.6406e-11,
    					8.0705e-11,
    					2.3989e-10,
    					6.935e-10,
    					1.95e-9,
    					5.3331e-9,
    					1.4187e-8,
    					3.6713e-8,
    					9.2416e-8,
    					2.2631e-7,
    					5.3916e-7,
    					0.0000012497,
    					0.0000028184,
    					0.0000061846,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0022,
    					0.0036,
    					0.0059,
    					0.0094,
    					0.0147,
    					0.0222,
    					0.0327,
    					0.0471,
    					0.0662,
    					0.0907,
    					0.1215,
    					0.1589,
    					0.2032,
    					0.2541,
    					0.3109,
    					0.3728,
    					0.438,
    					0.505,
    					0.5719,
    					0.6368,
    					0.6979,
    					0.754,
    					0.8039,
    					0.8471,
    					0.8835,
    					0.9133,
    					0.937,
    					0.9553,
    					0.9691,
    					0.9791,
    					0.9863,
    					0.9912,
    					0.9945,
    					0.9966,
    					0.998,
    					0.9988,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.6681,
    				"std.error": 0.8774,
    				statistic: 3.0408,
    				"p.value": 0.0027,
    				"conf.low": 0.9382,
    				"conf.high": 4.3979,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.5373e-18,
    					5.8591e-18,
    					2.182e-17,
    					7.9408e-17,
    					2.8238e-16,
    					9.8124e-16,
    					3.332e-15,
    					1.1057e-14,
    					3.5853e-14,
    					1.1361e-13,
    					3.5184e-13,
    					1.0648e-12,
    					3.1493e-12,
    					9.1029e-12,
    					2.5715e-11,
    					7.0995e-11,
    					1.9157e-10,
    					5.0522e-10,
    					1.3023e-9,
    					3.2811e-9,
    					8.0801e-9,
    					1.945e-8,
    					4.5767e-8,
    					1.0527e-7,
    					2.3671e-7,
    					5.2033e-7,
    					0.0000011182,
    					0.0000023494,
    					0.0000048264,
    					0.0000096946,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.0031,
    					0.0048,
    					0.0074,
    					0.0112,
    					0.0166,
    					0.024,
    					0.0341,
    					0.0474,
    					0.0645,
    					0.0861,
    					0.1128,
    					0.1448,
    					0.1825,
    					0.2257,
    					0.2743,
    					0.3275,
    					0.3844,
    					0.444,
    					0.5048,
    					0.5655,
    					0.6248,
    					0.6812,
    					0.7337,
    					0.7814,
    					0.8238,
    					0.8606,
    					0.8918,
    					0.9176,
    					0.9385,
    					0.955,
    					0.9677,
    					0.9773,
    					0.9844,
    					0.9895,
    					0.9931,
    					0.9955,
    					0.9972,
    					0.9982,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 52,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option3",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4025,
    				"std.error": 0.3956,
    				statistic: 16.1859,
    				"p.value": 3.0821e-40,
    				"conf.low": 5.6233,
    				"conf.high": 7.1818,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.8211e-15,
    					9.6927e-15,
    					3.2503e-14,
    					1.0638e-13,
    					3.3984e-13,
    					1.0596e-12,
    					3.2249e-12,
    					9.5802e-12,
    					2.778e-11,
    					7.8629e-11,
    					2.1725e-10,
    					5.8595e-10,
    					1.5428e-9,
    					3.9654e-9,
    					9.9502e-9,
    					2.4376e-8,
    					5.8301e-8,
    					1.3614e-7,
    					3.1041e-7,
    					6.9106e-7,
    					0.0000015023,
    					0.0000031891,
    					0.0000066114,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0027,
    					0.0043,
    					0.0067,
    					0.0103,
    					0.0155,
    					0.0227,
    					0.0326,
    					0.0459,
    					0.0631,
    					0.085,
    					0.1121,
    					0.145,
    					0.1838,
    					0.2284,
    					0.2786,
    					0.3336,
    					0.3925,
    					0.4539,
    					0.5165,
    					0.5786,
    					0.6389,
    					0.6958,
    					0.7484,
    					0.7958,
    					0.8374,
    					0.873,
    					0.9028,
    					0.9271,
    					0.9465,
    					0.9615,
    					0.9729,
    					0.9814,
    					0.9875,
    					0.9917,
    					0.9947,
    					0.9966,
    					0.9979,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1452,
    				"std.error": 0.5739,
    				statistic: -1.9953,
    				"p.value": 0.0472,
    				"conf.low": -2.2758,
    				"conf.high": -0.0145,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.1521e-11,
    					5.3772e-11,
    					1.319e-10,
    					3.1763e-10,
    					7.5093e-10,
    					1.743e-9,
    					3.972e-9,
    					8.8868e-9,
    					1.9522e-8,
    					4.2106e-8,
    					8.9171e-8,
    					1.8543e-7,
    					3.7861e-7,
    					7.5912e-7,
    					0.0000014946,
    					0.0000028898,
    					0.0000054869,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0019,
    					0.003,
    					0.0045,
    					0.0067,
    					0.0097,
    					0.0139,
    					0.0195,
    					0.027,
    					0.0368,
    					0.0493,
    					0.0649,
    					0.0842,
    					0.1075,
    					0.1351,
    					0.1671,
    					0.2038,
    					0.2448,
    					0.2899,
    					0.3385,
    					0.39,
    					0.4436,
    					0.4981,
    					0.5527,
    					0.6064,
    					0.658,
    					0.7069,
    					0.7523,
    					0.7936,
    					0.8305,
    					0.8629,
    					0.8908,
    					0.9143,
    					0.9339,
    					0.9497,
    					0.9624,
    					0.9724,
    					0.98,
    					0.9858,
    					0.9901,
    					0.9932,
    					0.9954,
    					0.9969,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.3176,
    				"std.error": 0.5594,
    				statistic: -2.3554,
    				"p.value": 0.0193,
    				"conf.low": -2.4196,
    				"conf.high": -0.2156,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.241e-25,
    					9.08e-25,
    					6.4071e-24,
    					4.3599e-23,
    					2.8612e-22,
    					1.8108e-21,
    					1.1052e-20,
    					6.5058e-20,
    					3.6934e-19,
    					2.0223e-18,
    					1.0679e-17,
    					5.4392e-17,
    					2.672e-16,
    					1.2661e-15,
    					5.7865e-15,
    					2.5509e-14,
    					1.0848e-13,
    					4.4497e-13,
    					1.7608e-12,
    					6.7215e-12,
    					2.4753e-11,
    					8.7945e-11,
    					3.0146e-10,
    					9.9703e-10,
    					3.1817e-9,
    					9.7974e-9,
    					2.9113e-8,
    					8.3484e-8,
    					2.3105e-7,
    					6.1717e-7,
    					0.0000015913,
    					0.0000039607,
    					0.0000095175,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0017,
    					0.003,
    					0.0053,
    					0.0091,
    					0.015,
    					0.0239,
    					0.0369,
    					0.0552,
    					0.08,
    					0.1124,
    					0.1533,
    					0.2029,
    					0.2611,
    					0.3269,
    					0.3986,
    					0.4738,
    					0.55,
    					0.6244,
    					0.6944,
    					0.758,
    					0.8136,
    					0.8605,
    					0.8987,
    					0.9286,
    					0.9512,
    					0.9677,
    					0.9793,
    					0.9872,
    					0.9923,
    					0.9955,
    					0.9975,
    					0.9986,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.823,
    				"std.error": 0.8081,
    				statistic: 2.256,
    				"p.value": 0.025,
    				"conf.low": 0.2311,
    				"conf.high": 3.4148,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.0454e-17,
    					8.3178e-17,
    					3.2916e-16,
    					1.2676e-15,
    					4.7507e-15,
    					1.7327e-14,
    					6.1502e-14,
    					2.1246e-13,
    					7.1429e-13,
    					2.3373e-12,
    					7.4434e-12,
    					2.3072e-11,
    					6.9609e-11,
    					2.0441e-10,
    					5.843e-10,
    					1.6258e-9,
    					4.4034e-9,
    					1.161e-8,
    					2.9802e-8,
    					7.4472e-8,
    					1.8118e-7,
    					4.2918e-7,
    					9.8987e-7,
    					0.0000022231,
    					0.0000048619,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0029,
    					0.0047,
    					0.0076,
    					0.0118,
    					0.018,
    					0.0267,
    					0.0388,
    					0.0549,
    					0.0759,
    					0.1026,
    					0.1355,
    					0.175,
    					0.2211,
    					0.2735,
    					0.3313,
    					0.3936,
    					0.4586,
    					0.5248,
    					0.5903,
    					0.6534,
    					0.7125,
    					0.7663,
    					0.814,
    					0.8552,
    					0.8897,
    					0.9179,
    					0.9403,
    					0.9576,
    					0.9706,
    					0.9801,
    					0.9869,
    					0.9915,
    					0.9947,
    					0.9967,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 53,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option3",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.8928,
    				"std.error": 0.3276,
    				statistic: 17.9864,
    				"p.value": 2.955e-46,
    				"conf.low": 5.2474,
    				"conf.high": 6.5382,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.6941e-15,
    					7.5858e-15,
    					3.2785e-14,
    					1.3677e-13,
    					5.5074e-13,
    					2.1408e-12,
    					8.0327e-12,
    					2.9097e-11,
    					1.0175e-10,
    					3.4351e-10,
    					1.1197e-9,
    					3.5237e-9,
    					1.0708e-8,
    					3.1419e-8,
    					8.9025e-8,
    					2.4361e-7,
    					6.4383e-7,
    					0.0000016435,
    					0.0000040525,
    					0.0000096533,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0009,
    					0.0016,
    					0.0029,
    					0.0051,
    					0.0087,
    					0.0144,
    					0.0229,
    					0.0353,
    					0.0528,
    					0.0766,
    					0.1077,
    					0.1471,
    					0.195,
    					0.2515,
    					0.3155,
    					0.3857,
    					0.4598,
    					0.5353,
    					0.6096,
    					0.6801,
    					0.7446,
    					0.8016,
    					0.8501,
    					0.89,
    					0.9216,
    					0.9458,
    					0.9637,
    					0.9764,
    					0.9852,
    					0.991,
    					0.9947,
    					0.997,
    					0.9983,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.6437,
    				"std.error": 0.4713,
    				statistic: -1.366,
    				"p.value": 0.1732,
    				"conf.low": -1.5721,
    				"conf.high": 0.2846,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.7715e-20,
    					2.1913e-19,
    					9.7891e-19,
    					4.254e-18,
    					1.7983e-17,
    					7.3955e-17,
    					2.9586e-16,
    					1.1515e-15,
    					4.3595e-15,
    					1.6058e-14,
    					5.7541e-14,
    					2.006e-13,
    					6.8041e-13,
    					2.2453e-12,
    					7.2091e-12,
    					2.2521e-11,
    					6.8453e-11,
    					2.0245e-10,
    					5.8262e-10,
    					1.6315e-9,
    					4.446e-9,
    					1.179e-8,
    					3.0428e-8,
    					7.6423e-8,
    					1.8681e-7,
    					4.4446e-7,
    					0.0000010293,
    					0.0000023203,
    					0.0000050917,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0018,
    					0.0031,
    					0.005,
    					0.008,
    					0.0125,
    					0.0191,
    					0.0283,
    					0.0411,
    					0.0581,
    					0.0801,
    					0.108,
    					0.1424,
    					0.1834,
    					0.231,
    					0.2849,
    					0.3442,
    					0.4075,
    					0.4734,
    					0.54,
    					0.6055,
    					0.6681,
    					0.7264,
    					0.7791,
    					0.8254,
    					0.8651,
    					0.8981,
    					0.9247,
    					0.9457,
    					0.9618,
    					0.9738,
    					0.9824,
    					0.9885,
    					0.9927,
    					0.9954,
    					0.9972,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.5692,
    				"std.error": 0.6402,
    				statistic: -0.8891,
    				"p.value": 0.3749,
    				"conf.low": -1.8303,
    				"conf.high": 0.692,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.5119e-25,
    					3.0701e-24,
    					1.6633e-23,
    					8.7653e-23,
    					4.493e-22,
    					2.2402e-21,
    					1.0864e-20,
    					5.1254e-20,
    					2.352e-19,
    					1.0499e-18,
    					4.5587e-18,
    					1.9256e-17,
    					7.912e-17,
    					3.1625e-16,
    					1.2297e-15,
    					4.6517e-15,
    					1.7118e-14,
    					6.1285e-14,
    					2.1345e-13,
    					7.2328e-13,
    					2.3845e-12,
    					7.6481e-12,
    					2.3868e-11,
    					7.2472e-11,
    					2.1411e-10,
    					6.1552e-10,
    					1.7218e-9,
    					4.6868e-9,
    					1.2415e-8,
    					3.2002e-8,
    					8.0285e-8,
    					1.9602e-7,
    					4.6583e-7,
    					0.0000010775,
    					0.0000024259,
    					0.0000053169,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0032,
    					0.0052,
    					0.0083,
    					0.0129,
    					0.0196,
    					0.029,
    					0.042,
    					0.0593,
    					0.0817,
    					0.11,
    					0.1447,
    					0.1862,
    					0.2343,
    					0.2886,
    					0.3481,
    					0.4117,
    					0.4777,
    					0.5443,
    					0.6097,
    					0.6721,
    					0.7301,
    					0.7824,
    					0.8283,
    					0.8675,
    					0.9001,
    					0.9263,
    					0.947,
    					0.9628,
    					0.9745,
    					0.9829,
    					0.9889,
    					0.9929,
    					0.9956,
    					0.9973,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.6304,
    				"std.error": 0.9321,
    				statistic: 1.7492,
    				"p.value": 0.0815,
    				"conf.low": -0.2058,
    				"conf.high": 3.4666,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					6.9755e-13,
    					1.9533e-12,
    					5.3597e-12,
    					1.441e-11,
    					3.7963e-11,
    					9.8003e-11,
    					2.4792e-10,
    					6.1456e-10,
    					1.4929e-9,
    					3.5539e-9,
    					8.2909e-9,
    					1.8955e-8,
    					4.2472e-8,
    					9.3268e-8,
    					2.0074e-7,
    					4.2345e-7,
    					8.7552e-7,
    					0.0000017744,
    					0.0000035249,
    					0.0000068643,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0029,
    					0.0044,
    					0.0066,
    					0.0099,
    					0.0143,
    					0.0205,
    					0.0287,
    					0.0396,
    					0.0535,
    					0.0711,
    					0.0928,
    					0.1191,
    					0.1502,
    					0.1863,
    					0.2273,
    					0.273,
    					0.3229,
    					0.3762,
    					0.4319,
    					0.489,
    					0.5464,
    					0.6028,
    					0.6571,
    					0.7083,
    					0.7557,
    					0.7986,
    					0.8366,
    					0.8696,
    					0.8977,
    					0.9211,
    					0.9402,
    					0.9555,
    					0.9675,
    					0.9766,
    					0.9835,
    					0.9886,
    					0.9923,
    					0.9948,
    					0.9966,
    					0.9978,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 54,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option3",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4025,
    				"std.error": 0.4004,
    				statistic: 15.9909,
    				"p.value": 2.9244e-36,
    				"conf.low": 5.6124,
    				"conf.high": 7.1927,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.9286e-15,
    					1.9785e-14,
    					6.4481e-14,
    					2.0523e-13,
    					6.3794e-13,
    					1.9366e-12,
    					5.7418e-12,
    					1.6626e-11,
    					4.7021e-11,
    					1.2989e-10,
    					3.5043e-10,
    					9.2346e-10,
    					2.377e-9,
    					5.9765e-9,
    					1.4679e-8,
    					3.5217e-8,
    					8.254e-8,
    					1.8899e-7,
    					4.2275e-7,
    					9.2391e-7,
    					0.0000019728,
    					0.000004116,
    					0.0000083912,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0018,
    					0.003,
    					0.0047,
    					0.0073,
    					0.0111,
    					0.0165,
    					0.0241,
    					0.0343,
    					0.0479,
    					0.0654,
    					0.0876,
    					0.115,
    					0.1479,
    					0.1867,
    					0.2312,
    					0.281,
    					0.3355,
    					0.3938,
    					0.4545,
    					0.5163,
    					0.5777,
    					0.6373,
    					0.6937,
    					0.7458,
    					0.7929,
    					0.8344,
    					0.8701,
    					0.9001,
    					0.9247,
    					0.9444,
    					0.9597,
    					0.9715,
    					0.9802,
    					0.9866,
    					0.9911,
    					0.9942,
    					0.9963,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1452,
    				"std.error": 0.5809,
    				statistic: -1.9712,
    				"p.value": 0.0502,
    				"conf.low": -2.2916,
    				"conf.high": 0.0013,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.6647e-11,
    					8.962e-11,
    					2.1526e-10,
    					5.078e-10,
    					1.1766e-9,
    					2.6779e-9,
    					5.9862e-9,
    					1.3144e-8,
    					2.835e-8,
    					6.0065e-8,
    					1.2501e-7,
    					2.5557e-7,
    					5.1328e-7,
    					0.0000010127,
    					0.000001963,
    					0.0000037381,
    					0.0000069939,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0022,
    					0.0033,
    					0.0049,
    					0.0072,
    					0.0104,
    					0.0148,
    					0.0207,
    					0.0285,
    					0.0386,
    					0.0513,
    					0.0673,
    					0.0868,
    					0.1103,
    					0.138,
    					0.1701,
    					0.2066,
    					0.2474,
    					0.2922,
    					0.3404,
    					0.3913,
    					0.4442,
    					0.4981,
    					0.5521,
    					0.6051,
    					0.6562,
    					0.7046,
    					0.7496,
    					0.7907,
    					0.8276,
    					0.86,
    					0.888,
    					0.9117,
    					0.9315,
    					0.9477,
    					0.9606,
    					0.9709,
    					0.9788,
    					0.9848,
    					0.9893,
    					0.9926,
    					0.9949,
    					0.9966,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.0789,
    				"std.error": 0.6829,
    				statistic: -1.5799,
    				"p.value": 0.1159,
    				"conf.low": -2.4265,
    				"conf.high": 0.2687,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.6972e-19,
    					1.4925e-18,
    					5.8803e-18,
    					2.2613e-17,
    					8.4874e-17,
    					3.1093e-16,
    					1.1118e-15,
    					3.8805e-15,
    					1.322e-14,
    					4.396e-14,
    					1.4269e-13,
    					4.521e-13,
    					1.3983e-12,
    					4.2216e-12,
    					1.2442e-11,
    					3.5796e-11,
    					1.0054e-10,
    					2.7567e-10,
    					7.3792e-10,
    					1.9285e-9,
    					4.9204e-9,
    					1.2258e-8,
    					2.9814e-8,
    					7.0805e-8,
    					1.6419e-7,
    					3.7181e-7,
    					8.2216e-7,
    					0.0000017754,
    					0.0000037442,
    					0.000007712,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0018,
    					0.0029,
    					0.0047,
    					0.0073,
    					0.0112,
    					0.0167,
    					0.0244,
    					0.0348,
    					0.0487,
    					0.0667,
    					0.0895,
    					0.1176,
    					0.1514,
    					0.1911,
    					0.2367,
    					0.2877,
    					0.3433,
    					0.4026,
    					0.4642,
    					0.5267,
    					0.5885,
    					0.6482,
    					0.7044,
    					0.7562,
    					0.8026,
    					0.8432,
    					0.8778,
    					0.9068,
    					0.9303,
    					0.9489,
    					0.9634,
    					0.9743,
    					0.9824,
    					0.9881,
    					0.9922,
    					0.995,
    					0.9969,
    					0.9981,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.1319,
    				"std.error": 0.9959,
    				statistic: 2.1407,
    				"p.value": 0.0337,
    				"conf.low": 0.1666,
    				"conf.high": 4.0972,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.8674e-13,
    					1.2852e-12,
    					3.3335e-12,
    					8.4934e-12,
    					2.1258e-11,
    					5.227e-11,
    					1.2625e-10,
    					2.9958e-10,
    					6.9836e-10,
    					1.5993e-9,
    					3.5984e-9,
    					7.9538e-9,
    					1.7273e-8,
    					3.6854e-8,
    					7.7258e-8,
    					1.5913e-7,
    					3.2204e-7,
    					6.4039e-7,
    					0.0000012513,
    					0.0000024025,
    					0.0000045329,
    					0.0000084045,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0024,
    					0.0036,
    					0.0054,
    					0.0078,
    					0.0113,
    					0.0159,
    					0.0221,
    					0.0302,
    					0.0407,
    					0.054,
    					0.0704,
    					0.0904,
    					0.1144,
    					0.1426,
    					0.1752,
    					0.2122,
    					0.2533,
    					0.2983,
    					0.3466,
    					0.3975,
    					0.4503,
    					0.5039,
    					0.5575,
    					0.61,
    					0.6606,
    					0.7085,
    					0.753,
    					0.7935,
    					0.8298,
    					0.8617,
    					0.8893,
    					0.9127,
    					0.9322,
    					0.9482,
    					0.961,
    					0.9711,
    					0.9789,
    					0.9849,
    					0.9893,
    					0.9926,
    					0.9949,
    					0.9966,
    					0.9977,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 55,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option4",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.6984,
    				"std.error": 0.4696,
    				statistic: 14.2641,
    				"p.value": 8.1244e-38,
    				"conf.low": 5.7753,
    				"conf.high": 7.6215,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.7946e-13,
    					7.3205e-13,
    					1.885e-12,
    					4.7709e-12,
    					1.187e-11,
    					2.9029e-11,
    					6.9789e-11,
    					1.6493e-10,
    					3.8315e-10,
    					8.7502e-10,
    					1.9645e-9,
    					4.3357e-9,
    					9.4074e-9,
    					2.0067e-8,
    					4.2083e-8,
    					8.6766e-8,
    					1.7588e-7,
    					3.5054e-7,
    					6.8691e-7,
    					0.0000013235,
    					0.0000025074,
    					0.000004671,
    					0.0000085565,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0022,
    					0.0033,
    					0.0049,
    					0.0072,
    					0.0103,
    					0.0145,
    					0.0202,
    					0.0275,
    					0.0371,
    					0.0491,
    					0.0641,
    					0.0824,
    					0.1044,
    					0.1304,
    					0.1606,
    					0.195,
    					0.2335,
    					0.2759,
    					0.3217,
    					0.3705,
    					0.4214,
    					0.4737,
    					0.5264,
    					0.5787,
    					0.6296,
    					0.6784,
    					0.7242,
    					0.7666,
    					0.8051,
    					0.8395,
    					0.8696,
    					0.8956,
    					0.9176,
    					0.9359,
    					0.9509,
    					0.963,
    					0.9725,
    					0.9799,
    					0.9855,
    					0.9897,
    					0.9928,
    					0.9951,
    					0.9967,
    					0.9978,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.9257,
    				"std.error": 0.5323,
    				statistic: -1.7391,
    				"p.value": 0.0828,
    				"conf.low": -1.972,
    				"conf.high": 0.1206,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.7024e-14,
    					8.2951e-14,
    					2.4919e-13,
    					7.3266e-13,
    					2.1083e-12,
    					5.9376e-12,
    					1.6367e-11,
    					4.4158e-11,
    					1.1661e-10,
    					3.014e-10,
    					7.6253e-10,
    					1.8884e-9,
    					4.5776e-9,
    					1.0862e-8,
    					2.5232e-8,
    					5.7376e-8,
    					1.2773e-7,
    					2.7837e-7,
    					5.9395e-7,
    					0.0000012408,
    					0.0000025378,
    					0.0000050826,
    					0.0000099672,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0027,
    					0.0042,
    					0.0064,
    					0.0096,
    					0.0141,
    					0.0204,
    					0.0289,
    					0.0401,
    					0.0546,
    					0.073,
    					0.0959,
    					0.1235,
    					0.1564,
    					0.1945,
    					0.2378,
    					0.2859,
    					0.3382,
    					0.3938,
    					0.4517,
    					0.5106,
    					0.5693,
    					0.6265,
    					0.681,
    					0.7319,
    					0.7783,
    					0.8198,
    					0.856,
    					0.887,
    					0.9129,
    					0.934,
    					0.951,
    					0.9643,
    					0.9744,
    					0.9821,
    					0.9877,
    					0.9917,
    					0.9945,
    					0.9964,
    					0.9977,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.7466,
    				"std.error": 0.6268,
    				statistic: -2.7863,
    				"p.value": 0.0056,
    				"conf.low": -2.9787,
    				"conf.high": -0.5144,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.0942e-18,
    					1.7864e-17,
    					7.5733e-17,
    					3.1196e-16,
    					1.2486e-15,
    					4.8557e-15,
    					1.8349e-14,
    					6.7378e-14,
    					2.4041e-13,
    					8.3357e-13,
    					2.8086e-12,
    					9.1962e-12,
    					2.9262e-11,
    					9.0491e-11,
    					2.7196e-10,
    					7.9436e-10,
    					2.2551e-9,
    					6.2225e-9,
    					1.6689e-8,
    					4.3509e-8,
    					1.1026e-7,
    					2.7164e-7,
    					6.506e-7,
    					0.0000015149,
    					0.0000034299,
    					0.0000075507,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0026,
    					0.0044,
    					0.0072,
    					0.0114,
    					0.0176,
    					0.0264,
    					0.0388,
    					0.0554,
    					0.0773,
    					0.1051,
    					0.1396,
    					0.181,
    					0.2295,
    					0.2844,
    					0.3449,
    					0.4097,
    					0.4771,
    					0.5451,
    					0.6118,
    					0.6754,
    					0.7342,
    					0.7871,
    					0.8333,
    					0.8724,
    					0.9047,
    					0.9305,
    					0.9506,
    					0.9657,
    					0.9768,
    					0.9847,
    					0.9902,
    					0.9939,
    					0.9963,
    					0.9978,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.6287,
    				"std.error": 0.7157,
    				statistic: 2.2758,
    				"p.value": 0.0234,
    				"conf.low": 0.2219,
    				"conf.high": 3.0354,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.4226e-20,
    					8.0467e-20,
    					4.396e-19,
    					2.3195e-18,
    					1.1821e-17,
    					5.8186e-17,
    					2.7664e-16,
    					1.2704e-15,
    					5.6352e-15,
    					2.4145e-14,
    					9.9934e-14,
    					3.9955e-13,
    					1.5432e-12,
    					5.758e-12,
    					2.0755e-11,
    					7.2281e-11,
    					2.432e-10,
    					7.9062e-10,
    					2.4834e-9,
    					7.5377e-9,
    					2.2108e-8,
    					6.2663e-8,
    					1.7165e-7,
    					4.5445e-7,
    					0.000001163,
    					0.0000028768,
    					0.0000068795,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0022,
    					0.0039,
    					0.0067,
    					0.0112,
    					0.018,
    					0.0281,
    					0.0426,
    					0.0625,
    					0.0891,
    					0.1233,
    					0.1657,
    					0.2166,
    					0.2755,
    					0.3414,
    					0.4125,
    					0.4867,
    					0.5613,
    					0.6337,
    					0.7017,
    					0.7633,
    					0.8171,
    					0.8626,
    					0.8997,
    					0.9288,
    					0.951,
    					0.9673,
    					0.9788,
    					0.9867,
    					0.9919,
    					0.9952,
    					0.9973,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 56,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option4",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.9861,
    				"std.error": 0.3724,
    				statistic: 16.0758,
    				"p.value": 1.6496e-45,
    				"conf.low": 5.2541,
    				"conf.high": 6.7181,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.4877e-13,
    					1.1657e-12,
    					3.7911e-12,
    					1.1997e-11,
    					3.6945e-11,
    					1.1071e-10,
    					3.2284e-10,
    					9.1617e-10,
    					2.5303e-9,
    					6.801e-9,
    					1.7791e-8,
    					4.5299e-8,
    					1.1226e-7,
    					2.7081e-7,
    					6.359e-7,
    					0.0000014536,
    					0.0000032349,
    					0.000007009,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0022,
    					0.0037,
    					0.0061,
    					0.0096,
    					0.0148,
    					0.0223,
    					0.0328,
    					0.0471,
    					0.0659,
    					0.0901,
    					0.1203,
    					0.157,
    					0.2005,
    					0.2505,
    					0.3064,
    					0.3672,
    					0.4315,
    					0.4977,
    					0.564,
    					0.6286,
    					0.6897,
    					0.7459,
    					0.7963,
    					0.8402,
    					0.8774,
    					0.9081,
    					0.9327,
    					0.9518,
    					0.9663,
    					0.9771,
    					0.9847,
    					0.9901,
    					0.9937,
    					0.9961,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.4291,
    				"std.error": 0.4225,
    				statistic: -1.0155,
    				"p.value": 0.3104,
    				"conf.low": -1.2596,
    				"conf.high": 0.4015,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					8.6315e-27,
    					6.2884e-26,
    					4.4262e-25,
    					3.0099e-24,
    					1.9775e-23,
    					1.2552e-22,
    					7.6983e-22,
    					4.5616e-21,
    					2.6116e-20,
    					1.4446e-19,
    					7.7214e-19,
    					3.9876e-18,
    					1.9899e-17,
    					9.5947e-17,
    					4.4704e-16,
    					2.0127e-15,
    					8.7565e-15,
    					3.6815e-14,
    					1.4958e-13,
    					5.873e-13,
    					2.2286e-12,
    					8.173e-12,
    					2.8969e-11,
    					9.924e-11,
    					3.2861e-10,
    					1.0517e-9,
    					3.254e-9,
    					9.7319e-9,
    					2.8138e-8,
    					7.8654e-8,
    					2.1257e-7,
    					5.5549e-7,
    					0.0000014037,
    					0.0000034301,
    					0.0000081065,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0024,
    					0.0042,
    					0.0072,
    					0.0119,
    					0.019,
    					0.0295,
    					0.0445,
    					0.0649,
    					0.092,
    					0.1268,
    					0.1697,
    					0.221,
    					0.2801,
    					0.346,
    					0.417,
    					0.4908,
    					0.5649,
    					0.6368,
    					0.7041,
    					0.7651,
    					0.8184,
    					0.8634,
    					0.9001,
    					0.929,
    					0.951,
    					0.9672,
    					0.9787,
    					0.9866,
    					0.9918,
    					0.9952,
    					0.9972,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.9054,
    				"std.error": 0.6845,
    				statistic: -1.3227,
    				"p.value": 0.1867,
    				"conf.low": -2.251,
    				"conf.high": 0.4402,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.4616e-20,
    					1.8609e-19,
    					7.576e-19,
    					3.0107e-18,
    					1.1679e-17,
    					4.4225e-17,
    					1.6347e-16,
    					5.8985e-16,
    					2.0776e-15,
    					7.1438e-15,
    					2.3979e-14,
    					7.8575e-14,
    					2.5135e-13,
    					7.8496e-13,
    					2.3932e-12,
    					7.1234e-12,
    					2.07e-11,
    					5.873e-11,
    					1.6268e-10,
    					4.3999e-10,
    					1.1619e-9,
    					2.9958e-9,
    					7.5425e-9,
    					1.8543e-8,
    					4.4515e-8,
    					1.0436e-7,
    					2.3892e-7,
    					5.3419e-7,
    					0.0000011665,
    					0.0000024878,
    					0.0000051825,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0022,
    					0.0036,
    					0.0057,
    					0.0087,
    					0.0132,
    					0.0195,
    					0.0283,
    					0.04,
    					0.0554,
    					0.0752,
    					0.1,
    					0.1303,
    					0.1664,
    					0.2083,
    					0.2559,
    					0.3087,
    					0.3658,
    					0.426,
    					0.4879,
    					0.5502,
    					0.6112,
    					0.6696,
    					0.7242,
    					0.7739,
    					0.8181,
    					0.8564,
    					0.8889,
    					0.9158,
    					0.9374,
    					0.9545,
    					0.9676,
    					0.9774,
    					0.9846,
    					0.9897,
    					0.9933,
    					0.9957,
    					0.9973,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5257,
    				"std.error": 0.7934,
    				statistic: 1.923,
    				"p.value": 0.0552,
    				"conf.low": -0.0339,
    				"conf.high": 3.0854,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.2987e-16,
    					5.2232e-16,
    					2.0422e-15,
    					7.763e-15,
    					2.8689e-14,
    					1.0308e-13,
    					3.6008e-13,
    					1.2229e-12,
    					4.0385e-12,
    					1.2967e-11,
    					4.0482e-11,
    					1.2289e-10,
    					3.6276e-10,
    					1.0413e-9,
    					2.9066e-9,
    					7.8902e-9,
    					2.083e-8,
    					5.3482e-8,
    					1.3355e-7,
    					3.2439e-7,
    					7.664e-7,
    					0.0000017613,
    					0.0000039379,
    					0.0000085652,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0027,
    					0.0046,
    					0.0074,
    					0.0116,
    					0.0179,
    					0.0268,
    					0.0391,
    					0.0557,
    					0.0773,
    					0.1049,
    					0.139,
    					0.1799,
    					0.2277,
    					0.2819,
    					0.3416,
    					0.4056,
    					0.4722,
    					0.5397,
    					0.6059,
    					0.6693,
    					0.7281,
    					0.7812,
    					0.8278,
    					0.8675,
    					0.9004,
    					0.9269,
    					0.9476,
    					0.9634,
    					0.975,
    					0.9834,
    					0.9892,
    					0.9932,
    					0.9958,
    					0.9975,
    					0.9985,
    					0.9992,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 57,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option4",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.6984,
    				"std.error": 0.4632,
    				statistic: 14.4612,
    				"p.value": 2.822e-36,
    				"conf.low": 5.7868,
    				"conf.high": 7.6099,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.338e-13,
    					3.5983e-13,
    					9.5077e-13,
    					2.4682e-12,
    					6.2954e-12,
    					1.5776e-11,
    					3.8844e-11,
    					9.3971e-11,
    					2.2337e-10,
    					5.2169e-10,
    					1.1972e-9,
    					2.6996e-9,
    					5.9816e-9,
    					1.3024e-8,
    					2.7864e-8,
    					5.8581e-8,
    					1.2103e-7,
    					2.4573e-7,
    					4.9031e-7,
    					9.6146e-7,
    					0.0000018529,
    					0.0000035096,
    					0.0000065335,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.002,
    					0.003,
    					0.0045,
    					0.0065,
    					0.0095,
    					0.0135,
    					0.0188,
    					0.0259,
    					0.0351,
    					0.0468,
    					0.0615,
    					0.0795,
    					0.1013,
    					0.1272,
    					0.1573,
    					0.1917,
    					0.2304,
    					0.2731,
    					0.3194,
    					0.3687,
    					0.4203,
    					0.4733,
    					0.5268,
    					0.5798,
    					0.6314,
    					0.6807,
    					0.727,
    					0.7697,
    					0.8084,
    					0.8428,
    					0.8729,
    					0.8987,
    					0.9205,
    					0.9385,
    					0.9532,
    					0.9649,
    					0.9741,
    					0.9812,
    					0.9866,
    					0.9905,
    					0.9935,
    					0.9955,
    					0.997,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.9257,
    				"std.error": 0.525,
    				statistic: -1.7631,
    				"p.value": 0.0789,
    				"conf.low": -1.9589,
    				"conf.high": 0.1076,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.2137e-14,
    					3.8417e-14,
    					1.1893e-13,
    					3.6014e-13,
    					1.0667e-12,
    					3.0902e-12,
    					8.757e-12,
    					2.4273e-11,
    					6.5816e-11,
    					1.7457e-10,
    					4.5292e-10,
    					1.1496e-9,
    					2.8544e-9,
    					6.9336e-9,
    					1.6477e-8,
    					3.8308e-8,
    					8.7139e-8,
    					1.9393e-7,
    					4.223e-7,
    					8.998e-7,
    					0.000001876,
    					0.0000038275,
    					0.0000076417,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0024,
    					0.0037,
    					0.0058,
    					0.0088,
    					0.0131,
    					0.019,
    					0.0272,
    					0.0381,
    					0.0522,
    					0.0703,
    					0.0928,
    					0.1203,
    					0.153,
    					0.1912,
    					0.2347,
    					0.2832,
    					0.3361,
    					0.3924,
    					0.451,
    					0.5107,
    					0.5702,
    					0.6282,
    					0.6833,
    					0.7347,
    					0.7815,
    					0.8231,
    					0.8593,
    					0.8901,
    					0.9158,
    					0.9367,
    					0.9533,
    					0.9662,
    					0.976,
    					0.9833,
    					0.9886,
    					0.9924,
    					0.995,
    					0.9968,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.6177,
    				"std.error": 0.7298,
    				statistic: -2.2165,
    				"p.value": 0.0274,
    				"conf.low": -3.054,
    				"conf.high": -0.1814,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.0129e-14,
    					6.1517e-14,
    					1.8407e-13,
    					5.3923e-13,
    					1.5466e-12,
    					4.3434e-12,
    					1.1943e-11,
    					3.2153e-11,
    					8.4761e-11,
    					2.1879e-10,
    					5.5298e-10,
    					1.3686e-9,
    					3.3168e-9,
    					7.8715e-9,
    					1.8294e-8,
    					4.1635e-8,
    					9.28e-8,
    					2.0257e-7,
    					4.3307e-7,
    					9.068e-7,
    					0.0000018597,
    					0.0000037358,
    					0.000007351,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0033,
    					0.005,
    					0.0076,
    					0.0113,
    					0.0165,
    					0.0235,
    					0.0329,
    					0.0452,
    					0.061,
    					0.0808,
    					0.1052,
    					0.1344,
    					0.1687,
    					0.2082,
    					0.2527,
    					0.3018,
    					0.3547,
    					0.4106,
    					0.4684,
    					0.5269,
    					0.5848,
    					0.6409,
    					0.6941,
    					0.7435,
    					0.7884,
    					0.8283,
    					0.8631,
    					0.8927,
    					0.9174,
    					0.9375,
    					0.9536,
    					0.9662,
    					0.9758,
    					0.983,
    					0.9883,
    					0.9921,
    					0.9948,
    					0.9966,
    					0.9978,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.0223,
    				"std.error": 0.8429,
    				statistic: 2.3991,
    				"p.value": 0.017,
    				"conf.low": 0.3634,
    				"conf.high": 3.6812,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.2626e-17,
    					1.9853e-16,
    					7.3047e-16,
    					2.6213e-15,
    					9.1744e-15,
    					3.1319e-14,
    					1.0428e-13,
    					3.3864e-13,
    					1.0727e-12,
    					3.3143e-12,
    					9.9886e-12,
    					2.9364e-11,
    					8.4207e-11,
    					2.3556e-10,
    					6.4281e-10,
    					1.7112e-9,
    					4.4443e-9,
    					1.126e-8,
    					2.7835e-8,
    					6.7133e-8,
    					1.5798e-7,
    					3.6273e-7,
    					8.1268e-7,
    					0.0000017768,
    					0.0000037909,
    					0.0000078933,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0032,
    					0.0051,
    					0.0081,
    					0.0123,
    					0.0184,
    					0.0269,
    					0.0384,
    					0.0537,
    					0.0734,
    					0.0982,
    					0.1287,
    					0.1652,
    					0.2079,
    					0.2564,
    					0.3102,
    					0.3684,
    					0.4298,
    					0.493,
    					0.5563,
    					0.6182,
    					0.6773,
    					0.7322,
    					0.7819,
    					0.8258,
    					0.8637,
    					0.8955,
    					0.9216,
    					0.9424,
    					0.9586,
    					0.9708,
    					0.9799,
    					0.9865,
    					0.9911,
    					0.9943,
    					0.9964,
    					0.9978,
    					0.9987,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 58,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option5",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4449,
    				"std.error": 0.3711,
    				statistic: 17.3677,
    				"p.value": 4.0252e-51,
    				"conf.low": 5.7155,
    				"conf.high": 7.1744,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.5713e-17,
    					6.4919e-17,
    					2.6091e-16,
    					1.02e-15,
    					3.8791e-15,
    					1.435e-14,
    					5.1643e-14,
    					1.8079e-13,
    					6.1574e-13,
    					2.0401e-12,
    					6.5759e-12,
    					2.0622e-11,
    					6.2918e-11,
    					1.8677e-10,
    					5.3943e-10,
    					1.5159e-9,
    					4.1452e-9,
    					1.1029e-8,
    					2.8557e-8,
    					7.1953e-8,
    					1.7643e-7,
    					4.2104e-7,
    					9.7791e-7,
    					0.0000022107,
    					0.0000048648,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0018,
    					0.003,
    					0.0049,
    					0.0079,
    					0.0123,
    					0.0188,
    					0.0279,
    					0.0405,
    					0.0574,
    					0.0793,
    					0.1071,
    					0.1412,
    					0.1821,
    					0.2297,
    					0.2835,
    					0.3427,
    					0.4061,
    					0.472,
    					0.5387,
    					0.6043,
    					0.6671,
    					0.7256,
    					0.7784,
    					0.8249,
    					0.8647,
    					0.8978,
    					0.9246,
    					0.9456,
    					0.9618,
    					0.9737,
    					0.9824,
    					0.9885,
    					0.9927,
    					0.9955,
    					0.9972,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.7248,
    				"std.error": 0.4623,
    				statistic: -1.5679,
    				"p.value": 0.1177,
    				"conf.low": -1.6336,
    				"conf.high": 0.1839,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.7443e-20,
    					2.2437e-19,
    					1.0311e-18,
    					4.6042e-18,
    					1.9979e-17,
    					8.4245e-17,
    					3.452e-16,
    					1.3746e-15,
    					5.319e-15,
    					2.0002e-14,
    					7.31e-14,
    					2.5963e-13,
    					8.9618e-13,
    					3.0064e-12,
    					9.8025e-12,
    					3.1064e-11,
    					9.5681e-11,
    					2.8645e-10,
    					8.336e-10,
    					2.3581e-9,
    					6.4841e-9,
    					1.7333e-8,
    					4.5043e-8,
    					1.138e-7,
    					2.7953e-7,
    					6.6761e-7,
    					0.0000015504,
    					0.0000035011,
    					0.0000076886,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0026,
    					0.0044,
    					0.0072,
    					0.0114,
    					0.0175,
    					0.0263,
    					0.0386,
    					0.0552,
    					0.0769,
    					0.1046,
    					0.1389,
    					0.1801,
    					0.2282,
    					0.2829,
    					0.3432,
    					0.4077,
    					0.4749,
    					0.5428,
    					0.6094,
    					0.673,
    					0.7319,
    					0.785,
    					0.8313,
    					0.8707,
    					0.9032,
    					0.9293,
    					0.9496,
    					0.965,
    					0.9763,
    					0.9843,
    					0.9899,
    					0.9937,
    					0.9961,
    					0.9977,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.3603,
    				"std.error": 0.5142,
    				statistic: -2.6454,
    				"p.value": 0.0085,
    				"conf.low": -2.371,
    				"conf.high": -0.3495,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.4281e-29,
    					1.4754e-28,
    					1.4601e-27,
    					1.3842e-26,
    					1.257e-25,
    					1.0935e-24,
    					9.1123e-24,
    					7.2744e-23,
    					5.5633e-22,
    					4.076e-21,
    					2.8609e-20,
    					1.9238e-19,
    					1.2394e-18,
    					7.6503e-18,
    					4.5243e-17,
    					2.5636e-16,
    					1.3918e-15,
    					7.2404e-15,
    					3.6092e-14,
    					1.724e-13,
    					7.8914e-13,
    					3.4617e-12,
    					1.4553e-11,
    					5.8636e-11,
    					2.2644e-10,
    					8.3818e-10,
    					2.974e-9,
    					1.0116e-8,
    					3.2986e-8,
    					1.0313e-7,
    					3.0917e-7,
    					8.8877e-7,
    					0.0000024503,
    					0.0000064796,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0018,
    					0.0035,
    					0.0064,
    					0.0113,
    					0.0192,
    					0.0313,
    					0.049,
    					0.0741,
    					0.1079,
    					0.1516,
    					0.2057,
    					0.2699,
    					0.3428,
    					0.422,
    					0.5046,
    					0.5869,
    					0.6656,
    					0.7376,
    					0.8007,
    					0.8537,
    					0.8963,
    					0.9291,
    					0.9532,
    					0.9703,
    					0.9818,
    					0.9893,
    					0.994,
    					0.9967,
    					0.9983,
    					0.9991,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3227,
    				"std.error": 0.6361,
    				statistic: 2.0794,
    				"p.value": 0.0382,
    				"conf.low": 0.0723,
    				"conf.high": 2.5731,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.134e-23,
    					1.7212e-22,
    					1.3284e-21,
    					9.8104e-21,
    					6.9328e-20,
    					4.6882e-19,
    					3.0338e-18,
    					1.8788e-17,
    					1.1135e-16,
    					6.3152e-16,
    					3.428e-15,
    					1.7809e-14,
    					8.8553e-14,
    					4.2145e-13,
    					1.9199e-12,
    					8.3723e-12,
    					3.4949e-11,
    					1.3967e-10,
    					5.3435e-10,
    					1.9574e-9,
    					6.8652e-9,
    					2.3057e-8,
    					7.4157e-8,
    					2.2843e-7,
    					6.7394e-7,
    					0.0000019047,
    					0.000005157,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0017,
    					0.0032,
    					0.006,
    					0.0107,
    					0.0184,
    					0.0302,
    					0.0478,
    					0.0727,
    					0.1066,
    					0.1506,
    					0.2053,
    					0.2703,
    					0.3443,
    					0.4248,
    					0.5085,
    					0.5919,
    					0.6713,
    					0.7436,
    					0.8066,
    					0.8592,
    					0.9011,
    					0.933,
    					0.9563,
    					0.9726,
    					0.9835,
    					0.9904,
    					0.9947,
    					0.9972,
    					0.9985,
    					0.9993,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 59,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option5",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.8936,
    				"std.error": 0.305,
    				statistic: 19.3203,
    				"p.value": 1.0276e-59,
    				"conf.low": 5.294,
    				"conf.high": 6.4932,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.3227e-17,
    					7.4325e-17,
    					4.0092e-16,
    					2.076e-15,
    					1.0319e-14,
    					4.9239e-14,
    					2.2557e-13,
    					9.9204e-13,
    					4.1889e-12,
    					1.6982e-11,
    					6.6106e-11,
    					2.4709e-10,
    					8.8688e-10,
    					3.0569e-9,
    					1.0119e-8,
    					3.2173e-8,
    					9.8249e-8,
    					2.8821e-7,
    					8.1219e-7,
    					0.000002199,
    					0.0000057208,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0015,
    					0.0029,
    					0.0053,
    					0.0094,
    					0.0159,
    					0.0259,
    					0.0409,
    					0.0622,
    					0.0913,
    					0.1294,
    					0.1773,
    					0.2351,
    					0.3021,
    					0.3765,
    					0.4558,
    					0.5369,
    					0.6165,
    					0.6915,
    					0.7592,
    					0.8179,
    					0.8667,
    					0.9057,
    					0.9355,
    					0.9575,
    					0.9729,
    					0.9834,
    					0.9902,
    					0.9944,
    					0.9969,
    					0.9984,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3612,
    				"std.error": 0.3736,
    				statistic: -0.9667,
    				"p.value": 0.3343,
    				"conf.low": -1.0956,
    				"conf.high": 0.3732,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.1122e-34,
    					1.4579e-33,
    					1.8284e-32,
    					2.1941e-31,
    					2.5192e-30,
    					2.7675e-29,
    					2.9091e-28,
    					2.926e-27,
    					2.8161e-26,
    					2.5933e-25,
    					2.2853e-24,
    					1.927e-23,
    					1.5549e-22,
    					1.2006e-21,
    					8.8718e-21,
    					6.2735e-20,
    					4.2454e-19,
    					2.7494e-18,
    					1.7041e-17,
    					1.0109e-16,
    					5.739e-16,
    					3.1185e-15,
    					1.622e-14,
    					8.0748e-14,
    					3.8479e-13,
    					1.7553e-12,
    					7.6652e-12,
    					3.2045e-11,
    					1.2826e-10,
    					4.9151e-10,
    					1.8035e-9,
    					6.3366e-9,
    					2.132e-8,
    					6.8702e-8,
    					2.1204e-7,
    					6.2685e-7,
    					0.0000017753,
    					0.000004817,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0016,
    					0.0031,
    					0.0057,
    					0.0103,
    					0.0176,
    					0.0291,
    					0.0461,
    					0.0704,
    					0.1034,
    					0.1465,
    					0.2003,
    					0.2645,
    					0.3377,
    					0.4176,
    					0.5012,
    					0.5846,
    					0.6645,
    					0.7375,
    					0.8013,
    					0.8548,
    					0.8976,
    					0.9304,
    					0.9545,
    					0.9713,
    					0.9826,
    					0.9899,
    					0.9944,
    					0.997,
    					0.9984,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.5519,
    				"std.error": 0.5717,
    				statistic: -0.9654,
    				"p.value": 0.3349,
    				"conf.low": -1.6757,
    				"conf.high": 0.5719,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.4732e-31,
    					4.7231e-30,
    					3.9364e-29,
    					3.1685e-28,
    					2.4633e-27,
    					1.8495e-26,
    					1.3412e-25,
    					9.3939e-25,
    					6.3548e-24,
    					4.1521e-23,
    					2.6204e-22,
    					1.5972e-21,
    					9.404e-21,
    					5.348e-20,
    					2.9377e-19,
    					1.5588e-18,
    					7.9892e-18,
    					3.9554e-17,
    					1.8917e-16,
    					8.7398e-16,
    					3.9006e-15,
    					1.6818e-14,
    					7.005e-14,
    					2.8189e-13,
    					1.0959e-12,
    					4.1164e-12,
    					1.4939e-11,
    					5.2385e-11,
    					1.7749e-10,
    					5.8111e-10,
    					1.8385e-9,
    					5.6211e-9,
    					1.6609e-8,
    					4.743e-8,
    					1.3091e-7,
    					3.4926e-7,
    					9.0074e-7,
    					0.0000022457,
    					0.0000054132,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0019,
    					0.0033,
    					0.0057,
    					0.0096,
    					0.0157,
    					0.0247,
    					0.0377,
    					0.0558,
    					0.0802,
    					0.1119,
    					0.1517,
    					0.1999,
    					0.2563,
    					0.3201,
    					0.3897,
    					0.463,
    					0.5376,
    					0.6109,
    					0.6804,
    					0.7442,
    					0.8005,
    					0.8487,
    					0.8884,
    					0.92,
    					0.9444,
    					0.9624,
    					0.9754,
    					0.9844,
    					0.9904,
    					0.9943,
    					0.9967,
    					0.9982,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.2335,
    				"std.error": 0.7186,
    				statistic: 1.7165,
    				"p.value": 0.0868,
    				"conf.low": -0.1791,
    				"conf.high": 2.6461,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.8895e-18,
    					1.4561e-17,
    					7.0893e-17,
    					3.3348e-16,
    					1.5156e-15,
    					6.6553e-15,
    					2.8237e-14,
    					1.1576e-13,
    					4.5859e-13,
    					1.7554e-12,
    					6.4934e-12,
    					2.3211e-11,
    					8.0182e-11,
    					2.6769e-10,
    					8.637e-10,
    					2.6934e-9,
    					8.1184e-9,
    					2.3653e-8,
    					6.6616e-8,
    					1.8137e-7,
    					4.774e-7,
    					0.0000012149,
    					0.0000029896,
    					0.0000071139,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0022,
    					0.0039,
    					0.0067,
    					0.0111,
    					0.0179,
    					0.0279,
    					0.0423,
    					0.062,
    					0.0883,
    					0.1221,
    					0.1641,
    					0.2145,
    					0.2729,
    					0.3382,
    					0.4088,
    					0.4825,
    					0.5569,
    					0.6292,
    					0.6973,
    					0.7591,
    					0.8133,
    					0.8593,
    					0.8969,
    					0.9266,
    					0.9492,
    					0.9659,
    					0.9778,
    					0.986,
    					0.9915,
    					0.9949,
    					0.9971,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 60,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option5",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4449,
    				"std.error": 0.3664,
    				statistic: 17.589,
    				"p.value": 5.4088e-48,
    				"conf.low": 5.7238,
    				"conf.high": 7.166,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					6.2242e-18,
    					2.6657e-17,
    					1.1097e-16,
    					4.4904e-16,
    					1.7663e-15,
    					6.7535e-15,
    					2.5102e-14,
    					9.0699e-14,
    					3.1858e-13,
    					1.0879e-12,
    					3.6113e-12,
    					1.1655e-11,
    					3.6569e-11,
    					1.1156e-10,
    					3.3087e-10,
    					9.5417e-10,
    					2.6755e-9,
    					7.2949e-9,
    					1.9341e-8,
    					4.9865e-8,
    					1.2502e-7,
    					3.0486e-7,
    					7.2299e-7,
    					0.0000016677,
    					0.0000037417,
    					0.0000081662,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0027,
    					0.0045,
    					0.0072,
    					0.0114,
    					0.0176,
    					0.0264,
    					0.0386,
    					0.0551,
    					0.0767,
    					0.1042,
    					0.1382,
    					0.1791,
    					0.2268,
    					0.281,
    					0.3408,
    					0.4049,
    					0.4717,
    					0.5392,
    					0.6056,
    					0.6691,
    					0.7281,
    					0.7813,
    					0.828,
    					0.8677,
    					0.9007,
    					0.9271,
    					0.9479,
    					0.9636,
    					0.9752,
    					0.9835,
    					0.9893,
    					0.9933,
    					0.9959,
    					0.9975,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.7248,
    				"std.error": 0.4565,
    				statistic: -1.5879,
    				"p.value": 0.1134,
    				"conf.low": -1.6232,
    				"conf.high": 0.1735,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.6225e-20,
    					7.9812e-20,
    					3.8122e-19,
    					1.7681e-18,
    					7.9626e-18,
    					3.482e-17,
    					1.4786e-16,
    					6.0969e-16,
    					2.4413e-15,
    					9.4927e-15,
    					3.5845e-14,
    					1.3144e-13,
    					4.6808e-13,
    					1.6189e-12,
    					5.4375e-12,
    					1.7738e-11,
    					5.6199e-11,
    					1.7294e-10,
    					5.1691e-10,
    					1.5007e-9,
    					4.2322e-9,
    					1.1594e-8,
    					3.0854e-8,
    					7.9768e-8,
    					2.0036e-7,
    					4.8894e-7,
    					0.0000011593,
    					0.0000026711,
    					0.0000059805,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.004,
    					0.0066,
    					0.0105,
    					0.0164,
    					0.0249,
    					0.0368,
    					0.0529,
    					0.0743,
    					0.1017,
    					0.1358,
    					0.177,
    					0.2254,
    					0.2804,
    					0.3413,
    					0.4066,
    					0.4746,
    					0.5433,
    					0.6108,
    					0.6751,
    					0.7345,
    					0.7879,
    					0.8344,
    					0.8737,
    					0.9061,
    					0.9318,
    					0.9517,
    					0.9667,
    					0.9776,
    					0.9854,
    					0.9907,
    					0.9942,
    					0.9965,
    					0.9979,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.1032,
    				"std.error": 0.6002,
    				statistic: -1.8381,
    				"p.value": 0.067,
    				"conf.low": -2.2844,
    				"conf.high": 0.0779,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.5633e-24,
    					2.7453e-23,
    					1.6003e-22,
    					9.0399e-22,
    					4.948e-21,
    					2.6244e-20,
    					1.3489e-19,
    					6.7182e-19,
    					3.2425e-18,
    					1.5166e-17,
    					6.874e-17,
    					3.0194e-16,
    					1.2853e-15,
    					5.3025e-15,
    					2.12e-14,
    					8.215e-14,
    					3.0852e-13,
    					1.123e-12,
    					3.9621e-12,
    					1.3549e-11,
    					4.4909e-11,
    					1.4429e-10,
    					4.494e-10,
    					1.3568e-9,
    					3.9714e-9,
    					1.1269e-8,
    					3.1003e-8,
    					8.2695e-8,
    					2.1388e-7,
    					5.3638e-7,
    					0.0000013045,
    					0.0000030767,
    					0.0000070379,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0018,
    					0.0031,
    					0.0052,
    					0.0086,
    					0.0138,
    					0.0215,
    					0.0325,
    					0.0478,
    					0.0683,
    					0.095,
    					0.1288,
    					0.1702,
    					0.2191,
    					0.2753,
    					0.3378,
    					0.4051,
    					0.4754,
    					0.5464,
    					0.616,
    					0.682,
    					0.7427,
    					0.7968,
    					0.8434,
    					0.8824,
    					0.9139,
    					0.9387,
    					0.9575,
    					0.9713,
    					0.9812,
    					0.988,
    					0.9926,
    					0.9955,
    					0.9974,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5972,
    				"std.error": 0.7567,
    				statistic: 2.1107,
    				"p.value": 0.0356,
    				"conf.low": 0.108,
    				"conf.high": 3.0863,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.9334e-18,
    					9.061e-18,
    					4.1166e-17,
    					1.813e-16,
    					7.7411e-16,
    					3.2042e-15,
    					1.2858e-14,
    					5.0025e-14,
    					1.8869e-13,
    					6.9005e-13,
    					2.4467e-12,
    					8.4116e-12,
    					2.804e-11,
    					9.0631e-11,
    					2.8406e-10,
    					8.6335e-10,
    					2.5446e-9,
    					7.2733e-9,
    					2.0162e-8,
    					5.4206e-8,
    					1.4135e-7,
    					3.5754e-7,
    					8.7724e-7,
    					0.000002088,
    					0.0000048216,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0023,
    					0.004,
    					0.0067,
    					0.0108,
    					0.0171,
    					0.0261,
    					0.0389,
    					0.0563,
    					0.0794,
    					0.109,
    					0.1458,
    					0.1902,
    					0.2421,
    					0.3008,
    					0.3651,
    					0.4335,
    					0.504,
    					0.5743,
    					0.6424,
    					0.7062,
    					0.7641,
    					0.8151,
    					0.8587,
    					0.8947,
    					0.9235,
    					0.9459,
    					0.9628,
    					0.9751,
    					0.9838,
    					0.9897,
    					0.9937,
    					0.9962,
    					0.9978,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 61,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option1",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.8747,
    				"std.error": 0.4502,
    				statistic: 15.2707,
    				"p.value": 9.2298e-36,
    				"conf.low": 5.9871,
    				"conf.high": 7.7622,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.2602e-15,
    					3.7841e-15,
    					1.1151e-14,
    					3.2251e-14,
    					9.1543e-14,
    					2.5502e-13,
    					6.9726e-13,
    					1.8711e-12,
    					4.9281e-12,
    					1.2739e-11,
    					3.2323e-11,
    					8.0495e-11,
    					1.9676e-10,
    					4.7209e-10,
    					1.1118e-9,
    					2.5701e-9,
    					5.8321e-9,
    					1.2991e-8,
    					2.8406e-8,
    					6.0973e-8,
    					1.2848e-7,
    					2.6579e-7,
    					5.398e-7,
    					0.0000010763,
    					0.000002107,
    					0.0000040497,
    					0.0000076427,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0025,
    					0.0038,
    					0.0057,
    					0.0084,
    					0.0121,
    					0.0172,
    					0.0239,
    					0.0328,
    					0.0443,
    					0.0589,
    					0.0769,
    					0.0988,
    					0.125,
    					0.1557,
    					0.1909,
    					0.2307,
    					0.2748,
    					0.3226,
    					0.3736,
    					0.4268,
    					0.4815,
    					0.5365,
    					0.5908,
    					0.6434,
    					0.6934,
    					0.7401,
    					0.7828,
    					0.8211,
    					0.8549,
    					0.8841,
    					0.9088,
    					0.9294,
    					0.9463,
    					0.9597,
    					0.9703,
    					0.9785,
    					0.9847,
    					0.9893,
    					0.9926,
    					0.995,
    					0.9967,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.5019,
    				"std.error": 0.6176,
    				statistic: -2.4317,
    				"p.value": 0.0159,
    				"conf.low": -2.7196,
    				"conf.high": -0.2842,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.4361e-8,
    					2.9549e-8,
    					5.9847e-8,
    					1.1931e-7,
    					2.3415e-7,
    					4.5233e-7,
    					8.6018e-7,
    					0.0000016103,
    					0.0000029677,
    					0.0000053845,
    					0.0000096179,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.002,
    					0.003,
    					0.0045,
    					0.0064,
    					0.0091,
    					0.0128,
    					0.0176,
    					0.024,
    					0.0321,
    					0.0425,
    					0.0553,
    					0.0711,
    					0.0901,
    					0.1127,
    					0.139,
    					0.1692,
    					0.2033,
    					0.2413,
    					0.2827,
    					0.3274,
    					0.3746,
    					0.4238,
    					0.4743,
    					0.5251,
    					0.5756,
    					0.6248,
    					0.6721,
    					0.7168,
    					0.7583,
    					0.7963,
    					0.8304,
    					0.8607,
    					0.887,
    					0.9096,
    					0.9287,
    					0.9445,
    					0.9574,
    					0.9677,
    					0.9759,
    					0.9823,
    					0.9872,
    					0.9908,
    					0.9935,
    					0.9955,
    					0.9969,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -2.052,
    				"std.error": 0.5955,
    				statistic: -3.4456,
    				"p.value": 0.0007,
    				"conf.low": -3.2261,
    				"conf.high": -0.8779,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.9572e-18,
    					3.242e-17,
    					1.4634e-16,
    					6.398e-16,
    					2.7096e-15,
    					1.1116e-14,
    					4.4173e-14,
    					1.7005e-13,
    					6.3414e-13,
    					2.291e-12,
    					8.0183e-12,
    					2.7189e-11,
    					8.9319e-11,
    					2.8429e-10,
    					8.7675e-10,
    					2.6199e-9,
    					7.5859e-9,
    					2.1285e-8,
    					5.7876e-8,
    					1.5251e-7,
    					3.8951e-7,
    					9.642e-7,
    					0.0000023135,
    					0.0000053813,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0015,
    					0.0027,
    					0.0046,
    					0.0077,
    					0.0124,
    					0.0195,
    					0.0297,
    					0.0441,
    					0.0636,
    					0.0893,
    					0.1219,
    					0.1621,
    					0.2101,
    					0.2656,
    					0.3276,
    					0.3949,
    					0.4654,
    					0.537,
    					0.6074,
    					0.6745,
    					0.7364,
    					0.7916,
    					0.8393,
    					0.8793,
    					0.9117,
    					0.9371,
    					0.9564,
    					0.9707,
    					0.9808,
    					0.9878,
    					0.9924,
    					0.9955,
    					0.9974,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.358,
    				"std.error": 0.8362,
    				statistic: 2.8197,
    				"p.value": 0.0053,
    				"conf.low": 0.7093,
    				"conf.high": 4.0066,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					9.2115e-19,
    					3.7821e-18,
    					1.5138e-17,
    					5.9071e-17,
    					2.2472e-16,
    					8.3341e-16,
    					3.0134e-15,
    					1.0622e-14,
    					3.6507e-14,
    					1.2233e-13,
    					3.9963e-13,
    					1.2729e-12,
    					3.9534e-12,
    					1.1971e-11,
    					3.5348e-11,
    					1.0177e-10,
    					2.857e-10,
    					7.8214e-10,
    					2.088e-9,
    					5.4357e-9,
    					1.38e-8,
    					3.4168e-8,
    					8.2509e-8,
    					1.9432e-7,
    					4.4639e-7,
    					0.0000010002,
    					0.0000021861,
    					0.000004661,
    					0.0000096949,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0023,
    					0.0038,
    					0.0061,
    					0.0095,
    					0.0144,
    					0.0215,
    					0.0312,
    					0.0442,
    					0.0614,
    					0.0834,
    					0.1109,
    					0.1443,
    					0.1839,
    					0.2296,
    					0.2811,
    					0.3375,
    					0.398,
    					0.4609,
    					0.5249,
    					0.5882,
    					0.6493,
    					0.7068,
    					0.7594,
    					0.8065,
    					0.8475,
    					0.8822,
    					0.9109,
    					0.9341,
    					0.9523,
    					0.9662,
    					0.9766,
    					0.9842,
    					0.9895,
    					0.9933,
    					0.9957,
    					0.9974,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 62,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option1",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.9312,
    				"std.error": 0.3527,
    				statistic: 16.817,
    				"p.value": 1.4004e-40,
    				"conf.low": 5.2358,
    				"conf.high": 6.6265,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.6481e-14,
    					2.105e-13,
    					7.6093e-13,
    					2.6682e-12,
    					9.0751e-12,
    					2.9942e-11,
    					9.5833e-11,
    					2.9755e-10,
    					8.9627e-10,
    					2.6192e-9,
    					7.4259e-9,
    					2.0427e-8,
    					5.4523e-8,
    					1.4121e-7,
    					3.549e-7,
    					8.6561e-7,
    					0.0000020489,
    					0.0000047072,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0022,
    					0.0038,
    					0.0063,
    					0.0103,
    					0.0162,
    					0.0248,
    					0.0369,
    					0.0535,
    					0.0756,
    					0.1039,
    					0.1393,
    					0.1822,
    					0.2324,
    					0.2895,
    					0.3525,
    					0.4197,
    					0.4895,
    					0.5595,
    					0.6277,
    					0.6922,
    					0.7512,
    					0.8035,
    					0.8486,
    					0.8862,
    					0.9166,
    					0.9405,
    					0.9586,
    					0.972,
    					0.9816,
    					0.9882,
    					0.9927,
    					0.9955,
    					0.9974,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.4502,
    				"std.error": 0.4956,
    				statistic: -0.9083,
    				"p.value": 0.3648,
    				"conf.low": -1.4273,
    				"conf.high": 0.5269,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					8.008e-20,
    					3.3842e-19,
    					1.3949e-18,
    					5.6078e-18,
    					2.1989e-17,
    					8.4099e-17,
    					3.1373e-16,
    					1.1415e-15,
    					4.0515e-15,
    					1.4026e-14,
    					4.7365e-14,
    					1.5602e-13,
    					5.0133e-13,
    					1.5714e-12,
    					4.8048e-12,
    					1.4332e-11,
    					4.1704e-11,
    					1.1839e-10,
    					3.2787e-10,
    					8.8588e-10,
    					2.3353e-9,
    					6.0062e-9,
    					1.5072e-8,
    					3.6905e-8,
    					8.8173e-8,
    					2.0556e-7,
    					4.6766e-7,
    					0.0000010383,
    					0.0000022497,
    					0.0000047574,
    					0.0000098193,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0023,
    					0.0037,
    					0.0059,
    					0.0091,
    					0.0138,
    					0.0205,
    					0.0297,
    					0.0422,
    					0.0586,
    					0.0796,
    					0.1059,
    					0.1379,
    					0.1759,
    					0.2201,
    					0.2699,
    					0.3249,
    					0.384,
    					0.4459,
    					0.5091,
    					0.5721,
    					0.6333,
    					0.6913,
    					0.7449,
    					0.7932,
    					0.8356,
    					0.8719,
    					0.9022,
    					0.9269,
    					0.9466,
    					0.9617,
    					0.9732,
    					0.9817,
    					0.9877,
    					0.992,
    					0.9949,
    					0.9968,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.859,
    				"std.error": 0.683,
    				statistic: -1.2578,
    				"p.value": 0.2099,
    				"conf.low": -2.2055,
    				"conf.high": 0.4875,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.9693e-20,
    					8.3536e-20,
    					3.4585e-19,
    					1.3975e-18,
    					5.5116e-18,
    					2.1216e-17,
    					7.9713e-17,
    					2.9232e-16,
    					1.0463e-15,
    					3.6557e-15,
    					1.2467e-14,
    					4.1499e-14,
    					1.3484e-13,
    					4.2768e-13,
    					1.3241e-12,
    					4.0019e-12,
    					1.1807e-11,
    					3.4005e-11,
    					9.5609e-11,
    					2.6243e-10,
    					7.0325e-10,
    					1.8398e-9,
    					4.6994e-9,
    					1.172e-8,
    					2.8537e-8,
    					6.7846e-8,
    					1.575e-7,
    					3.5705e-7,
    					7.904e-7,
    					0.0000017087,
    					0.0000036076,
    					0.0000074388,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0018,
    					0.0029,
    					0.0046,
    					0.0072,
    					0.0109,
    					0.0163,
    					0.0239,
    					0.0342,
    					0.0479,
    					0.0656,
    					0.0881,
    					0.1159,
    					0.1495,
    					0.1889,
    					0.2341,
    					0.2848,
    					0.3403,
    					0.3994,
    					0.4609,
    					0.5233,
    					0.5852,
    					0.645,
    					0.7015,
    					0.7535,
    					0.8002,
    					0.8411,
    					0.8761,
    					0.9053,
    					0.9291,
    					0.948,
    					0.9627,
    					0.9738,
    					0.982,
    					0.9879,
    					0.992,
    					0.9949,
    					0.9968,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.0573,
    				"std.error": 0.9708,
    				statistic: 1.0891,
    				"p.value": 0.2774,
    				"conf.low": -0.8566,
    				"conf.high": 2.9712,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.6208e-10,
    					6.2608e-10,
    					1.468e-9,
    					3.3784e-9,
    					7.6314e-9,
    					1.6921e-8,
    					3.6826e-8,
    					7.8673e-8,
    					1.6499e-7,
    					3.3965e-7,
    					6.864e-7,
    					0.0000013618,
    					0.0000026524,
    					0.000005072,
    					0.0000095225,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0019,
    					0.0029,
    					0.0044,
    					0.0066,
    					0.0096,
    					0.0138,
    					0.0195,
    					0.0271,
    					0.037,
    					0.0496,
    					0.0655,
    					0.085,
    					0.1087,
    					0.1367,
    					0.1693,
    					0.2064,
    					0.2481,
    					0.2938,
    					0.3431,
    					0.3952,
    					0.4493,
    					0.5043,
    					0.5593,
    					0.6131,
    					0.6648,
    					0.7136,
    					0.7587,
    					0.7997,
    					0.8362,
    					0.868,
    					0.8953,
    					0.9183,
    					0.9372,
    					0.9526,
    					0.9647,
    					0.9742,
    					0.9815,
    					0.9869,
    					0.9909,
    					0.9938,
    					0.9958,
    					0.9973,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 63,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option1",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.8747,
    				"std.error": 0.4619,
    				statistic: 14.8829,
    				"p.value": 3.8972e-31,
    				"conf.low": 5.9618,
    				"conf.high": 7.7875,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					6.2098e-15,
    					1.766e-14,
    					4.9339e-14,
    					1.3541e-13,
    					3.6509e-13,
    					9.6698e-13,
    					2.5161e-12,
    					6.4316e-12,
    					1.6152e-11,
    					3.9848e-11,
    					9.6585e-11,
    					2.3e-10,
    					5.381e-10,
    					1.2369e-9,
    					2.7933e-9,
    					6.1982e-9,
    					1.3513e-8,
    					2.8947e-8,
    					6.0928e-8,
    					1.2601e-7,
    					2.5609e-7,
    					5.1141e-7,
    					0.0000010036,
    					0.0000019354,
    					0.000003668,
    					0.0000068317,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0031,
    					0.0047,
    					0.0068,
    					0.0099,
    					0.014,
    					0.0196,
    					0.0269,
    					0.0364,
    					0.0485,
    					0.0637,
    					0.0822,
    					0.1046,
    					0.1311,
    					0.1619,
    					0.197,
    					0.2365,
    					0.2799,
    					0.3268,
    					0.3767,
    					0.4287,
    					0.4819,
    					0.5356,
    					0.5885,
    					0.6399,
    					0.6889,
    					0.7347,
    					0.7769,
    					0.8149,
    					0.8487,
    					0.878,
    					0.9032,
    					0.9242,
    					0.9416,
    					0.9557,
    					0.9669,
    					0.9757,
    					0.9824,
    					0.9875,
    					0.9912,
    					0.994,
    					0.9959,
    					0.9973,
    					0.9982,
    					0.9988,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.5019,
    				"std.error": 0.6337,
    				statistic: -2.3699,
    				"p.value": 0.0191,
    				"conf.low": -2.7543,
    				"conf.high": -0.2495,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.1843e-8,
    					6.3259e-8,
    					1.238e-7,
    					2.3867e-7,
    					4.5331e-7,
    					8.4821e-7,
    					0.0000015636,
    					0.0000028399,
    					0.0000050818,
    					0.0000089597,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0017,
    					0.0026,
    					0.0038,
    					0.0054,
    					0.0077,
    					0.0107,
    					0.0148,
    					0.0201,
    					0.027,
    					0.0357,
    					0.0466,
    					0.06,
    					0.0763,
    					0.0958,
    					0.1187,
    					0.1452,
    					0.1754,
    					0.2093,
    					0.2469,
    					0.2877,
    					0.3315,
    					0.3777,
    					0.4258,
    					0.4749,
    					0.5245,
    					0.5737,
    					0.6217,
    					0.668,
    					0.7118,
    					0.7527,
    					0.7902,
    					0.8242,
    					0.8545,
    					0.881,
    					0.904,
    					0.9235,
    					0.9398,
    					0.9533,
    					0.9642,
    					0.973,
    					0.9798,
    					0.9852,
    					0.9892,
    					0.9923,
    					0.9946,
    					0.9962,
    					0.9974,
    					0.9983,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.8025,
    				"std.error": 0.7458,
    				statistic: -2.4168,
    				"p.value": 0.0169,
    				"conf.low": -3.2765,
    				"conf.high": -0.3286,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.3329e-13,
    					1.2204e-12,
    					3.3688e-12,
    					9.1127e-12,
    					2.4158e-11,
    					6.2761e-11,
    					1.598e-10,
    					3.9876e-10,
    					9.7521e-10,
    					2.3375e-9,
    					5.4914e-9,
    					1.2645e-8,
    					2.8538e-8,
    					6.313e-8,
    					1.3689e-7,
    					2.9097e-7,
    					6.0627e-7,
    					0.0000012383,
    					0.0000024797,
    					0.0000048678,
    					0.0000093689,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0022,
    					0.0035,
    					0.0053,
    					0.0079,
    					0.0116,
    					0.0167,
    					0.0237,
    					0.0329,
    					0.045,
    					0.0603,
    					0.0795,
    					0.1029,
    					0.131,
    					0.164,
    					0.202,
    					0.2448,
    					0.292,
    					0.3431,
    					0.3973,
    					0.4535,
    					0.5107,
    					0.5676,
    					0.6232,
    					0.6763,
    					0.726,
    					0.7717,
    					0.8127,
    					0.8488,
    					0.88,
    					0.9063,
    					0.9281,
    					0.9458,
    					0.9599,
    					0.9708,
    					0.9791,
    					0.9854,
    					0.9899,
    					0.9932,
    					0.9955,
    					0.9971,
    					0.9981,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.109,
    				"std.error": 1.0489,
    				statistic: 2.0107,
    				"p.value": 0.0462,
    				"conf.low": 0.0362,
    				"conf.high": 4.1819,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					7.2911e-12,
    					1.7479e-11,
    					4.1233e-11,
    					9.5725e-11,
    					2.187e-10,
    					4.917e-10,
    					1.088e-9,
    					2.3691e-9,
    					5.0772e-9,
    					1.0709e-8,
    					2.2229e-8,
    					4.5414e-8,
    					9.1318e-8,
    					1.8073e-7,
    					3.5205e-7,
    					6.7501e-7,
    					0.0000012739,
    					0.0000023666,
    					0.0000043278,
    					0.0000077905,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0027,
    					0.0039,
    					0.0057,
    					0.0082,
    					0.0115,
    					0.016,
    					0.0219,
    					0.0295,
    					0.0391,
    					0.0513,
    					0.0662,
    					0.0843,
    					0.1059,
    					0.1312,
    					0.1604,
    					0.1936,
    					0.2306,
    					0.2713,
    					0.3153,
    					0.3621,
    					0.4111,
    					0.4614,
    					0.5124,
    					0.5632,
    					0.613,
    					0.661,
    					0.7065,
    					0.7489,
    					0.7879,
    					0.823,
    					0.8543,
    					0.8816,
    					0.9051,
    					0.9249,
    					0.9414,
    					0.955,
    					0.9658,
    					0.9745,
    					0.9812,
    					0.9863,
    					0.9902,
    					0.9931,
    					0.9952,
    					0.9967,
    					0.9978,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 64,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option2",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.8016,
    				"std.error": 0.3972,
    				statistic: 17.1259,
    				"p.value": 1.3199e-43,
    				"conf.low": 6.0193,
    				"conf.high": 7.5839,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					7.8045e-19,
    					3.1009e-18,
    					1.2026e-17,
    					4.5528e-17,
    					1.6825e-16,
    					6.0692e-16,
    					2.1372e-15,
    					7.3465e-15,
    					2.4652e-14,
    					8.0756e-14,
    					2.5825e-13,
    					8.0625e-13,
    					2.4573e-12,
    					7.3116e-12,
    					2.124e-11,
    					6.0239e-11,
    					1.668e-10,
    					4.5096e-10,
    					1.1904e-9,
    					3.0681e-9,
    					7.7213e-9,
    					1.8974e-8,
    					4.5532e-8,
    					1.0669e-7,
    					2.4416e-7,
    					5.4566e-7,
    					0.000001191,
    					0.0000025388,
    					0.0000052862,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0022,
    					0.0036,
    					0.0057,
    					0.0089,
    					0.0134,
    					0.0198,
    					0.0286,
    					0.0404,
    					0.056,
    					0.0759,
    					0.1009,
    					0.1313,
    					0.1676,
    					0.2098,
    					0.2576,
    					0.3105,
    					0.3677,
    					0.428,
    					0.49,
    					0.5523,
    					0.6133,
    					0.6716,
    					0.726,
    					0.7755,
    					0.8195,
    					0.8577,
    					0.89,
    					0.9166,
    					0.9381,
    					0.955,
    					0.968,
    					0.9777,
    					0.9848,
    					0.9899,
    					0.9934,
    					0.9958,
    					0.9974,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.4154,
    				"std.error": 0.5617,
    				statistic: -2.5201,
    				"p.value": 0.0124,
    				"conf.low": -2.5218,
    				"conf.high": -0.3091,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.972e-10,
    					4.7987e-10,
    					1.1455e-9,
    					2.6825e-9,
    					6.1623e-9,
    					1.3888e-8,
    					3.0704e-8,
    					6.66e-8,
    					1.4173e-7,
    					2.9592e-7,
    					6.0621e-7,
    					0.0000012185,
    					0.0000024031,
    					0.0000046507,
    					0.0000088318,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0019,
    					0.003,
    					0.0045,
    					0.0068,
    					0.0099,
    					0.0143,
    					0.0203,
    					0.0282,
    					0.0385,
    					0.0518,
    					0.0685,
    					0.089,
    					0.1138,
    					0.1431,
    					0.1772,
    					0.2159,
    					0.2592,
    					0.3066,
    					0.3575,
    					0.411,
    					0.4663,
    					0.5222,
    					0.5776,
    					0.6316,
    					0.6831,
    					0.7313,
    					0.7755,
    					0.8152,
    					0.8502,
    					0.8805,
    					0.9062,
    					0.9276,
    					0.945,
    					0.959,
    					0.9699,
    					0.9783,
    					0.9846,
    					0.9893,
    					0.9927,
    					0.9951,
    					0.9967,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.9255,
    				"std.error": 0.5403,
    				statistic: -3.5637,
    				"p.value": 0.0004,
    				"conf.low": -2.9897,
    				"conf.high": -0.8612,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.6352e-22,
    					1.7821e-21,
    					1.1592e-20,
    					7.2531e-20,
    					4.3655e-19,
    					2.5276e-18,
    					1.4077e-17,
    					7.5425e-17,
    					3.8877e-16,
    					1.9278e-15,
    					9.1964e-15,
    					4.2208e-14,
    					1.8638e-13,
    					7.9184e-13,
    					3.237e-12,
    					1.2732e-11,
    					4.8191e-11,
    					1.7552e-10,
    					6.1521e-10,
    					2.0752e-9,
    					6.7372e-9,
    					2.1052e-8,
    					6.3319e-8,
    					1.8333e-7,
    					5.11e-7,
    					0.0000013713,
    					0.0000035434,
    					0.000008817,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.001,
    					0.0018,
    					0.0034,
    					0.006,
    					0.0104,
    					0.0173,
    					0.0277,
    					0.043,
    					0.0644,
    					0.0933,
    					0.1308,
    					0.1776,
    					0.2338,
    					0.2987,
    					0.3707,
    					0.4475,
    					0.5264,
    					0.6043,
    					0.6782,
    					0.7456,
    					0.8048,
    					0.8547,
    					0.8953,
    					0.9269,
    					0.9507,
    					0.9678,
    					0.9797,
    					0.9876,
    					0.9927,
    					0.9959,
    					0.9977,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.2058,
    				"std.error": 0.7668,
    				statistic: 2.8767,
    				"p.value": 0.0044,
    				"conf.low": 0.6954,
    				"conf.high": 3.7162,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.9056e-21,
    					2.0177e-20,
    					1.0113e-19,
    					4.9174e-19,
    					2.3197e-18,
    					1.0617e-17,
    					4.7143e-17,
    					2.031e-16,
    					8.4892e-16,
    					3.4428e-15,
    					1.3547e-14,
    					5.1722e-14,
    					1.9161e-13,
    					6.8876e-13,
    					2.4024e-12,
    					8.1315e-12,
    					2.6708e-11,
    					8.5128e-11,
    					2.6332e-10,
    					7.9046e-10,
    					2.303e-9,
    					6.512e-9,
    					1.7872e-8,
    					4.7611e-8,
    					1.2311e-7,
    					3.0904e-7,
    					7.531e-7,
    					0.0000017817,
    					0.0000040927,
    					0.0000091284,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0034,
    					0.0056,
    					0.0092,
    					0.0145,
    					0.0223,
    					0.0333,
    					0.0485,
    					0.0689,
    					0.0953,
    					0.1284,
    					0.1688,
    					0.2166,
    					0.2713,
    					0.3322,
    					0.398,
    					0.4667,
    					0.5364,
    					0.6051,
    					0.6706,
    					0.7313,
    					0.7857,
    					0.8332,
    					0.8733,
    					0.9061,
    					0.9322,
    					0.9523,
    					0.9673,
    					0.9782,
    					0.9858,
    					0.991,
    					0.9945,
    					0.9967,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 65,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option2",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.0434,
    				"std.error": 0.317,
    				statistic: 19.0659,
    				"p.value": 4.2103e-50,
    				"conf.low": 5.4191,
    				"conf.high": 6.6678,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.481e-18,
    					1.89e-17,
    					9.88e-17,
    					4.9727e-16,
    					2.4098e-15,
    					1.1244e-14,
    					5.052e-14,
    					2.1857e-13,
    					9.1056e-13,
    					3.653e-12,
    					1.4113e-11,
    					5.2511e-11,
    					1.8816e-10,
    					6.4941e-10,
    					2.1588e-9,
    					6.9123e-9,
    					2.1321e-8,
    					6.3353e-8,
    					1.8136e-7,
    					5.0022e-7,
    					0.0000013294,
    					0.0000034048,
    					0.0000084039,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0009,
    					0.0017,
    					0.0031,
    					0.0055,
    					0.0096,
    					0.0159,
    					0.0255,
    					0.0396,
    					0.0594,
    					0.0864,
    					0.1215,
    					0.1656,
    					0.219,
    					0.2811,
    					0.3506,
    					0.4256,
    					0.5034,
    					0.581,
    					0.6556,
    					0.7245,
    					0.7859,
    					0.8385,
    					0.8819,
    					0.9163,
    					0.9425,
    					0.9618,
    					0.9755,
    					0.9848,
    					0.9909,
    					0.9947,
    					0.997,
    					0.9984,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5689,
    				"std.error": 0.4495,
    				statistic: -1.2656,
    				"p.value": 0.2069,
    				"conf.low": -1.4543,
    				"conf.high": 0.3165,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.4951e-22,
    					8.2065e-22,
    					4.3696e-21,
    					2.2569e-20,
    					1.1309e-19,
    					5.4968e-19,
    					2.592e-18,
    					1.1857e-17,
    					5.262e-17,
    					2.2655e-16,
    					9.4629e-16,
    					3.8347e-15,
    					1.5077e-14,
    					5.7511e-14,
    					2.1285e-13,
    					7.6433e-13,
    					2.6631e-12,
    					9.0035e-12,
    					2.9536e-11,
    					9.402e-11,
    					2.9043e-10,
    					8.7062e-10,
    					2.5327e-9,
    					7.1506e-9,
    					1.9593e-8,
    					5.2109e-8,
    					1.3451e-7,
    					3.3705e-7,
    					8.1982e-7,
    					0.0000019359,
    					0.000004438,
    					0.0000098784,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0021,
    					0.0036,
    					0.006,
    					0.0096,
    					0.0152,
    					0.0233,
    					0.0348,
    					0.0506,
    					0.0717,
    					0.0989,
    					0.1329,
    					0.1742,
    					0.2229,
    					0.2786,
    					0.3402,
    					0.4065,
    					0.4756,
    					0.5454,
    					0.6138,
    					0.6789,
    					0.7388,
    					0.7925,
    					0.839,
    					0.8781,
    					0.91,
    					0.9353,
    					0.9546,
    					0.969,
    					0.9794,
    					0.9867,
    					0.9916,
    					0.9949,
    					0.997,
    					0.9982,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.1289,
    				"std.error": 0.634,
    				statistic: -1.7808,
    				"p.value": 0.0762,
    				"conf.low": -2.3777,
    				"conf.high": 0.1198,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.3378e-21,
    					6.6483e-21,
    					3.2121e-20,
    					1.5087e-19,
    					6.8897e-19,
    					3.0588e-18,
    					1.3203e-17,
    					5.5407e-17,
    					2.2607e-16,
    					8.968e-16,
    					3.459e-15,
    					1.2972e-14,
    					4.7302e-14,
    					1.6771e-13,
    					5.7819e-13,
    					1.9383e-12,
    					6.3184e-12,
    					2.0029e-11,
    					6.1739e-11,
    					1.8507e-10,
    					5.3954e-10,
    					1.5297e-9,
    					4.218e-9,
    					1.1312e-8,
    					2.9507e-8,
    					7.4865e-8,
    					1.8476e-7,
    					4.4358e-7,
    					0.000001036,
    					0.0000023539,
    					0.0000052037,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0033,
    					0.0054,
    					0.0086,
    					0.0134,
    					0.0205,
    					0.0304,
    					0.0439,
    					0.0621,
    					0.0855,
    					0.1151,
    					0.1512,
    					0.1943,
    					0.244,
    					0.3,
    					0.3611,
    					0.4259,
    					0.4929,
    					0.56,
    					0.6255,
    					0.6875,
    					0.7446,
    					0.7957,
    					0.8402,
    					0.8778,
    					0.9088,
    					0.9334,
    					0.9526,
    					0.9671,
    					0.9777,
    					0.9853,
    					0.9905,
    					0.9941,
    					0.9964,
    					0.9978,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3767,
    				"std.error": 0.9027,
    				statistic: 1.525,
    				"p.value": 0.1286,
    				"conf.low": -0.4015,
    				"conf.high": 3.1549,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.0045e-12,
    					2.8863e-12,
    					8.1152e-12,
    					2.2328e-11,
    					6.0115e-11,
    					1.5839e-10,
    					4.0838e-10,
    					1.0305e-9,
    					2.5446e-9,
    					6.1496e-9,
    					1.4545e-8,
    					3.3672e-8,
    					7.6291e-8,
    					1.6919e-7,
    					3.6726e-7,
    					7.8034e-7,
    					0.000001623,
    					0.0000033046,
    					0.000006587,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0032,
    					0.005,
    					0.0077,
    					0.0114,
    					0.0167,
    					0.024,
    					0.0337,
    					0.0464,
    					0.0628,
    					0.0833,
    					0.1085,
    					0.1388,
    					0.1744,
    					0.2153,
    					0.2612,
    					0.3117,
    					0.3661,
    					0.4233,
    					0.4821,
    					0.5414,
    					0.5997,
    					0.6559,
    					0.7088,
    					0.7576,
    					0.8016,
    					0.8404,
    					0.8739,
    					0.9021,
    					0.9254,
    					0.9442,
    					0.959,
    					0.9705,
    					0.9792,
    					0.9856,
    					0.9902,
    					0.9935,
    					0.9958,
    					0.9973,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 66,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option2",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.8016,
    				"std.error": 0.4036,
    				statistic: 16.8516,
    				"p.value": 3.5373e-38,
    				"conf.low": 6.0049,
    				"conf.high": 7.5983,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.7018e-18,
    					1.028e-17,
    					3.821e-17,
    					1.3874e-16,
    					4.9213e-16,
    					1.7054e-15,
    					5.7731e-15,
    					1.9093e-14,
    					6.169e-14,
    					1.9473e-13,
    					6.0053e-13,
    					1.8094e-12,
    					5.3263e-12,
    					1.5319e-11,
    					4.3048e-11,
    					1.182e-10,
    					3.1709e-10,
    					8.3121e-10,
    					2.1291e-9,
    					5.3289e-9,
    					1.3034e-8,
    					3.1152e-8,
    					7.2762e-8,
    					1.6609e-7,
    					3.7053e-7,
    					8.0789e-7,
    					0.0000017217,
    					0.0000035863,
    					0.000007302,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0026,
    					0.0041,
    					0.0064,
    					0.0098,
    					0.0146,
    					0.0214,
    					0.0306,
    					0.0429,
    					0.0589,
    					0.0793,
    					0.1045,
    					0.1352,
    					0.1715,
    					0.2135,
    					0.261,
    					0.3133,
    					0.3698,
    					0.4291,
    					0.4902,
    					0.5514,
    					0.6115,
    					0.669,
    					0.7228,
    					0.7719,
    					0.8157,
    					0.8538,
    					0.8862,
    					0.9132,
    					0.9351,
    					0.9524,
    					0.9658,
    					0.9759,
    					0.9834,
    					0.9888,
    					0.9926,
    					0.9952,
    					0.997,
    					0.9981,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.4154,
    				"std.error": 0.5708,
    				statistic: -2.4798,
    				"p.value": 0.0141,
    				"conf.low": -2.5422,
    				"conf.high": -0.2887,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.7293e-10,
    					8.8281e-10,
    					2.0513e-9,
    					4.6786e-9,
    					1.0475e-8,
    					2.3021e-8,
    					4.9667e-8,
    					1.0519e-7,
    					2.1871e-7,
    					4.4644e-7,
    					8.9465e-7,
    					0.0000017602,
    					0.0000034003,
    					0.0000064492,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0022,
    					0.0034,
    					0.0051,
    					0.0076,
    					0.011,
    					0.0156,
    					0.0219,
    					0.0302,
    					0.041,
    					0.0546,
    					0.0717,
    					0.0925,
    					0.1175,
    					0.147,
    					0.181,
    					0.2196,
    					0.2626,
    					0.3095,
    					0.3597,
    					0.4124,
    					0.4668,
    					0.5218,
    					0.5764,
    					0.6296,
    					0.6804,
    					0.728,
    					0.7718,
    					0.8113,
    					0.8463,
    					0.8767,
    					0.9027,
    					0.9243,
    					0.9421,
    					0.9565,
    					0.9678,
    					0.9765,
    					0.9832,
    					0.9882,
    					0.9918,
    					0.9944,
    					0.9963,
    					0.9976,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.8871,
    				"std.error": 0.68,
    				statistic: -2.775,
    				"p.value": 0.0061,
    				"conf.low": -3.2294,
    				"conf.high": -0.5447,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.9156e-15,
    					2.0089e-14,
    					6.6578e-14,
    					2.1533e-13,
    					6.7969e-13,
    					2.0938e-12,
    					6.2952e-12,
    					1.8472e-11,
    					5.2904e-11,
    					1.4788e-10,
    					4.0348e-10,
    					1.0745e-9,
    					2.7932e-9,
    					7.0875e-9,
    					1.7555e-8,
    					4.2447e-8,
    					1.002e-7,
    					2.309e-7,
    					5.1947e-7,
    					0.0000011411,
    					0.0000024473,
    					0.0000051251,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0023,
    					0.0037,
    					0.0058,
    					0.009,
    					0.0136,
    					0.0202,
    					0.0292,
    					0.0413,
    					0.0573,
    					0.0777,
    					0.1033,
    					0.1344,
    					0.1715,
    					0.2145,
    					0.2632,
    					0.317,
    					0.375,
    					0.436,
    					0.4985,
    					0.561,
    					0.6221,
    					0.6803,
    					0.7343,
    					0.7833,
    					0.8266,
    					0.8639,
    					0.8954,
    					0.9212,
    					0.9418,
    					0.958,
    					0.9703,
    					0.9795,
    					0.9861,
    					0.9908,
    					0.994,
    					0.9962,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.2233,
    				"std.error": 0.9669,
    				statistic: 2.2994,
    				"p.value": 0.0227,
    				"conf.low": 0.3147,
    				"conf.high": 4.1318,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.9307e-14,
    					1.3977e-13,
    					3.8874e-13,
    					1.0609e-12,
    					2.8412e-12,
    					7.4662e-12,
    					1.9253e-11,
    					4.8716e-11,
    					1.2097e-10,
    					2.9476e-10,
    					7.0485e-10,
    					1.654e-9,
    					3.8091e-9,
    					8.609e-9,
    					1.9096e-8,
    					4.1569e-8,
    					8.8815e-8,
    					1.8624e-7,
    					3.8333e-7,
    					7.7441e-7,
    					0.0000015356,
    					0.0000029891,
    					0.0000057115,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0021,
    					0.0032,
    					0.0049,
    					0.0073,
    					0.0106,
    					0.0151,
    					0.0213,
    					0.0294,
    					0.04,
    					0.0535,
    					0.0704,
    					0.0911,
    					0.116,
    					0.1454,
    					0.1795,
    					0.2181,
    					0.2612,
    					0.3082,
    					0.3587,
    					0.4117,
    					0.4664,
    					0.5217,
    					0.5766,
    					0.6301,
    					0.6812,
    					0.729,
    					0.773,
    					0.8126,
    					0.8476,
    					0.878,
    					0.9039,
    					0.9255,
    					0.9431,
    					0.9573,
    					0.9685,
    					0.9772,
    					0.9837,
    					0.9886,
    					0.9921,
    					0.9947,
    					0.9965,
    					0.9977,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 67,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option3",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.739,
    				"std.error": 0.4247,
    				statistic: 15.8693,
    				"p.value": 3.9364e-37,
    				"conf.low": 5.9016,
    				"conf.high": 7.5765,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.549e-16,
    					1.1637e-15,
    					3.736e-15,
    					1.1744e-14,
    					3.6149e-14,
    					1.0895e-13,
    					3.2152e-13,
    					9.2909e-13,
    					2.6289e-12,
    					7.2842e-12,
    					1.9764e-11,
    					5.2511e-11,
    					1.3663e-10,
    					3.4812e-10,
    					8.6863e-10,
    					2.1226e-9,
    					5.0797e-9,
    					1.1906e-8,
    					2.7329e-8,
    					6.1443e-8,
    					1.353e-7,
    					2.9182e-7,
    					6.1651e-7,
    					0.0000012758,
    					0.0000025864,
    					0.0000051362,
    					0.0000099924,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0025,
    					0.004,
    					0.006,
    					0.0091,
    					0.0133,
    					0.0192,
    					0.0272,
    					0.0377,
    					0.0514,
    					0.0687,
    					0.0903,
    					0.1165,
    					0.1477,
    					0.184,
    					0.2255,
    					0.2717,
    					0.3223,
    					0.3764,
    					0.433,
    					0.4911,
    					0.5493,
    					0.6065,
    					0.6615,
    					0.7132,
    					0.7609,
    					0.8038,
    					0.8418,
    					0.8745,
    					0.9022,
    					0.9251,
    					0.9437,
    					0.9585,
    					0.9699,
    					0.9786,
    					0.9851,
    					0.9898,
    					0.9931,
    					0.9955,
    					0.9971,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.4277,
    				"std.error": 0.6203,
    				statistic: -2.3018,
    				"p.value": 0.0224,
    				"conf.low": -2.6508,
    				"conf.high": -0.2045,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					8.2379e-9,
    					1.7102e-8,
    					3.4952e-8,
    					7.0322e-8,
    					1.3929e-7,
    					2.7161e-7,
    					5.2144e-7,
    					9.8558e-7,
    					0.0000018341,
    					0.0000033606,
    					0.0000060627,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0014,
    					0.0022,
    					0.0032,
    					0.0047,
    					0.0068,
    					0.0096,
    					0.0133,
    					0.0183,
    					0.0249,
    					0.0332,
    					0.0438,
    					0.0569,
    					0.073,
    					0.0922,
    					0.1151,
    					0.1416,
    					0.1721,
    					0.2064,
    					0.2445,
    					0.286,
    					0.3307,
    					0.3779,
    					0.427,
    					0.4773,
    					0.5279,
    					0.5781,
    					0.6271,
    					0.6741,
    					0.7184,
    					0.7596,
    					0.7973,
    					0.8313,
    					0.8613,
    					0.8875,
    					0.9099,
    					0.9288,
    					0.9446,
    					0.9574,
    					0.9677,
    					0.9759,
    					0.9822,
    					0.9871,
    					0.9908,
    					0.9935,
    					0.9955,
    					0.9969,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.429,
    				"std.error": 0.5845,
    				statistic: -2.4447,
    				"p.value": 0.0154,
    				"conf.low": -2.5817,
    				"conf.high": -0.2763,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					8.1773e-23,
    					4.8963e-22,
    					2.836e-21,
    					1.589e-20,
    					8.613e-20,
    					4.5162e-19,
    					2.2909e-18,
    					1.1242e-17,
    					5.3369e-17,
    					2.4512e-16,
    					1.0892e-15,
    					4.6824e-15,
    					1.9475e-14,
    					7.8373e-14,
    					3.0516e-13,
    					1.1497e-12,
    					4.1909e-12,
    					1.4783e-11,
    					5.0459e-11,
    					1.6667e-10,
    					5.3275e-10,
    					1.648e-9,
    					4.934e-9,
    					1.4297e-8,
    					4.0098e-8,
    					1.0886e-7,
    					2.8607e-7,
    					7.2776e-7,
    					0.0000017925,
    					0.0000042745,
    					0.0000098702,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0025,
    					0.0044,
    					0.0074,
    					0.0121,
    					0.0192,
    					0.0296,
    					0.0442,
    					0.0642,
    					0.0905,
    					0.1242,
    					0.1657,
    					0.2153,
    					0.2726,
    					0.3366,
    					0.4057,
    					0.4779,
    					0.5508,
    					0.622,
    					0.6894,
    					0.7508,
    					0.8052,
    					0.8516,
    					0.89,
    					0.9207,
    					0.9444,
    					0.9621,
    					0.975,
    					0.9839,
    					0.99,
    					0.9939,
    					0.9964,
    					0.998,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.553,
    				"std.error": 0.8566,
    				statistic: 1.813,
    				"p.value": 0.0714,
    				"conf.low": -0.1362,
    				"conf.high": 3.2422,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.2831e-14,
    					4.2676e-14,
    					1.3855e-13,
    					4.3907e-13,
    					1.3583e-12,
    					4.1018e-12,
    					1.2092e-11,
    					3.4799e-11,
    					9.7767e-11,
    					2.6815e-10,
    					7.1804e-10,
    					1.8772e-9,
    					4.7912e-9,
    					1.194e-8,
    					2.9053e-8,
    					6.9026e-8,
    					1.6014e-7,
    					3.6278e-7,
    					8.0256e-7,
    					0.0000017339,
    					0.0000036584,
    					0.000007539,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0018,
    					0.0029,
    					0.0046,
    					0.0072,
    					0.011,
    					0.0164,
    					0.024,
    					0.0344,
    					0.0481,
    					0.0659,
    					0.0885,
    					0.1164,
    					0.15,
    					0.1895,
    					0.2348,
    					0.2855,
    					0.341,
    					0.4001,
    					0.4616,
    					0.5241,
    					0.5859,
    					0.6457,
    					0.7021,
    					0.754,
    					0.8007,
    					0.8415,
    					0.8764,
    					0.9056,
    					0.9293,
    					0.9482,
    					0.9628,
    					0.9739,
    					0.982,
    					0.9879,
    					0.992,
    					0.9949,
    					0.9968,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 68,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option3",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2114,
    				"std.error": 0.3449,
    				statistic: 18.0074,
    				"p.value": 1.4249e-43,
    				"conf.low": 5.5312,
    				"conf.high": 6.8916,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.156e-17,
    					9.8431e-17,
    					4.3524e-16,
    					1.8639e-15,
    					7.7314e-15,
    					3.1061e-14,
    					1.2087e-13,
    					4.5556e-13,
    					1.6632e-12,
    					5.8818e-12,
    					2.015e-11,
    					6.6868e-11,
    					2.1497e-10,
    					6.6954e-10,
    					2.0203e-9,
    					5.9061e-9,
    					1.6729e-8,
    					4.5915e-8,
    					1.2211e-7,
    					3.1471e-7,
    					7.8601e-7,
    					0.0000019026,
    					0.000004464,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0024,
    					0.0041,
    					0.0069,
    					0.0113,
    					0.0179,
    					0.0274,
    					0.0409,
    					0.0594,
    					0.0838,
    					0.1151,
    					0.154,
    					0.2006,
    					0.2549,
    					0.3159,
    					0.3824,
    					0.4527,
    					0.5244,
    					0.5953,
    					0.6633,
    					0.7262,
    					0.7828,
    					0.8319,
    					0.8732,
    					0.9069,
    					0.9335,
    					0.9537,
    					0.9687,
    					0.9794,
    					0.9869,
    					0.9919,
    					0.9951,
    					0.9971,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.8591,
    				"std.error": 0.5032,
    				statistic: -1.7071,
    				"p.value": 0.0894,
    				"conf.low": -1.8515,
    				"conf.high": 0.1333,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.0367e-16,
    					1.0844e-15,
    					3.7798e-15,
    					1.2861e-14,
    					4.2718e-14,
    					1.3851e-13,
    					4.384e-13,
    					1.3546e-12,
    					4.0861e-12,
    					1.2033e-11,
    					3.4593e-11,
    					9.7094e-11,
    					2.6606e-10,
    					7.1182e-10,
    					1.8594e-9,
    					4.7423e-9,
    					1.181e-8,
    					2.8717e-8,
    					6.8185e-8,
    					1.581e-7,
    					3.5798e-7,
    					7.9157e-7,
    					0.0000017095,
    					0.0000036056,
    					0.0000074279,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0028,
    					0.0045,
    					0.0071,
    					0.0108,
    					0.0162,
    					0.0237,
    					0.0339,
    					0.0475,
    					0.0651,
    					0.0875,
    					0.1151,
    					0.1484,
    					0.1876,
    					0.2326,
    					0.2831,
    					0.3382,
    					0.3972,
    					0.4585,
    					0.5209,
    					0.5827,
    					0.6426,
    					0.6992,
    					0.7513,
    					0.7982,
    					0.8393,
    					0.8746,
    					0.904,
    					0.928,
    					0.9471,
    					0.962,
    					0.9733,
    					0.9816,
    					0.9876,
    					0.9918,
    					0.9947,
    					0.9967,
    					0.9979,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8438,
    				"std.error": 0.6657,
    				statistic: -1.2676,
    				"p.value": 0.2064,
    				"conf.low": -2.1565,
    				"conf.high": 0.4689,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.6662e-21,
    					7.6486e-21,
    					3.4223e-20,
    					1.4926e-19,
    					6.3457e-19,
    					2.6297e-18,
    					1.0623e-17,
    					4.1831e-17,
    					1.6057e-16,
    					6.0082e-16,
    					2.1916e-15,
    					7.793e-15,
    					2.7014e-14,
    					9.129e-14,
    					3.0075e-13,
    					9.6596e-13,
    					3.0247e-12,
    					9.2336e-12,
    					2.7483e-11,
    					7.9751e-11,
    					2.2565e-10,
    					6.2249e-10,
    					1.6745e-9,
    					4.3919e-9,
    					1.1233e-8,
    					2.8016e-8,
    					6.8139e-8,
    					1.6162e-7,
    					3.7386e-7,
    					8.4347e-7,
    					0.0000018561,
    					0.0000039838,
    					0.0000083408,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0021,
    					0.0035,
    					0.0056,
    					0.0088,
    					0.0134,
    					0.02,
    					0.0292,
    					0.0416,
    					0.0581,
    					0.0792,
    					0.1057,
    					0.1382,
    					0.1767,
    					0.2215,
    					0.2722,
    					0.328,
    					0.388,
    					0.4508,
    					0.5148,
    					0.5785,
    					0.6401,
    					0.6983,
    					0.7519,
    					0.7999,
    					0.8419,
    					0.8776,
    					0.9072,
    					0.9312,
    					0.9501,
    					0.9646,
    					0.9754,
    					0.9833,
    					0.989,
    					0.9928,
    					0.9955,
    					0.9972,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.9365,
    				"std.error": 0.9844,
    				statistic: 0.9514,
    				"p.value": 0.3426,
    				"conf.low": -1.0047,
    				"conf.high": 2.8778,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					9.67e-10,
    					2.2203e-9,
    					5.0062e-9,
    					1.1085e-8,
    					2.4106e-8,
    					5.1483e-8,
    					1.0798e-7,
    					2.2244e-7,
    					4.5006e-7,
    					8.9436e-7,
    					0.0000017457,
    					0.0000033469,
    					0.0000063031,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0032,
    					0.0047,
    					0.007,
    					0.0101,
    					0.0144,
    					0.0203,
    					0.0279,
    					0.0379,
    					0.0506,
    					0.0664,
    					0.0859,
    					0.1093,
    					0.137,
    					0.1691,
    					0.2058,
    					0.2467,
    					0.2917,
    					0.3401,
    					0.3914,
    					0.4446,
    					0.4988,
    					0.553,
    					0.6063,
    					0.6577,
    					0.7062,
    					0.7514,
    					0.7925,
    					0.8293,
    					0.8617,
    					0.8896,
    					0.9132,
    					0.9328,
    					0.9488,
    					0.9616,
    					0.9717,
    					0.9794,
    					0.9853,
    					0.9897,
    					0.9929,
    					0.9952,
    					0.9968,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 69,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option3",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.739,
    				"std.error": 0.4365,
    				statistic: 15.4398,
    				"p.value": 2.0297e-32,
    				"conf.low": 5.8764,
    				"conf.high": 7.6017,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.0728e-15,
    					6.3849e-15,
    					1.9279e-14,
    					5.7063e-14,
    					1.6557e-13,
    					4.7091e-13,
    					1.313e-12,
    					3.5888e-12,
    					9.6163e-12,
    					2.526e-11,
    					6.505e-11,
    					1.6423e-10,
    					4.0648e-10,
    					9.8635e-10,
    					2.3466e-9,
    					5.4736e-9,
    					1.2518e-8,
    					2.8069e-8,
    					6.1715e-8,
    					1.3305e-7,
    					2.8125e-7,
    					5.8301e-7,
    					0.0000011851,
    					0.0000023624,
    					0.0000046184,
    					0.0000088547,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0032,
    					0.0049,
    					0.0073,
    					0.0107,
    					0.0155,
    					0.022,
    					0.0306,
    					0.0418,
    					0.0562,
    					0.0742,
    					0.0963,
    					0.1229,
    					0.1543,
    					0.1906,
    					0.2316,
    					0.2772,
    					0.3268,
    					0.3796,
    					0.4348,
    					0.4913,
    					0.548,
    					0.6037,
    					0.6573,
    					0.708,
    					0.7549,
    					0.7974,
    					0.8351,
    					0.868,
    					0.896,
    					0.9195,
    					0.9387,
    					0.9541,
    					0.9663,
    					0.9756,
    					0.9827,
    					0.988,
    					0.9918,
    					0.9945,
    					0.9963,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.4277,
    				"std.error": 0.6375,
    				statistic: -2.2395,
    				"p.value": 0.0266,
    				"conf.low": -2.6877,
    				"conf.high": -0.1677,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.9797e-8,
    					3.957e-8,
    					7.7928e-8,
    					1.5121e-7,
    					2.8911e-7,
    					5.4465e-7,
    					0.000001011,
    					0.0000018494,
    					0.0000033334,
    					0.0000059208,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0019,
    					0.0028,
    					0.004,
    					0.0058,
    					0.0081,
    					0.0113,
    					0.0155,
    					0.021,
    					0.0281,
    					0.0371,
    					0.0483,
    					0.062,
    					0.0786,
    					0.0983,
    					0.1215,
    					0.1482,
    					0.1787,
    					0.2128,
    					0.2504,
    					0.2913,
    					0.335,
    					0.3811,
    					0.429,
    					0.4779,
    					0.5272,
    					0.576,
    					0.6238,
    					0.6696,
    					0.7131,
    					0.7537,
    					0.7909,
    					0.8246,
    					0.8547,
    					0.8811,
    					0.9039,
    					0.9233,
    					0.9396,
    					0.953,
    					0.9639,
    					0.9727,
    					0.9796,
    					0.985,
    					0.9891,
    					0.9922,
    					0.9945,
    					0.9961,
    					0.9973,
    					0.9982,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.3714,
    				"std.error": 0.7249,
    				statistic: -1.8918,
    				"p.value": 0.0605,
    				"conf.low": -2.8042,
    				"conf.high": 0.0614,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					9.2507e-16,
    					3.0149e-15,
    					9.6172e-15,
    					3.0026e-14,
    					9.1755e-14,
    					2.7444e-13,
    					8.0344e-13,
    					2.3023e-12,
    					6.4576e-12,
    					1.773e-11,
    					4.7648e-11,
    					1.2535e-10,
    					3.228e-10,
    					8.1373e-10,
    					2.0081e-9,
    					4.8513e-9,
    					1.1474e-8,
    					2.6567e-8,
    					6.0223e-8,
    					1.3366e-7,
    					2.9045e-7,
    					6.1797e-7,
    					0.0000012874,
    					0.0000026264,
    					0.0000052465,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0027,
    					0.0042,
    					0.0064,
    					0.0097,
    					0.0142,
    					0.0205,
    					0.029,
    					0.0402,
    					0.0547,
    					0.0731,
    					0.0959,
    					0.1235,
    					0.1562,
    					0.1942,
    					0.2374,
    					0.2853,
    					0.3374,
    					0.3929,
    					0.4506,
    					0.5094,
    					0.568,
    					0.6251,
    					0.6796,
    					0.7305,
    					0.7769,
    					0.8185,
    					0.8548,
    					0.8859,
    					0.9119,
    					0.9332,
    					0.9503,
    					0.9637,
    					0.974,
    					0.9817,
    					0.9874,
    					0.9915,
    					0.9944,
    					0.9963,
    					0.9977,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5051,
    				"std.error": 1.0706,
    				statistic: 1.4058,
    				"p.value": 0.1619,
    				"conf.low": -0.611,
    				"conf.high": 3.6212,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					7.2115e-10,
    					1.5586e-9,
    					3.3173e-9,
    					6.9531e-9,
    					1.4353e-8,
    					2.9177e-8,
    					5.8414e-8,
    					1.1518e-7,
    					2.2367e-7,
    					4.2779e-7,
    					8.0586e-7,
    					0.0000014952,
    					0.0000027325,
    					0.0000049188,
    					0.0000087217,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0026,
    					0.0038,
    					0.0055,
    					0.0079,
    					0.011,
    					0.0152,
    					0.0208,
    					0.0279,
    					0.0369,
    					0.0482,
    					0.0622,
    					0.079,
    					0.0992,
    					0.1229,
    					0.1502,
    					0.1814,
    					0.2163,
    					0.2549,
    					0.2967,
    					0.3415,
    					0.3886,
    					0.4373,
    					0.4871,
    					0.5371,
    					0.5865,
    					0.6345,
    					0.6805,
    					0.7239,
    					0.7642,
    					0.801,
    					0.8342,
    					0.8635,
    					0.8891,
    					0.911,
    					0.9295,
    					0.9449,
    					0.9576,
    					0.9677,
    					0.9758,
    					0.9821,
    					0.9869,
    					0.9906,
    					0.9933,
    					0.9953,
    					0.9968,
    					0.9978,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 70,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option4",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.8974,
    				"std.error": 0.4668,
    				statistic: 14.7771,
    				"p.value": 1.6351e-38,
    				"conf.low": 5.9793,
    				"conf.high": 7.8155,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					7.938e-15,
    					2.2242e-14,
    					6.1245e-14,
    					1.6573e-13,
    					4.4072e-13,
    					1.1518e-12,
    					2.9581e-12,
    					7.4664e-12,
    					1.8521e-11,
    					4.5153e-11,
    					1.0819e-10,
    					2.5476e-10,
    					5.8962e-10,
    					1.3412e-9,
    					2.9986e-9,
    					6.5892e-9,
    					1.4232e-8,
    					3.0214e-8,
    					6.3048e-8,
    					1.2932e-7,
    					2.6075e-7,
    					5.1682e-7,
    					0.000001007,
    					0.0000019287,
    					0.0000036317,
    					0.000006723,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0019,
    					0.0029,
    					0.0044,
    					0.0064,
    					0.0092,
    					0.0131,
    					0.0183,
    					0.0252,
    					0.0341,
    					0.0454,
    					0.0597,
    					0.0772,
    					0.0983,
    					0.1234,
    					0.1526,
    					0.1862,
    					0.2239,
    					0.2657,
    					0.3111,
    					0.3596,
    					0.4104,
    					0.4628,
    					0.5158,
    					0.5686,
    					0.6201,
    					0.6697,
    					0.7164,
    					0.7596,
    					0.7991,
    					0.8343,
    					0.8653,
    					0.8921,
    					0.9148,
    					0.9337,
    					0.9492,
    					0.9616,
    					0.9715,
    					0.9791,
    					0.985,
    					0.9893,
    					0.9926,
    					0.9949,
    					0.9966,
    					0.9977,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1523,
    				"std.error": 0.5454,
    				statistic: -2.1128,
    				"p.value": 0.0353,
    				"conf.low": -2.225,
    				"conf.high": -0.0795,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.1712e-12,
    					5.9625e-12,
    					1.6043e-11,
    					4.2291e-11,
    					1.0923e-10,
    					2.7643e-10,
    					6.8542e-10,
    					1.6653e-9,
    					3.9644e-9,
    					9.2477e-9,
    					2.1139e-8,
    					4.7349e-8,
    					1.0393e-7,
    					2.2356e-7,
    					4.7128e-7,
    					9.7366e-7,
    					0.0000019715,
    					0.0000039125,
    					0.0000076105,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.002,
    					0.0031,
    					0.0048,
    					0.0072,
    					0.0106,
    					0.0154,
    					0.022,
    					0.0308,
    					0.0422,
    					0.0569,
    					0.0754,
    					0.0982,
    					0.1256,
    					0.1579,
    					0.1953,
    					0.2375,
    					0.2844,
    					0.3353,
    					0.3894,
    					0.4457,
    					0.5032,
    					0.5606,
    					0.6167,
    					0.6705,
    					0.721,
    					0.7674,
    					0.8091,
    					0.8459,
    					0.8777,
    					0.9046,
    					0.9268,
    					0.9449,
    					0.9592,
    					0.9703,
    					0.9788,
    					0.9852,
    					0.9898,
    					0.9931,
    					0.9954,
    					0.997,
    					0.9981,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -2.1736,
    				"std.error": 0.6423,
    				statistic: -3.384,
    				"p.value": 0.0008,
    				"conf.low": -3.4369,
    				"conf.high": -0.9102,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.5882e-15,
    					2.0399e-14,
    					7.2454e-14,
    					2.5041e-13,
    					8.4216e-13,
    					2.756e-12,
    					8.7768e-12,
    					2.7199e-11,
    					8.2028e-11,
    					2.4075e-10,
    					6.8765e-10,
    					1.9116e-9,
    					5.1719e-9,
    					1.3619e-8,
    					3.4908e-8,
    					8.7093e-8,
    					2.1152e-7,
    					5.0006e-7,
    					0.0000011509,
    					0.0000025789,
    					0.0000056263,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0032,
    					0.0053,
    					0.0084,
    					0.013,
    					0.0198,
    					0.0293,
    					0.0423,
    					0.0596,
    					0.082,
    					0.1103,
    					0.145,
    					0.1864,
    					0.2343,
    					0.2884,
    					0.3478,
    					0.4111,
    					0.4769,
    					0.5433,
    					0.6085,
    					0.6708,
    					0.7286,
    					0.7809,
    					0.8269,
    					0.8662,
    					0.8989,
    					0.9254,
    					0.9462,
    					0.9621,
    					0.9739,
    					0.9825,
    					0.9886,
    					0.9927,
    					0.9955,
    					0.9972,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.9759,
    				"std.error": 0.7466,
    				statistic: 2.6464,
    				"p.value": 0.0085,
    				"conf.low": 0.5073,
    				"conf.high": 3.4446,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					6.5853e-21,
    					3.5199e-20,
    					1.8223e-19,
    					9.1372e-19,
    					4.4376e-18,
    					2.0874e-17,
    					9.5111e-17,
    					4.1976e-16,
    					1.7944e-15,
    					7.4306e-15,
    					2.9806e-14,
    					1.1582e-13,
    					4.3594e-13,
    					1.5896e-12,
    					5.6155e-12,
    					1.9218e-11,
    					6.3721e-11,
    					2.047e-10,
    					6.3711e-10,
    					1.9214e-9,
    					5.6145e-9,
    					1.5898e-8,
    					4.3625e-8,
    					1.1601e-7,
    					2.9898e-7,
    					7.4681e-7,
    					0.0000018081,
    					0.0000042437,
    					0.0000096552,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0023,
    					0.004,
    					0.0067,
    					0.0109,
    					0.0172,
    					0.0265,
    					0.0396,
    					0.0575,
    					0.0813,
    					0.1119,
    					0.15,
    					0.1958,
    					0.2492,
    					0.3095,
    					0.3755,
    					0.4453,
    					0.5168,
    					0.5879,
    					0.6561,
    					0.7196,
    					0.7768,
    					0.8267,
    					0.8688,
    					0.9033,
    					0.9306,
    					0.9516,
    					0.9671,
    					0.9783,
    					0.9861,
    					0.9913,
    					0.9948,
    					0.9969,
    					0.9982,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 71,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option4",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.0762,
    				"std.error": 0.3769,
    				statistic: 16.1222,
    				"p.value": 7.7734e-44,
    				"conf.low": 5.3349,
    				"conf.high": 6.8175,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.1253e-13,
    					3.8007e-13,
    					1.2499e-12,
    					4.0022e-12,
    					1.2478e-11,
    					3.7882e-11,
    					1.1198e-10,
    					3.2235e-10,
    					9.0361e-10,
    					2.4667e-9,
    					6.5574e-9,
    					1.6977e-8,
    					4.2808e-8,
    					1.0513e-7,
    					2.5147e-7,
    					5.8591e-7,
    					0.0000013298,
    					0.00000294,
    					0.0000063326,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0033,
    					0.0053,
    					0.0085,
    					0.0131,
    					0.0198,
    					0.0292,
    					0.042,
    					0.059,
    					0.081,
    					0.1086,
    					0.1425,
    					0.183,
    					0.2299,
    					0.2828,
    					0.3411,
    					0.4033,
    					0.4682,
    					0.5339,
    					0.5986,
    					0.6608,
    					0.7189,
    					0.7717,
    					0.8184,
    					0.8586,
    					0.8923,
    					0.9198,
    					0.9416,
    					0.9585,
    					0.9712,
    					0.9804,
    					0.9871,
    					0.9916,
    					0.9947,
    					0.9968,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5074,
    				"std.error": 0.4363,
    				statistic: -1.1629,
    				"p.value": 0.2457,
    				"conf.low": -1.3656,
    				"conf.high": 0.3508,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.9358e-24,
    					1.2083e-23,
    					7.3024e-23,
    					4.273e-22,
    					2.421e-21,
    					1.3281e-20,
    					7.0547e-20,
    					3.6285e-19,
    					1.8071e-18,
    					8.7145e-18,
    					4.0694e-17,
    					1.8402e-16,
    					8.0577e-16,
    					3.4168e-15,
    					1.4031e-14,
    					5.5795e-14,
    					2.1488e-13,
    					8.0144e-13,
    					2.895e-12,
    					1.0128e-11,
    					3.4319e-11,
    					1.1263e-10,
    					3.5806e-10,
    					1.1026e-9,
    					3.2888e-9,
    					9.5034e-9,
    					2.6603e-8,
    					7.215e-8,
    					1.8959e-7,
    					4.8269e-7,
    					0.0000011908,
    					0.0000028469,
    					0.0000065962,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0018,
    					0.0031,
    					0.0054,
    					0.0089,
    					0.0143,
    					0.0222,
    					0.0337,
    					0.0496,
    					0.0711,
    					0.099,
    					0.1342,
    					0.1772,
    					0.2279,
    					0.286,
    					0.3503,
    					0.4192,
    					0.4906,
    					0.5624,
    					0.6322,
    					0.6978,
    					0.7577,
    					0.8104,
    					0.8554,
    					0.8926,
    					0.9223,
    					0.9454,
    					0.9626,
    					0.9752,
    					0.984,
    					0.9899,
    					0.9939,
    					0.9964,
    					0.9979,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.264,
    				"std.error": 0.7414,
    				statistic: -1.705,
    				"p.value": 0.0891,
    				"conf.low": -2.7223,
    				"conf.high": 0.1942,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.1915e-15,
    					3.767e-15,
    					1.1667e-14,
    					3.5401e-14,
    					1.0523e-13,
    					3.0648e-13,
    					8.7446e-13,
    					2.4445e-12,
    					6.6949e-12,
    					1.7965e-11,
    					4.7232e-11,
    					1.2167e-10,
    					3.0709e-10,
    					7.5944e-10,
    					1.8403e-9,
    					4.3696e-9,
    					1.0167e-8,
    					2.318e-8,
    					5.1789e-8,
    					1.1339e-7,
    					2.4329e-7,
    					5.116e-7,
    					0.0000010543,
    					0.0000021296,
    					0.0000042159,
    					0.0000081807,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0033,
    					0.005,
    					0.0075,
    					0.0111,
    					0.016,
    					0.0228,
    					0.0318,
    					0.0436,
    					0.0587,
    					0.0776,
    					0.1008,
    					0.1287,
    					0.1615,
    					0.1994,
    					0.2421,
    					0.2894,
    					0.3407,
    					0.395,
    					0.4515,
    					0.509,
    					0.5663,
    					0.6222,
    					0.6757,
    					0.7258,
    					0.7717,
    					0.813,
    					0.8493,
    					0.8806,
    					0.9069,
    					0.9288,
    					0.9464,
    					0.9604,
    					0.9713,
    					0.9795,
    					0.9857,
    					0.9902,
    					0.9934,
    					0.9956,
    					0.9972,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5475,
    				"std.error": 0.867,
    				statistic: 1.785,
    				"p.value": 0.0752,
    				"conf.low": -0.1578,
    				"conf.high": 3.2528,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.7175e-14,
    					8.7792e-14,
    					2.7701e-13,
    					8.5369e-13,
    					2.5697e-12,
    					7.5553e-12,
    					2.1697e-11,
    					6.0865e-11,
    					1.6678e-10,
    					4.4639e-10,
    					1.1672e-9,
    					2.9811e-9,
    					7.4385e-9,
    					1.8132e-8,
    					4.3182e-8,
    					1.0047e-7,
    					2.2839e-7,
    					5.0729e-7,
    					0.0000011009,
    					0.0000023347,
    					0.0000048382,
    					0.0000097981,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0033,
    					0.0051,
    					0.0079,
    					0.012,
    					0.0178,
    					0.0258,
    					0.0366,
    					0.0508,
    					0.0691,
    					0.0922,
    					0.1205,
    					0.1544,
    					0.1941,
    					0.2394,
    					0.29,
    					0.3451,
    					0.4037,
    					0.4646,
    					0.5263,
    					0.5874,
    					0.6464,
    					0.7021,
    					0.7534,
    					0.7996,
    					0.8401,
    					0.8749,
    					0.904,
    					0.9278,
    					0.9468,
    					0.9616,
    					0.9728,
    					0.9812,
    					0.9872,
    					0.9915,
    					0.9945,
    					0.9965,
    					0.9978,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 72,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option4",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.8974,
    				"std.error": 0.463,
    				statistic: 14.8984,
    				"p.value": 7.1925e-36,
    				"conf.low": 5.9853,
    				"conf.high": 7.8094,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					4.8416e-15,
    					1.3795e-14,
    					3.8614e-14,
    					1.0619e-13,
    					2.869e-13,
    					7.6153e-13,
    					1.9859e-12,
    					5.0883e-12,
    					1.2809e-11,
    					3.1679e-11,
    					7.698e-11,
    					1.838e-10,
    					4.3117e-10,
    					9.9383e-10,
    					2.2509e-9,
    					5.0091e-9,
    					1.0953e-8,
    					2.3536e-8,
    					4.9695e-8,
    					1.0311e-7,
    					2.1024e-7,
    					4.2126e-7,
    					8.2953e-7,
    					0.0000016053,
    					0.0000030533,
    					0.0000057075,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0012,
    					0.0018,
    					0.0027,
    					0.0041,
    					0.006,
    					0.0088,
    					0.0125,
    					0.0176,
    					0.0243,
    					0.033,
    					0.0441,
    					0.0582,
    					0.0755,
    					0.0965,
    					0.1214,
    					0.1507,
    					0.1842,
    					0.2221,
    					0.264,
    					0.3097,
    					0.3584,
    					0.4097,
    					0.4625,
    					0.5159,
    					0.5691,
    					0.6211,
    					0.671,
    					0.7179,
    					0.7614,
    					0.801,
    					0.8363,
    					0.8673,
    					0.8939,
    					0.9165,
    					0.9353,
    					0.9506,
    					0.9628,
    					0.9725,
    					0.98,
    					0.9856,
    					0.9899,
    					0.993,
    					0.9952,
    					0.9968,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1523,
    				"std.error": 0.5409,
    				statistic: -2.1301,
    				"p.value": 0.0342,
    				"conf.low": -2.2179,
    				"conf.high": -0.0866,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.4504e-12,
    					4.0486e-12,
    					1.1069e-11,
    					2.964e-11,
    					7.7736e-11,
    					1.9969e-10,
    					5.0244e-10,
    					1.2383e-9,
    					2.9892e-9,
    					7.0684e-9,
    					1.6373e-8,
    					3.715e-8,
    					8.2575e-8,
    					1.7981e-7,
    					3.8358e-7,
    					8.0167e-7,
    					0.0000016415,
    					0.0000032932,
    					0.0000064736,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0029,
    					0.0045,
    					0.0068,
    					0.0101,
    					0.0148,
    					0.0211,
    					0.0297,
    					0.041,
    					0.0555,
    					0.0738,
    					0.0964,
    					0.1236,
    					0.1559,
    					0.1933,
    					0.2357,
    					0.2828,
    					0.334,
    					0.3885,
    					0.4453,
    					0.5032,
    					0.5611,
    					0.6177,
    					0.6718,
    					0.7226,
    					0.7692,
    					0.8111,
    					0.8479,
    					0.8796,
    					0.9064,
    					0.9285,
    					0.9463,
    					0.9604,
    					0.9714,
    					0.9797,
    					0.9858,
    					0.9903,
    					0.9935,
    					0.9957,
    					0.9972,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -2.0852,
    				"std.error": 0.7783,
    				statistic: -2.6792,
    				"p.value": 0.0079,
    				"conf.low": -3.6184,
    				"conf.high": -0.552,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.3218e-11,
    					1.0668e-10,
    					2.5852e-10,
    					6.1499e-10,
    					1.4362e-9,
    					3.2926e-9,
    					7.4107e-9,
    					1.6375e-8,
    					3.5522e-8,
    					7.5657e-8,
    					1.5821e-7,
    					3.2482e-7,
    					6.5482e-7,
    					0.0000012962,
    					0.0000025193,
    					0.0000048083,
    					0.0000090119,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0028,
    					0.0042,
    					0.0062,
    					0.0091,
    					0.013,
    					0.0184,
    					0.0256,
    					0.035,
    					0.047,
    					0.0622,
    					0.0808,
    					0.1035,
    					0.1304,
    					0.1619,
    					0.1979,
    					0.2384,
    					0.283,
    					0.3312,
    					0.3825,
    					0.4359,
    					0.4905,
    					0.5453,
    					0.5992,
    					0.6513,
    					0.7007,
    					0.7466,
    					0.7886,
    					0.8261,
    					0.8592,
    					0.8877,
    					0.9118,
    					0.9318,
    					0.9481,
    					0.9612,
    					0.9714,
    					0.9793,
    					0.9853,
    					0.9897,
    					0.9929,
    					0.9952,
    					0.9968,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.1924,
    				"std.error": 0.9119,
    				statistic: 2.4042,
    				"p.value": 0.017,
    				"conf.low": 0.3959,
    				"conf.high": 3.9888,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.9576e-15,
    					6.2711e-15,
    					1.9664e-14,
    					6.0362e-14,
    					1.8138e-13,
    					5.3352e-13,
    					1.5363e-12,
    					4.3308e-12,
    					1.1952e-11,
    					3.2289e-11,
    					8.5403e-11,
    					2.2115e-10,
    					5.6065e-10,
    					1.3916e-9,
    					3.3817e-9,
    					8.0464e-9,
    					1.8746e-8,
    					4.2761e-8,
    					9.5514e-8,
    					2.0891e-7,
    					4.4745e-7,
    					9.3849e-7,
    					0.0000019277,
    					0.0000038778,
    					0.00000764,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0022,
    					0.0034,
    					0.0053,
    					0.008,
    					0.0118,
    					0.0172,
    					0.0245,
    					0.0342,
    					0.047,
    					0.0633,
    					0.0837,
    					0.1087,
    					0.1387,
    					0.1739,
    					0.2143,
    					0.2597,
    					0.3095,
    					0.3632,
    					0.4197,
    					0.4778,
    					0.5365,
    					0.5944,
    					0.6503,
    					0.7031,
    					0.7519,
    					0.7961,
    					0.8352,
    					0.8691,
    					0.8978,
    					0.9217,
    					0.9411,
    					0.9565,
    					0.9684,
    					0.9775,
    					0.9843,
    					0.9893,
    					0.9928,
    					0.9953,
    					0.9969,
    					0.9981,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 73,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option5",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.8457,
    				"std.error": 0.4048,
    				statistic: 16.9122,
    				"p.value": 5.4386e-47,
    				"conf.low": 6.0495,
    				"conf.high": 7.6419,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.2881e-18,
    					4.9452e-18,
    					1.8549e-17,
    					6.7973e-17,
    					2.4337e-16,
    					8.5136e-16,
    					2.9099e-15,
    					9.7177e-15,
    					3.1708e-14,
    					1.0109e-13,
    					3.1493e-13,
    					9.5862e-13,
    					2.8512e-12,
    					8.2867e-12,
    					2.3534e-11,
    					6.5313e-11,
    					1.7713e-10,
    					4.6943e-10,
    					1.2158e-9,
    					3.0772e-9,
    					7.6119e-9,
    					1.8402e-8,
    					4.3481e-8,
    					1.0041e-7,
    					2.2666e-7,
    					5.0009e-7,
    					0.0000010786,
    					0.0000022739,
    					0.0000046865,
    					0.000009443,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0019,
    					0.003,
    					0.0048,
    					0.0074,
    					0.0112,
    					0.0166,
    					0.0241,
    					0.0342,
    					0.0476,
    					0.0649,
    					0.0867,
    					0.1135,
    					0.1458,
    					0.1838,
    					0.2274,
    					0.2762,
    					0.3298,
    					0.387,
    					0.4469,
    					0.5079,
    					0.5688,
    					0.6281,
    					0.6845,
    					0.7369,
    					0.7844,
    					0.8266,
    					0.8631,
    					0.8939,
    					0.9194,
    					0.94,
    					0.9562,
    					0.9687,
    					0.9781,
    					0.9849,
    					0.9899,
    					0.9933,
    					0.9957,
    					0.9973,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.2317,
    				"std.error": 0.5047,
    				statistic: -2.4405,
    				"p.value": 0.0152,
    				"conf.low": -2.2243,
    				"conf.high": -0.239,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.1781e-13,
    					3.7293e-13,
    					1.1526e-12,
    					3.4782e-12,
    					1.0248e-11,
    					2.9481e-11,
    					8.281e-11,
    					2.2713e-10,
    					6.0829e-10,
    					1.5908e-9,
    					4.0626e-9,
    					1.0132e-8,
    					2.4675e-8,
    					5.8688e-8,
    					1.3633e-7,
    					3.0928e-7,
    					6.8531e-7,
    					0.0000014832,
    					0.0000031357,
    					0.0000064757,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0026,
    					0.0041,
    					0.0064,
    					0.0099,
    					0.0148,
    					0.0217,
    					0.0312,
    					0.0439,
    					0.0604,
    					0.0815,
    					0.1077,
    					0.1395,
    					0.177,
    					0.2205,
    					0.2694,
    					0.3233,
    					0.3812,
    					0.4419,
    					0.504,
    					0.5659,
    					0.6263,
    					0.6838,
    					0.7371,
    					0.7854,
    					0.8281,
    					0.8649,
    					0.8959,
    					0.9214,
    					0.9419,
    					0.9579,
    					0.9702,
    					0.9793,
    					0.9859,
    					0.9906,
    					0.9939,
    					0.9961,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.6359,
    				"std.error": 0.5584,
    				statistic: -2.9295,
    				"p.value": 0.0036,
    				"conf.low": -2.7343,
    				"conf.high": -0.5375,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.4832e-23,
    					2.3032e-22,
    					1.4686e-21,
    					9.0293e-21,
    					5.3534e-20,
    					3.0607e-19,
    					1.6875e-18,
    					8.9722e-18,
    					4.6004e-17,
    					2.2748e-16,
    					1.0848e-15,
    					4.9892e-15,
    					2.2131e-14,
    					9.4677e-14,
    					3.9066e-13,
    					1.5548e-12,
    					5.9687e-12,
    					2.2102e-11,
    					7.8949e-11,
    					2.7205e-10,
    					9.0436e-10,
    					2.9004e-9,
    					8.9745e-9,
    					2.6794e-8,
    					7.7187e-8,
    					2.1457e-7,
    					5.7565e-7,
    					0.0000014905,
    					0.0000037249,
    					0.0000089861,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0016,
    					0.0029,
    					0.0052,
    					0.0089,
    					0.0146,
    					0.0234,
    					0.0362,
    					0.0543,
    					0.0788,
    					0.111,
    					0.1516,
    					0.2011,
    					0.2591,
    					0.3248,
    					0.3964,
    					0.4717,
    					0.548,
    					0.6226,
    					0.6929,
    					0.7567,
    					0.8126,
    					0.8598,
    					0.8981,
    					0.9282,
    					0.951,
    					0.9676,
    					0.9792,
    					0.9871,
    					0.9923,
    					0.9955,
    					0.9975,
    					0.9986,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.4271,
    				"std.error": 0.69,
    				statistic: 2.0683,
    				"p.value": 0.0394,
    				"conf.low": 0.0699,
    				"conf.high": 2.7843,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					8.824e-21,
    					5.3726e-20,
    					3.151e-19,
    					1.7802e-18,
    					9.6883e-18,
    					5.0793e-17,
    					2.5653e-16,
    					1.2482e-15,
    					5.8506e-15,
    					2.642e-14,
    					1.1495e-13,
    					4.8185e-13,
    					1.9461e-12,
    					7.5734e-12,
    					2.8399e-11,
    					1.0261e-10,
    					3.5729e-10,
    					1.1989e-9,
    					3.8771e-9,
    					1.2084e-8,
    					3.6301e-8,
    					1.0512e-7,
    					2.9341e-7,
    					7.8958e-7,
    					0.0000020486,
    					0.0000051248,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0021,
    					0.0039,
    					0.0068,
    					0.0116,
    					0.0189,
    					0.0299,
    					0.0457,
    					0.0676,
    					0.097,
    					0.1347,
    					0.1814,
    					0.2372,
    					0.3013,
    					0.3721,
    					0.4476,
    					0.5251,
    					0.6016,
    					0.6744,
    					0.741,
    					0.7999,
    					0.8498,
    					0.8907,
    					0.9229,
    					0.9473,
    					0.9652,
    					0.9777,
    					0.9862,
    					0.9917,
    					0.9952,
    					0.9973,
    					0.9986,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 74,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option5",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2369,
    				"std.error": 0.3296,
    				statistic: 18.9198,
    				"p.value": 4.7864e-55,
    				"conf.low": 5.5885,
    				"conf.high": 6.8853,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.6208e-19,
    					1.9333e-18,
    					9.9663e-18,
    					4.9608e-17,
    					2.3842e-16,
    					1.1065e-15,
    					4.9581e-15,
    					2.1454e-14,
    					8.9645e-14,
    					3.6172e-13,
    					1.4095e-12,
    					5.3041e-12,
    					1.9276e-11,
    					6.766e-11,
    					2.2937e-10,
    					7.5104e-10,
    					2.3754e-9,
    					7.2571e-9,
    					2.1418e-8,
    					6.1065e-8,
    					1.6821e-7,
    					4.4767e-7,
    					0.0000011512,
    					0.0000028609,
    					0.0000068706,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0023,
    					0.004,
    					0.0069,
    					0.0115,
    					0.0185,
    					0.0289,
    					0.0437,
    					0.0641,
    					0.0913,
    					0.1263,
    					0.1696,
    					0.2215,
    					0.2814,
    					0.3482,
    					0.4201,
    					0.4947,
    					0.5695,
    					0.6419,
    					0.7096,
    					0.7705,
    					0.8236,
    					0.8681,
    					0.9042,
    					0.9325,
    					0.9538,
    					0.9694,
    					0.9803,
    					0.9877,
    					0.9926,
    					0.9957,
    					0.9976,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.8058,
    				"std.error": 0.403,
    				statistic: -1.9996,
    				"p.value": 0.0463,
    				"conf.low": -1.5984,
    				"conf.high": -0.0132,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					7.0465e-25,
    					5.2089e-24,
    					3.7074e-23,
    					2.5408e-22,
    					1.6766e-21,
    					1.0653e-20,
    					6.5174e-20,
    					3.8395e-19,
    					2.1781e-18,
    					1.1898e-17,
    					6.2591e-17,
    					3.1707e-16,
    					1.5468e-15,
    					7.2672e-15,
    					3.2881e-14,
    					1.4328e-13,
    					6.0136e-13,
    					2.4309e-12,
    					9.4646e-12,
    					3.5495e-11,
    					1.2823e-10,
    					4.4623e-10,
    					1.4959e-9,
    					4.8315e-9,
    					1.5034e-8,
    					4.5075e-8,
    					1.3022e-7,
    					3.6253e-7,
    					9.7265e-7,
    					0.0000025151,
    					0.0000062689,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0007,
    					0.0014,
    					0.0025,
    					0.0045,
    					0.0079,
    					0.0133,
    					0.0216,
    					0.0339,
    					0.0514,
    					0.0756,
    					0.1075,
    					0.1481,
    					0.1979,
    					0.2567,
    					0.3235,
    					0.3965,
    					0.4733,
    					0.5511,
    					0.627,
    					0.6983,
    					0.7627,
    					0.8187,
    					0.8656,
    					0.9035,
    					0.9328,
    					0.9547,
    					0.9705,
    					0.9814,
    					0.9887,
    					0.9933,
    					0.9962,
    					0.9979,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.9244,
    				"std.error": 0.633,
    				statistic: -1.4602,
    				"p.value": 0.1451,
    				"conf.low": -2.1695,
    				"conf.high": 0.3208,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.0057e-23,
    					2.6383e-22,
    					1.3517e-21,
    					6.732e-21,
    					3.2593e-20,
    					1.534e-19,
    					7.0184e-19,
    					3.1217e-18,
    					1.3498e-17,
    					5.6739e-17,
    					2.3187e-16,
    					9.2122e-16,
    					3.5582e-15,
    					1.3362e-14,
    					4.8785e-14,
    					1.7317e-13,
    					5.9767e-13,
    					2.0056e-12,
    					6.5439e-12,
    					2.0761e-11,
    					6.4045e-11,
    					1.9212e-10,
    					5.6041e-10,
    					1.5897e-9,
    					4.3853e-9,
    					1.1765e-8,
    					3.0697e-8,
    					7.7899e-8,
    					1.9228e-7,
    					4.6163e-7,
    					0.0000010781,
    					0.0000024493,
    					0.0000054134,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0012,
    					0.002,
    					0.0034,
    					0.0055,
    					0.0089,
    					0.0139,
    					0.0211,
    					0.0312,
    					0.0451,
    					0.0636,
    					0.0876,
    					0.1177,
    					0.1544,
    					0.1981,
    					0.2485,
    					0.305,
    					0.3665,
    					0.4317,
    					0.4989,
    					0.566,
    					0.6314,
    					0.6931,
    					0.7497,
    					0.8003,
    					0.8442,
    					0.8812,
    					0.9115,
    					0.9357,
    					0.9543,
    					0.9684,
    					0.9787,
    					0.9859,
    					0.991,
    					0.9944,
    					0.9966,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.2177,
    				"std.error": 0.7963,
    				statistic: 1.5291,
    				"p.value": 0.1272,
    				"conf.low": -0.3487,
    				"conf.high": 2.784,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.8001e-15,
    					1.419e-14,
    					5.1528e-14,
    					1.8195e-13,
    					6.2479e-13,
    					2.0864e-12,
    					6.7754e-12,
    					2.1398e-11,
    					6.5726e-11,
    					1.9634e-10,
    					5.7045e-10,
    					1.612e-9,
    					4.4309e-9,
    					1.1846e-8,
    					3.0809e-8,
    					7.7943e-8,
    					1.9183e-7,
    					4.593e-7,
    					0.0000010699,
    					0.000002425,
    					0.0000053481,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0033,
    					0.0054,
    					0.0087,
    					0.0135,
    					0.0205,
    					0.0305,
    					0.0441,
    					0.0622,
    					0.0856,
    					0.1151,
    					0.1512,
    					0.1942,
    					0.2438,
    					0.2996,
    					0.3606,
    					0.4253,
    					0.4921,
    					0.5592,
    					0.6246,
    					0.6865,
    					0.7436,
    					0.7948,
    					0.8393,
    					0.877,
    					0.9081,
    					0.9329,
    					0.9521,
    					0.9667,
    					0.9774,
    					0.9851,
    					0.9904,
    					0.9939,
    					0.9963,
    					0.9978,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 75,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option5",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.8457,
    				"std.error": 0.401,
    				statistic: 17.0708,
    				"p.value": 3.7791e-43,
    				"conf.low": 6.0557,
    				"conf.high": 7.6357,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					6.2284e-19,
    					2.4517e-18,
    					9.4247e-18,
    					3.5381e-17,
    					1.2972e-16,
    					4.6445e-16,
    					1.6241e-15,
    					5.5463e-15,
    					1.8498e-14,
    					6.0257e-14,
    					1.917e-13,
    					5.9567e-13,
    					1.8078e-12,
    					5.3586e-12,
    					1.5514e-11,
    					4.3874e-11,
    					1.2119e-10,
    					3.2699e-10,
    					8.6183e-10,
    					2.2189e-9,
    					5.5805e-9,
    					1.3711e-8,
    					3.291e-8,
    					7.7171e-8,
    					1.768e-7,
    					3.9574e-7,
    					8.6549e-7,
    					0.0000018495,
    					0.0000038621,
    					0.0000078808,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0028,
    					0.0045,
    					0.007,
    					0.0106,
    					0.0158,
    					0.0231,
    					0.033,
    					0.0461,
    					0.0631,
    					0.0847,
    					0.1114,
    					0.1436,
    					0.1815,
    					0.2253,
    					0.2744,
    					0.3283,
    					0.386,
    					0.4464,
    					0.508,
    					0.5695,
    					0.6293,
    					0.6861,
    					0.7388,
    					0.7866,
    					0.8288,
    					0.8653,
    					0.8961,
    					0.9214,
    					0.9417,
    					0.9577,
    					0.9699,
    					0.979,
    					0.9857,
    					0.9905,
    					0.9938,
    					0.996,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.2317,
    				"std.error": 0.5,
    				statistic: -2.4634,
    				"p.value": 0.0145,
    				"conf.low": -2.2166,
    				"conf.high": -0.2467,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					7.0419e-14,
    					2.2772e-13,
    					7.1866e-13,
    					2.2134e-12,
    					6.6527e-12,
    					1.9515e-11,
    					5.5871e-11,
    					1.5611e-10,
    					4.2575e-10,
    					1.1333e-9,
    					2.9444e-9,
    					7.4669e-9,
    					1.8484e-8,
    					4.4664e-8,
    					1.0536e-7,
    					2.4261e-7,
    					5.4543e-7,
    					0.0000011971,
    					0.0000025654,
    					0.0000053677,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.0038,
    					0.006,
    					0.0093,
    					0.014,
    					0.0208,
    					0.03,
    					0.0424,
    					0.0587,
    					0.0796,
    					0.1056,
    					0.1372,
    					0.1748,
    					0.2183,
    					0.2675,
    					0.3218,
    					0.3801,
    					0.4413,
    					0.504,
    					0.5665,
    					0.6275,
    					0.6853,
    					0.739,
    					0.7875,
    					0.8303,
    					0.8671,
    					0.8981,
    					0.9234,
    					0.9436,
    					0.9594,
    					0.9713,
    					0.9802,
    					0.9867,
    					0.9912,
    					0.9943,
    					0.9964,
    					0.9978,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.5332,
    				"std.error": 0.665,
    				statistic: -2.3055,
    				"p.value": 0.022,
    				"conf.low": -2.8433,
    				"conf.high": -0.2231,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.8164e-17,
    					7.0911e-17,
    					2.6984e-16,
    					1.0009e-15,
    					3.6192e-15,
    					1.2756e-14,
    					4.383e-14,
    					1.4681e-13,
    					4.7934e-13,
    					1.5258e-12,
    					4.7348e-12,
    					1.4324e-11,
    					4.2247e-11,
    					1.2148e-10,
    					3.4057e-10,
    					9.3091e-10,
    					2.481e-9,
    					6.4472e-9,
    					1.6337e-8,
    					4.0365e-8,
    					9.7257e-8,
    					2.2852e-7,
    					5.2364e-7,
    					0.0000011702,
    					0.0000025507,
    					0.0000054229,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0026,
    					0.0043,
    					0.0068,
    					0.0105,
    					0.0159,
    					0.0236,
    					0.0341,
    					0.0482,
    					0.0666,
    					0.09,
    					0.119,
    					0.1541,
    					0.1955,
    					0.2429,
    					0.296,
    					0.3538,
    					0.4153,
    					0.4789,
    					0.543,
    					0.606,
    					0.6664,
    					0.7227,
    					0.7739,
    					0.8193,
    					0.8586,
    					0.8916,
    					0.9186,
    					0.9402,
    					0.9571,
    					0.9699,
    					0.9793,
    					0.9861,
    					0.9909,
    					0.9942,
    					0.9964,
    					0.9978,
    					0.9987,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.6436,
    				"std.error": 0.8394,
    				statistic: 1.958,
    				"p.value": 0.0514,
    				"conf.low": -0.0101,
    				"conf.high": 3.2972,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.6046e-15,
    					5.7003e-15,
    					1.9747e-14,
    					6.6709e-14,
    					2.1975e-13,
    					7.0595e-13,
    					2.2116e-12,
    					6.7566e-12,
    					2.0131e-11,
    					5.8495e-11,
    					1.6577e-10,
    					4.5816e-10,
    					1.2351e-9,
    					3.2473e-9,
    					8.3278e-9,
    					2.0832e-8,
    					5.0831e-8,
    					1.2099e-7,
    					2.8093e-7,
    					6.3638e-7,
    					0.0000014064,
    					0.0000030324,
    					0.0000063797,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0028,
    					0.0046,
    					0.0072,
    					0.0112,
    					0.0168,
    					0.0247,
    					0.0355,
    					0.0499,
    					0.0687,
    					0.0925,
    					0.1219,
    					0.1573,
    					0.1988,
    					0.2464,
    					0.2994,
    					0.3571,
    					0.4183,
    					0.4815,
    					0.5452,
    					0.6078,
    					0.6677,
    					0.7235,
    					0.7744,
    					0.8194,
    					0.8584,
    					0.8912,
    					0.9182,
    					0.9398,
    					0.9566,
    					0.9695,
    					0.979,
    					0.9858,
    					0.9907,
    					0.994,
    					0.9962,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 76,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4323,
    				"std.error": 0.4715,
    				statistic: 13.6433,
    				"p.value": 3.4829e-31,
    				"conf.low": 5.5032,
    				"conf.high": 7.3614,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.8303e-11,
    					4.4241e-11,
    					1.0513e-10,
    					2.4562e-10,
    					5.642e-10,
    					1.2742e-9,
    					2.8293e-9,
    					6.1768e-9,
    					1.3259e-8,
    					2.7985e-8,
    					5.8077e-8,
    					1.1851e-7,
    					2.3781e-7,
    					4.6924e-7,
    					9.1047e-7,
    					0.0000017373,
    					0.0000032599,
    					0.0000060157,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0026,
    					0.0039,
    					0.0057,
    					0.0082,
    					0.0116,
    					0.0163,
    					0.0225,
    					0.0305,
    					0.0408,
    					0.0537,
    					0.0697,
    					0.0891,
    					0.1123,
    					0.1395,
    					0.1708,
    					0.2064,
    					0.2459,
    					0.2893,
    					0.3359,
    					0.3852,
    					0.4364,
    					0.4887,
    					0.5412,
    					0.5929,
    					0.6432,
    					0.691,
    					0.7358,
    					0.777,
    					0.8143,
    					0.8475,
    					0.8765,
    					0.9014,
    					0.9224,
    					0.9398,
    					0.954,
    					0.9653,
    					0.9743,
    					0.9812,
    					0.9865,
    					0.9904,
    					0.9933,
    					0.9954,
    					0.9969,
    					0.998,
    					0.9987,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.3829,
    				"std.error": 0.6186,
    				statistic: -2.2358,
    				"p.value": 0.0264,
    				"conf.low": -2.6019,
    				"conf.high": -0.1639,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.9234e-9,
    					1.0354e-8,
    					2.1432e-8,
    					4.3671e-8,
    					8.7596e-8,
    					1.7296e-7,
    					3.3619e-7,
    					6.4329e-7,
    					0.0000012118,
    					0.0000022473,
    					0.0000041031,
    					0.0000073757,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0025,
    					0.0037,
    					0.0054,
    					0.0077,
    					0.0109,
    					0.0151,
    					0.0207,
    					0.0279,
    					0.0371,
    					0.0487,
    					0.063,
    					0.0803,
    					0.101,
    					0.1254,
    					0.1536,
    					0.1858,
    					0.2218,
    					0.2615,
    					0.3045,
    					0.3504,
    					0.3987,
    					0.4485,
    					0.4992,
    					0.5499,
    					0.5997,
    					0.648,
    					0.6941,
    					0.7372,
    					0.777,
    					0.8131,
    					0.8454,
    					0.8737,
    					0.8982,
    					0.9191,
    					0.9365,
    					0.9509,
    					0.9625,
    					0.9718,
    					0.9791,
    					0.9847,
    					0.989,
    					0.9922,
    					0.9945,
    					0.9962,
    					0.9974,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.4784,
    				"std.error": 0.6276,
    				statistic: -2.3557,
    				"p.value": 0.0194,
    				"conf.low": -2.7152,
    				"conf.high": -0.2416,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					9.9316e-20,
    					4.6409e-19,
    					2.1072e-18,
    					9.2965e-18,
    					3.9853e-17,
    					1.6601e-16,
    					6.7195e-16,
    					2.6429e-15,
    					1.0102e-14,
    					3.7519e-14,
    					1.3542e-13,
    					4.7498e-13,
    					1.6191e-12,
    					5.3635e-12,
    					1.7268e-11,
    					5.403e-11,
    					1.6431e-10,
    					4.8568e-10,
    					1.3953e-9,
    					3.8965e-9,
    					1.0577e-8,
    					2.791e-8,
    					7.1593e-8,
    					1.7853e-7,
    					4.3285e-7,
    					0.0000010203,
    					0.0000023386,
    					0.0000052121,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0034,
    					0.0057,
    					0.0091,
    					0.0142,
    					0.0217,
    					0.0322,
    					0.0466,
    					0.0658,
    					0.0905,
    					0.1216,
    					0.1595,
    					0.2044,
    					0.2561,
    					0.314,
    					0.3767,
    					0.4429,
    					0.5108,
    					0.5783,
    					0.6437,
    					0.705,
    					0.761,
    					0.8106,
    					0.8533,
    					0.889,
    					0.918,
    					0.9409,
    					0.9584,
    					0.9715,
    					0.981,
    					0.9876,
    					0.9921,
    					0.9951,
    					0.9971,
    					0.9983,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.2105,
    				"std.error": 0.8408,
    				statistic: 2.6289,
    				"p.value": 0.0092,
    				"conf.low": 0.5534,
    				"conf.high": 3.8675,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					6.5216e-18,
    					2.5654e-17,
    					9.8407e-17,
    					3.6811e-16,
    					1.3428e-15,
    					4.7771e-15,
    					1.6573e-14,
    					5.607e-14,
    					1.8501e-13,
    					5.9533e-13,
    					1.8683e-12,
    					5.7186e-12,
    					1.7071e-11,
    					4.9705e-11,
    					1.4115e-10,
    					3.9099e-10,
    					1.0564e-9,
    					2.784e-9,
    					7.157e-9,
    					1.7948e-8,
    					4.3907e-8,
    					1.0479e-7,
    					2.4398e-7,
    					5.5424e-7,
    					0.0000012284,
    					0.0000026565,
    					0.0000056058,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0026,
    					0.0042,
    					0.0066,
    					0.0103,
    					0.0155,
    					0.0229,
    					0.033,
    					0.0466,
    					0.0644,
    					0.0871,
    					0.1152,
    					0.1492,
    					0.1894,
    					0.2356,
    					0.2875,
    					0.3442,
    					0.4046,
    					0.4674,
    					0.531,
    					0.5939,
    					0.6544,
    					0.7112,
    					0.7631,
    					0.8095,
    					0.8498,
    					0.884,
    					0.9123,
    					0.9351,
    					0.953,
    					0.9667,
    					0.9769,
    					0.9844,
    					0.9896,
    					0.9933,
    					0.9958,
    					0.9974,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 77,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.6579,
    				"std.error": 0.3721,
    				statistic: 15.2048,
    				"p.value": 2.958e-36,
    				"conf.low": 4.9246,
    				"conf.high": 6.3912,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.4606e-10,
    					4.2326e-10,
    					1.1936e-9,
    					3.2757e-9,
    					8.749e-9,
    					2.2742e-8,
    					5.7534e-8,
    					1.4167e-7,
    					3.3955e-7,
    					7.9217e-7,
    					0.0000017991,
    					0.0000039778,
    					0.0000085623,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0026,
    					0.0043,
    					0.0069,
    					0.0108,
    					0.0166,
    					0.0249,
    					0.0363,
    					0.0518,
    					0.072,
    					0.0978,
    					0.1298,
    					0.1685,
    					0.2138,
    					0.2655,
    					0.323,
    					0.385,
    					0.4501,
    					0.5165,
    					0.5826,
    					0.6463,
    					0.7062,
    					0.7609,
    					0.8096,
    					0.8516,
    					0.8869,
    					0.9158,
    					0.9387,
    					0.9565,
    					0.9698,
    					0.9796,
    					0.9865,
    					0.9913,
    					0.9945,
    					0.9967,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5467,
    				"std.error": 0.5031,
    				statistic: -1.0867,
    				"p.value": 0.2784,
    				"conf.low": -1.538,
    				"conf.high": 0.4447,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.4917e-18,
    					5.8689e-18,
    					2.2538e-17,
    					8.4483e-17,
    					3.0911e-16,
    					1.104e-15,
    					3.8486e-15,
    					1.3097e-14,
    					4.3505e-14,
    					1.4107e-13,
    					4.4654e-13,
    					1.3798e-12,
    					4.1623e-12,
    					1.2257e-11,
    					3.5238e-11,
    					9.8901e-11,
    					2.71e-10,
    					7.2499e-10,
    					1.8936e-9,
    					4.8291e-9,
    					1.2024e-8,
    					2.9235e-8,
    					6.9405e-8,
    					1.609e-7,
    					3.6425e-7,
    					8.0527e-7,
    					0.0000017386,
    					0.0000036663,
    					0.0000075509,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0018,
    					0.0029,
    					0.0046,
    					0.0072,
    					0.011,
    					0.0164,
    					0.024,
    					0.0343,
    					0.048,
    					0.0657,
    					0.0882,
    					0.116,
    					0.1495,
    					0.1889,
    					0.2341,
    					0.2848,
    					0.3401,
    					0.3992,
    					0.4606,
    					0.523,
    					0.5848,
    					0.6446,
    					0.7011,
    					0.753,
    					0.7997,
    					0.8407,
    					0.8757,
    					0.905,
    					0.9288,
    					0.9478,
    					0.9625,
    					0.9736,
    					0.9818,
    					0.9878,
    					0.992,
    					0.9948,
    					0.9967,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.209,
    				"std.error": 0.6944,
    				statistic: -0.3009,
    				"p.value": 0.7638,
    				"conf.low": -1.5775,
    				"conf.high": 1.1596,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					9.8896e-24,
    					4.6178e-23,
    					2.1061e-22,
    					9.382e-22,
    					4.0823e-21,
    					1.735e-20,
    					7.2026e-20,
    					2.9206e-19,
    					1.1568e-18,
    					4.4756e-18,
    					1.6914e-17,
    					6.2439e-17,
    					2.2516e-16,
    					7.9311e-16,
    					2.729e-15,
    					9.1732e-15,
    					3.0121e-14,
    					9.6619e-14,
    					3.0277e-13,
    					9.2685e-13,
    					2.7719e-12,
    					8.0987e-12,
    					2.3117e-11,
    					6.4468e-11,
    					1.7565e-10,
    					4.6759e-10,
    					1.2162e-9,
    					3.0907e-9,
    					7.6748e-9,
    					1.8622e-8,
    					4.4151e-8,
    					1.0229e-7,
    					2.316e-7,
    					5.1244e-7,
    					0.0000011081,
    					0.0000023419,
    					0.0000048375,
    					0.000009767,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0032,
    					0.005,
    					0.0078,
    					0.0117,
    					0.0173,
    					0.0251,
    					0.0357,
    					0.0495,
    					0.0674,
    					0.0899,
    					0.1176,
    					0.1509,
    					0.1898,
    					0.2344,
    					0.2843,
    					0.3387,
    					0.3967,
    					0.4571,
    					0.5185,
    					0.5795,
    					0.6386,
    					0.6946,
    					0.7463,
    					0.7931,
    					0.8343,
    					0.8698,
    					0.8997,
    					0.9242,
    					0.9439,
    					0.9593,
    					0.971,
    					0.9798,
    					0.9863,
    					0.9908,
    					0.994,
    					0.9962,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.2382,
    				"std.error": 0.9269,
    				statistic: 1.3358,
    				"p.value": 0.183,
    				"conf.low": -0.5885,
    				"conf.high": 3.0649,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.0361e-11,
    					2.7632e-11,
    					7.2192e-11,
    					1.8478e-10,
    					4.6334e-10,
    					1.1383e-9,
    					2.7398e-9,
    					6.4612e-9,
    					1.4929e-8,
    					3.3798e-8,
    					7.4974e-8,
    					1.6296e-7,
    					3.471e-7,
    					7.2444e-7,
    					0.0000014817,
    					0.00000297,
    					0.0000058342,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0026,
    					0.0041,
    					0.0062,
    					0.0092,
    					0.0135,
    					0.0194,
    					0.0273,
    					0.0378,
    					0.0513,
    					0.0685,
    					0.0897,
    					0.1155,
    					0.1462,
    					0.1819,
    					0.2227,
    					0.2682,
    					0.3179,
    					0.3712,
    					0.4271,
    					0.4844,
    					0.5421,
    					0.5989,
    					0.6537,
    					0.7055,
    					0.7533,
    					0.7967,
    					0.8351,
    					0.8685,
    					0.8969,
    					0.9206,
    					0.9399,
    					0.9553,
    					0.9674,
    					0.9766,
    					0.9835,
    					0.9886,
    					0.9923,
    					0.9949,
    					0.9967,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 78,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4323,
    				"std.error": 0.4706,
    				statistic: 13.6686,
    				"p.value": 4.4648e-29,
    				"conf.low": 5.5032,
    				"conf.high": 7.3613,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.6842e-11,
    					4.0841e-11,
    					9.7359e-11,
    					2.2816e-10,
    					5.2568e-10,
    					1.1907e-9,
    					2.6516e-9,
    					5.8052e-9,
    					1.2496e-8,
    					2.6445e-8,
    					5.5027e-8,
    					1.1258e-7,
    					2.2647e-7,
    					4.4794e-7,
    					8.7122e-7,
    					0.0000016662,
    					0.0000031336,
    					0.0000057954,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0025,
    					0.0038,
    					0.0056,
    					0.0081,
    					0.0115,
    					0.0161,
    					0.0223,
    					0.0303,
    					0.0405,
    					0.0534,
    					0.0693,
    					0.0887,
    					0.1119,
    					0.139,
    					0.1704,
    					0.2059,
    					0.2455,
    					0.2889,
    					0.3356,
    					0.3849,
    					0.4362,
    					0.4886,
    					0.5412,
    					0.5931,
    					0.6434,
    					0.6913,
    					0.7362,
    					0.7775,
    					0.8148,
    					0.848,
    					0.8769,
    					0.9018,
    					0.9227,
    					0.9401,
    					0.9543,
    					0.9656,
    					0.9745,
    					0.9814,
    					0.9866,
    					0.9906,
    					0.9934,
    					0.9955,
    					0.997,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.3829,
    				"std.error": 0.6174,
    				statistic: -2.2399,
    				"p.value": 0.0264,
    				"conf.low": -2.6018,
    				"conf.high": -0.1641,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.6234e-9,
    					9.7489e-9,
    					2.0234e-8,
    					4.1335e-8,
    					8.3118e-8,
    					1.6452e-7,
    					3.2055e-7,
    					6.148e-7,
    					0.0000011608,
    					0.0000021574,
    					0.0000039475,
    					0.0000071107,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0025,
    					0.0037,
    					0.0053,
    					0.0076,
    					0.0108,
    					0.015,
    					0.0205,
    					0.0277,
    					0.0369,
    					0.0484,
    					0.0626,
    					0.0799,
    					0.1006,
    					0.125,
    					0.1532,
    					0.1853,
    					0.2213,
    					0.2611,
    					0.3042,
    					0.3502,
    					0.3985,
    					0.4484,
    					0.4992,
    					0.5499,
    					0.5999,
    					0.6483,
    					0.6944,
    					0.7376,
    					0.7774,
    					0.8136,
    					0.8458,
    					0.8742,
    					0.8987,
    					0.9195,
    					0.9369,
    					0.9512,
    					0.9628,
    					0.9721,
    					0.9793,
    					0.9849,
    					0.9891,
    					0.9923,
    					0.9946,
    					0.9963,
    					0.9975,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.9833,
    				"std.error": 0.7466,
    				statistic: -1.317,
    				"p.value": 0.1896,
    				"conf.low": -2.4573,
    				"conf.high": 0.4907,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					8.6164e-17,
    					2.8274e-16,
    					9.0919e-16,
    					2.865e-15,
    					8.8468e-15,
    					2.6771e-14,
    					7.9388e-14,
    					2.3071e-13,
    					6.5705e-13,
    					1.8338e-12,
    					5.0161e-12,
    					1.3446e-11,
    					3.5326e-11,
    					9.0959e-11,
    					2.2954e-10,
    					5.6773e-10,
    					1.3763e-9,
    					3.2701e-9,
    					7.6156e-9,
    					1.7385e-8,
    					3.8899e-8,
    					8.5319e-8,
    					1.8344e-7,
    					3.8663e-7,
    					7.9885e-7,
    					0.0000016181,
    					0.0000032134,
    					0.0000062566,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0026,
    					0.0041,
    					0.0061,
    					0.0091,
    					0.0133,
    					0.019,
    					0.0268,
    					0.0369,
    					0.0501,
    					0.0667,
    					0.0873,
    					0.1124,
    					0.1422,
    					0.1769,
    					0.2166,
    					0.261,
    					0.3096,
    					0.3618,
    					0.4168,
    					0.4734,
    					0.5305,
    					0.587,
    					0.6418,
    					0.6938,
    					0.7422,
    					0.7863,
    					0.8256,
    					0.86,
    					0.8895,
    					0.9142,
    					0.9345,
    					0.9509,
    					0.9639,
    					0.9738,
    					0.9814,
    					0.987,
    					0.9911,
    					0.994,
    					0.9961,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.0745,
    				"std.error": 0.9867,
    				statistic: 2.1024,
    				"p.value": 0.037,
    				"conf.low": 0.1265,
    				"conf.high": 4.0224,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.5853e-13,
    					1.2229e-12,
    					3.2029e-12,
    					8.2376e-12,
    					2.0806e-11,
    					5.1604e-11,
    					1.2569e-10,
    					3.0067e-10,
    					7.0631e-10,
    					1.6295e-9,
    					3.6922e-9,
    					8.2164e-9,
    					1.7958e-8,
    					3.8548e-8,
    					8.1274e-8,
    					1.6831e-7,
    					3.4235e-7,
    					6.8402e-7,
    					0.0000013425,
    					0.0000025882,
    					0.0000049018,
    					0.0000091199,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0026,
    					0.004,
    					0.0059,
    					0.0086,
    					0.0124,
    					0.0175,
    					0.0243,
    					0.0331,
    					0.0445,
    					0.0589,
    					0.0766,
    					0.0981,
    					0.1238,
    					0.1538,
    					0.1883,
    					0.2272,
    					0.2702,
    					0.317,
    					0.3669,
    					0.4192,
    					0.4729,
    					0.5272,
    					0.5809,
    					0.6331,
    					0.6831,
    					0.7298,
    					0.7729,
    					0.8118,
    					0.8462,
    					0.8763,
    					0.9019,
    					0.9234,
    					0.9412,
    					0.9555,
    					0.9669,
    					0.9757,
    					0.9825,
    					0.9876,
    					0.9914,
    					0.9941,
    					0.996,
    					0.9974,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 79,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4291,
    				"std.error": 0.412,
    				statistic: 15.6048,
    				"p.value": 4.1101e-39,
    				"conf.low": 5.6178,
    				"conf.high": 7.2404,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.9454e-14,
    					6.1366e-14,
    					1.8929e-13,
    					5.71e-13,
    					1.6844e-12,
    					4.859e-12,
    					1.3708e-11,
    					3.7819e-11,
    					1.0204e-10,
    					2.6928e-10,
    					6.9495e-10,
    					1.7542e-9,
    					4.3307e-9,
    					1.0457e-8,
    					2.4699e-8,
    					5.7061e-8,
    					1.2895e-7,
    					2.8505e-7,
    					6.1642e-7,
    					0.0000013041,
    					0.000002699,
    					0.0000054652,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.0031,
    					0.0048,
    					0.0074,
    					0.0111,
    					0.0163,
    					0.0236,
    					0.0333,
    					0.0461,
    					0.0627,
    					0.0835,
    					0.1091,
    					0.14,
    					0.1763,
    					0.218,
    					0.265,
    					0.3166,
    					0.372,
    					0.4303,
    					0.4901,
    					0.5501,
    					0.609,
    					0.6655,
    					0.7185,
    					0.767,
    					0.8105,
    					0.8487,
    					0.8813,
    					0.9086,
    					0.931,
    					0.9489,
    					0.9628,
    					0.9735,
    					0.9815,
    					0.9874,
    					0.9915,
    					0.9944,
    					0.9964,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.3517,
    				"std.error": 0.5545,
    				statistic: -2.4376,
    				"p.value": 0.0155,
    				"conf.low": -2.4437,
    				"conf.high": -0.2597,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.5349e-11,
    					1.3997e-10,
    					3.4703e-10,
    					8.4361e-10,
    					2.0108e-9,
    					4.6993e-9,
    					1.0769e-8,
    					2.4198e-8,
    					5.3317e-8,
    					1.152e-7,
    					2.4408e-7,
    					5.0715e-7,
    					0.0000010334,
    					0.0000020652,
    					0.0000040477,
    					0.0000077811,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.0029,
    					0.0045,
    					0.0067,
    					0.0099,
    					0.0143,
    					0.0203,
    					0.0284,
    					0.0389,
    					0.0525,
    					0.0695,
    					0.0906,
    					0.116,
    					0.1462,
    					0.1811,
    					0.221,
    					0.2654,
    					0.3139,
    					0.3659,
    					0.4205,
    					0.4766,
    					0.5333,
    					0.5892,
    					0.6434,
    					0.6949,
    					0.7427,
    					0.7863,
    					0.8253,
    					0.8595,
    					0.8888,
    					0.9134,
    					0.9337,
    					0.9501,
    					0.9631,
    					0.9732,
    					0.9809,
    					0.9866,
    					0.9908,
    					0.9938,
    					0.9959,
    					0.9973,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.3388,
    				"std.error": 0.5662,
    				statistic: -2.3644,
    				"p.value": 0.0188,
    				"conf.low": -2.4538,
    				"conf.high": -0.2238,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.7568e-25,
    					4.6829e-24,
    					3.1326e-23,
    					2.0226e-22,
    					1.2606e-21,
    					7.5831e-21,
    					4.4033e-20,
    					2.4681e-19,
    					1.3353e-18,
    					6.9742e-18,
    					3.5161e-17,
    					1.7113e-16,
    					8.0402e-16,
    					3.6468e-15,
    					1.5969e-14,
    					6.7506e-14,
    					2.7552e-13,
    					1.0857e-12,
    					4.1305e-12,
    					1.5173e-11,
    					5.3821e-11,
    					1.8434e-10,
    					6.0969e-10,
    					1.9473e-9,
    					6.0066e-9,
    					1.7894e-8,
    					5.1485e-8,
    					1.4308e-7,
    					3.8412e-7,
    					9.9617e-7,
    					0.0000024959,
    					0.0000060421,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0021,
    					0.0037,
    					0.0065,
    					0.0108,
    					0.0175,
    					0.0275,
    					0.0419,
    					0.0618,
    					0.0884,
    					0.1226,
    					0.1653,
    					0.2166,
    					0.276,
    					0.3425,
    					0.4143,
    					0.489,
    					0.5642,
    					0.6371,
    					0.7053,
    					0.7669,
    					0.8206,
    					0.8658,
    					0.9025,
    					0.9312,
    					0.9529,
    					0.9688,
    					0.9799,
    					0.9875,
    					0.9925,
    					0.9956,
    					0.9975,
    					0.9986,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.0048,
    				"std.error": 0.7661,
    				statistic: 2.617,
    				"p.value": 0.0094,
    				"conf.low": 0.4963,
    				"conf.high": 3.5133,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.1657e-20,
    					2.0629e-19,
    					9.9101e-19,
    					4.6186e-18,
    					2.0882e-17,
    					9.1597e-17,
    					3.8979e-16,
    					1.6093e-15,
    					6.446e-15,
    					2.505e-14,
    					9.4454e-14,
    					3.4555e-13,
    					1.2266e-12,
    					4.2247e-12,
    					1.4119e-11,
    					4.5789e-11,
    					1.4409e-10,
    					4.4004e-10,
    					1.3041e-9,
    					3.7507e-9,
    					1.0469e-8,
    					2.8363e-8,
    					7.4583e-8,
    					1.9036e-7,
    					4.7164e-7,
    					0.0000011344,
    					0.0000026488,
    					0.000006005,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0015,
    					0.0026,
    					0.0043,
    					0.0071,
    					0.0115,
    					0.0179,
    					0.0272,
    					0.0402,
    					0.0578,
    					0.081,
    					0.1106,
    					0.1473,
    					0.1914,
    					0.2428,
    					0.3008,
    					0.3643,
    					0.4318,
    					0.5014,
    					0.5709,
    					0.6383,
    					0.7017,
    					0.7594,
    					0.8105,
    					0.8543,
    					0.8907,
    					0.92,
    					0.943,
    					0.9604,
    					0.9733,
    					0.9824,
    					0.9887,
    					0.993,
    					0.9958,
    					0.9975,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 80,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.7495,
    				"std.error": 0.3369,
    				statistic: 17.0666,
    				"p.value": 3.1515e-44,
    				"conf.low": 5.0861,
    				"conf.high": 6.4129,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.3466e-13,
    					8.979e-13,
    					3.3229e-12,
    					1.1894e-11,
    					4.1176e-11,
    					1.3788e-10,
    					4.466e-10,
    					1.3993e-9,
    					4.2412e-9,
    					1.2436e-8,
    					3.5277e-8,
    					9.6822e-8,
    					2.5712e-7,
    					6.607e-7,
    					0.0000016429,
    					0.0000039536,
    					0.0000092086,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0014,
    					0.0025,
    					0.0044,
    					0.0074,
    					0.0121,
    					0.0192,
    					0.0297,
    					0.0444,
    					0.0646,
    					0.0913,
    					0.1254,
    					0.1676,
    					0.2179,
    					0.2759,
    					0.3407,
    					0.4105,
    					0.4834,
    					0.5567,
    					0.6282,
    					0.6955,
    					0.7568,
    					0.8107,
    					0.8565,
    					0.8942,
    					0.9242,
    					0.9472,
    					0.9643,
    					0.9765,
    					0.985,
    					0.9908,
    					0.9945,
    					0.9968,
    					0.9982,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.6285,
    				"std.error": 0.4561,
    				statistic: -1.378,
    				"p.value": 0.1694,
    				"conf.low": -1.5268,
    				"conf.high": 0.2697,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.0816e-21,
    					1.064e-20,
    					5.2809e-20,
    					2.5448e-19,
    					1.1907e-18,
    					5.4092e-18,
    					2.3861e-17,
    					1.022e-16,
    					4.2506e-16,
    					1.7166e-15,
    					6.7318e-15,
    					2.5635e-14,
    					9.4796e-14,
    					3.4042e-13,
    					1.1871e-12,
    					4.0205e-12,
    					1.3223e-11,
    					4.2239e-11,
    					1.3104e-10,
    					3.9484e-10,
    					1.1555e-9,
    					3.2847e-9,
    					9.0698e-9,
    					2.4327e-8,
    					6.3385e-8,
    					1.6044e-7,
    					3.9455e-7,
    					9.427e-7,
    					0.0000021885,
    					0.0000049368,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0021,
    					0.0035,
    					0.0059,
    					0.0095,
    					0.0148,
    					0.0226,
    					0.0337,
    					0.0488,
    					0.0689,
    					0.0949,
    					0.1275,
    					0.1671,
    					0.2139,
    					0.2675,
    					0.3272,
    					0.3917,
    					0.4593,
    					0.5281,
    					0.5961,
    					0.6612,
    					0.7219,
    					0.7768,
    					0.8248,
    					0.8658,
    					0.8996,
    					0.9268,
    					0.9479,
    					0.9639,
    					0.9756,
    					0.9839,
    					0.9897,
    					0.9936,
    					0.9961,
    					0.9977,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.1022,
    				"std.error": 0.6303,
    				statistic: -0.1621,
    				"p.value": 0.8713,
    				"conf.low": -1.3433,
    				"conf.high": 1.1389,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.2239e-29,
    					2.1473e-28,
    					1.3899e-27,
    					8.7424e-27,
    					5.344e-26,
    					3.1745e-25,
    					1.8326e-24,
    					1.0281e-23,
    					5.6052e-23,
    					2.9699e-22,
    					1.5293e-21,
    					7.6533e-21,
    					3.7222e-20,
    					1.7594e-19,
    					8.0826e-19,
    					3.6087e-18,
    					1.566e-17,
    					6.6045e-17,
    					2.7073e-16,
    					1.0786e-15,
    					4.1771e-15,
    					1.5723e-14,
    					5.7523e-14,
    					2.0457e-13,
    					7.0716e-13,
    					2.3762e-12,
    					7.7618e-12,
    					2.4646e-11,
    					7.608e-11,
    					2.2831e-10,
    					6.6608e-10,
    					1.8893e-9,
    					5.21e-9,
    					1.3969e-8,
    					3.642e-8,
    					9.2325e-8,
    					2.2759e-7,
    					5.456e-7,
    					0.000001272,
    					0.0000028841,
    					0.0000063605,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0023,
    					0.0038,
    					0.0063,
    					0.01,
    					0.0155,
    					0.0235,
    					0.0346,
    					0.0498,
    					0.0698,
    					0.0955,
    					0.1277,
    					0.1666,
    					0.2125,
    					0.265,
    					0.3235,
    					0.3866,
    					0.4529,
    					0.5206,
    					0.5876,
    					0.6522,
    					0.7127,
    					0.7676,
    					0.8162,
    					0.8579,
    					0.8926,
    					0.9208,
    					0.943,
    					0.96,
    					0.9726,
    					0.9817,
    					0.9881,
    					0.9924,
    					0.9953,
    					0.9972,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.1522,
    				"std.error": 0.8527,
    				statistic: 1.3512,
    				"p.value": 0.1778,
    				"conf.low": -0.527,
    				"conf.high": 2.8313,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.402e-13,
    					1.0636e-12,
    					3.245e-12,
    					9.663e-12,
    					2.8084e-11,
    					7.9663e-11,
    					2.2056e-10,
    					5.9603e-10,
    					1.5722e-9,
    					4.048e-9,
    					1.0174e-8,
    					2.4961e-8,
    					5.9783e-8,
    					1.3978e-7,
    					3.1907e-7,
    					7.1109e-7,
    					0.0000015473,
    					0.0000032874,
    					0.0000068199,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0028,
    					0.0044,
    					0.0069,
    					0.0106,
    					0.016,
    					0.0234,
    					0.0336,
    					0.0471,
    					0.0648,
    					0.0872,
    					0.1149,
    					0.1483,
    					0.1878,
    					0.2331,
    					0.2839,
    					0.3395,
    					0.3988,
    					0.4606,
    					0.5233,
    					0.5855,
    					0.6455,
    					0.7022,
    					0.7543,
    					0.8011,
    					0.8421,
    					0.8771,
    					0.9062,
    					0.9299,
    					0.9487,
    					0.9633,
    					0.9743,
    					0.9824,
    					0.9882,
    					0.9922,
    					0.995,
    					0.9969,
    					0.9981,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 81,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4291,
    				"std.error": 0.4088,
    				statistic: 15.7261,
    				"p.value": 1.3935e-36,
    				"conf.low": 5.6229,
    				"conf.high": 7.2354,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.2354e-14,
    					3.9665e-14,
    					1.2448e-13,
    					3.8192e-13,
    					1.1454e-12,
    					3.3583e-12,
    					9.6256e-12,
    					2.6972e-11,
    					7.3886e-11,
    					1.9788e-10,
    					5.1813e-10,
    					1.3264e-9,
    					3.3199e-9,
    					8.1246e-9,
    					1.9441e-8,
    					4.5487e-8,
    					1.0407e-7,
    					2.3282e-7,
    					5.0936e-7,
    					0.0000010898,
    					0.0000022802,
    					0.0000046663,
    					0.0000093397,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0018,
    					0.0029,
    					0.0045,
    					0.007,
    					0.0106,
    					0.0157,
    					0.0227,
    					0.0323,
    					0.0449,
    					0.0612,
    					0.0818,
    					0.1073,
    					0.1381,
    					0.1744,
    					0.2163,
    					0.2634,
    					0.3153,
    					0.3711,
    					0.4298,
    					0.49,
    					0.5505,
    					0.6098,
    					0.6667,
    					0.72,
    					0.7688,
    					0.8124,
    					0.8505,
    					0.8831,
    					0.9103,
    					0.9325,
    					0.9502,
    					0.964,
    					0.9744,
    					0.9822,
    					0.9879,
    					0.9919,
    					0.9947,
    					0.9966,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.3517,
    				"std.error": 0.5503,
    				statistic: -2.4565,
    				"p.value": 0.0149,
    				"conf.low": -2.4369,
    				"conf.high": -0.2665,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.9704e-11,
    					1.0183e-10,
    					2.5601e-10,
    					6.3082e-10,
    					1.5236e-9,
    					3.607e-9,
    					8.3704e-9,
    					1.9041e-8,
    					4.2459e-8,
    					9.2813e-8,
    					1.9889e-7,
    					4.1784e-7,
    					8.606e-7,
    					0.0000017378,
    					0.0000034406,
    					0.0000066788,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0027,
    					0.0042,
    					0.0063,
    					0.0094,
    					0.0137,
    					0.0195,
    					0.0274,
    					0.0378,
    					0.0511,
    					0.068,
    					0.0889,
    					0.1142,
    					0.1443,
    					0.1793,
    					0.2192,
    					0.2638,
    					0.3126,
    					0.3649,
    					0.4199,
    					0.4765,
    					0.5335,
    					0.5899,
    					0.6445,
    					0.6962,
    					0.7443,
    					0.7881,
    					0.8272,
    					0.8613,
    					0.8906,
    					0.9151,
    					0.9352,
    					0.9514,
    					0.9642,
    					0.9741,
    					0.9816,
    					0.9872,
    					0.9912,
    					0.9941,
    					0.9961,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.7818,
    				"std.error": 0.6651,
    				statistic: -1.1753,
    				"p.value": 0.2413,
    				"conf.low": -2.0935,
    				"conf.high": 0.53,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.336e-22,
    					2.959e-21,
    					1.3469e-20,
    					5.9759e-20,
    					2.5843e-19,
    					1.0894e-18,
    					4.4759e-18,
    					1.7926e-17,
    					6.9981e-17,
    					2.663e-16,
    					9.8783e-16,
    					3.5719e-15,
    					1.259e-14,
    					4.3261e-14,
    					1.4491e-13,
    					4.7317e-13,
    					1.5062e-12,
    					4.6745e-12,
    					1.4143e-11,
    					4.1716e-11,
    					1.1997e-10,
    					3.3637e-10,
    					9.1955e-10,
    					2.4511e-9,
    					6.3703e-9,
    					1.6144e-8,
    					3.9896e-8,
    					9.6143e-8,
    					2.2594e-7,
    					5.1783e-7,
    					0.0000011575,
    					0.0000025234,
    					0.000005366,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0026,
    					0.0043,
    					0.0067,
    					0.0105,
    					0.0158,
    					0.0234,
    					0.0339,
    					0.0479,
    					0.0662,
    					0.0895,
    					0.1184,
    					0.1534,
    					0.1947,
    					0.242,
    					0.295,
    					0.3527,
    					0.4141,
    					0.4776,
    					0.5417,
    					0.6048,
    					0.6652,
    					0.7216,
    					0.773,
    					0.8185,
    					0.8578,
    					0.8909,
    					0.9181,
    					0.9398,
    					0.9568,
    					0.9696,
    					0.9791,
    					0.986,
    					0.9908,
    					0.9941,
    					0.9963,
    					0.9978,
    					0.9987,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.8753,
    				"std.error": 0.898,
    				statistic: 2.0884,
    				"p.value": 0.038,
    				"conf.low": 0.1044,
    				"conf.high": 3.6462,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.2054e-14,
    					3.7996e-14,
    					1.1717e-13,
    					3.5346e-13,
    					1.0431e-12,
    					3.0115e-12,
    					8.506e-12,
    					2.3504e-11,
    					6.3542e-11,
    					1.6806e-10,
    					4.3491e-10,
    					1.1011e-9,
    					2.7278e-9,
    					6.6118e-9,
    					1.5681e-8,
    					3.6392e-8,
    					8.2642e-8,
    					1.8365e-7,
    					3.9936e-7,
    					8.4991e-7,
    					0.0000017702,
    					0.0000036084,
    					0.0000071991,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0022,
    					0.0035,
    					0.0055,
    					0.0083,
    					0.0124,
    					0.0181,
    					0.0258,
    					0.0362,
    					0.0498,
    					0.0672,
    					0.0889,
    					0.1154,
    					0.1471,
    					0.1842,
    					0.2267,
    					0.2741,
    					0.326,
    					0.3816,
    					0.4396,
    					0.4991,
    					0.5585,
    					0.6166,
    					0.6722,
    					0.7243,
    					0.7719,
    					0.8145,
    					0.8518,
    					0.8837,
    					0.9104,
    					0.9322,
    					0.9497,
    					0.9634,
    					0.9739,
    					0.9817,
    					0.9875,
    					0.9916,
    					0.9944,
    					0.9964,
    					0.9977,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 82,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4968,
    				"std.error": 0.4523,
    				statistic: 14.3625,
    				"p.value": 2.7785e-33,
    				"conf.low": 5.6052,
    				"conf.high": 7.3884,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					9.6473e-13,
    					2.5611e-12,
    					6.6746e-12,
    					1.7076e-11,
    					4.2886e-11,
    					1.0574e-10,
    					2.5593e-10,
    					6.0814e-10,
    					1.4187e-9,
    					3.2493e-9,
    					7.3063e-9,
    					1.613e-8,
    					3.4963e-8,
    					7.4408e-8,
    					1.5548e-7,
    					3.1902e-7,
    					6.4273e-7,
    					0.0000012715,
    					0.0000024702,
    					0.0000047126,
    					0.0000088291,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0027,
    					0.0041,
    					0.0061,
    					0.0089,
    					0.0128,
    					0.0181,
    					0.0251,
    					0.0343,
    					0.0462,
    					0.0611,
    					0.0795,
    					0.1019,
    					0.1285,
    					0.1595,
    					0.1952,
    					0.2352,
    					0.2795,
    					0.3274,
    					0.3784,
    					0.4316,
    					0.4861,
    					0.5408,
    					0.5947,
    					0.6469,
    					0.6965,
    					0.7427,
    					0.785,
    					0.8229,
    					0.8563,
    					0.8852,
    					0.9096,
    					0.93,
    					0.9466,
    					0.96,
    					0.9705,
    					0.9786,
    					0.9847,
    					0.9893,
    					0.9926,
    					0.995,
    					0.9967,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.4609,
    				"std.error": 0.6135,
    				statistic: -2.3814,
    				"p.value": 0.0181,
    				"conf.low": -2.6701,
    				"conf.high": -0.2518,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					7.8526e-9,
    					1.645e-8,
    					3.3911e-8,
    					6.8798e-8,
    					1.3736e-7,
    					2.699e-7,
    					5.2194e-7,
    					9.9338e-7,
    					0.0000018608,
    					0.0000034308,
    					0.000006226,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.001,
    					0.0016,
    					0.0023,
    					0.0035,
    					0.0051,
    					0.0073,
    					0.0103,
    					0.0144,
    					0.0198,
    					0.0268,
    					0.0358,
    					0.0472,
    					0.0612,
    					0.0784,
    					0.099,
    					0.1232,
    					0.1513,
    					0.1835,
    					0.2195,
    					0.2593,
    					0.3026,
    					0.3488,
    					0.3974,
    					0.4476,
    					0.4987,
    					0.5498,
    					0.6,
    					0.6487,
    					0.6951,
    					0.7385,
    					0.7785,
    					0.8147,
    					0.8471,
    					0.8754,
    					0.8999,
    					0.9206,
    					0.9379,
    					0.9521,
    					0.9636,
    					0.9728,
    					0.9799,
    					0.9854,
    					0.9895,
    					0.9926,
    					0.9948,
    					0.9965,
    					0.9976,
    					0.9984,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.0504,
    				"std.error": 0.5998,
    				statistic: -1.7513,
    				"p.value": 0.0813,
    				"conf.low": -2.2325,
    				"conf.high": 0.1318,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.7333e-24,
    					1.0617e-23,
    					6.3012e-23,
    					3.6236e-22,
    					2.0191e-21,
    					1.0902e-20,
    					5.7036e-20,
    					2.8914e-19,
    					1.4204e-18,
    					6.7613e-18,
    					3.1188e-17,
    					1.3941e-16,
    					6.039e-16,
    					2.5351e-15,
    					1.0313e-14,
    					4.0659e-14,
    					1.5535e-13,
    					5.7528e-13,
    					2.0646e-12,
    					7.1818e-12,
    					2.4213e-11,
    					7.9126e-11,
    					2.5064e-10,
    					7.6957e-10,
    					2.2906e-9,
    					6.6091e-9,
    					1.8487e-8,
    					5.0136e-8,
    					1.3183e-7,
    					3.3608e-7,
    					8.3081e-7,
    					0.0000019917,
    					0.0000046303,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0023,
    					0.004,
    					0.0067,
    					0.011,
    					0.0173,
    					0.0265,
    					0.0395,
    					0.0573,
    					0.0809,
    					0.1111,
    					0.1486,
    					0.1938,
    					0.2466,
    					0.3061,
    					0.3713,
    					0.4404,
    					0.5114,
    					0.582,
    					0.6501,
    					0.7137,
    					0.7711,
    					0.8215,
    					0.8642,
    					0.8994,
    					0.9274,
    					0.949,
    					0.9651,
    					0.9768,
    					0.985,
    					0.9906,
    					0.9943,
    					0.9966,
    					0.998,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.6632,
    				"std.error": 0.8404,
    				statistic: 1.979,
    				"p.value": 0.0491,
    				"conf.low": 0.0067,
    				"conf.high": 3.3197,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.4372e-15,
    					5.109e-15,
    					1.7711e-14,
    					5.9875e-14,
    					1.974e-13,
    					6.347e-13,
    					1.9902e-12,
    					6.0865e-12,
    					1.8153e-11,
    					5.2807e-11,
    					1.4982e-10,
    					4.1461e-10,
    					1.1191e-9,
    					2.9463e-9,
    					7.5666e-9,
    					1.8955e-8,
    					4.6322e-8,
    					1.1043e-7,
    					2.5684e-7,
    					5.8278e-7,
    					0.0000012902,
    					0.0000027868,
    					0.0000058738,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0016,
    					0.0027,
    					0.0043,
    					0.0068,
    					0.0106,
    					0.0159,
    					0.0235,
    					0.0339,
    					0.0478,
    					0.0659,
    					0.0889,
    					0.1175,
    					0.152,
    					0.1926,
    					0.2393,
    					0.2916,
    					0.3486,
    					0.4093,
    					0.4723,
    					0.5359,
    					0.5987,
    					0.659,
    					0.7154,
    					0.767,
    					0.8129,
    					0.8528,
    					0.8865,
    					0.9143,
    					0.9367,
    					0.9542,
    					0.9676,
    					0.9776,
    					0.9849,
    					0.99,
    					0.9935,
    					0.9959,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 83,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.8711,
    				"std.error": 0.3489,
    				statistic: 16.8255,
    				"p.value": 3.7387e-41,
    				"conf.low": 5.1834,
    				"conf.high": 6.5589,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.1297e-13,
    					4.2012e-13,
    					1.5144e-12,
    					5.2917e-12,
    					1.7924e-11,
    					5.8858e-11,
    					1.8737e-10,
    					5.7825e-10,
    					1.7302e-9,
    					5.0194e-9,
    					1.4119e-8,
    					3.8508e-8,
    					1.0184e-7,
    					2.612e-7,
    					6.4968e-7,
    					0.0000015672,
    					0.0000036669,
    					0.0000083221,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0034,
    					0.0058,
    					0.0095,
    					0.015,
    					0.0232,
    					0.0349,
    					0.051,
    					0.0726,
    					0.1005,
    					0.1355,
    					0.178,
    					0.2282,
    					0.2854,
    					0.3487,
    					0.4166,
    					0.487,
    					0.5578,
    					0.6268,
    					0.692,
    					0.7516,
    					0.8044,
    					0.8498,
    					0.8876,
    					0.918,
    					0.9418,
    					0.9597,
    					0.9729,
    					0.9823,
    					0.9888,
    					0.9931,
    					0.9958,
    					0.9976,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.7584,
    				"std.error": 0.4983,
    				statistic: -1.5221,
    				"p.value": 0.1294,
    				"conf.low": -1.7405,
    				"conf.high": 0.2237,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.8589e-17,
    					1.0805e-16,
    					3.9841e-16,
    					1.4333e-15,
    					5.0311e-15,
    					1.723e-14,
    					5.7574e-14,
    					1.8771e-13,
    					5.9714e-13,
    					1.8535e-12,
    					5.614e-12,
    					1.6592e-11,
    					4.7849e-11,
    					1.3466e-10,
    					3.698e-10,
    					9.9105e-10,
    					2.592e-9,
    					6.6158e-9,
    					1.648e-8,
    					4.0066e-8,
    					9.5074e-8,
    					2.202e-7,
    					4.9781e-7,
    					0.0000010986,
    					0.0000023665,
    					0.0000049769,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0023,
    					0.0037,
    					0.0059,
    					0.0091,
    					0.0137,
    					0.0204,
    					0.0295,
    					0.0418,
    					0.058,
    					0.0787,
    					0.1046,
    					0.1361,
    					0.1737,
    					0.2172,
    					0.2665,
    					0.3208,
    					0.3793,
    					0.4407,
    					0.5035,
    					0.5663,
    					0.6274,
    					0.6855,
    					0.7393,
    					0.788,
    					0.8309,
    					0.8677,
    					0.8986,
    					0.9239,
    					0.9441,
    					0.9598,
    					0.9717,
    					0.9805,
    					0.9869,
    					0.9914,
    					0.9944,
    					0.9965,
    					0.9978,
    					0.9987,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: 0.1061,
    				"std.error": 0.6765,
    				statistic: 0.1569,
    				"p.value": 0.8755,
    				"conf.low": -1.2273,
    				"conf.high": 1.4395,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.8501e-27,
    					2.6446e-26,
    					1.4067e-25,
    					7.2986e-25,
    					3.6941e-24,
    					1.8239e-23,
    					8.7848e-23,
    					4.1275e-22,
    					1.8918e-21,
    					8.4587e-21,
    					3.6896e-20,
    					1.57e-19,
    					6.5172e-19,
    					2.6392e-18,
    					1.0427e-17,
    					4.0189e-17,
    					1.5112e-16,
    					5.5437e-16,
    					1.9841e-15,
    					6.9281e-15,
    					2.3602e-14,
    					7.8449e-14,
    					2.5441e-13,
    					8.0498e-13,
    					2.4852e-12,
    					7.4861e-12,
    					2.2003e-11,
    					6.3106e-11,
    					1.7661e-10,
    					4.8229e-10,
    					1.2852e-9,
    					3.3423e-9,
    					8.4823e-9,
    					2.1008e-8,
    					5.0781e-8,
    					1.198e-7,
    					2.7584e-7,
    					6.1995e-7,
    					0.00000136,
    					0.0000029124,
    					0.0000060884,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0026,
    					0.0042,
    					0.0067,
    					0.0102,
    					0.0154,
    					0.0227,
    					0.0327,
    					0.0461,
    					0.0635,
    					0.0857,
    					0.1133,
    					0.1466,
    					0.186,
    					0.2313,
    					0.2822,
    					0.3379,
    					0.3975,
    					0.4595,
    					0.5226,
    					0.5851,
    					0.6455,
    					0.7024,
    					0.7548,
    					0.8018,
    					0.8428,
    					0.8779,
    					0.907,
    					0.9307,
    					0.9494,
    					0.9639,
    					0.9747,
    					0.9827,
    					0.9885,
    					0.9925,
    					0.9952,
    					0.997,
    					0.9982,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.6344,
    				"std.error": 0.9331,
    				statistic: 0.6799,
    				"p.value": 0.4973,
    				"conf.low": -1.2047,
    				"conf.high": 2.4735,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					9.3027e-10,
    					2.2366e-9,
    					5.2699e-9,
    					1.2169e-8,
    					2.7541e-8,
    					6.109e-8,
    					1.3281e-7,
    					2.83e-7,
    					5.9108e-7,
    					0.0000012101,
    					0.0000024285,
    					0.0000047775,
    					0.0000092138,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0022,
    					0.0035,
    					0.0053,
    					0.0079,
    					0.0116,
    					0.0168,
    					0.0238,
    					0.0331,
    					0.0452,
    					0.0606,
    					0.0799,
    					0.1035,
    					0.1318,
    					0.165,
    					0.2032,
    					0.2462,
    					0.2937,
    					0.345,
    					0.3994,
    					0.4558,
    					0.5131,
    					0.5701,
    					0.6257,
    					0.6788,
    					0.7285,
    					0.774,
    					0.8149,
    					0.8508,
    					0.8818,
    					0.9079,
    					0.9294,
    					0.9469,
    					0.9607,
    					0.9715,
    					0.9797,
    					0.9858,
    					0.9902,
    					0.9934,
    					0.9956,
    					0.9972,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 84,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4968,
    				"std.error": 0.4517,
    				statistic: 14.3822,
    				"p.value": 9.466e-31,
    				"conf.low": 5.6048,
    				"conf.high": 7.3888,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					9.0001e-13,
    					2.3956e-12,
    					6.2594e-12,
    					1.6054e-11,
    					4.042e-11,
    					9.9898e-11,
    					2.4237e-10,
    					5.7727e-10,
    					1.3498e-9,
    					3.0982e-9,
    					6.9818e-9,
    					1.5446e-8,
    					3.355e-8,
    					7.1545e-8,
    					1.498e-7,
    					3.0794e-7,
    					6.2156e-7,
    					0.0000012319,
    					0.0000023974,
    					0.0000045814,
    					0.0000085975,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0027,
    					0.004,
    					0.006,
    					0.0088,
    					0.0127,
    					0.018,
    					0.025,
    					0.0342,
    					0.046,
    					0.0608,
    					0.0792,
    					0.1015,
    					0.1281,
    					0.1592,
    					0.1948,
    					0.2349,
    					0.2792,
    					0.3272,
    					0.3783,
    					0.4315,
    					0.486,
    					0.5408,
    					0.5949,
    					0.6471,
    					0.6968,
    					0.743,
    					0.7853,
    					0.8232,
    					0.8566,
    					0.8855,
    					0.9099,
    					0.9303,
    					0.9469,
    					0.9602,
    					0.9707,
    					0.9787,
    					0.9848,
    					0.9894,
    					0.9927,
    					0.995,
    					0.9967,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.4609,
    				"std.error": 0.6126,
    				statistic: -2.3847,
    				"p.value": 0.0183,
    				"conf.low": -2.6707,
    				"conf.high": -0.2511,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					7.5052e-9,
    					1.5753e-8,
    					3.2538e-8,
    					6.6137e-8,
    					1.3229e-7,
    					2.6041e-7,
    					5.0446e-7,
    					9.6176e-7,
    					0.0000018046,
    					0.0000033325,
    					0.0000060571,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0023,
    					0.0034,
    					0.005,
    					0.0072,
    					0.0102,
    					0.0143,
    					0.0197,
    					0.0267,
    					0.0356,
    					0.047,
    					0.061,
    					0.0781,
    					0.0986,
    					0.1229,
    					0.151,
    					0.1831,
    					0.2192,
    					0.259,
    					0.3023,
    					0.3486,
    					0.3972,
    					0.4475,
    					0.4987,
    					0.5498,
    					0.6002,
    					0.6489,
    					0.6953,
    					0.7388,
    					0.7788,
    					0.8151,
    					0.8474,
    					0.8757,
    					0.9002,
    					0.9209,
    					0.9382,
    					0.9524,
    					0.9638,
    					0.9729,
    					0.98,
    					0.9855,
    					0.9896,
    					0.9927,
    					0.9949,
    					0.9965,
    					0.9976,
    					0.9984,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.5196,
    				"std.error": 0.7313,
    				statistic: -0.7105,
    				"p.value": 0.4784,
    				"conf.low": -1.9636,
    				"conf.high": 0.9245,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					7.3484e-20,
    					2.7775e-19,
    					1.0278e-18,
    					3.7239e-18,
    					1.3209e-17,
    					4.5875e-17,
    					1.5599e-16,
    					5.193e-16,
    					1.6927e-15,
    					5.4021e-15,
    					1.688e-14,
    					5.1646e-14,
    					1.5472e-13,
    					4.5384e-13,
    					1.3035e-12,
    					3.6659e-12,
    					1.0095e-11,
    					2.7223e-11,
    					7.1885e-11,
    					1.8588e-10,
    					4.7067e-10,
    					1.1671e-9,
    					2.8342e-9,
    					6.7403e-9,
    					1.5698e-8,
    					3.5809e-8,
    					7.9998e-8,
    					1.7504e-7,
    					3.7514e-7,
    					7.8749e-7,
    					0.0000016193,
    					0.0000032615,
    					0.0000064355,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.003,
    					0.0046,
    					0.007,
    					0.0104,
    					0.0151,
    					0.0217,
    					0.0305,
    					0.0421,
    					0.057,
    					0.0757,
    					0.0989,
    					0.1268,
    					0.1598,
    					0.198,
    					0.2412,
    					0.2891,
    					0.3411,
    					0.3962,
    					0.4535,
    					0.5118,
    					0.5699,
    					0.6264,
    					0.6804,
    					0.7308,
    					0.7769,
    					0.8181,
    					0.8541,
    					0.8851,
    					0.911,
    					0.9324,
    					0.9495,
    					0.963,
    					0.9734,
    					0.9812,
    					0.987,
    					0.9912,
    					0.9941,
    					0.9961,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3369,
    				"std.error": 0.994,
    				statistic: 1.3449,
    				"p.value": 0.1805,
    				"conf.low": -0.626,
    				"conf.high": 3.2998,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.0921e-10,
    					2.6033e-10,
    					6.0959e-10,
    					1.4022e-9,
    					3.1685e-9,
    					7.0337e-9,
    					1.5339e-8,
    					3.2864e-8,
    					6.9174e-8,
    					1.4305e-7,
    					2.9063e-7,
    					5.8017e-7,
    					0.0000011379,
    					0.000002193,
    					0.0000041527,
    					0.0000077272,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0035,
    					0.0051,
    					0.0075,
    					0.0108,
    					0.0153,
    					0.0214,
    					0.0293,
    					0.0395,
    					0.0525,
    					0.0686,
    					0.0883,
    					0.112,
    					0.1398,
    					0.1721,
    					0.2087,
    					0.2496,
    					0.2943,
    					0.3424,
    					0.3933,
    					0.446,
    					0.4997,
    					0.5535,
    					0.6062,
    					0.6571,
    					0.7052,
    					0.75,
    					0.7909,
    					0.8276,
    					0.8599,
    					0.8878,
    					0.9115,
    					0.9312,
    					0.9474,
    					0.9604,
    					0.9706,
    					0.9786,
    					0.9846,
    					0.9891,
    					0.9925,
    					0.9948,
    					0.9965,
    					0.9977,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 85,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.392,
    				"std.error": 0.4857,
    				statistic: 13.1593,
    				"p.value": 6.253e-33,
    				"conf.low": 5.437,
    				"conf.high": 7.347,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.1504e-10,
    					2.6177e-10,
    					5.8618e-10,
    					1.2918e-9,
    					2.8018e-9,
    					5.9808e-9,
    					1.2565e-8,
    					2.598e-8,
    					5.2872e-8,
    					1.059e-7,
    					2.0879e-7,
    					4.0517e-7,
    					7.7392e-7,
    					0.0000014551,
    					0.0000026931,
    					0.0000049065,
    					0.0000087998,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0019,
    					0.0029,
    					0.0043,
    					0.0062,
    					0.0088,
    					0.0123,
    					0.017,
    					0.0232,
    					0.0312,
    					0.0413,
    					0.054,
    					0.0695,
    					0.0883,
    					0.1105,
    					0.1366,
    					0.1665,
    					0.2005,
    					0.2382,
    					0.2795,
    					0.3241,
    					0.3713,
    					0.4206,
    					0.4711,
    					0.5221,
    					0.5727,
    					0.6221,
    					0.6697,
    					0.7146,
    					0.7564,
    					0.7947,
    					0.8291,
    					0.8596,
    					0.8862,
    					0.909,
    					0.9282,
    					0.9441,
    					0.9571,
    					0.9676,
    					0.9758,
    					0.9822,
    					0.9871,
    					0.9908,
    					0.9935,
    					0.9955,
    					0.9969,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.6024,
    				"std.error": 0.5491,
    				statistic: -1.0972,
    				"p.value": 0.2733,
    				"conf.low": -1.682,
    				"conf.high": 0.4771,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.6326e-15,
    					5.0954e-15,
    					1.5584e-14,
    					4.6707e-14,
    					1.3718e-13,
    					3.9482e-13,
    					1.1136e-12,
    					3.0781e-12,
    					8.3381e-12,
    					2.2135e-11,
    					5.759e-11,
    					1.4684e-10,
    					3.6696e-10,
    					8.9876e-10,
    					2.1575e-9,
    					5.0761e-9,
    					1.1706e-8,
    					2.646e-8,
    					5.8625e-8,
    					1.2732e-7,
    					2.7105e-7,
    					5.6567e-7,
    					0.0000011573,
    					0.000002321,
    					0.0000045639,
    					0.0000087983,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0033,
    					0.0051,
    					0.0076,
    					0.0112,
    					0.0161,
    					0.0229,
    					0.0319,
    					0.0436,
    					0.0585,
    					0.0772,
    					0.1002,
    					0.1278,
    					0.1603,
    					0.1977,
    					0.24,
    					0.2867,
    					0.3374,
    					0.3913,
    					0.4473,
    					0.5044,
    					0.5614,
    					0.6171,
    					0.6705,
    					0.7207,
    					0.7668,
    					0.8083,
    					0.845,
    					0.8767,
    					0.9036,
    					0.9259,
    					0.944,
    					0.9584,
    					0.9697,
    					0.9783,
    					0.9847,
    					0.9895,
    					0.9929,
    					0.9953,
    					0.9969,
    					0.998,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.4848,
    				"std.error": 0.6517,
    				statistic: -2.2784,
    				"p.value": 0.0232,
    				"conf.low": -2.7661,
    				"conf.high": -0.2035,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.1459e-18,
    					8.9631e-18,
    					3.6453e-17,
    					1.4436e-16,
    					5.5667e-16,
    					2.0903e-15,
    					7.6428e-15,
    					2.7212e-14,
    					9.4352e-14,
    					3.1857e-13,
    					1.0475e-12,
    					3.3541e-12,
    					1.046e-11,
    					3.1766e-11,
    					9.3957e-11,
    					2.7066e-10,
    					7.5941e-10,
    					2.0753e-9,
    					5.524e-9,
    					1.4322e-8,
    					3.6173e-8,
    					8.8994e-8,
    					2.1329e-7,
    					4.9802e-7,
    					0.0000011329,
    					0.000002511,
    					0.0000054228,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0029,
    					0.0048,
    					0.0076,
    					0.0118,
    					0.0179,
    					0.0265,
    					0.0383,
    					0.054,
    					0.0746,
    					0.1006,
    					0.1326,
    					0.1711,
    					0.2161,
    					0.2672,
    					0.3239,
    					0.3849,
    					0.4489,
    					0.5143,
    					0.5793,
    					0.6422,
    					0.7015,
    					0.7558,
    					0.8043,
    					0.8465,
    					0.8822,
    					0.9115,
    					0.935,
    					0.9534,
    					0.9673,
    					0.9776,
    					0.9851,
    					0.9902,
    					0.9938,
    					0.9961,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3811,
    				"std.error": 0.7421,
    				statistic: 1.8611,
    				"p.value": 0.0635,
    				"conf.low": -0.078,
    				"conf.high": 2.8402,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.5362e-18,
    					2.6168e-17,
    					1.1976e-16,
    					5.3069e-16,
    					2.277e-15,
    					9.4596e-15,
    					3.8054e-14,
    					1.4823e-13,
    					5.5915e-13,
    					2.0424e-12,
    					7.2247e-12,
    					2.4749e-11,
    					8.2107e-11,
    					2.6381e-10,
    					8.2096e-10,
    					2.4744e-9,
    					7.224e-9,
    					2.0429e-8,
    					5.5962e-8,
    					1.4851e-7,
    					3.8182e-7,
    					9.5108e-7,
    					0.0000022955,
    					0.0000053685,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0028,
    					0.0048,
    					0.0079,
    					0.0128,
    					0.0202,
    					0.0308,
    					0.0457,
    					0.0658,
    					0.0923,
    					0.1259,
    					0.1673,
    					0.2165,
    					0.2732,
    					0.3364,
    					0.4046,
    					0.4759,
    					0.5479,
    					0.6184,
    					0.6852,
    					0.7464,
    					0.8007,
    					0.8473,
    					0.886,
    					0.9172,
    					0.9415,
    					0.9598,
    					0.9732,
    					0.9826,
    					0.989,
    					0.9933,
    					0.996,
    					0.9977,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 86,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.6774,
    				"std.error": 0.3822,
    				statistic: 14.8546,
    				"p.value": 8.4939e-40,
    				"conf.low": 4.9259,
    				"conf.high": 6.4288,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.0555e-10,
    					8.456e-10,
    					2.2806e-9,
    					5.9944e-9,
    					1.5356e-8,
    					3.8338e-8,
    					9.3292e-8,
    					2.2128e-7,
    					5.1159e-7,
    					0.000001153,
    					0.0000025332,
    					0.0000054258,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0028,
    					0.0045,
    					0.0072,
    					0.0111,
    					0.0168,
    					0.0249,
    					0.036,
    					0.0509,
    					0.0703,
    					0.0949,
    					0.1254,
    					0.1621,
    					0.2052,
    					0.2544,
    					0.3092,
    					0.3686,
    					0.4313,
    					0.4958,
    					0.5604,
    					0.6234,
    					0.6834,
    					0.7388,
    					0.7888,
    					0.8327,
    					0.8702,
    					0.9014,
    					0.9268,
    					0.9468,
    					0.9623,
    					0.9738,
    					0.9823,
    					0.9882,
    					0.9924,
    					0.9952,
    					0.997,
    					0.9982,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.1065,
    				"std.error": 0.4337,
    				statistic: -0.2456,
    				"p.value": 0.8061,
    				"conf.low": -0.9592,
    				"conf.high": 0.7462,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.9934e-29,
    					3.7632e-28,
    					2.7447e-27,
    					1.9374e-26,
    					1.3235e-25,
    					8.7507e-25,
    					5.5996e-24,
    					3.4679e-23,
    					2.0787e-22,
    					1.206e-21,
    					6.7716e-21,
    					3.6802e-20,
    					1.9359e-19,
    					9.8569e-19,
    					4.8578e-18,
    					2.3173e-17,
    					1.07e-16,
    					4.7824e-16,
    					2.0691e-15,
    					8.6659e-15,
    					3.5134e-14,
    					1.3789e-13,
    					5.2393e-13,
    					1.9272e-12,
    					6.863e-12,
    					2.3662e-11,
    					7.8986e-11,
    					2.5528e-10,
    					7.989e-10,
    					2.4209e-9,
    					7.1036e-9,
    					2.0185e-8,
    					5.5547e-8,
    					1.4804e-7,
    					3.8214e-7,
    					9.5545e-7,
    					0.0000023141,
    					0.0000054294,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0029,
    					0.0049,
    					0.0082,
    					0.0132,
    					0.0208,
    					0.0317,
    					0.047,
    					0.0677,
    					0.0949,
    					0.1293,
    					0.1716,
    					0.2217,
    					0.2794,
    					0.3435,
    					0.4124,
    					0.4842,
    					0.5564,
    					0.6269,
    					0.6933,
    					0.7539,
    					0.8074,
    					0.8532,
    					0.891,
    					0.9212,
    					0.9447,
    					0.9622,
    					0.9749,
    					0.9838,
    					0.9899,
    					0.9938,
    					0.9964,
    					0.9979,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.397,
    				"std.error": 0.7252,
    				statistic: -0.5474,
    				"p.value": 0.5844,
    				"conf.low": -1.8228,
    				"conf.high": 1.0288,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					7.5532e-21,
    					2.9921e-20,
    					1.16e-19,
    					4.4013e-19,
    					1.6344e-18,
    					5.9398e-18,
    					2.1128e-17,
    					7.355e-17,
    					2.506e-16,
    					8.3569e-16,
    					2.7276e-15,
    					8.7135e-15,
    					2.7245e-14,
    					8.3381e-14,
    					2.4977e-13,
    					7.3234e-13,
    					2.1018e-12,
    					5.9043e-12,
    					1.6236e-11,
    					4.3702e-11,
    					1.1515e-10,
    					2.97e-10,
    					7.4992e-10,
    					1.8536e-9,
    					4.4854e-9,
    					1.0626e-8,
    					2.4644e-8,
    					5.5958e-8,
    					1.244e-7,
    					2.7078e-7,
    					5.7711e-7,
    					0.0000012043,
    					0.0000024611,
    					0.0000049248,
    					0.0000096508,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0026,
    					0.004,
    					0.0062,
    					0.0093,
    					0.0137,
    					0.0198,
    					0.028,
    					0.0389,
    					0.0531,
    					0.0711,
    					0.0934,
    					0.1205,
    					0.1527,
    					0.1902,
    					0.2328,
    					0.2803,
    					0.332,
    					0.3871,
    					0.4447,
    					0.5034,
    					0.562,
    					0.6193,
    					0.6741,
    					0.7254,
    					0.7723,
    					0.8144,
    					0.8513,
    					0.8829,
    					0.9094,
    					0.9312,
    					0.9487,
    					0.9625,
    					0.9731,
    					0.981,
    					0.9869,
    					0.9911,
    					0.9941,
    					0.9962,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.065,
    				"std.error": 0.8344,
    				statistic: 1.2764,
    				"p.value": 0.2026,
    				"conf.low": -0.5755,
    				"conf.high": 2.7055,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.3012e-13,
    					7.4366e-13,
    					2.3429e-12,
    					7.1964e-12,
    					2.155e-11,
    					6.2916e-11,
    					1.7909e-10,
    					4.9706e-10,
    					1.3451e-9,
    					3.5492e-9,
    					9.1316e-9,
    					2.291e-8,
    					5.6052e-8,
    					1.3373e-7,
    					3.1117e-7,
    					7.0613e-7,
    					0.0000015629,
    					0.0000033738,
    					0.0000071044,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0019,
    					0.0031,
    					0.0051,
    					0.008,
    					0.0123,
    					0.0184,
    					0.027,
    					0.0387,
    					0.0542,
    					0.0743,
    					0.0996,
    					0.1307,
    					0.168,
    					0.2115,
    					0.261,
    					0.3158,
    					0.3751,
    					0.4374,
    					0.5013,
    					0.5652,
    					0.6274,
    					0.6865,
    					0.7411,
    					0.7904,
    					0.8336,
    					0.8707,
    					0.9015,
    					0.9266,
    					0.9465,
    					0.9619,
    					0.9734,
    					0.9819,
    					0.988,
    					0.9922,
    					0.995,
    					0.9969,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 87,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.392,
    				"std.error": 0.4815,
    				statistic: 13.2743,
    				"p.value": 1.6756e-31,
    				"conf.low": 5.4441,
    				"conf.high": 7.3399,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					8.0192e-11,
    					1.8506e-10,
    					4.2016e-10,
    					9.3857e-10,
    					2.0628e-9,
    					4.4606e-9,
    					9.4906e-9,
    					1.9868e-8,
    					4.0925e-8,
    					8.2948e-8,
    					1.6543e-7,
    					3.2465e-7,
    					6.2695e-7,
    					0.0000011914,
    					0.0000022281,
    					0.0000041005,
    					0.0000074268,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0027,
    					0.004,
    					0.0058,
    					0.0083,
    					0.0117,
    					0.0163,
    					0.0223,
    					0.0301,
    					0.04,
    					0.0525,
    					0.0678,
    					0.0864,
    					0.1085,
    					0.1345,
    					0.1644,
    					0.1984,
    					0.2363,
    					0.2778,
    					0.3227,
    					0.3702,
    					0.4199,
    					0.4708,
    					0.5223,
    					0.5733,
    					0.6232,
    					0.6711,
    					0.7163,
    					0.7583,
    					0.7967,
    					0.8312,
    					0.8617,
    					0.8882,
    					0.9108,
    					0.9299,
    					0.9456,
    					0.9585,
    					0.9687,
    					0.9768,
    					0.983,
    					0.9877,
    					0.9913,
    					0.9939,
    					0.9958,
    					0.9972,
    					0.9981,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.6024,
    				"std.error": 0.5443,
    				statistic: -1.1067,
    				"p.value": 0.2694,
    				"conf.low": -1.6739,
    				"conf.high": 0.4691,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					9.3894e-16,
    					2.9887e-15,
    					9.3189e-15,
    					2.8464e-14,
    					8.5165e-14,
    					2.4963e-13,
    					7.1677e-13,
    					2.0162e-12,
    					5.556e-12,
    					1.4999e-11,
    					3.967e-11,
    					1.0279e-10,
    					2.6093e-10,
    					6.4895e-10,
    					1.5813e-9,
    					3.7753e-9,
    					8.8313e-9,
    					2.0241e-8,
    					4.5458e-8,
    					1.0004e-7,
    					2.1571e-7,
    					4.5582e-7,
    					9.4389e-7,
    					0.0000019155,
    					0.0000038095,
    					0.0000074255,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.002,
    					0.0031,
    					0.0047,
    					0.0072,
    					0.0106,
    					0.0154,
    					0.0219,
    					0.0307,
    					0.0422,
    					0.0569,
    					0.0755,
    					0.0983,
    					0.1257,
    					0.1582,
    					0.1956,
    					0.238,
    					0.2851,
    					0.3361,
    					0.3903,
    					0.4468,
    					0.5044,
    					0.5619,
    					0.6181,
    					0.6719,
    					0.7224,
    					0.7687,
    					0.8104,
    					0.8471,
    					0.8788,
    					0.9055,
    					0.9276,
    					0.9455,
    					0.9598,
    					0.9708,
    					0.9792,
    					0.9854,
    					0.99,
    					0.9933,
    					0.9956,
    					0.9971,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.1116,
    				"std.error": 0.7764,
    				statistic: -1.4316,
    				"p.value": 0.1534,
    				"conf.low": -2.64,
    				"conf.high": 0.4168,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.3077e-15,
    					1.2654e-14,
    					3.6482e-14,
    					1.0323e-13,
    					2.867e-13,
    					7.8149e-13,
    					2.0908e-12,
    					5.4904e-12,
    					1.4151e-11,
    					3.5801e-11,
    					8.8902e-11,
    					2.1669e-10,
    					5.1846e-10,
    					1.2176e-9,
    					2.8071e-9,
    					6.3526e-9,
    					1.4113e-8,
    					3.0778e-8,
    					6.5894e-8,
    					1.385e-7,
    					2.8579e-7,
    					5.7897e-7,
    					0.0000011516,
    					0.0000022489,
    					0.0000043123,
    					0.0000081193,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0026,
    					0.0039,
    					0.0059,
    					0.0086,
    					0.0124,
    					0.0176,
    					0.0246,
    					0.0337,
    					0.0454,
    					0.0601,
    					0.0784,
    					0.1007,
    					0.1272,
    					0.1582,
    					0.1937,
    					0.2338,
    					0.2781,
    					0.3262,
    					0.3773,
    					0.4306,
    					0.4853,
    					0.5402,
    					0.5944,
    					0.6468,
    					0.6966,
    					0.743,
    					0.7853,
    					0.8234,
    					0.8568,
    					0.8857,
    					0.9102,
    					0.9305,
    					0.9471,
    					0.9604,
    					0.9708,
    					0.9789,
    					0.985,
    					0.9895,
    					0.9928,
    					0.9951,
    					0.9967,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5609,
    				"std.error": 0.8903,
    				statistic: 1.7533,
    				"p.value": 0.0807,
    				"conf.low": -0.1916,
    				"conf.high": 3.3135,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.075e-13,
    					3.2792e-13,
    					9.7821e-13,
    					2.8536e-12,
    					8.1408e-12,
    					2.2712e-11,
    					6.197e-11,
    					1.6536e-10,
    					4.3155e-10,
    					1.1015e-9,
    					2.7499e-9,
    					6.7144e-9,
    					1.6036e-8,
    					3.746e-8,
    					8.5597e-8,
    					1.9133e-7,
    					4.1835e-7,
    					8.9485e-7,
    					0.0000018726,
    					0.0000038338,
    					0.0000076793,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0024,
    					0.0039,
    					0.006,
    					0.0091,
    					0.0135,
    					0.0196,
    					0.028,
    					0.0392,
    					0.0538,
    					0.0723,
    					0.0955,
    					0.1236,
    					0.1571,
    					0.1961,
    					0.2405,
    					0.2898,
    					0.3434,
    					0.4004,
    					0.4595,
    					0.5196,
    					0.5793,
    					0.6371,
    					0.692,
    					0.7429,
    					0.789,
    					0.8299,
    					0.8653,
    					0.8953,
    					0.9202,
    					0.9403,
    					0.9562,
    					0.9685,
    					0.9778,
    					0.9846,
    					0.9896,
    					0.9931,
    					0.9955,
    					0.9971,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 88,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4037,
    				"std.error": 0.4076,
    				statistic: 15.7103,
    				"p.value": 2.379e-43,
    				"conf.low": 5.6023,
    				"conf.high": 7.2051,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.6806e-14,
    					5.3818e-14,
    					1.6845e-13,
    					5.1535e-13,
    					1.5411e-12,
    					4.5044e-12,
    					1.287e-11,
    					3.5941e-11,
    					9.8118e-11,
    					2.6184e-10,
    					6.8305e-10,
    					1.7419e-9,
    					4.3426e-9,
    					1.0584e-8,
    					2.5219e-8,
    					5.8751e-8,
    					1.3382e-7,
    					2.9801e-7,
    					6.4891e-7,
    					0.0000013817,
    					0.0000028767,
    					0.0000058572,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0034,
    					0.0053,
    					0.0082,
    					0.0123,
    					0.018,
    					0.0259,
    					0.0366,
    					0.0506,
    					0.0685,
    					0.091,
    					0.1186,
    					0.1516,
    					0.1902,
    					0.2343,
    					0.2835,
    					0.3372,
    					0.3945,
    					0.4542,
    					0.5149,
    					0.5752,
    					0.6339,
    					0.6895,
    					0.7412,
    					0.788,
    					0.8294,
    					0.8652,
    					0.8955,
    					0.9206,
    					0.9408,
    					0.9567,
    					0.969,
    					0.9782,
    					0.985,
    					0.9899,
    					0.9934,
    					0.9957,
    					0.9973,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.7,
    				"std.error": 0.4906,
    				statistic: -1.4267,
    				"p.value": 0.1545,
    				"conf.low": -1.6646,
    				"conf.high": 0.2647,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.3427e-18,
    					1.3414e-17,
    					5.248e-17,
    					2.0016e-16,
    					7.4423e-16,
    					2.6978e-15,
    					9.5341e-15,
    					3.2849e-14,
    					1.1035e-13,
    					3.6139e-13,
    					1.154e-12,
    					3.5927e-12,
    					1.0906e-11,
    					3.228e-11,
    					9.3161e-11,
    					2.6217e-10,
    					7.1941e-10,
    					1.9251e-9,
    					5.0234e-9,
    					1.2783e-8,
    					3.1724e-8,
    					7.6783e-8,
    					1.8125e-7,
    					4.1731e-7,
    					9.3715e-7,
    					0.0000020529,
    					0.0000043867,
    					0.0000091444,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0023,
    					0.0037,
    					0.0059,
    					0.0092,
    					0.014,
    					0.0208,
    					0.0303,
    					0.0431,
    					0.06,
    					0.0816,
    					0.1086,
    					0.1415,
    					0.1807,
    					0.2259,
    					0.277,
    					0.3332,
    					0.3933,
    					0.4562,
    					0.5202,
    					0.5836,
    					0.6449,
    					0.7027,
    					0.7558,
    					0.8033,
    					0.8447,
    					0.8799,
    					0.9091,
    					0.9326,
    					0.9512,
    					0.9654,
    					0.976,
    					0.9837,
    					0.9892,
    					0.993,
    					0.9956,
    					0.9973,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.0561,
    				"std.error": 0.5473,
    				statistic: -1.9296,
    				"p.value": 0.0544,
    				"conf.low": -2.1321,
    				"conf.high": 0.02,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.7368e-29,
    					5.0304e-28,
    					4.2467e-27,
    					3.4516e-26,
    					2.701e-25,
    					2.0349e-24,
    					1.4761e-23,
    					1.0309e-22,
    					6.932e-22,
    					4.4881e-21,
    					2.7978e-20,
    					1.6794e-19,
    					9.7065e-19,
    					5.402e-18,
    					2.8949e-17,
    					1.4939e-16,
    					7.4237e-16,
    					3.5525e-15,
    					1.6372e-14,
    					7.2659e-14,
    					3.1056e-13,
    					1.2784e-12,
    					5.0685e-12,
    					1.9355e-11,
    					7.119e-11,
    					2.5222e-10,
    					8.6082e-10,
    					2.8302e-9,
    					8.9645e-9,
    					2.7356e-8,
    					8.0435e-8,
    					2.2789e-7,
    					6.2217e-7,
    					0.000001637,
    					0.0000041514,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0019,
    					0.0035,
    					0.0062,
    					0.0106,
    					0.0174,
    					0.0278,
    					0.0428,
    					0.0639,
    					0.0922,
    					0.1288,
    					0.1746,
    					0.2295,
    					0.2929,
    					0.3634,
    					0.4389,
    					0.5167,
    					0.5938,
    					0.6675,
    					0.7352,
    					0.7951,
    					0.8461,
    					0.8879,
    					0.9209,
    					0.9459,
    					0.9643,
    					0.9771,
    					0.9859,
    					0.9916,
    					0.9951,
    					0.9973,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.9278,
    				"std.error": 0.6665,
    				statistic: 1.392,
    				"p.value": 0.1647,
    				"conf.low": -0.3827,
    				"conf.high": 2.2383,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.256e-19,
    					2.5369e-18,
    					1.4528e-17,
    					7.9934e-17,
    					4.2254e-16,
    					2.1461e-15,
    					1.0473e-14,
    					4.9107e-14,
    					2.2125e-13,
    					9.5792e-13,
    					3.9853e-12,
    					1.5934e-11,
    					6.1223e-11,
    					2.2608e-10,
    					8.0242e-10,
    					2.7374e-9,
    					8.9763e-9,
    					2.8295e-8,
    					8.5746e-8,
    					2.4982e-7,
    					6.9986e-7,
    					0.0000018853,
    					0.0000048842,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0007,
    					0.0013,
    					0.0025,
    					0.0045,
    					0.008,
    					0.0137,
    					0.0225,
    					0.0356,
    					0.0545,
    					0.0806,
    					0.1151,
    					0.159,
    					0.2127,
    					0.2757,
    					0.3467,
    					0.4236,
    					0.5034,
    					0.5832,
    					0.6596,
    					0.73,
    					0.7922,
    					0.8451,
    					0.8882,
    					0.922,
    					0.9474,
    					0.9657,
    					0.9784,
    					0.9869,
    					0.9924,
    					0.9957,
    					0.9977,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 89,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.7686,
    				"std.error": 0.3167,
    				statistic: 18.2137,
    				"p.value": 6.0899e-54,
    				"conf.low": 5.1459,
    				"conf.high": 6.3913,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					4.4231e-15,
    					2.036e-14,
    					9.0238e-14,
    					3.8509e-13,
    					1.5824e-12,
    					6.2616e-12,
    					2.3859e-11,
    					8.755e-11,
    					3.0939e-10,
    					1.053e-9,
    					3.4517e-9,
    					1.0898e-8,
    					3.3146e-8,
    					9.7111e-8,
    					2.741e-7,
    					7.4538e-7,
    					0.0000019531,
    					0.0000049315,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0022,
    					0.004,
    					0.007,
    					0.0118,
    					0.0194,
    					0.0307,
    					0.0471,
    					0.0697,
    					0.1,
    					0.1389,
    					0.1869,
    					0.2441,
    					0.3096,
    					0.3818,
    					0.4583,
    					0.5364,
    					0.6132,
    					0.6857,
    					0.7517,
    					0.8095,
    					0.8582,
    					0.8977,
    					0.9285,
    					0.9516,
    					0.9683,
    					0.98,
    					0.9878,
    					0.9928,
    					0.9959,
    					0.9977,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.2583,
    				"std.error": 0.3859,
    				statistic: -0.6692,
    				"p.value": 0.5037,
    				"conf.low": -1.017,
    				"conf.high": 0.5005,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.0482e-34,
    					5.9488e-33,
    					6.7259e-32,
    					7.2962e-31,
    					7.5942e-30,
    					7.5841e-29,
    					7.2672e-28,
    					6.6816e-27,
    					5.8945e-26,
    					4.9897e-25,
    					4.0528e-24,
    					3.1588e-23,
    					2.3624e-22,
    					1.6954e-21,
    					1.1676e-20,
    					7.7164e-20,
    					4.8937e-19,
    					2.9784e-18,
    					1.7396e-17,
    					9.7512e-17,
    					5.2458e-16,
    					2.7085e-15,
    					1.3422e-14,
    					6.3841e-14,
    					2.9146e-13,
    					1.2772e-12,
    					5.3727e-12,
    					2.1695e-11,
    					8.4104e-11,
    					3.1301e-10,
    					1.1184e-9,
    					3.837e-9,
    					1.264e-8,
    					3.9986e-8,
    					1.2148e-7,
    					3.5443e-7,
    					9.933e-7,
    					0.0000026741,
    					0.000006916,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0009,
    					0.0018,
    					0.0033,
    					0.006,
    					0.0106,
    					0.0178,
    					0.0289,
    					0.0453,
    					0.0683,
    					0.0995,
    					0.14,
    					0.1905,
    					0.2508,
    					0.3199,
    					0.396,
    					0.4762,
    					0.5574,
    					0.6363,
    					0.7098,
    					0.7754,
    					0.8317,
    					0.878,
    					0.9145,
    					0.9422,
    					0.9623,
    					0.9762,
    					0.9856,
    					0.9916,
    					0.9953,
    					0.9974,
    					0.9987,
    					0.9993,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: 0.1911,
    				"std.error": 0.6238,
    				statistic: 0.3063,
    				"p.value": 0.7595,
    				"conf.low": -1.0353,
    				"conf.high": 1.4175,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.7223e-32,
    					2.7939e-31,
    					2.0365e-30,
    					1.4417e-29,
    					9.9124e-29,
    					6.6188e-28,
    					4.2923e-27,
    					2.7034e-26,
    					1.6537e-25,
    					9.8246e-25,
    					5.6689e-24,
    					3.1769e-23,
    					1.7292e-22,
    					9.1417e-22,
    					4.694e-21,
    					2.341e-20,
    					1.134e-19,
    					5.3356e-19,
    					2.4384e-18,
    					1.0824e-17,
    					4.6673e-17,
    					1.9548e-16,
    					7.9531e-16,
    					3.1431e-15,
    					1.2066e-14,
    					4.4998e-14,
    					1.6302e-13,
    					5.7372e-13,
    					1.9616e-12,
    					6.5154e-12,
    					2.1025e-11,
    					6.5919e-11,
    					2.008e-10,
    					5.9428e-10,
    					1.709e-9,
    					4.7754e-9,
    					1.2966e-8,
    					3.4212e-8,
    					8.7723e-8,
    					2.186e-7,
    					5.2942e-7,
    					0.0000012462,
    					0.0000028514,
    					0.000006342,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.004,
    					0.0066,
    					0.0106,
    					0.0164,
    					0.0248,
    					0.0366,
    					0.0527,
    					0.0738,
    					0.1009,
    					0.1347,
    					0.1754,
    					0.2232,
    					0.2777,
    					0.338,
    					0.4027,
    					0.4702,
    					0.5386,
    					0.6058,
    					0.6701,
    					0.7297,
    					0.7833,
    					0.8302,
    					0.8701,
    					0.9029,
    					0.9292,
    					0.9497,
    					0.9651,
    					0.9764,
    					0.9845,
    					0.99,
    					0.9938,
    					0.9962,
    					0.9978,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.314,
    				"std.error": 0.763,
    				statistic: 0.4116,
    				"p.value": 0.6809,
    				"conf.low": -1.186,
    				"conf.high": 1.8141,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.1081e-12,
    					7.2017e-12,
    					2.3867e-11,
    					7.6732e-11,
    					2.3933e-10,
    					7.2425e-10,
    					2.1264e-9,
    					6.0575e-9,
    					1.6744e-8,
    					4.4909e-8,
    					1.1689e-7,
    					2.9524e-7,
    					7.2372e-7,
    					0.0000017218,
    					0.0000039762,
    					0.000008913,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0034,
    					0.0057,
    					0.0093,
    					0.0147,
    					0.0226,
    					0.0338,
    					0.0493,
    					0.0701,
    					0.0969,
    					0.1306,
    					0.1717,
    					0.2202,
    					0.2757,
    					0.3374,
    					0.4037,
    					0.473,
    					0.5431,
    					0.6118,
    					0.6773,
    					0.7376,
    					0.7916,
    					0.8384,
    					0.8778,
    					0.9098,
    					0.9352,
    					0.9547,
    					0.9691,
    					0.9795,
    					0.9868,
    					0.9917,
    					0.9949,
    					0.997,
    					0.9983,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 90,
    		cycle_length: "cl_option1",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option1"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4037,
    				"std.error": 0.4041,
    				statistic: 15.8468,
    				"p.value": 8.9269e-41,
    				"conf.low": 5.6082,
    				"conf.high": 7.1992,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.0087e-14,
    					3.2955e-14,
    					1.0519e-13,
    					3.2804e-13,
    					9.9955e-13,
    					2.9758e-12,
    					8.6561e-12,
    					2.4603e-11,
    					6.8326e-11,
    					1.8541e-10,
    					4.9166e-10,
    					1.274e-9,
    					3.2258e-9,
    					7.9819e-9,
    					1.9301e-8,
    					4.5613e-8,
    					1.0535e-7,
    					2.378e-7,
    					5.2465e-7,
    					0.0000011314,
    					0.0000023848,
    					0.0000049137,
    					0.0000098974,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0032,
    					0.005,
    					0.0077,
    					0.0116,
    					0.0172,
    					0.0249,
    					0.0354,
    					0.0491,
    					0.0668,
    					0.0891,
    					0.1166,
    					0.1495,
    					0.1881,
    					0.2324,
    					0.2818,
    					0.3359,
    					0.3936,
    					0.4538,
    					0.515,
    					0.5759,
    					0.635,
    					0.691,
    					0.743,
    					0.79,
    					0.8315,
    					0.8673,
    					0.8975,
    					0.9224,
    					0.9424,
    					0.9581,
    					0.9701,
    					0.9791,
    					0.9857,
    					0.9905,
    					0.9937,
    					0.996,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.7,
    				"std.error": 0.4864,
    				statistic: -1.4391,
    				"p.value": 0.1512,
    				"conf.low": -1.6575,
    				"conf.high": 0.2575,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.7326e-18,
    					7.1215e-18,
    					2.8524e-17,
    					1.1132e-16,
    					4.2339e-16,
    					1.5691e-15,
    					5.6671e-15,
    					1.9945e-14,
    					6.8407e-14,
    					2.2864e-13,
    					7.4477e-13,
    					2.3643e-12,
    					7.3147e-12,
    					2.2056e-11,
    					6.4816e-11,
    					1.8565e-10,
    					5.1829e-10,
    					1.4103e-9,
    					3.7407e-9,
    					9.6713e-9,
    					2.4374e-8,
    					5.9883e-8,
    					1.4343e-7,
    					3.349e-7,
    					7.624e-7,
    					0.0000016922,
    					0.0000036623,
    					0.0000077288,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0021,
    					0.0034,
    					0.0055,
    					0.0087,
    					0.0133,
    					0.02,
    					0.0292,
    					0.0418,
    					0.0584,
    					0.0798,
    					0.1066,
    					0.1395,
    					0.1786,
    					0.224,
    					0.2753,
    					0.3318,
    					0.3924,
    					0.4558,
    					0.5203,
    					0.5843,
    					0.6461,
    					0.7043,
    					0.7577,
    					0.8053,
    					0.8468,
    					0.8819,
    					0.911,
    					0.9343,
    					0.9526,
    					0.9666,
    					0.977,
    					0.9845,
    					0.9898,
    					0.9934,
    					0.9959,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.444,
    				"std.error": 0.6673,
    				statistic: -0.6653,
    				"p.value": 0.5064,
    				"conf.low": -1.7577,
    				"conf.high": 0.8697,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.804e-24,
    					2.9079e-23,
    					1.4203e-22,
    					6.7624e-22,
    					3.1388e-21,
    					1.4203e-20,
    					6.265e-20,
    					2.6942e-19,
    					1.1295e-18,
    					4.6163e-18,
    					1.8394e-17,
    					7.1454e-17,
    					2.7061e-16,
    					9.9921e-16,
    					3.597e-15,
    					1.2625e-14,
    					4.3202e-14,
    					1.4414e-13,
    					4.6891e-13,
    					1.4873e-12,
    					4.6e-12,
    					1.3872e-11,
    					4.0792e-11,
    					1.1697e-10,
    					3.2705e-10,
    					8.9176e-10,
    					2.3712e-9,
    					6.1489e-9,
    					1.555e-8,
    					3.8355e-8,
    					9.2265e-8,
    					2.1648e-7,
    					4.9545e-7,
    					0.000001106,
    					0.0000024086,
    					0.0000051169,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0025,
    					0.0041,
    					0.0064,
    					0.01,
    					0.0151,
    					0.0224,
    					0.0325,
    					0.046,
    					0.0637,
    					0.0863,
    					0.1143,
    					0.1484,
    					0.1886,
    					0.235,
    					0.287,
    					0.344,
    					0.4047,
    					0.4678,
    					0.5317,
    					0.5949,
    					0.6556,
    					0.7126,
    					0.7646,
    					0.811,
    					0.8513,
    					0.8854,
    					0.9136,
    					0.9362,
    					0.9539,
    					0.9674,
    					0.9775,
    					0.9848,
    					0.99,
    					0.9935,
    					0.9959,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.7557,
    				"std.error": 0.8122,
    				statistic: 0.9305,
    				"p.value": 0.3529,
    				"conf.low": -0.8431,
    				"conf.high": 2.3546,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					8.7316e-13,
    					2.8273e-12,
    					8.9124e-12,
    					2.7352e-11,
    					8.1728e-11,
    					2.3776e-10,
    					6.7346e-10,
    					1.8574e-9,
    					4.9879e-9,
    					1.3043e-8,
    					3.3212e-8,
    					8.2357e-8,
    					1.9888e-7,
    					4.6774e-7,
    					0.0000010714,
    					0.0000023904,
    					0.0000051946,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0029,
    					0.0048,
    					0.0076,
    					0.0119,
    					0.0181,
    					0.0268,
    					0.0388,
    					0.0549,
    					0.0758,
    					0.1023,
    					0.1349,
    					0.1741,
    					0.2198,
    					0.2718,
    					0.3292,
    					0.3909,
    					0.4555,
    					0.5214,
    					0.5866,
    					0.6496,
    					0.7087,
    					0.7626,
    					0.8106,
    					0.8521,
    					0.887,
    					0.9156,
    					0.9384,
    					0.956,
    					0.9694,
    					0.9792,
    					0.9862,
    					0.991,
    					0.9943,
    					0.9965,
    					0.9979,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 91,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option1",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.3107,
    				"std.error": 0.4704,
    				statistic: 13.4158,
    				"p.value": 8.0651e-31,
    				"conf.low": 5.384,
    				"conf.high": 7.2374,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					9.2221e-11,
    					2.1643e-10,
    					4.9935e-10,
    					1.1326e-9,
    					2.5257e-9,
    					5.5372e-9,
    					1.1935e-8,
    					2.5292e-8,
    					5.2697e-8,
    					1.0795e-7,
    					2.1744e-7,
    					4.3063e-7,
    					8.3861e-7,
    					0.0000016058,
    					0.0000030237,
    					0.0000055989,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0016,
    					0.0025,
    					0.0037,
    					0.0055,
    					0.0079,
    					0.0113,
    					0.0159,
    					0.0219,
    					0.0298,
    					0.04,
    					0.0527,
    					0.0685,
    					0.0877,
    					0.1107,
    					0.1377,
    					0.1689,
    					0.2042,
    					0.2437,
    					0.2869,
    					0.3334,
    					0.3827,
    					0.434,
    					0.4864,
    					0.539,
    					0.5909,
    					0.6413,
    					0.6894,
    					0.7344,
    					0.7759,
    					0.8134,
    					0.8467,
    					0.8758,
    					0.9009,
    					0.922,
    					0.9395,
    					0.9538,
    					0.9652,
    					0.9742,
    					0.9812,
    					0.9865,
    					0.9904,
    					0.9933,
    					0.9954,
    					0.9969,
    					0.998,
    					0.9987,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.2247,
    				"std.error": 0.6122,
    				statistic: -2.0007,
    				"p.value": 0.0466,
    				"conf.low": -2.4308,
    				"conf.high": -0.0187,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					7.1662e-10,
    					1.5805e-9,
    					3.43e-9,
    					7.3246e-9,
    					1.5391e-8,
    					3.1824e-8,
    					6.4753e-8,
    					1.2965e-7,
    					2.5547e-7,
    					4.9538e-7,
    					9.4533e-7,
    					0.0000017754,
    					0.0000032815,
    					0.0000059696,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0023,
    					0.0034,
    					0.005,
    					0.0072,
    					0.0102,
    					0.0142,
    					0.0196,
    					0.0266,
    					0.0356,
    					0.0469,
    					0.0609,
    					0.078,
    					0.0985,
    					0.1227,
    					0.1509,
    					0.183,
    					0.2191,
    					0.2589,
    					0.3023,
    					0.3486,
    					0.3972,
    					0.4476,
    					0.4987,
    					0.55,
    					0.6003,
    					0.6491,
    					0.6955,
    					0.739,
    					0.7791,
    					0.8153,
    					0.8477,
    					0.876,
    					0.9004,
    					0.9211,
    					0.9384,
    					0.9525,
    					0.964,
    					0.973,
    					0.9801,
    					0.9855,
    					0.9896,
    					0.9927,
    					0.9949,
    					0.9965,
    					0.9977,
    					0.9984,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.4853,
    				"std.error": 0.6142,
    				statistic: -2.4182,
    				"p.value": 0.0164,
    				"conf.low": -2.6954,
    				"conf.high": -0.2752,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.8043e-20,
    					8.9989e-20,
    					4.3554e-19,
    					2.0456e-18,
    					9.3238e-18,
    					4.1241e-17,
    					1.7703e-16,
    					7.3751e-16,
    					2.9818e-15,
    					1.17e-14,
    					4.4556e-14,
    					1.6468e-13,
    					5.9078e-13,
    					2.057e-12,
    					6.9519e-12,
    					2.2805e-11,
    					7.2615e-11,
    					2.2445e-10,
    					6.7345e-10,
    					1.9616e-9,
    					5.547e-9,
    					1.5228e-8,
    					4.0589e-8,
    					1.0504e-7,
    					2.6394e-7,
    					6.4403e-7,
    					0.000001526,
    					0.0000035116,
    					0.0000078482,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0017,
    					0.003,
    					0.005,
    					0.0082,
    					0.013,
    					0.02,
    					0.0302,
    					0.0442,
    					0.063,
    					0.0876,
    					0.1188,
    					0.157,
    					0.2025,
    					0.2552,
    					0.3142,
    					0.3784,
    					0.4461,
    					0.5155,
    					0.5844,
    					0.6508,
    					0.7129,
    					0.7692,
    					0.8187,
    					0.861,
    					0.896,
    					0.9241,
    					0.946,
    					0.9626,
    					0.9748,
    					0.9834,
    					0.9894,
    					0.9934,
    					0.996,
    					0.9977,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.0889,
    				"std.error": 0.8142,
    				statistic: 2.5657,
    				"p.value": 0.0109,
    				"conf.low": 0.4849,
    				"conf.high": 3.6929,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.088e-18,
    					8.7715e-18,
    					3.5871e-17,
    					1.4282e-16,
    					5.5355e-16,
    					2.0888e-15,
    					7.6739e-15,
    					2.7447e-14,
    					9.5581e-14,
    					3.2407e-13,
    					1.0698e-12,
    					3.4384e-12,
    					1.0761e-11,
    					3.2791e-11,
    					9.7299e-11,
    					2.8113e-10,
    					7.9097e-10,
    					2.1672e-9,
    					5.7825e-9,
    					1.5026e-8,
    					3.8025e-8,
    					9.3724e-8,
    					2.25e-7,
    					5.2612e-7,
    					0.0000011983,
    					0.0000026589,
    					0.0000057472,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0018,
    					0.0031,
    					0.005,
    					0.008,
    					0.0124,
    					0.0188,
    					0.0278,
    					0.0402,
    					0.0566,
    					0.0779,
    					0.1049,
    					0.138,
    					0.1776,
    					0.2238,
    					0.276,
    					0.3337,
    					0.3955,
    					0.4602,
    					0.5258,
    					0.5908,
    					0.6534,
    					0.7121,
    					0.7656,
    					0.8131,
    					0.8541,
    					0.8886,
    					0.9168,
    					0.9393,
    					0.9567,
    					0.9698,
    					0.9795,
    					0.9864,
    					0.9912,
    					0.9944,
    					0.9966,
    					0.9979,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 92,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option1",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.6625,
    				"std.error": 0.3658,
    				statistic: 15.4785,
    				"p.value": 1.0963e-37,
    				"conf.low": 4.9418,
    				"conf.high": 6.3832,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					6.651e-11,
    					2.0022e-10,
    					5.8599e-10,
    					1.6674e-9,
    					4.6129e-9,
    					1.2408e-8,
    					3.2453e-8,
    					8.2533e-8,
    					2.0411e-7,
    					4.9088e-7,
    					0.0000011481,
    					0.0000026117,
    					0.0000057784,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0021,
    					0.0036,
    					0.0059,
    					0.0094,
    					0.0147,
    					0.0223,
    					0.033,
    					0.0476,
    					0.067,
    					0.0919,
    					0.1232,
    					0.1613,
    					0.2063,
    					0.258,
    					0.3157,
    					0.3783,
    					0.4443,
    					0.5118,
    					0.5791,
    					0.644,
    					0.7051,
    					0.7608,
    					0.8102,
    					0.8528,
    					0.8885,
    					0.9175,
    					0.9404,
    					0.958,
    					0.9711,
    					0.9807,
    					0.9874,
    					0.992,
    					0.995,
    					0.997,
    					0.9982,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5491,
    				"std.error": 0.4861,
    				statistic: -1.1295,
    				"p.value": 0.2599,
    				"conf.low": -1.5069,
    				"conf.high": 0.4087,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.0305e-19,
    					4.4578e-19,
    					1.879e-18,
    					7.7177e-18,
    					3.0888e-17,
    					1.2045e-16,
    					4.5774e-16,
    					1.695e-15,
    					6.1162e-15,
    					2.1506e-14,
    					7.3692e-14,
    					2.4607e-13,
    					8.0076e-13,
    					2.5395e-12,
    					7.8485e-12,
    					2.364e-11,
    					6.9398e-11,
    					1.9855e-10,
    					5.5368e-10,
    					1.5049e-9,
    					3.9868e-9,
    					1.0295e-8,
    					2.5914e-8,
    					6.3588e-8,
    					1.521e-7,
    					3.547e-7,
    					8.064e-7,
    					0.0000017875,
    					0.0000038632,
    					0.0000081413,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0022,
    					0.0036,
    					0.0057,
    					0.009,
    					0.0138,
    					0.0206,
    					0.0301,
    					0.0429,
    					0.0599,
    					0.0817,
    					0.109,
    					0.1424,
    					0.1821,
    					0.228,
    					0.2798,
    					0.3367,
    					0.3977,
    					0.4612,
    					0.5258,
    					0.5897,
    					0.6513,
    					0.7091,
    					0.7621,
    					0.8092,
    					0.8501,
    					0.8847,
    					0.9133,
    					0.9361,
    					0.954,
    					0.9676,
    					0.9777,
    					0.985,
    					0.9902,
    					0.9937,
    					0.9961,
    					0.9976,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.7247,
    				"std.error": 0.6595,
    				statistic: -1.0988,
    				"p.value": 0.273,
    				"conf.low": -2.024,
    				"conf.high": 0.5746,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.2333e-22,
    					5.9951e-22,
    					2.8391e-21,
    					1.3099e-20,
    					5.8885e-20,
    					2.5789e-19,
    					1.1004e-18,
    					4.5749e-18,
    					1.8531e-17,
    					7.3136e-17,
    					2.8124e-16,
    					1.0537e-15,
    					3.8468e-15,
    					1.3684e-14,
    					4.7429e-14,
    					1.6019e-13,
    					5.2719e-13,
    					1.6907e-12,
    					5.2835e-12,
    					1.609e-11,
    					4.7751e-11,
    					1.381e-10,
    					3.8925e-10,
    					1.0692e-9,
    					2.8626e-9,
    					7.4693e-9,
    					1.8996e-8,
    					4.709e-8,
    					1.1378e-7,
    					2.68e-7,
    					6.1536e-7,
    					0.0000013774,
    					0.0000030059,
    					0.0000063957,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0018,
    					0.0031,
    					0.005,
    					0.0079,
    					0.0121,
    					0.0183,
    					0.0269,
    					0.0387,
    					0.0543,
    					0.0747,
    					0.1004,
    					0.132,
    					0.1698,
    					0.2141,
    					0.2643,
    					0.32,
    					0.38,
    					0.4431,
    					0.5077,
    					0.572,
    					0.6345,
    					0.6936,
    					0.7481,
    					0.797,
    					0.8397,
    					0.8761,
    					0.9062,
    					0.9306,
    					0.9498,
    					0.9644,
    					0.9754,
    					0.9834,
    					0.989,
    					0.9929,
    					0.9956,
    					0.9973,
    					0.9984,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.7193,
    				"std.error": 0.8822,
    				statistic: 1.9488,
    				"p.value": 0.0525,
    				"conf.low": -0.0189,
    				"conf.high": 3.4574,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.6558e-14,
    					5.2937e-14,
    					1.6543e-13,
    					5.0533e-13,
    					1.5089e-12,
    					4.4044e-12,
    					1.2568e-11,
    					3.5055e-11,
    					9.559e-11,
    					2.5482e-10,
    					6.6409e-10,
    					1.692e-9,
    					4.2148e-9,
    					1.0265e-8,
    					2.4442e-8,
    					5.6906e-8,
    					1.2954e-7,
    					2.8836e-7,
    					6.2767e-7,
    					0.000001336,
    					0.0000027811,
    					0.0000056617,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0033,
    					0.0052,
    					0.0079,
    					0.0119,
    					0.0175,
    					0.0252,
    					0.0357,
    					0.0493,
    					0.0669,
    					0.089,
    					0.1161,
    					0.1485,
    					0.1866,
    					0.2301,
    					0.2788,
    					0.3321,
    					0.389,
    					0.4483,
    					0.5089,
    					0.5693,
    					0.628,
    					0.684,
    					0.736,
    					0.7832,
    					0.8252,
    					0.8616,
    					0.8924,
    					0.918,
    					0.9387,
    					0.9551,
    					0.9677,
    					0.9773,
    					0.9843,
    					0.9894,
    					0.993,
    					0.9955,
    					0.9971,
    					0.9982,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 93,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option1",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.3107,
    				"std.error": 0.4722,
    				statistic: 13.3647,
    				"p.value": 1.9196e-28,
    				"conf.low": 5.3787,
    				"conf.high": 7.2427,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.0802e-10,
    					2.5191e-10,
    					5.7762e-10,
    					1.3022e-9,
    					2.8867e-9,
    					6.2919e-9,
    					1.3485e-8,
    					2.8418e-8,
    					5.889e-8,
    					1.2e-7,
    					2.4047e-7,
    					4.7386e-7,
    					9.1828e-7,
    					0.0000017501,
    					0.0000032801,
    					0.0000060464,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0026,
    					0.0038,
    					0.0056,
    					0.0081,
    					0.0116,
    					0.0162,
    					0.0223,
    					0.0303,
    					0.0405,
    					0.0534,
    					0.0693,
    					0.0885,
    					0.1116,
    					0.1386,
    					0.1698,
    					0.2051,
    					0.2445,
    					0.2876,
    					0.334,
    					0.3832,
    					0.4342,
    					0.4864,
    					0.5388,
    					0.5906,
    					0.6408,
    					0.6887,
    					0.7336,
    					0.775,
    					0.8124,
    					0.8458,
    					0.8749,
    					0.9,
    					0.9212,
    					0.9388,
    					0.9532,
    					0.9647,
    					0.9738,
    					0.9808,
    					0.9862,
    					0.9902,
    					0.9932,
    					0.9953,
    					0.9968,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.2247,
    				"std.error": 0.6145,
    				statistic: -1.9931,
    				"p.value": 0.0478,
    				"conf.low": -2.4376,
    				"conf.high": -0.0119,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					8.2672e-10,
    					1.8127e-9,
    					3.9113e-9,
    					8.3056e-9,
    					1.7357e-8,
    					3.5697e-8,
    					7.2253e-8,
    					1.4393e-7,
    					2.8219e-7,
    					5.4454e-7,
    					0.0000010342,
    					0.0000019334,
    					0.0000035576,
    					0.0000064437,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.001,
    					0.0016,
    					0.0024,
    					0.0035,
    					0.0051,
    					0.0074,
    					0.0104,
    					0.0145,
    					0.02,
    					0.027,
    					0.0361,
    					0.0475,
    					0.0616,
    					0.0788,
    					0.0994,
    					0.1236,
    					0.1518,
    					0.1839,
    					0.22,
    					0.2597,
    					0.303,
    					0.3491,
    					0.3976,
    					0.4478,
    					0.4988,
    					0.5498,
    					0.6,
    					0.6486,
    					0.6949,
    					0.7382,
    					0.7782,
    					0.8144,
    					0.8467,
    					0.8751,
    					0.8995,
    					0.9203,
    					0.9376,
    					0.9519,
    					0.9634,
    					0.9726,
    					0.9797,
    					0.9852,
    					0.9894,
    					0.9925,
    					0.9948,
    					0.9964,
    					0.9976,
    					0.9984,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.3729,
    				"std.error": 0.7229,
    				statistic: -1.8992,
    				"p.value": 0.0592,
    				"conf.low": -2.7997,
    				"conf.high": 0.0539,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					7.8384e-16,
    					2.5708e-15,
    					8.2513e-15,
    					2.5918e-14,
    					7.9673e-14,
    					2.3969e-13,
    					7.0571e-13,
    					2.0335e-12,
    					5.7349e-12,
    					1.5829e-11,
    					4.2763e-11,
    					1.1307e-10,
    					2.9262e-10,
    					7.4122e-10,
    					1.8378e-9,
    					4.4603e-9,
    					1.0596e-8,
    					2.4641e-8,
    					5.6093e-8,
    					1.25e-7,
    					2.7272e-7,
    					5.8248e-7,
    					0.000001218,
    					0.0000024937,
    					0.0000049989,
    					0.000009812,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0027,
    					0.0041,
    					0.0064,
    					0.0095,
    					0.0141,
    					0.0203,
    					0.0287,
    					0.0399,
    					0.0544,
    					0.0728,
    					0.0956,
    					0.1232,
    					0.156,
    					0.1941,
    					0.2374,
    					0.2854,
    					0.3377,
    					0.3934,
    					0.4513,
    					0.5102,
    					0.569,
    					0.6262,
    					0.6808,
    					0.7317,
    					0.7782,
    					0.8197,
    					0.8559,
    					0.8869,
    					0.9128,
    					0.934,
    					0.951,
    					0.9643,
    					0.9745,
    					0.9821,
    					0.9877,
    					0.9917,
    					0.9945,
    					0.9964,
    					0.9977,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.3949,
    				"std.error": 0.9575,
    				statistic: 2.5011,
    				"p.value": 0.0133,
    				"conf.low": 0.5049,
    				"conf.high": 4.2849,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					7.0982e-15,
    					2.1042e-14,
    					6.1183e-14,
    					1.7449e-13,
    					4.8813e-13,
    					1.3394e-12,
    					3.605e-12,
    					9.5176e-12,
    					2.4648e-11,
    					6.2614e-11,
    					1.5603e-10,
    					3.8142e-10,
    					9.1464e-10,
    					2.1516e-9,
    					4.9656e-9,
    					1.1242e-8,
    					2.4971e-8,
    					5.4415e-8,
    					1.1634e-7,
    					2.4403e-7,
    					5.0225e-7,
    					0.0000010143,
    					0.0000020097,
    					0.0000039077,
    					0.0000074558,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0027,
    					0.0041,
    					0.0061,
    					0.009,
    					0.013,
    					0.0184,
    					0.0258,
    					0.0354,
    					0.0478,
    					0.0635,
    					0.0829,
    					0.1064,
    					0.1345,
    					0.1672,
    					0.2046,
    					0.2467,
    					0.2929,
    					0.3429,
    					0.3957,
    					0.4506,
    					0.5064,
    					0.562,
    					0.6165,
    					0.6688,
    					0.7179,
    					0.7633,
    					0.8043,
    					0.8407,
    					0.8723,
    					0.8993,
    					0.9219,
    					0.9404,
    					0.9553,
    					0.967,
    					0.9761,
    					0.9829,
    					0.9881,
    					0.9918,
    					0.9944,
    					0.9963,
    					0.9976,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 94,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option2",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.3617,
    				"std.error": 0.442,
    				statistic: 14.3921,
    				"p.value": 2.3186e-35,
    				"conf.low": 5.4915,
    				"conf.high": 7.2319,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.6347e-12,
    					7.0162e-12,
    					1.8326e-11,
    					4.6947e-11,
    					1.1797e-10,
    					2.9074e-10,
    					7.0288e-10,
    					1.6668e-9,
    					3.8771e-9,
    					8.8466e-9,
    					1.9801e-8,
    					4.3478e-8,
    					9.3653e-8,
    					1.979e-7,
    					4.1028e-7,
    					8.3448e-7,
    					0.0000016652,
    					0.0000032604,
    					0.0000062635,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0024,
    					0.0037,
    					0.0055,
    					0.0082,
    					0.0119,
    					0.017,
    					0.0239,
    					0.033,
    					0.0448,
    					0.0597,
    					0.0783,
    					0.101,
    					0.1281,
    					0.1599,
    					0.1964,
    					0.2376,
    					0.2832,
    					0.3326,
    					0.3851,
    					0.4397,
    					0.4956,
    					0.5515,
    					0.6064,
    					0.6593,
    					0.7092,
    					0.7554,
    					0.7973,
    					0.8347,
    					0.8672,
    					0.895,
    					0.9184,
    					0.9376,
    					0.9531,
    					0.9653,
    					0.9748,
    					0.982,
    					0.9874,
    					0.9913,
    					0.9941,
    					0.9961,
    					0.9974,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1926,
    				"std.error": 0.5691,
    				statistic: -2.0957,
    				"p.value": 0.037,
    				"conf.low": -2.313,
    				"conf.high": -0.0723,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.5828e-11,
    					6.4796e-11,
    					1.5954e-10,
    					3.855e-10,
    					9.1424e-10,
    					2.128e-9,
    					4.8615e-9,
    					1.0901e-8,
    					2.3992e-8,
    					5.1828e-8,
    					1.099e-7,
    					2.2875e-7,
    					4.6738e-7,
    					9.3742e-7,
    					0.0000018458,
    					0.0000035678,
    					0.0000067706,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0023,
    					0.0036,
    					0.0054,
    					0.0079,
    					0.0115,
    					0.0163,
    					0.0229,
    					0.0315,
    					0.0426,
    					0.0568,
    					0.0744,
    					0.0958,
    					0.1216,
    					0.1518,
    					0.1866,
    					0.226,
    					0.2698,
    					0.3174,
    					0.3682,
    					0.4214,
    					0.4762,
    					0.5313,
    					0.5859,
    					0.6389,
    					0.6893,
    					0.7364,
    					0.7796,
    					0.8184,
    					0.8526,
    					0.8822,
    					0.9073,
    					0.9283,
    					0.9454,
    					0.9591,
    					0.9698,
    					0.9781,
    					0.9844,
    					0.9891,
    					0.9925,
    					0.9949,
    					0.9966,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.7083,
    				"std.error": 0.5676,
    				statistic: -3.0099,
    				"p.value": 0.0029,
    				"conf.low": -2.8256,
    				"conf.high": -0.591,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.7614e-22,
    					3.5043e-21,
    					2.0578e-20,
    					1.1666e-19,
    					6.3847e-19,
    					3.3737e-18,
    					1.7211e-17,
    					8.4777e-17,
    					4.0317e-16,
    					1.8513e-15,
    					8.2079e-15,
    					3.5138e-14,
    					1.4525e-13,
    					5.7979e-13,
    					2.2348e-12,
    					8.3187e-12,
    					2.9903e-11,
    					1.0381e-10,
    					3.4806e-10,
    					1.1271e-9,
    					3.5253e-9,
    					1.0651e-8,
    					3.1082e-8,
    					8.7628e-8,
    					2.3867e-7,
    					6.2804e-7,
    					0.0000015968,
    					0.0000039233,
    					0.0000093153,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0015,
    					0.0028,
    					0.0049,
    					0.0083,
    					0.0137,
    					0.0218,
    					0.0337,
    					0.0505,
    					0.0733,
    					0.1034,
    					0.1414,
    					0.188,
    					0.243,
    					0.3057,
    					0.3747,
    					0.4479,
    					0.523,
    					0.5973,
    					0.6682,
    					0.7336,
    					0.7917,
    					0.8415,
    					0.8829,
    					0.9159,
    					0.9414,
    					0.9604,
    					0.9741,
    					0.9835,
    					0.9899,
    					0.994,
    					0.9965,
    					0.9981,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.1294,
    				"std.error": 0.7507,
    				statistic: 2.8364,
    				"p.value": 0.0049,
    				"conf.low": 0.6514,
    				"conf.high": 3.6073,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.5298e-21,
    					8.3268e-21,
    					4.3914e-20,
    					2.2439e-19,
    					1.1109e-18,
    					5.3287e-18,
    					2.4766e-17,
    					1.1153e-16,
    					4.8667e-16,
    					2.0577e-15,
    					8.4307e-15,
    					3.3471e-14,
    					1.2877e-13,
    					4.8005e-13,
    					1.7343e-12,
    					6.0723e-12,
    					2.0604e-11,
    					6.7756e-11,
    					2.1595e-10,
    					6.6708e-10,
    					1.9973e-9,
    					5.7966e-9,
    					1.6307e-8,
    					4.4472e-8,
    					1.1757e-7,
    					3.0135e-7,
    					7.4887e-7,
    					0.0000018044,
    					0.000004216,
    					0.0000095527,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0022,
    					0.0038,
    					0.0064,
    					0.0105,
    					0.0166,
    					0.0256,
    					0.0382,
    					0.0556,
    					0.0787,
    					0.1084,
    					0.1454,
    					0.1901,
    					0.2423,
    					0.3015,
    					0.3665,
    					0.4355,
    					0.5065,
    					0.5774,
    					0.6458,
    					0.7098,
    					0.7678,
    					0.8187,
    					0.862,
    					0.8976,
    					0.926,
    					0.948,
    					0.9644,
    					0.9763,
    					0.9847,
    					0.9904,
    					0.9941,
    					0.9965,
    					0.998,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 95,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option2",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.4946,
    				"std.error": 0.3362,
    				statistic: 16.3415,
    				"p.value": 2.2563e-42,
    				"conf.low": 4.8327,
    				"conf.high": 6.1565,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					4.3007e-11,
    					1.4417e-10,
    					4.6745e-10,
    					1.4659e-9,
    					4.4463e-9,
    					1.3045e-8,
    					3.7025e-8,
    					1.0166e-7,
    					2.7002e-7,
    					6.9393e-7,
    					0.0000017255,
    					0.0000041519,
    					0.0000096679,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0026,
    					0.0045,
    					0.0077,
    					0.0125,
    					0.0199,
    					0.0307,
    					0.0459,
    					0.0667,
    					0.0941,
    					0.129,
    					0.1719,
    					0.2231,
    					0.282,
    					0.3475,
    					0.4178,
    					0.491,
    					0.5644,
    					0.6357,
    					0.7025,
    					0.7631,
    					0.8163,
    					0.8613,
    					0.8981,
    					0.9272,
    					0.9495,
    					0.966,
    					0.9778,
    					0.9859,
    					0.9913,
    					0.9948,
    					0.997,
    					0.9983,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3324,
    				"std.error": 0.4468,
    				statistic: -0.744,
    				"p.value": 0.4575,
    				"conf.low": -1.212,
    				"conf.high": 0.5472,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.9707e-25,
    					2.4397e-24,
    					1.4535e-23,
    					8.397e-23,
    					4.704e-22,
    					2.5553e-21,
    					1.3461e-20,
    					6.876e-20,
    					3.4061e-19,
    					1.6362e-18,
    					7.6221e-18,
    					3.4434e-17,
    					1.5086e-16,
    					6.4099e-16,
    					2.6413e-15,
    					1.0555e-14,
    					4.0912e-14,
    					1.5379e-13,
    					5.6074e-13,
    					1.983e-12,
    					6.8017e-12,
    					2.263e-11,
    					7.3033e-11,
    					2.2864e-10,
    					6.9434e-10,
    					2.0456e-9,
    					5.8464e-9,
    					1.6211e-8,
    					4.3613e-8,
    					1.1384e-7,
    					2.8835e-7,
    					7.0871e-7,
    					0.0000016904,
    					0.0000039128,
    					0.0000087908,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0034,
    					0.0057,
    					0.0093,
    					0.0147,
    					0.0227,
    					0.034,
    					0.0496,
    					0.0705,
    					0.0975,
    					0.1314,
    					0.1727,
    					0.2215,
    					0.2773,
    					0.3392,
    					0.4059,
    					0.4753,
    					0.5456,
    					0.6144,
    					0.6798,
    					0.74,
    					0.7938,
    					0.8404,
    					0.8795,
    					0.9113,
    					0.9364,
    					0.9556,
    					0.9698,
    					0.98,
    					0.9871,
    					0.9919,
    					0.9951,
    					0.9971,
    					0.9983,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.5576,
    				"std.error": 0.6106,
    				statistic: -0.9132,
    				"p.value": 0.3619,
    				"conf.low": -1.7595,
    				"conf.high": 0.6444,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.2927e-27,
    					1.5174e-26,
    					9.7414e-26,
    					6.0659e-25,
    					3.6639e-24,
    					2.1466e-23,
    					1.22e-22,
    					6.7255e-22,
    					3.5965e-21,
    					1.8657e-20,
    					9.3881e-20,
    					4.5827e-19,
    					2.1701e-18,
    					9.9686e-18,
    					4.4424e-17,
    					1.9205e-16,
    					8.0549e-16,
    					3.2775e-15,
    					1.2938e-14,
    					4.9551e-14,
    					1.8412e-13,
    					6.6378e-13,
    					2.3219e-12,
    					7.8803e-12,
    					2.5951e-11,
    					8.2927e-11,
    					2.5714e-10,
    					7.7372e-10,
    					2.2593e-9,
    					6.4023e-9,
    					1.7607e-8,
    					4.6998e-8,
    					1.2176e-7,
    					3.0618e-7,
    					7.4739e-7,
    					0.000001771,
    					0.0000040743,
    					0.0000091,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0034,
    					0.0057,
    					0.0092,
    					0.0146,
    					0.0224,
    					0.0335,
    					0.0489,
    					0.0694,
    					0.0959,
    					0.1293,
    					0.17,
    					0.218,
    					0.273,
    					0.3342,
    					0.4001,
    					0.4691,
    					0.5389,
    					0.6076,
    					0.6731,
    					0.7336,
    					0.7879,
    					0.8351,
    					0.8749,
    					0.9074,
    					0.9333,
    					0.9531,
    					0.9679,
    					0.9786,
    					0.9862,
    					0.9913,
    					0.9947,
    					0.9968,
    					0.9982,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3581,
    				"std.error": 0.8203,
    				statistic: 1.6556,
    				"p.value": 0.099,
    				"conf.low": -0.2568,
    				"conf.high": 2.973,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.9087e-15,
    					2.1048e-14,
    					7.3028e-14,
    					2.4679e-13,
    					8.1234e-13,
    					2.6045e-12,
    					8.1339e-12,
    					2.4744e-11,
    					7.3325e-11,
    					2.1167e-10,
    					5.9522e-10,
    					1.6306e-9,
    					4.3518e-9,
    					1.1315e-8,
    					2.8664e-8,
    					7.0749e-8,
    					1.7015e-7,
    					3.9871e-7,
    					9.1044e-7,
    					0.0000020259,
    					0.0000043934,
    					0.0000092856,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0025,
    					0.0041,
    					0.0065,
    					0.0102,
    					0.0156,
    					0.0233,
    					0.0339,
    					0.0482,
    					0.0669,
    					0.0908,
    					0.1206,
    					0.1566,
    					0.1991,
    					0.2479,
    					0.3024,
    					0.3617,
    					0.4246,
    					0.4894,
    					0.5545,
    					0.6182,
    					0.6788,
    					0.735,
    					0.7857,
    					0.8303,
    					0.8684,
    					0.9002,
    					0.9259,
    					0.9463,
    					0.9619,
    					0.9736,
    					0.9822,
    					0.9882,
    					0.9924,
    					0.9952,
    					0.9971,
    					0.9982,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 96,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option2",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.3617,
    				"std.error": 0.4402,
    				statistic: 14.4512,
    				"p.value": 7.7237e-33,
    				"conf.low": 5.4936,
    				"conf.high": 7.2298,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.1579e-12,
    					5.7919e-12,
    					1.5245e-11,
    					3.9353e-11,
    					9.9619e-11,
    					2.4731e-10,
    					6.0214e-10,
    					1.4378e-9,
    					3.3672e-9,
    					7.7341e-9,
    					1.7423e-8,
    					3.8497e-8,
    					8.3433e-8,
    					1.7736e-7,
    					3.6983e-7,
    					7.5645e-7,
    					0.0000015178,
    					0.0000029876,
    					0.000005769,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0035,
    					0.0054,
    					0.008,
    					0.0116,
    					0.0167,
    					0.0235,
    					0.0325,
    					0.0441,
    					0.059,
    					0.0774,
    					0.1,
    					0.1271,
    					0.1589,
    					0.1955,
    					0.2367,
    					0.2824,
    					0.3319,
    					0.3846,
    					0.4395,
    					0.4955,
    					0.5517,
    					0.6068,
    					0.6599,
    					0.71,
    					0.7563,
    					0.7983,
    					0.8356,
    					0.8682,
    					0.896,
    					0.9193,
    					0.9384,
    					0.9537,
    					0.9659,
    					0.9753,
    					0.9824,
    					0.9877,
    					0.9915,
    					0.9943,
    					0.9962,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1926,
    				"std.error": 0.5668,
    				statistic: -2.1043,
    				"p.value": 0.0366,
    				"conf.low": -2.3103,
    				"conf.high": -0.075,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.1546e-11,
    					5.4456e-11,
    					1.3505e-10,
    					3.2866e-10,
    					7.8486e-10,
    					1.8393e-9,
    					4.2298e-9,
    					9.546e-9,
    					2.1142e-8,
    					4.5955e-8,
    					9.8031e-8,
    					2.0524e-7,
    					4.2173e-7,
    					8.5055e-7,
    					0.0000016837,
    					0.0000032716,
    					0.0000062399,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0023,
    					0.0035,
    					0.0052,
    					0.0077,
    					0.0112,
    					0.016,
    					0.0224,
    					0.0309,
    					0.042,
    					0.056,
    					0.0735,
    					0.0949,
    					0.1206,
    					0.1508,
    					0.1857,
    					0.2251,
    					0.2689,
    					0.3167,
    					0.3677,
    					0.4211,
    					0.4761,
    					0.5315,
    					0.5863,
    					0.6394,
    					0.69,
    					0.7373,
    					0.7805,
    					0.8194,
    					0.8536,
    					0.8832,
    					0.9082,
    					0.9291,
    					0.9461,
    					0.9597,
    					0.9704,
    					0.9786,
    					0.9848,
    					0.9894,
    					0.9927,
    					0.9951,
    					0.9967,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.4246,
    				"std.error": 0.6672,
    				statistic: -2.1351,
    				"p.value": 0.034,
    				"conf.low": -2.7404,
    				"conf.high": -0.1089,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.6959e-18,
    					2.2614e-17,
    					8.7532e-17,
    					3.3031e-16,
    					1.2152e-15,
    					4.3589e-15,
    					1.5243e-14,
    					5.1974e-14,
    					1.7278e-13,
    					5.6002e-13,
    					1.7698e-12,
    					5.4537e-12,
    					1.6386e-11,
    					4.8009e-11,
    					1.3716e-10,
    					3.8209e-10,
    					1.038e-9,
    					2.7499e-9,
    					7.1047e-9,
    					1.7901e-8,
    					4.399e-8,
    					1.0543e-7,
    					2.4646e-7,
    					5.6196e-7,
    					0.0000012499,
    					0.0000027118,
    					0.0000057396,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0016,
    					0.0027,
    					0.0044,
    					0.0069,
    					0.0107,
    					0.0161,
    					0.0238,
    					0.0344,
    					0.0485,
    					0.0669,
    					0.0903,
    					0.1193,
    					0.1544,
    					0.1956,
    					0.2429,
    					0.2958,
    					0.3535,
    					0.4147,
    					0.478,
    					0.5419,
    					0.6048,
    					0.665,
    					0.7213,
    					0.7725,
    					0.8179,
    					0.8572,
    					0.8904,
    					0.9176,
    					0.9394,
    					0.9564,
    					0.9693,
    					0.9789,
    					0.9858,
    					0.9907,
    					0.994,
    					0.9962,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.2183,
    				"std.error": 0.8828,
    				statistic: 2.5128,
    				"p.value": 0.0128,
    				"conf.low": 0.4774,
    				"conf.high": 3.9591,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.8808e-16,
    					6.5346e-16,
    					2.2193e-15,
    					7.3672e-15,
    					2.3906e-14,
    					7.583e-14,
    					2.3512e-13,
    					7.1264e-13,
    					2.1115e-12,
    					6.1158e-12,
    					1.7317e-11,
    					4.7935e-11,
    					1.2972e-10,
    					3.4318e-10,
    					8.8763e-10,
    					2.2446e-9,
    					5.5495e-9,
    					1.3415e-8,
    					3.1708e-8,
    					7.3279e-8,
    					1.656e-7,
    					3.6594e-7,
    					7.9077e-7,
    					0.0000016711,
    					0.0000034537,
    					0.0000069809,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0024,
    					0.0038,
    					0.0059,
    					0.009,
    					0.0134,
    					0.0195,
    					0.028,
    					0.0393,
    					0.054,
    					0.0728,
    					0.0962,
    					0.1248,
    					0.1589,
    					0.1985,
    					0.2435,
    					0.2936,
    					0.348,
    					0.4056,
    					0.4654,
    					0.526,
    					0.586,
    					0.6441,
    					0.699,
    					0.7497,
    					0.7955,
    					0.8359,
    					0.8707,
    					0.9,
    					0.9242,
    					0.9436,
    					0.9589,
    					0.9706,
    					0.9794,
    					0.9859,
    					0.9905,
    					0.9938,
    					0.996,
    					0.9975,
    					0.9984,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 97,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option3",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.9503,
    				"std.error": 0.4021,
    				statistic: 14.7982,
    				"p.value": 1.2006e-35,
    				"conf.low": 5.1582,
    				"conf.high": 6.7424,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.6882e-11,
    					7.4883e-11,
    					2.0378e-10,
    					5.4174e-10,
    					1.407e-9,
    					3.5703e-9,
    					8.851e-9,
    					2.1439e-8,
    					5.0737e-8,
    					1.1732e-7,
    					2.651e-7,
    					5.8532e-7,
    					0.0000012629,
    					0.0000026629,
    					0.0000054873,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0022,
    					0.0035,
    					0.0055,
    					0.0085,
    					0.0127,
    					0.0188,
    					0.0271,
    					0.0383,
    					0.0531,
    					0.072,
    					0.0956,
    					0.1246,
    					0.1592,
    					0.1995,
    					0.2455,
    					0.2966,
    					0.352,
    					0.4109,
    					0.4718,
    					0.5333,
    					0.5941,
    					0.6527,
    					0.7079,
    					0.7586,
    					0.8041,
    					0.8439,
    					0.878,
    					0.9065,
    					0.9298,
    					0.9483,
    					0.9627,
    					0.9737,
    					0.9818,
    					0.9877,
    					0.9918,
    					0.9947,
    					0.9966,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.7598,
    				"std.error": 0.5787,
    				statistic: -1.3129,
    				"p.value": 0.1905,
    				"conf.low": -1.8998,
    				"conf.high": 0.3802,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.9083e-13,
    					7.8259e-13,
    					2.0679e-12,
    					5.3658e-12,
    					1.3672e-11,
    					3.4211e-11,
    					8.4063e-11,
    					2.0285e-10,
    					4.807e-10,
    					1.1187e-9,
    					2.5568e-9,
    					5.7389e-9,
    					1.2651e-8,
    					2.739e-8,
    					5.8244e-8,
    					1.2164e-7,
    					2.4954e-7,
    					5.028e-7,
    					9.9513e-7,
    					0.0000019346,
    					0.0000036946,
    					0.0000069313,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0022,
    					0.0033,
    					0.005,
    					0.0073,
    					0.0106,
    					0.0151,
    					0.0211,
    					0.029,
    					0.0392,
    					0.0522,
    					0.0685,
    					0.0883,
    					0.1122,
    					0.1403,
    					0.1729,
    					0.2099,
    					0.2512,
    					0.2965,
    					0.3452,
    					0.3966,
    					0.4498,
    					0.504,
    					0.5581,
    					0.6112,
    					0.6622,
    					0.7104,
    					0.7551,
    					0.7958,
    					0.8322,
    					0.8641,
    					0.8916,
    					0.9149,
    					0.9342,
    					0.9499,
    					0.9624,
    					0.9723,
    					0.9799,
    					0.9857,
    					0.9899,
    					0.9931,
    					0.9953,
    					0.9969,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8867,
    				"std.error": 0.5618,
    				statistic: -1.5782,
    				"p.value": 0.1158,
    				"conf.low": -1.9935,
    				"conf.high": 0.2201,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.9081e-29,
    					4.0812e-28,
    					3.2736e-27,
    					2.5329e-26,
    					1.8905e-25,
    					1.3611e-24,
    					9.4539e-24,
    					6.3343e-23,
    					4.0943e-22,
    					2.5529e-21,
    					1.5357e-20,
    					8.9121e-20,
    					4.9896e-19,
    					2.6951e-18,
    					1.4044e-17,
    					7.061e-17,
    					3.4251e-16,
    					1.603e-15,
    					7.2389e-15,
    					3.1541e-14,
    					1.3261e-13,
    					5.3796e-13,
    					2.106e-12,
    					7.9556e-12,
    					2.9003e-11,
    					1.0204e-10,
    					3.4646e-10,
    					1.1354e-9,
    					3.5912e-9,
    					1.0964e-8,
    					3.2312e-8,
    					9.1925e-8,
    					2.5248e-7,
    					6.695e-7,
    					0.0000017142,
    					0.0000042382,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0017,
    					0.0031,
    					0.0054,
    					0.0092,
    					0.0151,
    					0.0241,
    					0.0371,
    					0.0554,
    					0.0802,
    					0.1125,
    					0.1532,
    					0.2026,
    					0.2605,
    					0.3259,
    					0.3971,
    					0.472,
    					0.5479,
    					0.6221,
    					0.692,
    					0.7555,
    					0.8112,
    					0.8584,
    					0.8968,
    					0.927,
    					0.95,
    					0.9668,
    					0.9786,
    					0.9867,
    					0.992,
    					0.9953,
    					0.9973,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3061,
    				"std.error": 0.7988,
    				statistic: 1.6351,
    				"p.value": 0.1033,
    				"conf.low": -0.2675,
    				"conf.high": 2.8798,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.915e-15,
    					7.2243e-15,
    					2.6506e-14,
    					9.4583e-14,
    					3.2827e-13,
    					1.1082e-12,
    					3.6385e-12,
    					1.162e-11,
    					3.6099e-11,
    					1.0908e-10,
    					3.2065e-10,
    					9.1688e-10,
    					2.5505e-9,
    					6.9021e-9,
    					1.8172e-8,
    					4.6547e-8,
    					1.1601e-7,
    					2.8131e-7,
    					6.6379e-7,
    					0.0000015242,
    					0.0000034058,
    					0.0000074066,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.004,
    					0.0065,
    					0.0103,
    					0.0159,
    					0.0239,
    					0.0351,
    					0.0502,
    					0.0701,
    					0.0957,
    					0.1274,
    					0.1659,
    					0.2111,
    					0.2629,
    					0.3204,
    					0.3827,
    					0.4481,
    					0.515,
    					0.5815,
    					0.6457,
    					0.706,
    					0.7611,
    					0.81,
    					0.8522,
    					0.8876,
    					0.9165,
    					0.9394,
    					0.9571,
    					0.9704,
    					0.98,
    					0.9869,
    					0.9916,
    					0.9947,
    					0.9968,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 98,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option3",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.6156,
    				"std.error": 0.3268,
    				statistic: 17.1819,
    				"p.value": 1.0988e-43,
    				"conf.low": 4.9718,
    				"conf.high": 6.2594,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					9.1632e-13,
    					3.5266e-12,
    					1.31e-11,
    					4.697e-11,
    					1.6255e-10,
    					5.4303e-10,
    					1.7512e-9,
    					5.4516e-9,
    					1.6385e-8,
    					4.7544e-8,
    					1.332e-7,
    					3.6036e-7,
    					9.4143e-7,
    					0.0000023752,
    					0.0000057878,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0021,
    					0.0037,
    					0.0065,
    					0.0109,
    					0.0177,
    					0.0278,
    					0.0423,
    					0.0625,
    					0.0895,
    					0.1243,
    					0.1676,
    					0.2195,
    					0.2797,
    					0.3469,
    					0.4194,
    					0.4946,
    					0.5701,
    					0.6431,
    					0.7112,
    					0.7724,
    					0.8256,
    					0.8702,
    					0.9061,
    					0.9341,
    					0.9552,
    					0.9705,
    					0.9811,
    					0.9883,
    					0.993,
    					0.9959,
    					0.9977,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.4627,
    				"std.error": 0.4703,
    				statistic: -0.9838,
    				"p.value": 0.3262,
    				"conf.low": -1.3891,
    				"conf.high": 0.4638,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.0754e-21,
    					5.2965e-21,
    					2.537e-20,
    					1.182e-19,
    					5.3563e-19,
    					2.3609e-18,
    					1.0121e-17,
    					4.2207e-17,
    					1.712e-16,
    					6.7546e-16,
    					2.5923e-15,
    					9.6777e-15,
    					3.5145e-14,
    					1.2415e-13,
    					4.2665e-13,
    					1.4263e-12,
    					4.6387e-12,
    					1.4677e-11,
    					4.5177e-11,
    					1.3529e-10,
    					3.9419e-10,
    					1.1175e-9,
    					3.0824e-9,
    					8.2727e-9,
    					2.1605e-8,
    					5.4904e-8,
    					1.3578e-7,
    					3.2678e-7,
    					7.6542e-7,
    					0.0000017449,
    					0.0000038719,
    					0.0000083631,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0026,
    					0.0043,
    					0.0069,
    					0.0109,
    					0.0167,
    					0.025,
    					0.0366,
    					0.0521,
    					0.0726,
    					0.0986,
    					0.1309,
    					0.1699,
    					0.2157,
    					0.2678,
    					0.3257,
    					0.3881,
    					0.4535,
    					0.5202,
    					0.5863,
    					0.6501,
    					0.7099,
    					0.7644,
    					0.8128,
    					0.8544,
    					0.8894,
    					0.9178,
    					0.9404,
    					0.9578,
    					0.9708,
    					0.9803,
    					0.9871,
    					0.9917,
    					0.9948,
    					0.9968,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.459,
    				"std.error": 0.6408,
    				statistic: -0.7164,
    				"p.value": 0.4744,
    				"conf.low": -1.7213,
    				"conf.high": 0.8032,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.0124e-25,
    					5.7835e-25,
    					3.2139e-24,
    					1.7372e-23,
    					9.1343e-23,
    					4.6719e-22,
    					2.3244e-21,
    					1.125e-20,
    					5.2964e-20,
    					2.4256e-19,
    					1.0807e-18,
    					4.6837e-18,
    					1.9748e-17,
    					8.0997e-17,
    					3.232e-16,
    					1.2546e-15,
    					4.7383e-15,
    					1.7409e-14,
    					6.2232e-14,
    					2.1643e-13,
    					7.3235e-13,
    					2.4111e-12,
    					7.7233e-12,
    					2.4072e-11,
    					7.3002e-11,
    					2.1543e-10,
    					6.1861e-10,
    					1.7286e-9,
    					4.7006e-9,
    					1.2439e-8,
    					3.2037e-8,
    					8.0301e-8,
    					1.959e-7,
    					4.6519e-7,
    					0.0000010752,
    					0.0000024192,
    					0.000005299,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0031,
    					0.0051,
    					0.0082,
    					0.0128,
    					0.0194,
    					0.0288,
    					0.0417,
    					0.0589,
    					0.0812,
    					0.1093,
    					0.1439,
    					0.1851,
    					0.233,
    					0.2871,
    					0.3465,
    					0.4099,
    					0.4758,
    					0.5424,
    					0.6078,
    					0.6702,
    					0.7283,
    					0.7807,
    					0.8269,
    					0.8663,
    					0.899,
    					0.9255,
    					0.9463,
    					0.9622,
    					0.9741,
    					0.9826,
    					0.9886,
    					0.9928,
    					0.9955,
    					0.9973,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3428,
    				"std.error": 0.8916,
    				statistic: 1.506,
    				"p.value": 0.1334,
    				"conf.low": -0.4136,
    				"conf.high": 3.0991,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					7.0235e-13,
    					2.0596e-12,
    					5.907e-12,
    					1.6569e-11,
    					4.5453e-11,
    					1.2195e-10,
    					3.2004e-10,
    					8.2146e-10,
    					2.0624e-9,
    					5.0645e-9,
    					1.2165e-8,
    					2.8585e-8,
    					6.5702e-8,
    					1.4773e-7,
    					3.2496e-7,
    					6.9932e-7,
    					0.0000014724,
    					0.0000030329,
    					0.0000061129,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0033,
    					0.0051,
    					0.0078,
    					0.0117,
    					0.0172,
    					0.0247,
    					0.0348,
    					0.0481,
    					0.0652,
    					0.0865,
    					0.1128,
    					0.1443,
    					0.1812,
    					0.2236,
    					0.2711,
    					0.3231,
    					0.3789,
    					0.4373,
    					0.4971,
    					0.557,
    					0.6155,
    					0.6716,
    					0.7241,
    					0.772,
    					0.8149,
    					0.8524,
    					0.8844,
    					0.9111,
    					0.933,
    					0.9504,
    					0.964,
    					0.9744,
    					0.9822,
    					0.9878,
    					0.9918,
    					0.9946,
    					0.9966,
    					0.9978,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 99,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option3",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.9503,
    				"std.error": 0.4096,
    				statistic: 14.5283,
    				"p.value": 3.7766e-32,
    				"conf.low": 5.1422,
    				"conf.high": 6.7585,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.9556e-11,
    					1.5999e-10,
    					4.2025e-10,
    					1.0793e-9,
    					2.7105e-9,
    					6.6558e-9,
    					1.5982e-8,
    					3.7525e-8,
    					8.6164e-8,
    					1.9348e-7,
    					4.2489e-7,
    					9.1255e-7,
    					0.0000019169,
    					0.0000039384,
    					0.0000079147,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0026,
    					0.004,
    					0.0063,
    					0.0095,
    					0.0141,
    					0.0206,
    					0.0294,
    					0.0411,
    					0.0563,
    					0.0757,
    					0.0997,
    					0.129,
    					0.1636,
    					0.2038,
    					0.2494,
    					0.2999,
    					0.3546,
    					0.4125,
    					0.4723,
    					0.5327,
    					0.5924,
    					0.6501,
    					0.7044,
    					0.7546,
    					0.7997,
    					0.8395,
    					0.8737,
    					0.9025,
    					0.9261,
    					0.9451,
    					0.96,
    					0.9714,
    					0.98,
    					0.9863,
    					0.9908,
    					0.9939,
    					0.9961,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.7598,
    				"std.error": 0.5895,
    				statistic: -1.289,
    				"p.value": 0.1991,
    				"conf.low": -1.923,
    				"conf.high": 0.4034,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					7.5647e-13,
    					1.9653e-12,
    					5.0172e-12,
    					1.2586e-11,
    					3.1024e-11,
    					7.5149e-11,
    					1.7888e-10,
    					4.1841e-10,
    					9.6176e-10,
    					2.1725e-9,
    					4.8227e-9,
    					1.0521e-8,
    					2.2558e-8,
    					4.7532e-8,
    					9.8435e-8,
    					2.0035e-7,
    					4.008e-7,
    					7.8806e-7,
    					0.000001523,
    					0.0000028933,
    					0.0000054026,
    					0.0000099169,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0026,
    					0.0039,
    					0.0057,
    					0.0083,
    					0.0118,
    					0.0167,
    					0.023,
    					0.0314,
    					0.042,
    					0.0555,
    					0.0721,
    					0.0923,
    					0.1165,
    					0.1447,
    					0.1773,
    					0.2142,
    					0.2552,
    					0.2999,
    					0.3479,
    					0.3984,
    					0.4508,
    					0.5039,
    					0.5571,
    					0.6092,
    					0.6594,
    					0.7069,
    					0.7511,
    					0.7915,
    					0.8278,
    					0.8597,
    					0.8874,
    					0.9109,
    					0.9306,
    					0.9467,
    					0.9597,
    					0.97,
    					0.978,
    					0.9842,
    					0.9888,
    					0.9921,
    					0.9946,
    					0.9963,
    					0.9976,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.7938,
    				"std.error": 0.6945,
    				statistic: -1.143,
    				"p.value": 0.2546,
    				"conf.low": -2.1641,
    				"conf.high": 0.5766,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.368e-20,
    					1.383e-19,
    					5.5469e-19,
    					2.1732e-18,
    					8.3165e-18,
    					3.1088e-17,
    					1.1352e-16,
    					4.0492e-16,
    					1.4109e-15,
    					4.8022e-15,
    					1.5967e-14,
    					5.1863e-14,
    					1.6456e-13,
    					5.1011e-13,
    					1.5447e-12,
    					4.57e-12,
    					1.3209e-11,
    					3.7297e-11,
    					1.0289e-10,
    					2.7734e-10,
    					7.3037e-10,
    					1.8793e-9,
    					4.7248e-9,
    					1.1607e-8,
    					2.7862e-8,
    					6.5356e-8,
    					1.4981e-7,
    					3.3558e-7,
    					7.3464e-7,
    					0.0000015718,
    					0.0000032867,
    					0.0000067177,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0025,
    					0.0039,
    					0.0062,
    					0.0094,
    					0.0141,
    					0.0206,
    					0.0296,
    					0.0416,
    					0.0573,
    					0.0772,
    					0.1021,
    					0.1323,
    					0.1682,
    					0.2098,
    					0.2569,
    					0.3089,
    					0.3651,
    					0.4244,
    					0.4855,
    					0.5469,
    					0.6071,
    					0.665,
    					0.7191,
    					0.7686,
    					0.8129,
    					0.8514,
    					0.8843,
    					0.9117,
    					0.9339,
    					0.9515,
    					0.9651,
    					0.9754,
    					0.9831,
    					0.9886,
    					0.9925,
    					0.9951,
    					0.9969,
    					0.9981,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.6399,
    				"std.error": 0.9703,
    				statistic: 1.69,
    				"p.value": 0.0928,
    				"conf.low": -0.2748,
    				"conf.high": 3.5546,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.7134e-12,
    					1.2223e-11,
    					3.1109e-11,
    					7.7705e-11,
    					1.9049e-10,
    					4.5833e-10,
    					1.0823e-9,
    					2.5086e-9,
    					5.7069e-9,
    					1.2743e-8,
    					2.7929e-8,
    					6.0086e-8,
    					1.2689e-7,
    					2.6304e-7,
    					5.3527e-7,
    					0.0000010693,
    					0.0000020971,
    					0.0000040376,
    					0.0000076321,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0025,
    					0.0039,
    					0.0058,
    					0.0085,
    					0.0122,
    					0.0174,
    					0.0242,
    					0.0333,
    					0.0449,
    					0.0596,
    					0.0779,
    					0.1,
    					0.1265,
    					0.1575,
    					0.1932,
    					0.2333,
    					0.2777,
    					0.3259,
    					0.3772,
    					0.4307,
    					0.4855,
    					0.5407,
    					0.595,
    					0.6476,
    					0.6975,
    					0.7439,
    					0.7863,
    					0.8244,
    					0.8578,
    					0.8866,
    					0.911,
    					0.9313,
    					0.9478,
    					0.961,
    					0.9713,
    					0.9793,
    					0.9853,
    					0.9897,
    					0.9929,
    					0.9952,
    					0.9968,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 100,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option4",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4792,
    				"std.error": 0.4916,
    				statistic: 13.1806,
    				"p.value": 4.5509e-33,
    				"conf.low": 5.5128,
    				"conf.high": 7.4457,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.8952e-11,
    					1.3454e-10,
    					3.0228e-10,
    					6.6863e-10,
    					1.4561e-9,
    					3.122e-9,
    					6.5905e-9,
    					1.3698e-8,
    					2.803e-8,
    					5.6476e-8,
    					1.1204e-7,
    					2.1886e-7,
    					4.2095e-7,
    					7.9725e-7,
    					0.0000014869,
    					0.0000027306,
    					0.0000049383,
    					0.000008795,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0027,
    					0.004,
    					0.0058,
    					0.0082,
    					0.0116,
    					0.016,
    					0.0218,
    					0.0292,
    					0.0387,
    					0.0506,
    					0.0651,
    					0.0828,
    					0.1038,
    					0.1284,
    					0.1569,
    					0.1891,
    					0.2252,
    					0.2649,
    					0.3079,
    					0.3536,
    					0.4016,
    					0.4511,
    					0.5014,
    					0.5517,
    					0.6012,
    					0.649,
    					0.6947,
    					0.7375,
    					0.7769,
    					0.8128,
    					0.8449,
    					0.8731,
    					0.8975,
    					0.9183,
    					0.9358,
    					0.9502,
    					0.9619,
    					0.9712,
    					0.9786,
    					0.9843,
    					0.9887,
    					0.9919,
    					0.9943,
    					0.9961,
    					0.9973,
    					0.9982,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.855,
    				"std.error": 0.5554,
    				statistic: -1.5394,
    				"p.value": 0.1245,
    				"conf.low": -1.9469,
    				"conf.high": 0.237,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.1028e-13,
    					3.1493e-13,
    					8.8171e-13,
    					2.4202e-12,
    					6.5136e-12,
    					1.7187e-11,
    					4.4468e-11,
    					1.128e-10,
    					2.8057e-10,
    					6.8429e-10,
    					1.6364e-9,
    					3.8373e-9,
    					8.8237e-9,
    					1.9896e-8,
    					4.3994e-8,
    					9.5398e-8,
    					2.0287e-7,
    					4.2308e-7,
    					8.6535e-7,
    					0.0000017359,
    					0.0000034155,
    					0.0000065915,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0026,
    					0.004,
    					0.006,
    					0.0089,
    					0.0129,
    					0.0184,
    					0.0258,
    					0.0356,
    					0.0482,
    					0.0642,
    					0.084,
    					0.1081,
    					0.1368,
    					0.1703,
    					0.2087,
    					0.2517,
    					0.299,
    					0.3499,
    					0.4037,
    					0.4594,
    					0.516,
    					0.5722,
    					0.6269,
    					0.6792,
    					0.7282,
    					0.7731,
    					0.8136,
    					0.8492,
    					0.88,
    					0.906,
    					0.9276,
    					0.9452,
    					0.9593,
    					0.9702,
    					0.9786,
    					0.9849,
    					0.9895,
    					0.9929,
    					0.9952,
    					0.9969,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.5046,
    				"std.error": 0.6503,
    				statistic: -2.3138,
    				"p.value": 0.0212,
    				"conf.low": -2.7831,
    				"conf.high": -0.2261,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.3806e-18,
    					9.9545e-18,
    					4.0526e-17,
    					1.6063e-16,
    					6.1991e-16,
    					2.3293e-15,
    					8.5215e-15,
    					3.0354e-14,
    					1.0528e-13,
    					3.5555e-13,
    					1.1692e-12,
    					3.7438e-12,
    					1.1673e-11,
    					3.5444e-11,
    					1.048e-10,
    					3.0177e-10,
    					8.462e-10,
    					2.3109e-9,
    					6.1463e-9,
    					1.5922e-8,
    					4.0171e-8,
    					9.8722e-8,
    					2.3632e-7,
    					5.5106e-7,
    					0.0000012518,
    					0.0000027702,
    					0.0000059728,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0031,
    					0.0051,
    					0.0081,
    					0.0126,
    					0.0191,
    					0.0281,
    					0.0405,
    					0.0571,
    					0.0785,
    					0.1055,
    					0.1387,
    					0.1784,
    					0.2246,
    					0.2769,
    					0.3345,
    					0.3963,
    					0.4609,
    					0.5265,
    					0.5914,
    					0.6538,
    					0.7124,
    					0.7658,
    					0.8132,
    					0.8541,
    					0.8885,
    					0.9167,
    					0.9392,
    					0.9566,
    					0.9698,
    					0.9794,
    					0.9863,
    					0.9911,
    					0.9944,
    					0.9965,
    					0.9979,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.2465,
    				"std.error": 0.7402,
    				statistic: 1.684,
    				"p.value": 0.093,
    				"conf.low": -0.2088,
    				"conf.high": 2.7017,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.1848e-17,
    					1.0076e-16,
    					4.4988e-16,
    					1.9445e-15,
    					8.1367e-15,
    					3.2963e-14,
    					1.2928e-13,
    					4.9094e-13,
    					1.805e-12,
    					6.4254e-12,
    					2.2147e-11,
    					7.3918e-11,
    					2.3889e-10,
    					7.4763e-10,
    					2.2658e-9,
    					6.6502e-9,
    					1.8903e-8,
    					5.2043e-8,
    					1.3878e-7,
    					3.5845e-7,
    					8.9689e-7,
    					0.000002174,
    					0.0000051056,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0015,
    					0.0027,
    					0.0047,
    					0.0078,
    					0.0127,
    					0.0199,
    					0.0305,
    					0.0453,
    					0.0654,
    					0.0918,
    					0.1254,
    					0.1668,
    					0.2161,
    					0.2729,
    					0.3362,
    					0.4046,
    					0.4761,
    					0.5483,
    					0.6189,
    					0.6858,
    					0.7471,
    					0.8014,
    					0.848,
    					0.8868,
    					0.9179,
    					0.942,
    					0.9602,
    					0.9735,
    					0.9828,
    					0.9892,
    					0.9934,
    					0.9961,
    					0.9978,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 101,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option4",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.8158,
    				"std.error": 0.3828,
    				statistic: 15.1911,
    				"p.value": 2.8519e-41,
    				"conf.low": 5.0631,
    				"conf.high": 6.5685,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.1018e-11,
    					9.0607e-11,
    					2.5794e-10,
    					7.1566e-10,
    					1.9352e-9,
    					5.1002e-9,
    					1.3101e-8,
    					3.2803e-8,
    					8.0057e-8,
    					1.9046e-7,
    					4.417e-7,
    					9.9864e-7,
    					0.0000022012,
    					0.0000047304,
    					0.0000099118,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0025,
    					0.0041,
    					0.0065,
    					0.0102,
    					0.0155,
    					0.023,
    					0.0334,
    					0.0474,
    					0.0658,
    					0.0892,
    					0.1183,
    					0.1536,
    					0.1952,
    					0.243,
    					0.2965,
    					0.3549,
    					0.4169,
    					0.481,
    					0.5456,
    					0.6091,
    					0.6697,
    					0.7262,
    					0.7775,
    					0.8228,
    					0.8618,
    					0.8945,
    					0.9211,
    					0.9424,
    					0.9588,
    					0.9713,
    					0.9804,
    					0.9869,
    					0.9915,
    					0.9946,
    					0.9966,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.4191,
    				"std.error": 0.4355,
    				statistic: -0.9623,
    				"p.value": 0.3365,
    				"conf.low": -1.2754,
    				"conf.high": 0.4372,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.9684e-25,
    					1.2825e-24,
    					8.0894e-24,
    					4.9397e-23,
    					2.9202e-22,
    					1.6714e-21,
    					9.261e-21,
    					4.9681e-20,
    					2.5803e-19,
    					1.2975e-18,
    					6.3171e-18,
    					2.9778e-17,
    					1.3591e-16,
    					6.006e-16,
    					2.5699e-15,
    					1.0647e-14,
    					4.2716e-14,
    					1.6594e-13,
    					6.2424e-13,
    					2.274e-12,
    					8.022e-12,
    					2.7406e-11,
    					9.0676e-11,
    					2.9056e-10,
    					9.0175e-10,
    					2.7106e-9,
    					7.8922e-9,
    					2.2259e-8,
    					6.0812e-8,
    					1.6095e-7,
    					4.1269e-7,
    					0.0000010253,
    					0.0000024679,
    					0.0000057566,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0029,
    					0.005,
    					0.0083,
    					0.0133,
    					0.0209,
    					0.0319,
    					0.0471,
    					0.0678,
    					0.0948,
    					0.1291,
    					0.1711,
    					0.221,
    					0.2783,
    					0.342,
    					0.4105,
    					0.4819,
    					0.5539,
    					0.6242,
    					0.6905,
    					0.7512,
    					0.8049,
    					0.8508,
    					0.8889,
    					0.9195,
    					0.9432,
    					0.9611,
    					0.9741,
    					0.9832,
    					0.9894,
    					0.9936,
    					0.9962,
    					0.9978,
    					0.9988,
    					0.9993,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.6874,
    				"std.error": 0.7162,
    				statistic: -0.9597,
    				"p.value": 0.3378,
    				"conf.low": -2.0956,
    				"conf.high": 0.7208,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.1014e-19,
    					4.252e-19,
    					1.6057e-18,
    					5.9311e-18,
    					2.1431e-17,
    					7.5747e-17,
    					2.6189e-16,
    					8.8573e-16,
    					2.9304e-15,
    					9.4841e-15,
    					3.0027e-14,
    					9.2998e-14,
    					2.8177e-13,
    					8.3521e-13,
    					2.4219e-12,
    					6.8707e-12,
    					1.9069e-11,
    					5.1778e-11,
    					1.3755e-10,
    					3.5752e-10,
    					9.0919e-10,
    					2.2622e-9,
    					5.5075e-9,
    					1.312e-8,
    					3.0582e-8,
    					6.9754e-8,
    					1.5569e-7,
    					3.4007e-7,
    					7.2691e-7,
    					0.0000015207,
    					0.0000031134,
    					0.0000062389,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0008,
    					0.0012,
    					0.002,
    					0.0032,
    					0.005,
    					0.0076,
    					0.0114,
    					0.0167,
    					0.024,
    					0.0338,
    					0.0466,
    					0.0631,
    					0.0838,
    					0.1093,
    					0.1399,
    					0.1759,
    					0.2172,
    					0.2636,
    					0.3146,
    					0.3694,
    					0.4271,
    					0.4863,
    					0.5458,
    					0.6043,
    					0.6606,
    					0.7134,
    					0.7621,
    					0.8058,
    					0.8442,
    					0.8773,
    					0.905,
    					0.9279,
    					0.9463,
    					0.9607,
    					0.9719,
    					0.9802,
    					0.9864,
    					0.9908,
    					0.9939,
    					0.996,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.0181,
    				"std.error": 0.8199,
    				statistic: 1.2417,
    				"p.value": 0.2151,
    				"conf.low": -0.594,
    				"conf.high": 2.6301,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.3675e-13,
    					4.5619e-13,
    					1.4823e-12,
    					4.6911e-12,
    					1.4461e-11,
    					4.3424e-11,
    					1.2702e-10,
    					3.6191e-10,
    					1.0045e-9,
    					2.7163e-9,
    					7.1554e-9,
    					1.8364e-8,
    					4.5916e-8,
    					1.1186e-7,
    					2.6552e-7,
    					6.1413e-7,
    					0.0000013841,
    					0.0000030401,
    					0.0000065073,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0019,
    					0.0032,
    					0.0052,
    					0.0083,
    					0.0128,
    					0.0193,
    					0.0285,
    					0.0409,
    					0.0574,
    					0.0788,
    					0.1058,
    					0.1389,
    					0.1783,
    					0.2242,
    					0.2762,
    					0.3334,
    					0.3948,
    					0.4589,
    					0.5242,
    					0.5887,
    					0.651,
    					0.7094,
    					0.7628,
    					0.8104,
    					0.8515,
    					0.8862,
    					0.9147,
    					0.9375,
    					0.9552,
    					0.9687,
    					0.9786,
    					0.9857,
    					0.9907,
    					0.9941,
    					0.9963,
    					0.9978,
    					0.9987,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 102,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option4",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4792,
    				"std.error": 0.4898,
    				statistic: 13.2279,
    				"p.value": 1.8997e-31,
    				"conf.low": 5.5151,
    				"conf.high": 7.4434,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.0613e-11,
    					1.1618e-10,
    					2.6252e-10,
    					5.8392e-10,
    					1.2786e-9,
    					2.7561e-9,
    					5.8485e-9,
    					1.2218e-8,
    					2.5127e-8,
    					5.0875e-8,
    					1.0141e-7,
    					1.9902e-7,
    					3.8453e-7,
    					7.3151e-7,
    					0.0000013701,
    					0.0000025268,
    					0.0000045885,
    					0.0000082045,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0027,
    					0.0039,
    					0.0057,
    					0.0081,
    					0.0113,
    					0.0157,
    					0.0214,
    					0.0288,
    					0.0382,
    					0.05,
    					0.0645,
    					0.082,
    					0.103,
    					0.1276,
    					0.156,
    					0.1883,
    					0.2244,
    					0.2642,
    					0.3072,
    					0.3531,
    					0.4013,
    					0.451,
    					0.5014,
    					0.5519,
    					0.6015,
    					0.6496,
    					0.6953,
    					0.7382,
    					0.7778,
    					0.8137,
    					0.8457,
    					0.8739,
    					0.8983,
    					0.9191,
    					0.9365,
    					0.9508,
    					0.9624,
    					0.9717,
    					0.979,
    					0.9846,
    					0.9889,
    					0.9921,
    					0.9945,
    					0.9962,
    					0.9974,
    					0.9983,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.855,
    				"std.error": 0.5534,
    				statistic: -1.5449,
    				"p.value": 0.1235,
    				"conf.low": -1.9443,
    				"conf.high": 0.2344,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					9.0583e-14,
    					2.6059e-13,
    					7.3491e-13,
    					2.0317e-12,
    					5.5062e-12,
    					1.4629e-11,
    					3.8102e-11,
    					9.7289e-11,
    					2.4354e-10,
    					5.9769e-10,
    					1.4381e-9,
    					3.3925e-9,
    					7.8463e-9,
    					1.7793e-8,
    					3.9562e-8,
    					8.625e-8,
    					1.8438e-7,
    					3.8649e-7,
    					7.9445e-7,
    					0.0000016014,
    					0.0000031655,
    					0.0000061368,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0025,
    					0.0039,
    					0.0058,
    					0.0087,
    					0.0126,
    					0.0181,
    					0.0254,
    					0.0351,
    					0.0477,
    					0.0635,
    					0.0833,
    					0.1073,
    					0.136,
    					0.1695,
    					0.2078,
    					0.2509,
    					0.2983,
    					0.3494,
    					0.4034,
    					0.4593,
    					0.516,
    					0.5724,
    					0.6274,
    					0.6798,
    					0.7289,
    					0.7739,
    					0.8144,
    					0.85,
    					0.8808,
    					0.9068,
    					0.9284,
    					0.9459,
    					0.9598,
    					0.9707,
    					0.979,
    					0.9852,
    					0.9898,
    					0.9931,
    					0.9954,
    					0.997,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.3508,
    				"std.error": 0.7745,
    				statistic: -1.7441,
    				"p.value": 0.0822,
    				"conf.low": -2.8752,
    				"conf.high": 0.1737,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.0333e-14,
    					1.1423e-13,
    					3.1747e-13,
    					8.6593e-13,
    					2.318e-12,
    					6.0899e-12,
    					1.5702e-11,
    					3.9736e-11,
    					9.8692e-11,
    					2.4058e-10,
    					5.756e-10,
    					1.3517e-9,
    					3.1156e-9,
    					7.0489e-9,
    					1.5654e-8,
    					3.4122e-8,
    					7.3014e-8,
    					1.5336e-7,
    					3.1623e-7,
    					6.4011e-7,
    					0.000001272,
    					0.0000024817,
    					0.0000047533,
    					0.000008939,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0018,
    					0.0028,
    					0.0043,
    					0.0063,
    					0.0093,
    					0.0133,
    					0.0188,
    					0.0262,
    					0.0358,
    					0.0481,
    					0.0636,
    					0.0827,
    					0.1059,
    					0.1334,
    					0.1655,
    					0.2021,
    					0.2433,
    					0.2886,
    					0.3375,
    					0.3893,
    					0.4432,
    					0.4981,
    					0.5531,
    					0.6071,
    					0.6591,
    					0.7083,
    					0.7538,
    					0.7952,
    					0.8322,
    					0.8646,
    					0.8924,
    					0.9159,
    					0.9352,
    					0.951,
    					0.9635,
    					0.9732,
    					0.9807,
    					0.9863,
    					0.9905,
    					0.9935,
    					0.9956,
    					0.9971,
    					0.9981,
    					0.9988,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.454,
    				"std.error": 0.8833,
    				statistic: 1.646,
    				"p.value": 0.1009,
    				"conf.low": -0.2847,
    				"conf.high": 3.1927,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.7209e-13,
    					5.2455e-13,
    					1.5631e-12,
    					4.5532e-12,
    					1.2966e-11,
    					3.6098e-11,
    					9.825e-11,
    					2.6144e-10,
    					6.8014e-10,
    					1.73e-9,
    					4.3022e-9,
    					1.0461e-8,
    					2.4872e-8,
    					5.782e-8,
    					1.3144e-7,
    					2.9218e-7,
    					6.3516e-7,
    					0.0000013503,
    					0.0000028074,
    					0.0000057086,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0033,
    					0.0052,
    					0.0079,
    					0.0119,
    					0.0175,
    					0.0252,
    					0.0355,
    					0.0492,
    					0.0667,
    					0.0887,
    					0.1156,
    					0.148,
    					0.1859,
    					0.2293,
    					0.2779,
    					0.331,
    					0.3877,
    					0.447,
    					0.5075,
    					0.5678,
    					0.6265,
    					0.6825,
    					0.7345,
    					0.7819,
    					0.824,
    					0.8605,
    					0.8915,
    					0.9172,
    					0.938,
    					0.9545,
    					0.9673,
    					0.9769,
    					0.9841,
    					0.9892,
    					0.9929,
    					0.9954,
    					0.9971,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 103,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option5",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.0106,
    				"std.error": 0.3818,
    				statistic: 15.7437,
    				"p.value": 1.3972e-43,
    				"conf.low": 5.26,
    				"conf.high": 6.7612,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					7.9068e-13,
    					2.5203e-12,
    					7.8272e-12,
    					2.3686e-11,
    					6.9841e-11,
    					2.0067e-10,
    					5.6181e-10,
    					1.5328e-9,
    					4.0752e-9,
    					1.0559e-8,
    					2.6662e-8,
    					6.5612e-8,
    					1.5737e-7,
    					3.679e-7,
    					8.3833e-7,
    					0.0000018621,
    					0.000004032,
    					0.0000085112,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0023,
    					0.0038,
    					0.006,
    					0.0094,
    					0.0144,
    					0.0216,
    					0.0315,
    					0.0448,
    					0.0625,
    					0.0851,
    					0.1134,
    					0.1477,
    					0.1885,
    					0.2356,
    					0.2884,
    					0.3463,
    					0.4081,
    					0.4722,
    					0.537,
    					0.6009,
    					0.6622,
    					0.7194,
    					0.7715,
    					0.8177,
    					0.8575,
    					0.891,
    					0.9185,
    					0.9403,
    					0.9573,
    					0.9701,
    					0.9796,
    					0.9864,
    					0.9911,
    					0.9944,
    					0.9965,
    					0.9979,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3148,
    				"std.error": 0.4776,
    				statistic: -0.6591,
    				"p.value": 0.5103,
    				"conf.low": -1.2539,
    				"conf.high": 0.6243,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.2059e-22,
    					1.089e-21,
    					5.2334e-21,
    					2.4482e-20,
    					1.1149e-19,
    					4.9425e-19,
    					2.1329e-18,
    					8.9606e-18,
    					3.6647e-17,
    					1.4591e-16,
    					5.6555e-16,
    					2.1341e-15,
    					7.8402e-15,
    					2.8041e-14,
    					9.7645e-14,
    					3.3104e-13,
    					1.0927e-12,
    					3.5118e-12,
    					1.0989e-11,
    					3.3482e-11,
    					9.9334e-11,
    					2.8696e-10,
    					8.0724e-10,
    					2.2113e-9,
    					5.8989e-9,
    					1.5325e-8,
    					3.8772e-8,
    					9.5538e-8,
    					2.2929e-7,
    					5.3599e-7,
    					0.0000012204,
    					0.000002707,
    					0.0000058491,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0031,
    					0.0051,
    					0.0081,
    					0.0126,
    					0.019,
    					0.0281,
    					0.0406,
    					0.0571,
    					0.0786,
    					0.1058,
    					0.1391,
    					0.1789,
    					0.2253,
    					0.2777,
    					0.3355,
    					0.3975,
    					0.4622,
    					0.528,
    					0.5929,
    					0.6554,
    					0.7139,
    					0.7673,
    					0.8146,
    					0.8554,
    					0.8897,
    					0.9177,
    					0.94,
    					0.9572,
    					0.9702,
    					0.9798,
    					0.9866,
    					0.9913,
    					0.9945,
    					0.9966,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.9465,
    				"std.error": 0.5249,
    				statistic: -1.8032,
    				"p.value": 0.0721,
    				"conf.low": -1.9785,
    				"conf.high": 0.0855,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.1898e-32,
    					2.4163e-31,
    					2.5585e-30,
    					2.5994e-29,
    					2.5342e-28,
    					2.3707e-27,
    					2.1282e-26,
    					1.8332e-25,
    					1.5154e-24,
    					1.2021e-23,
    					9.1507e-23,
    					6.6848e-22,
    					4.6864e-21,
    					3.153e-20,
    					2.0359e-19,
    					1.2616e-18,
    					7.503e-18,
    					4.2827e-17,
    					2.3463e-16,
    					1.2338e-15,
    					6.2271e-15,
    					3.0168e-14,
    					1.4029e-13,
    					6.2627e-13,
    					2.6838e-12,
    					1.1041e-11,
    					4.3607e-11,
    					1.6536e-10,
    					6.0204e-10,
    					2.1047e-9,
    					7.0653e-9,
    					2.2776e-8,
    					7.0516e-8,
    					2.0968e-7,
    					5.9891e-7,
    					0.0000016433,
    					0.0000043317,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0013,
    					0.0024,
    					0.0045,
    					0.008,
    					0.0137,
    					0.0227,
    					0.0362,
    					0.0556,
    					0.0824,
    					0.118,
    					0.1633,
    					0.2186,
    					0.2833,
    					0.356,
    					0.4344,
    					0.5155,
    					0.5959,
    					0.6725,
    					0.7424,
    					0.8036,
    					0.8551,
    					0.8966,
    					0.9287,
    					0.9526,
    					0.9696,
    					0.9812,
    					0.9888,
    					0.9935,
    					0.9964,
    					0.9981,
    					0.999,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.6288,
    				"std.error": 0.652,
    				statistic: 0.9644,
    				"p.value": 0.3355,
    				"conf.low": -0.6531,
    				"conf.high": 1.9107,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.288e-18,
    					2.5208e-17,
    					1.4212e-16,
    					7.6843e-16,
    					3.9849e-15,
    					1.982e-14,
    					9.455e-14,
    					4.3264e-13,
    					1.8989e-12,
    					7.9948e-12,
    					3.229e-11,
    					1.2511e-10,
    					4.6507e-10,
    					1.6586e-9,
    					5.6759e-9,
    					1.8638e-8,
    					5.8728e-8,
    					1.776e-7,
    					5.1548e-7,
    					0.0000014361,
    					0.000003841,
    					0.0000098628,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0024,
    					0.0044,
    					0.0079,
    					0.0136,
    					0.0226,
    					0.0361,
    					0.0558,
    					0.0829,
    					0.1191,
    					0.1651,
    					0.2213,
    					0.2871,
    					0.3609,
    					0.4403,
    					0.5222,
    					0.6032,
    					0.6799,
    					0.7496,
    					0.8104,
    					0.8611,
    					0.9016,
    					0.9328,
    					0.9557,
    					0.9718,
    					0.9828,
    					0.9898,
    					0.9942,
    					0.9969,
    					0.9983,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 104,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option5",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.6236,
    				"std.error": 0.3089,
    				statistic: 18.2069,
    				"p.value": 4.7432e-54,
    				"conf.low": 5.0163,
    				"conf.high": 6.2309,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.6507e-14,
    					1.6544e-13,
    					7.205e-13,
    					3.0156e-12,
    					1.213e-11,
    					4.6898e-11,
    					1.7427e-10,
    					6.2249e-10,
    					2.1373e-9,
    					7.0546e-9,
    					2.2386e-8,
    					6.8296e-8,
    					2.0034e-7,
    					5.6512e-7,
    					0.000001533,
    					0.0000039996,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0021,
    					0.004,
    					0.0071,
    					0.0121,
    					0.0201,
    					0.0321,
    					0.0496,
    					0.0738,
    					0.1062,
    					0.1478,
    					0.1992,
    					0.2599,
    					0.3291,
    					0.4047,
    					0.484,
    					0.564,
    					0.6414,
    					0.7134,
    					0.7777,
    					0.8329,
    					0.8783,
    					0.9143,
    					0.9417,
    					0.9617,
    					0.9757,
    					0.9851,
    					0.9912,
    					0.995,
    					0.9972,
    					0.9985,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.2024,
    				"std.error": 0.383,
    				statistic: -0.5284,
    				"p.value": 0.5976,
    				"conf.low": -0.9554,
    				"conf.high": 0.5506,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.6998e-35,
    					3.4027e-34,
    					4.1122e-33,
    					4.765e-32,
    					5.2943e-31,
    					5.6404e-30,
    					5.7621e-29,
    					5.6444e-28,
    					5.3018e-27,
    					4.7754e-26,
    					4.1246e-25,
    					3.4162e-24,
    					2.7134e-23,
    					2.0667e-22,
    					1.5095e-21,
    					1.0574e-20,
    					7.1032e-20,
    					4.5763e-19,
    					2.8276e-18,
    					1.6756e-17,
    					9.5232e-17,
    					5.1913e-16,
    					2.7143e-15,
    					1.3613e-14,
    					6.5485e-14,
    					3.0218e-13,
    					1.3376e-12,
    					5.6803e-12,
    					2.3141e-11,
    					9.0449e-11,
    					3.3919e-10,
    					1.2205e-9,
    					4.2138e-9,
    					1.3962e-8,
    					4.4393e-8,
    					1.3548e-7,
    					3.9683e-7,
    					0.0000011158,
    					0.0000030121,
    					0.0000078067,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.001,
    					0.002,
    					0.0037,
    					0.0068,
    					0.0118,
    					0.0198,
    					0.032,
    					0.0499,
    					0.0749,
    					0.1085,
    					0.1518,
    					0.2052,
    					0.2685,
    					0.3403,
    					0.4184,
    					0.4998,
    					0.5813,
    					0.6595,
    					0.7313,
    					0.7946,
    					0.848,
    					0.8914,
    					0.925,
    					0.95,
    					0.9679,
    					0.9801,
    					0.9882,
    					0.9932,
    					0.9962,
    					0.998,
    					0.999,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.4128,
    				"std.error": 0.5886,
    				statistic: -0.7013,
    				"p.value": 0.4835,
    				"conf.low": -1.57,
    				"conf.high": 0.7444,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.6376e-30,
    					1.3063e-29,
    					1.0084e-28,
    					7.5331e-28,
    					5.4458e-27,
    					3.8098e-26,
    					2.5793e-25,
    					1.6899e-24,
    					1.0715e-23,
    					6.5745e-23,
    					3.9042e-22,
    					2.2438e-21,
    					1.248e-20,
    					6.7178e-20,
    					3.4998e-19,
    					1.7647e-18,
    					8.6118e-18,
    					4.0676e-17,
    					1.8596e-16,
    					8.2284e-16,
    					3.5242e-15,
    					1.461e-14,
    					5.8628e-14,
    					2.2773e-13,
    					8.5631e-13,
    					3.1169e-12,
    					1.0983e-11,
    					3.7466e-11,
    					1.2373e-10,
    					3.9562e-10,
    					1.2247e-9,
    					3.671e-9,
    					1.0654e-8,
    					2.9942e-8,
    					8.1487e-8,
    					2.1476e-7,
    					5.4819e-7,
    					0.0000013553,
    					0.0000032454,
    					0.0000075284,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0036,
    					0.0061,
    					0.01,
    					0.016,
    					0.0248,
    					0.0374,
    					0.0548,
    					0.0781,
    					0.1083,
    					0.1459,
    					0.1916,
    					0.245,
    					0.3056,
    					0.372,
    					0.4425,
    					0.5149,
    					0.5867,
    					0.6558,
    					0.72,
    					0.7778,
    					0.8281,
    					0.8705,
    					0.905,
    					0.9322,
    					0.953,
    					0.9683,
    					0.9792,
    					0.9868,
    					0.9918,
    					0.9951,
    					0.9972,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.777,
    				"std.error": 0.7308,
    				statistic: 1.0633,
    				"p.value": 0.2883,
    				"conf.low": -0.6598,
    				"conf.high": 2.2138,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.7966e-15,
    					7.6699e-15,
    					3.1674e-14,
    					1.2653e-13,
    					4.8895e-13,
    					1.8279e-12,
    					6.6108e-12,
    					2.3131e-11,
    					7.83e-11,
    					2.5645e-10,
    					8.1266e-10,
    					2.4918e-9,
    					7.3932e-9,
    					2.1227e-8,
    					5.8978e-8,
    					1.5859e-7,
    					4.1274e-7,
    					0.0000010397,
    					0.0000025351,
    					0.0000059842,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0018,
    					0.0032,
    					0.0055,
    					0.0092,
    					0.0149,
    					0.0233,
    					0.0354,
    					0.0523,
    					0.0751,
    					0.1047,
    					0.1419,
    					0.1873,
    					0.2406,
    					0.3013,
    					0.3681,
    					0.4391,
    					0.5122,
    					0.5848,
    					0.6546,
    					0.7196,
    					0.7779,
    					0.8287,
    					0.8713,
    					0.906,
    					0.9332,
    					0.9539,
    					0.9691,
    					0.9799,
    					0.9873,
    					0.9922,
    					0.9954,
    					0.9973,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 105,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option5",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.0106,
    				"std.error": 0.3806,
    				statistic: 15.7911,
    				"p.value": 9.3897e-41,
    				"conf.low": 5.2614,
    				"conf.high": 6.7598,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					6.7814e-13,
    					2.1764e-12,
    					6.8048e-12,
    					2.0727e-11,
    					6.1508e-11,
    					1.7783e-10,
    					5.009e-10,
    					1.3747e-9,
    					3.676e-9,
    					9.5777e-9,
    					2.4316e-8,
    					6.0156e-8,
    					1.4502e-7,
    					3.4072e-7,
    					7.8012e-7,
    					0.0000017409,
    					0.0000037864,
    					0.0000080273,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0022,
    					0.0037,
    					0.0059,
    					0.0093,
    					0.0142,
    					0.0212,
    					0.0311,
    					0.0444,
    					0.0619,
    					0.0845,
    					0.1127,
    					0.147,
    					0.1878,
    					0.2349,
    					0.2879,
    					0.3459,
    					0.4078,
    					0.4721,
    					0.5371,
    					0.6012,
    					0.6626,
    					0.72,
    					0.7722,
    					0.8184,
    					0.8583,
    					0.8917,
    					0.9191,
    					0.9409,
    					0.9578,
    					0.9705,
    					0.9799,
    					0.9866,
    					0.9913,
    					0.9945,
    					0.9966,
    					0.9979,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3148,
    				"std.error": 0.4762,
    				statistic: -0.661,
    				"p.value": 0.5091,
    				"conf.low": -1.2521,
    				"conf.high": 0.6225,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.6597e-22,
    					8.2723e-22,
    					4.0128e-21,
    					1.8946e-20,
    					8.7061e-20,
    					3.8939e-19,
    					1.6951e-18,
    					7.1826e-18,
    					2.9622e-17,
    					1.1891e-16,
    					4.6465e-16,
    					1.7672e-15,
    					6.5428e-15,
    					2.3579e-14,
    					8.2715e-14,
    					2.8246e-13,
    					9.3898e-13,
    					3.0386e-12,
    					9.5729e-12,
    					2.936e-11,
    					8.7665e-11,
    					2.5484e-10,
    					7.2125e-10,
    					1.9875e-9,
    					5.3325e-9,
    					1.3931e-8,
    					3.5439e-8,
    					8.7786e-8,
    					2.1176e-7,
    					4.9747e-7,
    					0.0000011382,
    					0.0000025362,
    					0.0000055046,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0018,
    					0.0031,
    					0.005,
    					0.008,
    					0.0124,
    					0.0187,
    					0.0278,
    					0.0401,
    					0.0566,
    					0.078,
    					0.1051,
    					0.1384,
    					0.1782,
    					0.2246,
    					0.2771,
    					0.3351,
    					0.3972,
    					0.4621,
    					0.528,
    					0.5932,
    					0.6559,
    					0.7145,
    					0.7679,
    					0.8153,
    					0.8561,
    					0.8903,
    					0.9183,
    					0.9405,
    					0.9577,
    					0.9706,
    					0.9801,
    					0.9868,
    					0.9915,
    					0.9946,
    					0.9967,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.7998,
    				"std.error": 0.6267,
    				statistic: -1.2763,
    				"p.value": 0.2029,
    				"conf.low": -2.0333,
    				"conf.high": 0.4337,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.4918e-24,
    					1.4046e-23,
    					7.6916e-23,
    					4.092e-22,
    					2.115e-21,
    					1.0621e-20,
    					5.1814e-20,
    					2.4559e-19,
    					1.131e-18,
    					5.0604e-18,
    					2.1998e-17,
    					9.2914e-17,
    					3.8131e-16,
    					1.5205e-15,
    					5.8909e-15,
    					2.2177e-14,
    					8.1127e-14,
    					2.8838e-13,
    					9.9608e-13,
    					3.3434e-12,
    					1.0905e-11,
    					3.4568e-11,
    					1.0648e-10,
    					3.1879e-10,
    					9.2755e-10,
    					2.623e-9,
    					7.2095e-9,
    					1.9261e-8,
    					5.0017e-8,
    					1.2626e-7,
    					3.0982e-7,
    					7.3913e-7,
    					0.0000017143,
    					0.0000038659,
    					0.0000084768,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0017,
    					0.0029,
    					0.0048,
    					0.0077,
    					0.0122,
    					0.0187,
    					0.0281,
    					0.041,
    					0.0584,
    					0.0811,
    					0.11,
    					0.1455,
    					0.1881,
    					0.2376,
    					0.2935,
    					0.3548,
    					0.4201,
    					0.4877,
    					0.5557,
    					0.6221,
    					0.685,
    					0.743,
    					0.7949,
    					0.84,
    					0.878,
    					0.9092,
    					0.9341,
    					0.9533,
    					0.9677,
    					0.9783,
    					0.9857,
    					0.9909,
    					0.9943,
    					0.9966,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.8894,
    				"std.error": 0.7805,
    				statistic: 1.1396,
    				"p.value": 0.2554,
    				"conf.low": -0.6468,
    				"conf.high": 2.4257,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.9232e-14,
    					1.0721e-13,
    					3.8196e-13,
    					1.3218e-12,
    					4.4431e-12,
    					1.4508e-11,
    					4.602e-11,
    					1.4181e-10,
    					4.2451e-10,
    					1.2346e-9,
    					3.4884e-9,
    					9.5766e-9,
    					2.5544e-8,
    					6.6204e-8,
    					1.6673e-7,
    					4.0804e-7,
    					9.7045e-7,
    					0.0000022431,
    					0.0000050393,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0021,
    					0.0035,
    					0.0058,
    					0.0093,
    					0.0146,
    					0.0223,
    					0.0332,
    					0.0481,
    					0.0679,
    					0.0935,
    					0.1256,
    					0.1647,
    					0.2108,
    					0.2639,
    					0.3229,
    					0.3869,
    					0.454,
    					0.5225,
    					0.5904,
    					0.6556,
    					0.7165,
    					0.7717,
    					0.8203,
    					0.8618,
    					0.8963,
    					0.924,
    					0.9457,
    					0.9622,
    					0.9743,
    					0.983,
    					0.9891,
    					0.9931,
    					0.9958,
    					0.9975,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 106,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.9664,
    				"std.error": 0.4989,
    				statistic: 11.9595,
    				"p.value": 1.1217e-25,
    				"conf.low": 4.9832,
    				"conf.high": 6.9497,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.1984e-8,
    					1.023e-7,
    					1.983e-7,
    					3.7867e-7,
    					7.1234e-7,
    					0.0000013201,
    					0.0000024102,
    					0.0000043352,
    					0.0000076823,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.001,
    					0.0016,
    					0.0023,
    					0.0034,
    					0.0049,
    					0.007,
    					0.0099,
    					0.0137,
    					0.0187,
    					0.0252,
    					0.0334,
    					0.0438,
    					0.0566,
    					0.0723,
    					0.091,
    					0.1131,
    					0.1388,
    					0.1683,
    					0.2014,
    					0.2382,
    					0.2785,
    					0.3217,
    					0.3675,
    					0.4153,
    					0.4644,
    					0.514,
    					0.5635,
    					0.6119,
    					0.6587,
    					0.7031,
    					0.7447,
    					0.783,
    					0.8178,
    					0.8488,
    					0.8762,
    					0.8998,
    					0.92,
    					0.9369,
    					0.951,
    					0.9624,
    					0.9715,
    					0.9787,
    					0.9843,
    					0.9886,
    					0.9918,
    					0.9942,
    					0.996,
    					0.9972,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1008,
    				"std.error": 0.6367,
    				statistic: -1.7287,
    				"p.value": 0.0853,
    				"conf.low": -2.3557,
    				"conf.high": 0.1542,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					9.1245e-10,
    					1.9433e-9,
    					4.0774e-9,
    					8.4285e-9,
    					1.7165e-8,
    					3.4442e-8,
    					6.8087e-8,
    					1.3262e-7,
    					2.545e-7,
    					4.8122e-7,
    					8.9655e-7,
    					0.0000016459,
    					0.0000029772,
    					0.0000053069,
    					0.0000093215,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0026,
    					0.0038,
    					0.0054,
    					0.0077,
    					0.0107,
    					0.0147,
    					0.02,
    					0.0268,
    					0.0355,
    					0.0462,
    					0.0595,
    					0.0757,
    					0.0949,
    					0.1175,
    					0.1437,
    					0.1736,
    					0.2072,
    					0.2443,
    					0.2847,
    					0.3281,
    					0.3739,
    					0.4216,
    					0.4705,
    					0.5198,
    					0.5689,
    					0.6168,
    					0.6631,
    					0.707,
    					0.748,
    					0.7858,
    					0.8201,
    					0.8507,
    					0.8776,
    					0.9009,
    					0.9208,
    					0.9375,
    					0.9514,
    					0.9626,
    					0.9716,
    					0.9788,
    					0.9843,
    					0.9886,
    					0.9918,
    					0.9942,
    					0.996,
    					0.9972,
    					0.9981,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.299,
    				"std.error": 0.6522,
    				statistic: -1.9916,
    				"p.value": 0.0477,
    				"conf.low": -2.5844,
    				"conf.high": -0.0135,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.7956e-19,
    					7.8372e-19,
    					3.3308e-18,
    					1.3784e-17,
    					5.5546e-17,
    					2.1796e-16,
    					8.3287e-16,
    					3.0991e-15,
    					1.123e-14,
    					3.9627e-14,
    					1.3617e-13,
    					4.5571e-13,
    					1.4852e-12,
    					4.7143e-12,
    					1.4573e-11,
    					4.3876e-11,
    					1.2866e-10,
    					3.6746e-10,
    					1.0222e-9,
    					2.7699e-9,
    					7.311e-9,
    					1.8797e-8,
    					4.708e-8,
    					1.1487e-7,
    					2.7306e-7,
    					6.324e-7,
    					0.000001427,
    					0.0000031374,
    					0.0000067215,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0034,
    					0.0054,
    					0.0086,
    					0.0132,
    					0.02,
    					0.0293,
    					0.0421,
    					0.0591,
    					0.081,
    					0.1086,
    					0.1423,
    					0.1826,
    					0.2292,
    					0.2818,
    					0.3397,
    					0.4016,
    					0.4661,
    					0.5316,
    					0.5961,
    					0.6582,
    					0.7162,
    					0.7691,
    					0.8159,
    					0.8564,
    					0.8903,
    					0.9181,
    					0.9402,
    					0.9573,
    					0.9703,
    					0.9798,
    					0.9866,
    					0.9913,
    					0.9945,
    					0.9966,
    					0.9979,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.0239,
    				"std.error": 0.8538,
    				statistic: 2.3705,
    				"p.value": 0.0186,
    				"conf.low": 0.3411,
    				"conf.high": 3.7067,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.2535e-16,
    					4.5761e-16,
    					1.6303e-15,
    					5.6688e-15,
    					1.9237e-14,
    					6.371e-14,
    					2.0593e-13,
    					6.4967e-13,
    					2.0004e-12,
    					6.0117e-12,
    					1.7634e-11,
    					5.0488e-11,
    					1.411e-10,
    					3.849e-10,
    					1.0249e-9,
    					2.6641e-9,
    					6.76e-9,
    					1.6745e-8,
    					4.0495e-8,
    					9.5605e-8,
    					2.2037e-7,
    					4.9595e-7,
    					0.0000010898,
    					0.0000023384,
    					0.0000048994,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0022,
    					0.0036,
    					0.0056,
    					0.0087,
    					0.0132,
    					0.0195,
    					0.0283,
    					0.0402,
    					0.0557,
    					0.0757,
    					0.1008,
    					0.1314,
    					0.1679,
    					0.2103,
    					0.2584,
    					0.3117,
    					0.3693,
    					0.4299,
    					0.4923,
    					0.5549,
    					0.6161,
    					0.6745,
    					0.7289,
    					0.7784,
    					0.8223,
    					0.8602,
    					0.8922,
    					0.9186,
    					0.9398,
    					0.9564,
    					0.9691,
    					0.9785,
    					0.9854,
    					0.9903,
    					0.9937,
    					0.996,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 107,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.3439,
    				"std.error": 0.3821,
    				statistic: 13.9862,
    				"p.value": 3.7638e-32,
    				"conf.low": 4.5908,
    				"conf.high": 6.0969,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.2881e-8,
    					1.2754e-7,
    					2.9982e-7,
    					6.8702e-7,
    					0.0000015346,
    					0.0000033417,
    					0.000007094,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0033,
    					0.0054,
    					0.0084,
    					0.013,
    					0.0195,
    					0.0286,
    					0.041,
    					0.0574,
    					0.0787,
    					0.1054,
    					0.1381,
    					0.1771,
    					0.2225,
    					0.2739,
    					0.3305,
    					0.3913,
    					0.4549,
    					0.5197,
    					0.5839,
    					0.646,
    					0.7044,
    					0.7579,
    					0.8057,
    					0.8473,
    					0.8825,
    					0.9115,
    					0.9348,
    					0.9531,
    					0.967,
    					0.9773,
    					0.9847,
    					0.99,
    					0.9936,
    					0.996,
    					0.9975,
    					0.9985,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.4487,
    				"std.error": 0.5059,
    				statistic: -0.887,
    				"p.value": 0.376,
    				"conf.low": -1.4457,
    				"conf.high": 0.5483,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.0928e-19,
    					1.6344e-18,
    					6.3719e-18,
    					2.4254e-17,
    					9.014e-17,
    					3.2708e-16,
    					1.1588e-15,
    					4.0085e-15,
    					1.3539e-14,
    					4.4649e-14,
    					1.4377e-13,
    					4.5206e-13,
    					1.3879e-12,
    					4.1609e-12,
    					1.2181e-11,
    					3.4822e-11,
    					9.7209e-11,
    					2.6501e-10,
    					7.0552e-10,
    					1.8343e-9,
    					4.6578e-9,
    					1.1551e-8,
    					2.7977e-8,
    					6.6185e-8,
    					1.5293e-7,
    					3.4517e-7,
    					7.61e-7,
    					0.000001639,
    					0.0000034483,
    					0.000007088,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0027,
    					0.0043,
    					0.0067,
    					0.0103,
    					0.0154,
    					0.0225,
    					0.0322,
    					0.0452,
    					0.062,
    					0.0835,
    					0.11,
    					0.1422,
    					0.1801,
    					0.2239,
    					0.2731,
    					0.3272,
    					0.3852,
    					0.4458,
    					0.5078,
    					0.5695,
    					0.6297,
    					0.6868,
    					0.7397,
    					0.7876,
    					0.8299,
    					0.8664,
    					0.8971,
    					0.9224,
    					0.9426,
    					0.9584,
    					0.9705,
    					0.9795,
    					0.9861,
    					0.9908,
    					0.994,
    					0.9962,
    					0.9976,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.4787,
    				"std.error": 0.7129,
    				statistic: -0.6715,
    				"p.value": 0.5026,
    				"conf.low": -1.8838,
    				"conf.high": 0.9264,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.941e-21,
    					2.0172e-20,
    					8.0539e-20,
    					3.1447e-19,
    					1.2008e-18,
    					4.4843e-18,
    					1.6377e-17,
    					5.8495e-17,
    					2.0433e-16,
    					6.9808e-16,
    					2.3325e-15,
    					7.6221e-15,
    					2.4361e-14,
    					7.6152e-14,
    					2.3283e-13,
    					6.9624e-13,
    					2.0364e-12,
    					5.826e-12,
    					1.6303e-11,
    					4.4623e-11,
    					1.1947e-10,
    					3.1289e-10,
    					8.0159e-10,
    					2.0089e-9,
    					4.9249e-9,
    					1.1812e-8,
    					2.7713e-8,
    					6.3614e-8,
    					1.4286e-7,
    					3.1391e-7,
    					6.7485e-7,
    					0.0000014196,
    					0.000002922,
    					0.0000058854,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0032,
    					0.0049,
    					0.0076,
    					0.0113,
    					0.0166,
    					0.0239,
    					0.0337,
    					0.0466,
    					0.0632,
    					0.084,
    					0.1097,
    					0.1405,
    					0.1767,
    					0.2183,
    					0.2651,
    					0.3165,
    					0.3717,
    					0.4297,
    					0.4892,
    					0.549,
    					0.6077,
    					0.6641,
    					0.7169,
    					0.7654,
    					0.809,
    					0.8471,
    					0.8799,
    					0.9073,
    					0.9299,
    					0.9479,
    					0.9621,
    					0.9729,
    					0.981,
    					0.987,
    					0.9912,
    					0.9942,
    					0.9963,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.6087,
    				"std.error": 0.9322,
    				statistic: 1.7257,
    				"p.value": 0.0858,
    				"conf.low": -0.2286,
    				"conf.high": 3.4459,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					8.2923e-13,
    					2.314e-12,
    					6.3273e-12,
    					1.6953e-11,
    					4.4507e-11,
    					1.145e-10,
    					2.8865e-10,
    					7.1307e-10,
    					1.7263e-9,
    					4.0954e-9,
    					9.5214e-9,
    					2.1694e-8,
    					4.8444e-8,
    					1.0602e-7,
    					2.2741e-7,
    					4.781e-7,
    					9.852e-7,
    					0.0000019899,
    					0.0000039399,
    					0.0000076468,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.002,
    					0.0031,
    					0.0047,
    					0.0071,
    					0.0105,
    					0.0152,
    					0.0217,
    					0.0303,
    					0.0416,
    					0.0561,
    					0.0743,
    					0.0968,
    					0.1238,
    					0.1557,
    					0.1926,
    					0.2345,
    					0.2809,
    					0.3313,
    					0.3851,
    					0.4411,
    					0.4983,
    					0.5556,
    					0.6117,
    					0.6656,
    					0.7163,
    					0.763,
    					0.8051,
    					0.8423,
    					0.8745,
    					0.9018,
    					0.9245,
    					0.9429,
    					0.9576,
    					0.9691,
    					0.9779,
    					0.9845,
    					0.9893,
    					0.9927,
    					0.9952,
    					0.9969,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 108,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.9664,
    				"std.error": 0.5033,
    				statistic: 11.8551,
    				"p.value": 8.9497e-24,
    				"conf.low": 4.9726,
    				"conf.high": 6.9602,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					6.7038e-8,
    					1.3042e-7,
    					2.5002e-7,
    					4.7227e-7,
    					8.7906e-7,
    					0.0000016123,
    					0.0000029142,
    					0.0000051906,
    					0.000009111,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0011,
    					0.0017,
    					0.0025,
    					0.0037,
    					0.0053,
    					0.0075,
    					0.0104,
    					0.0144,
    					0.0195,
    					0.0262,
    					0.0346,
    					0.0452,
    					0.0582,
    					0.074,
    					0.0929,
    					0.1152,
    					0.1409,
    					0.1704,
    					0.2035,
    					0.2402,
    					0.2802,
    					0.3232,
    					0.3687,
    					0.4161,
    					0.4647,
    					0.5139,
    					0.5629,
    					0.611,
    					0.6574,
    					0.7015,
    					0.7428,
    					0.781,
    					0.8157,
    					0.8467,
    					0.8741,
    					0.8978,
    					0.9182,
    					0.9353,
    					0.9495,
    					0.9611,
    					0.9704,
    					0.9778,
    					0.9836,
    					0.988,
    					0.9914,
    					0.9939,
    					0.9957,
    					0.997,
    					0.998,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1008,
    				"std.error": 0.6424,
    				statistic: -1.7136,
    				"p.value": 0.0885,
    				"conf.low": -2.3692,
    				"conf.high": 0.1676,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.26e-9,
    					2.6493e-9,
    					5.4894e-9,
    					1.1209e-8,
    					2.2554e-8,
    					4.4726e-8,
    					8.7407e-8,
    					1.6834e-7,
    					3.1954e-7,
    					5.9777e-7,
    					0.0000011021,
    					0.0000020028,
    					0.0000035872,
    					0.0000063327,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0008,
    					0.0013,
    					0.0019,
    					0.0028,
    					0.004,
    					0.0058,
    					0.0081,
    					0.0113,
    					0.0155,
    					0.0209,
    					0.0279,
    					0.0367,
    					0.0477,
    					0.0612,
    					0.0775,
    					0.0968,
    					0.1196,
    					0.1458,
    					0.1757,
    					0.2092,
    					0.2462,
    					0.2864,
    					0.3295,
    					0.375,
    					0.4223,
    					0.4708,
    					0.5197,
    					0.5683,
    					0.6158,
    					0.6617,
    					0.7054,
    					0.7462,
    					0.7838,
    					0.818,
    					0.8486,
    					0.8756,
    					0.899,
    					0.919,
    					0.9359,
    					0.9499,
    					0.9613,
    					0.9706,
    					0.9779,
    					0.9836,
    					0.988,
    					0.9913,
    					0.9938,
    					0.9957,
    					0.997,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.1012,
    				"std.error": 0.7869,
    				statistic: -1.3995,
    				"p.value": 0.1636,
    				"conf.low": -2.655,
    				"conf.high": 0.4525,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					8.6891e-15,
    					2.4866e-14,
    					6.9876e-14,
    					1.9282e-13,
    					5.2246e-13,
    					1.3902e-12,
    					3.6324e-12,
    					9.3204e-12,
    					2.3485e-11,
    					5.8113e-11,
    					1.4122e-10,
    					3.3701e-10,
    					7.8983e-10,
    					1.8179e-9,
    					4.1095e-9,
    					9.1235e-9,
    					1.9893e-8,
    					4.2603e-8,
    					8.9614e-8,
    					1.8514e-7,
    					3.7572e-7,
    					7.4893e-7,
    					0.0000014664,
    					0.0000028206,
    					0.0000053295,
    					0.0000098926,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0012,
    					0.0018,
    					0.0028,
    					0.0042,
    					0.0062,
    					0.0091,
    					0.013,
    					0.0183,
    					0.0253,
    					0.0345,
    					0.0463,
    					0.061,
    					0.0792,
    					0.1013,
    					0.1276,
    					0.1582,
    					0.1933,
    					0.2327,
    					0.2763,
    					0.3236,
    					0.3738,
    					0.4264,
    					0.4802,
    					0.5344,
    					0.588,
    					0.64,
    					0.6896,
    					0.7359,
    					0.7784,
    					0.8167,
    					0.8506,
    					0.88,
    					0.9051,
    					0.9261,
    					0.9433,
    					0.9572,
    					0.9682,
    					0.9768,
    					0.9833,
    					0.9882,
    					0.9918,
    					0.9944,
    					0.9962,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.2607,
    				"std.error": 1.0158,
    				statistic: 2.2256,
    				"p.value": 0.0274,
    				"conf.low": 0.255,
    				"conf.high": 4.2665,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.3389e-13,
    					1.3811e-12,
    					3.5121e-12,
    					8.7793e-12,
    					2.1573e-11,
    					5.2113e-11,
    					1.2375e-10,
    					2.8889e-10,
    					6.6297e-10,
    					1.4957e-9,
    					3.3176e-9,
    					7.2342e-9,
    					1.5509e-8,
    					3.2688e-8,
    					6.7737e-8,
    					1.3801e-7,
    					2.7647e-7,
    					5.4456e-7,
    					0.0000010547,
    					0.0000020085,
    					0.0000037613,
    					0.0000069263,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0019,
    					0.0029,
    					0.0043,
    					0.0063,
    					0.009,
    					0.0128,
    					0.0179,
    					0.0246,
    					0.0332,
    					0.0443,
    					0.0581,
    					0.0751,
    					0.0957,
    					0.1201,
    					0.1486,
    					0.1814,
    					0.2183,
    					0.2592,
    					0.3038,
    					0.3514,
    					0.4016,
    					0.4534,
    					0.506,
    					0.5585,
    					0.61,
    					0.6596,
    					0.7066,
    					0.7504,
    					0.7904,
    					0.8264,
    					0.8582,
    					0.8858,
    					0.9093,
    					0.929,
    					0.9453,
    					0.9585,
    					0.9689,
    					0.9771,
    					0.9834,
    					0.9881,
    					0.9917,
    					0.9942,
    					0.9961,
    					0.9974,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 109,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.1325,
    				"std.error": 0.4434,
    				statistic: 13.8318,
    				"p.value": 9.3595e-33,
    				"conf.low": 5.2593,
    				"conf.high": 7.0057,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.0059e-10,
    					2.4808e-10,
    					6.002e-10,
    					1.4246e-9,
    					3.317e-9,
    					7.5771e-9,
    					1.6981e-8,
    					3.7335e-8,
    					8.0538e-8,
    					1.7046e-7,
    					3.5397e-7,
    					7.2123e-7,
    					0.000001442,
    					0.0000028289,
    					0.0000054459,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.0033,
    					0.005,
    					0.0074,
    					0.0108,
    					0.0155,
    					0.0219,
    					0.0303,
    					0.0413,
    					0.0552,
    					0.0727,
    					0.0941,
    					0.1198,
    					0.1502,
    					0.1853,
    					0.225,
    					0.2692,
    					0.3174,
    					0.3688,
    					0.4228,
    					0.4782,
    					0.534,
    					0.5892,
    					0.6427,
    					0.6935,
    					0.7408,
    					0.7841,
    					0.8228,
    					0.8569,
    					0.8862,
    					0.9109,
    					0.9314,
    					0.9481,
    					0.9614,
    					0.9717,
    					0.9797,
    					0.9856,
    					0.99,
    					0.9932,
    					0.9954,
    					0.997,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.2276,
    				"std.error": 0.5756,
    				statistic: -2.1327,
    				"p.value": 0.0339,
    				"conf.low": -2.3613,
    				"conf.high": -0.094,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					6.3589e-11,
    					1.5504e-10,
    					3.7116e-10,
    					8.7241e-10,
    					2.0135e-9,
    					4.5628e-9,
    					1.0153e-8,
    					2.2185e-8,
    					4.7599e-8,
    					1.0029e-7,
    					2.075e-7,
    					4.216e-7,
    					8.4127e-7,
    					0.0000016486,
    					0.000003173,
    					0.0000059978,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.002,
    					0.0031,
    					0.0047,
    					0.0069,
    					0.01,
    					0.0143,
    					0.0201,
    					0.0278,
    					0.0378,
    					0.0504,
    					0.0663,
    					0.0858,
    					0.1094,
    					0.1372,
    					0.1695,
    					0.2063,
    					0.2474,
    					0.2926,
    					0.3413,
    					0.3928,
    					0.4463,
    					0.5007,
    					0.5551,
    					0.6085,
    					0.6599,
    					0.7085,
    					0.7536,
    					0.7947,
    					0.8314,
    					0.8636,
    					0.8913,
    					0.9147,
    					0.9341,
    					0.9499,
    					0.9625,
    					0.9724,
    					0.98,
    					0.9858,
    					0.9901,
    					0.9932,
    					0.9954,
    					0.9969,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.3233,
    				"std.error": 0.5927,
    				statistic: -2.2328,
    				"p.value": 0.0264,
    				"conf.low": -2.4905,
    				"conf.high": -0.1561,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.2628e-23,
    					3.1002e-22,
    					1.7682e-21,
    					9.7643e-21,
    					5.2209e-20,
    					2.7029e-19,
    					1.3549e-18,
    					6.5767e-18,
    					3.0911e-17,
    					1.4068e-16,
    					6.1996e-16,
    					2.6456e-15,
    					1.0933e-14,
    					4.3753e-14,
    					1.6956e-13,
    					6.3638e-13,
    					2.3131e-12,
    					8.1424e-12,
    					2.776e-11,
    					9.1668e-11,
    					2.9319e-10,
    					9.0829e-10,
    					2.7256e-9,
    					7.9232e-9,
    					2.2312e-8,
    					6.087e-8,
    					1.6089e-7,
    					4.1201e-7,
    					0.0000010224,
    					0.0000024583,
    					0.0000057284,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0029,
    					0.0049,
    					0.0082,
    					0.0132,
    					0.0207,
    					0.0315,
    					0.0467,
    					0.0671,
    					0.0939,
    					0.1279,
    					0.1696,
    					0.2192,
    					0.2762,
    					0.3396,
    					0.4079,
    					0.4791,
    					0.551,
    					0.6213,
    					0.6878,
    					0.7486,
    					0.8026,
    					0.8488,
    					0.8873,
    					0.9181,
    					0.9422,
    					0.9603,
    					0.9735,
    					0.9828,
    					0.9892,
    					0.9934,
    					0.9961,
    					0.9977,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.8856,
    				"std.error": 0.7801,
    				statistic: 2.4171,
    				"p.value": 0.0164,
    				"conf.low": 0.3492,
    				"conf.high": 3.422,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					7.3562e-19,
    					3.3545e-18,
    					1.4856e-17,
    					6.3899e-17,
    					2.6693e-16,
    					1.0829e-15,
    					4.2673e-15,
    					1.6332e-14,
    					6.071e-14,
    					2.192e-13,
    					7.6873e-13,
    					2.6187e-12,
    					8.665e-12,
    					2.7852e-11,
    					8.6963e-11,
    					2.6378e-10,
    					7.7727e-10,
    					2.2251e-9,
    					6.1886e-9,
    					1.6723e-8,
    					4.3906e-8,
    					1.1201e-7,
    					2.7767e-7,
    					6.6888e-7,
    					0.0000015659,
    					0.0000035628,
    					0.0000078787,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0028,
    					0.0047,
    					0.0077,
    					0.0121,
    					0.0187,
    					0.0281,
    					0.0412,
    					0.0588,
    					0.0819,
    					0.1112,
    					0.1472,
    					0.1904,
    					0.2407,
    					0.2973,
    					0.3594,
    					0.4255,
    					0.4937,
    					0.5621,
    					0.6286,
    					0.6916,
    					0.7493,
    					0.8008,
    					0.8453,
    					0.8827,
    					0.9132,
    					0.9373,
    					0.9559,
    					0.9697,
    					0.9798,
    					0.9868,
    					0.9916,
    					0.9948,
    					0.9969,
    					0.9982,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 110,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.507,
    				"std.error": 0.3512,
    				statistic: 15.6785,
    				"p.value": 3.9651e-39,
    				"conf.low": 4.8153,
    				"conf.high": 6.1988,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.0825e-10,
    					6.362e-10,
    					1.8852e-9,
    					5.4181e-9,
    					1.5105e-8,
    					4.0848e-8,
    					1.0716e-7,
    					2.7273e-7,
    					6.7342e-7,
    					0.0000016133,
    					0.0000037503,
    					0.0000084598,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0034,
    					0.0056,
    					0.0092,
    					0.0146,
    					0.0226,
    					0.0339,
    					0.0496,
    					0.0705,
    					0.0976,
    					0.1317,
    					0.1732,
    					0.2223,
    					0.2784,
    					0.3406,
    					0.4075,
    					0.4772,
    					0.5477,
    					0.6166,
    					0.6821,
    					0.7423,
    					0.796,
    					0.8424,
    					0.8812,
    					0.9128,
    					0.9376,
    					0.9565,
    					0.9705,
    					0.9806,
    					0.9875,
    					0.9922,
    					0.9953,
    					0.9972,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.6385,
    				"std.error": 0.4634,
    				statistic: -1.3778,
    				"p.value": 0.1695,
    				"conf.low": -1.551,
    				"conf.high": 0.2741,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.0229e-20,
    					4.956e-20,
    					2.3336e-19,
    					1.0678e-18,
    					4.7488e-18,
    					2.0524e-17,
    					8.6212e-17,
    					3.5195e-16,
    					1.3964e-15,
    					5.3851e-15,
    					2.0184e-14,
    					7.353e-14,
    					2.6036e-13,
    					8.9608e-13,
    					2.9978e-12,
    					9.7483e-12,
    					3.0815e-11,
    					9.4687e-11,
    					2.8284e-10,
    					8.2134e-10,
    					2.3187e-9,
    					6.3642e-9,
    					1.6983e-8,
    					4.4063e-8,
    					1.1116e-7,
    					2.7268e-7,
    					6.5046e-7,
    					0.0000015089,
    					0.0000034043,
    					0.0000074698,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0015,
    					0.0026,
    					0.0043,
    					0.007,
    					0.011,
    					0.017,
    					0.0256,
    					0.0376,
    					0.0538,
    					0.075,
    					0.1022,
    					0.1358,
    					0.1764,
    					0.2238,
    					0.2778,
    					0.3375,
    					0.4016,
    					0.4684,
    					0.5361,
    					0.6029,
    					0.6667,
    					0.726,
    					0.7796,
    					0.8266,
    					0.8667,
    					0.8999,
    					0.9266,
    					0.9475,
    					0.9633,
    					0.9751,
    					0.9835,
    					0.9893,
    					0.9933,
    					0.9959,
    					0.9975,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.392,
    				"std.error": 0.6483,
    				statistic: -0.6047,
    				"p.value": 0.5459,
    				"conf.low": -1.6687,
    				"conf.high": 0.8847,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.2101e-25,
    					6.7574e-25,
    					3.6729e-24,
    					1.9432e-23,
    					1.0006e-22,
    					5.0155e-22,
    					2.447e-21,
    					1.1621e-20,
    					5.3718e-20,
    					2.4171e-19,
    					1.0587e-18,
    					4.5137e-18,
    					1.8733e-17,
    					7.568e-17,
    					2.9763e-16,
    					1.1395e-15,
    					4.2467e-15,
    					1.5408e-14,
    					5.442e-14,
    					1.8713e-13,
    					6.2643e-13,
    					2.0416e-12,
    					6.4781e-12,
    					2.0013e-11,
    					6.0196e-11,
    					1.7629e-10,
    					5.027e-10,
    					1.3958e-9,
    					3.7738e-9,
    					9.9357e-9,
    					2.5474e-8,
    					6.3602e-8,
    					1.5466e-7,
    					3.6626e-7,
    					8.448e-7,
    					0.000001898,
    					0.0000041537,
    					0.0000088551,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0025,
    					0.0041,
    					0.0067,
    					0.0104,
    					0.016,
    					0.0239,
    					0.0348,
    					0.0495,
    					0.0688,
    					0.0935,
    					0.1242,
    					0.1613,
    					0.205,
    					0.255,
    					0.3108,
    					0.3713,
    					0.4351,
    					0.5007,
    					0.5663,
    					0.6301,
    					0.6905,
    					0.7461,
    					0.796,
    					0.8396,
    					0.8765,
    					0.9071,
    					0.9316,
    					0.9509,
    					0.9655,
    					0.9763,
    					0.9842,
    					0.9897,
    					0.9934,
    					0.9959,
    					0.9975,
    					0.9985,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.523,
    				"std.error": 0.8559,
    				statistic: 1.7795,
    				"p.value": 0.0764,
    				"conf.low": -0.1626,
    				"conf.high": 3.2086,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.6002e-14,
    					5.304e-14,
    					1.7161e-13,
    					5.4195e-13,
    					1.6707e-12,
    					5.0273e-12,
    					1.4767e-11,
    					4.2345e-11,
    					1.1853e-10,
    					3.2391e-10,
    					8.6411e-10,
    					2.2505e-9,
    					5.7224e-9,
    					1.4206e-8,
    					3.4433e-8,
    					8.149e-8,
    					1.8831e-7,
    					4.2491e-7,
    					9.3625e-7,
    					0.0000020146,
    					0.0000042334,
    					0.0000086883,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0032,
    					0.0051,
    					0.0079,
    					0.012,
    					0.0178,
    					0.026,
    					0.037,
    					0.0516,
    					0.0704,
    					0.0941,
    					0.1232,
    					0.1581,
    					0.1989,
    					0.2455,
    					0.2974,
    					0.3538,
    					0.4136,
    					0.4755,
    					0.538,
    					0.5996,
    					0.6588,
    					0.7143,
    					0.7651,
    					0.8105,
    					0.85,
    					0.8836,
    					0.9115,
    					0.9341,
    					0.9519,
    					0.9657,
    					0.976,
    					0.9836,
    					0.989,
    					0.9928,
    					0.9954,
    					0.9971,
    					0.9982,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 111,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.1325,
    				"std.error": 0.4448,
    				statistic: 13.7875,
    				"p.value": 2.2109e-30,
    				"conf.low": 5.2551,
    				"conf.high": 7.0099,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.1482e-10,
    					2.8158e-10,
    					6.7753e-10,
    					1.5995e-9,
    					3.7047e-9,
    					8.4193e-9,
    					1.8774e-8,
    					4.1076e-8,
    					8.8186e-8,
    					1.8578e-7,
    					3.8405e-7,
    					7.791e-7,
    					0.000001551,
    					0.0000030303,
    					0.0000058103,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0022,
    					0.0034,
    					0.0051,
    					0.0076,
    					0.011,
    					0.0158,
    					0.0222,
    					0.0307,
    					0.0418,
    					0.0558,
    					0.0733,
    					0.0948,
    					0.1206,
    					0.151,
    					0.186,
    					0.2257,
    					0.2698,
    					0.3179,
    					0.3692,
    					0.423,
    					0.4782,
    					0.5339,
    					0.5889,
    					0.6423,
    					0.6929,
    					0.7402,
    					0.7833,
    					0.822,
    					0.8561,
    					0.8854,
    					0.9102,
    					0.9308,
    					0.9476,
    					0.9609,
    					0.9713,
    					0.9794,
    					0.9854,
    					0.9898,
    					0.993,
    					0.9953,
    					0.9969,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.2276,
    				"std.error": 0.5775,
    				statistic: -2.1258,
    				"p.value": 0.0348,
    				"conf.low": -2.3668,
    				"conf.high": -0.0885,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					7.2795e-11,
    					1.765e-10,
    					4.2023e-10,
    					9.8251e-10,
    					2.2558e-9,
    					5.086e-9,
    					1.1261e-8,
    					2.4486e-8,
    					5.2289e-8,
    					1.0966e-7,
    					2.2588e-7,
    					4.5694e-7,
    					9.0791e-7,
    					0.0000017719,
    					0.0000033965,
    					0.0000063953,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.0032,
    					0.0048,
    					0.0071,
    					0.0102,
    					0.0146,
    					0.0204,
    					0.0282,
    					0.0382,
    					0.051,
    					0.067,
    					0.0865,
    					0.1101,
    					0.1379,
    					0.1702,
    					0.207,
    					0.2481,
    					0.2932,
    					0.3418,
    					0.3932,
    					0.4464,
    					0.5007,
    					0.5549,
    					0.6082,
    					0.6595,
    					0.7079,
    					0.753,
    					0.794,
    					0.8306,
    					0.8628,
    					0.8906,
    					0.914,
    					0.9335,
    					0.9494,
    					0.9621,
    					0.972,
    					0.9797,
    					0.9855,
    					0.9899,
    					0.993,
    					0.9953,
    					0.9968,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.0175,
    				"std.error": 0.7033,
    				statistic: -1.4468,
    				"p.value": 0.1496,
    				"conf.low": -2.4048,
    				"conf.high": 0.3698,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.6698e-18,
    					6.3128e-18,
    					2.3327e-17,
    					8.4246e-17,
    					2.9739e-16,
    					1.026e-15,
    					3.4602e-15,
    					1.1406e-14,
    					3.6747e-14,
    					1.1573e-13,
    					3.5624e-13,
    					1.0719e-12,
    					3.153e-12,
    					9.0654e-12,
    					2.548e-11,
    					7.0007e-11,
    					1.8803e-10,
    					4.9373e-10,
    					1.2674e-9,
    					3.1807e-9,
    					7.8041e-9,
    					1.8721e-8,
    					4.3908e-8,
    					1.0069e-7,
    					2.2578e-7,
    					4.9504e-7,
    					0.0000010614,
    					0.0000022253,
    					0.0000045628,
    					0.0000091497,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0018,
    					0.0029,
    					0.0045,
    					0.007,
    					0.0106,
    					0.0156,
    					0.0227,
    					0.0322,
    					0.0449,
    					0.0612,
    					0.0819,
    					0.1075,
    					0.1383,
    					0.1747,
    					0.2167,
    					0.2639,
    					0.316,
    					0.3719,
    					0.4307,
    					0.4911,
    					0.5517,
    					0.6111,
    					0.668,
    					0.7213,
    					0.77,
    					0.8135,
    					0.8516,
    					0.8841,
    					0.9111,
    					0.9332,
    					0.9508,
    					0.9644,
    					0.9748,
    					0.9825,
    					0.9881,
    					0.9921,
    					0.9948,
    					0.9967,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9996,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.1122,
    				"std.error": 0.9225,
    				statistic: 2.2895,
    				"p.value": 0.0232,
    				"conf.low": 0.2924,
    				"conf.high": 3.932,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					7.9484e-15,
    					2.4494e-14,
    					7.3927e-14,
    					2.1852e-13,
    					6.3264e-13,
    					1.7938e-12,
    					4.9817e-12,
    					1.3551e-11,
    					3.6102e-11,
    					9.4209e-11,
    					2.408e-10,
    					6.0289e-10,
    					1.4785e-9,
    					3.5519e-9,
    					8.3585e-9,
    					1.9268e-8,
    					4.3513e-8,
    					9.6266e-8,
    					2.0865e-7,
    					4.4304e-7,
    					9.2171e-7,
    					0.0000018788,
    					0.0000037523,
    					0.0000073432,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.002,
    					0.0031,
    					0.0048,
    					0.0073,
    					0.0108,
    					0.0158,
    					0.0225,
    					0.0315,
    					0.0433,
    					0.0584,
    					0.0774,
    					0.1007,
    					0.1288,
    					0.1619,
    					0.2002,
    					0.2434,
    					0.2911,
    					0.3429,
    					0.3978,
    					0.4548,
    					0.5128,
    					0.5704,
    					0.6267,
    					0.6803,
    					0.7304,
    					0.7762,
    					0.8173,
    					0.8533,
    					0.8842,
    					0.9101,
    					0.9315,
    					0.9487,
    					0.9623,
    					0.9728,
    					0.9807,
    					0.9866,
    					0.9909,
    					0.9939,
    					0.996,
    					0.9974,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 112,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.1742,
    				"std.error": 0.4434,
    				statistic: 13.9243,
    				"p.value": 7.047e-32,
    				"conf.low": 5.3002,
    				"conf.high": 7.0481,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.4568e-11,
    					1.363e-10,
    					3.3398e-10,
    					8.0279e-10,
    					1.8931e-9,
    					4.3795e-9,
    					9.9395e-9,
    					2.2132e-8,
    					4.8348e-8,
    					1.0362e-7,
    					2.1791e-7,
    					4.4963e-7,
    					9.1031e-7,
    					0.0000018084,
    					0.0000035253,
    					0.0000067437,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0025,
    					0.0038,
    					0.0057,
    					0.0084,
    					0.0122,
    					0.0174,
    					0.0244,
    					0.0336,
    					0.0455,
    					0.0606,
    					0.0793,
    					0.1021,
    					0.1293,
    					0.1612,
    					0.1979,
    					0.2391,
    					0.2847,
    					0.334,
    					0.3864,
    					0.4409,
    					0.4966,
    					0.5523,
    					0.6071,
    					0.6597,
    					0.7095,
    					0.7555,
    					0.7973,
    					0.8345,
    					0.867,
    					0.8948,
    					0.9181,
    					0.9373,
    					0.9528,
    					0.9651,
    					0.9746,
    					0.9818,
    					0.9872,
    					0.9912,
    					0.994,
    					0.996,
    					0.9974,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.4165,
    				"std.error": 0.6068,
    				statistic: -2.3344,
    				"p.value": 0.0205,
    				"conf.low": -2.6125,
    				"conf.high": -0.2205,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.5396e-9,
    					7.6037e-9,
    					1.6068e-8,
    					3.3404e-8,
    					6.8316e-8,
    					1.3745e-7,
    					2.7206e-7,
    					5.298e-7,
    					0.000001015,
    					0.0000019134,
    					0.0000035487,
    					0.0000064759,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0025,
    					0.0038,
    					0.0055,
    					0.0079,
    					0.0112,
    					0.0156,
    					0.0215,
    					0.0291,
    					0.0388,
    					0.0511,
    					0.0662,
    					0.0846,
    					0.1066,
    					0.1324,
    					0.1622,
    					0.1961,
    					0.234,
    					0.2756,
    					0.3206,
    					0.3684,
    					0.4182,
    					0.4695,
    					0.5212,
    					0.5726,
    					0.6228,
    					0.671,
    					0.7165,
    					0.7588,
    					0.7974,
    					0.832,
    					0.8626,
    					0.8891,
    					0.9117,
    					0.9307,
    					0.9464,
    					0.9592,
    					0.9693,
    					0.9773,
    					0.9834,
    					0.9881,
    					0.9916,
    					0.9941,
    					0.996,
    					0.9973,
    					0.9982,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8512,
    				"std.error": 0.5886,
    				statistic: -1.4461,
    				"p.value": 0.1496,
    				"conf.low": -2.0112,
    				"conf.high": 0.3089,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.5044e-27,
    					4.5374e-26,
    					3.0631e-25,
    					2.0012e-24,
    					1.2652e-23,
    					7.7413e-23,
    					4.5839e-22,
    					2.6269e-21,
    					1.4569e-20,
    					7.8198e-20,
    					4.0622e-19,
    					2.0424e-18,
    					9.9384e-18,
    					4.6807e-17,
    					2.1337e-16,
    					9.414e-16,
    					4.0203e-15,
    					1.6619e-14,
    					6.6496e-14,
    					2.5755e-13,
    					9.6561e-13,
    					3.5046e-12,
    					1.2313e-11,
    					4.1882e-11,
    					1.3792e-10,
    					4.3969e-10,
    					1.3572e-9,
    					4.0562e-9,
    					1.1738e-8,
    					3.2892e-8,
    					8.9256e-8,
    					2.3456e-7,
    					5.9698e-7,
    					0.0000014716,
    					0.0000035138,
    					0.0000081275,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0021,
    					0.0037,
    					0.0064,
    					0.0104,
    					0.0167,
    					0.0258,
    					0.0388,
    					0.0568,
    					0.0807,
    					0.1115,
    					0.1499,
    					0.1963,
    					0.2504,
    					0.3116,
    					0.3785,
    					0.4493,
    					0.5217,
    					0.5934,
    					0.6621,
    					0.7258,
    					0.7829,
    					0.8325,
    					0.8741,
    					0.9079,
    					0.9344,
    					0.9546,
    					0.9695,
    					0.9801,
    					0.9874,
    					0.9922,
    					0.9954,
    					0.9973,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5502,
    				"std.error": 0.8323,
    				statistic: 1.8625,
    				"p.value": 0.0639,
    				"conf.low": -0.0903,
    				"conf.high": 3.1907,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.3015e-15,
    					8.205e-15,
    					2.8511e-14,
    					9.657e-14,
    					3.1883e-13,
    					1.0261e-12,
    					3.2188e-12,
    					9.8432e-12,
    					2.9343e-11,
    					8.5272e-11,
    					2.4157e-10,
    					6.672e-10,
    					1.7965e-9,
    					4.7161e-9,
    					1.2071e-8,
    					3.0123e-8,
    					7.3297e-8,
    					1.7391e-7,
    					4.0236e-7,
    					9.0779e-7,
    					0.0000019974,
    					0.0000042861,
    					0.0000089703,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0023,
    					0.0037,
    					0.006,
    					0.0093,
    					0.0142,
    					0.0211,
    					0.0308,
    					0.0438,
    					0.0609,
    					0.0829,
    					0.1103,
    					0.1438,
    					0.1835,
    					0.2294,
    					0.2811,
    					0.3379,
    					0.3986,
    					0.4619,
    					0.5261,
    					0.5897,
    					0.651,
    					0.7086,
    					0.7614,
    					0.8084,
    					0.8493,
    					0.8839,
    					0.9124,
    					0.9354,
    					0.9534,
    					0.9671,
    					0.9773,
    					0.9847,
    					0.9899,
    					0.9935,
    					0.9959,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 113,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.6545,
    				"std.error": 0.3445,
    				statistic: 16.4134,
    				"p.value": 7.6341e-40,
    				"conf.low": 4.9755,
    				"conf.high": 6.3335,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.3007e-12,
    					1.8235e-11,
    					6.0762e-11,
    					1.9613e-10,
    					6.1324e-10,
    					1.8575e-9,
    					5.4508e-9,
    					1.5496e-8,
    					4.2685e-8,
    					1.1392e-7,
    					2.946e-7,
    					7.3827e-7,
    					0.0000017929,
    					0.0000042199,
    					0.0000096268,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0023,
    					0.004,
    					0.0068,
    					0.011,
    					0.0175,
    					0.0269,
    					0.0402,
    					0.0584,
    					0.0826,
    					0.1136,
    					0.1521,
    					0.1985,
    					0.2525,
    					0.3134,
    					0.3798,
    					0.45,
    					0.5218,
    					0.5929,
    					0.6611,
    					0.7243,
    					0.7811,
    					0.8306,
    					0.8722,
    					0.9061,
    					0.9329,
    					0.9533,
    					0.9684,
    					0.9792,
    					0.9867,
    					0.9918,
    					0.9951,
    					0.9971,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.841,
    				"std.error": 0.4953,
    				statistic: -1.6982,
    				"p.value": 0.0909,
    				"conf.low": -1.8172,
    				"conf.high": 0.1351,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					7.6066e-17,
    					2.8456e-16,
    					1.0383e-15,
    					3.6952e-15,
    					1.2827e-14,
    					4.3433e-14,
    					1.4344e-13,
    					4.6212e-13,
    					1.4522e-12,
    					4.4515e-12,
    					1.3311e-11,
    					3.8829e-11,
    					1.1049e-10,
    					3.0673e-10,
    					8.3069e-10,
    					2.1948e-9,
    					5.6578e-9,
    					1.423e-8,
    					3.4918e-8,
    					8.3605e-8,
    					1.9533e-7,
    					4.453e-7,
    					9.9066e-7,
    					0.0000021508,
    					0.0000045572,
    					0.0000094241,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0022,
    					0.0036,
    					0.0057,
    					0.0089,
    					0.0135,
    					0.0201,
    					0.0292,
    					0.0415,
    					0.0577,
    					0.0786,
    					0.1046,
    					0.1364,
    					0.1742,
    					0.2181,
    					0.2678,
    					0.3226,
    					0.3816,
    					0.4434,
    					0.5067,
    					0.5698,
    					0.6311,
    					0.6893,
    					0.7431,
    					0.7916,
    					0.8343,
    					0.8708,
    					0.9013,
    					0.9262,
    					0.946,
    					0.9613,
    					0.9729,
    					0.9814,
    					0.9876,
    					0.9919,
    					0.9948,
    					0.9967,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: 0.131,
    				"std.error": 0.6519,
    				statistic: 0.2009,
    				"p.value": 0.8409,
    				"conf.low": -1.1539,
    				"conf.high": 1.4159,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.7184e-29,
    					2.3219e-28,
    					1.4116e-27,
    					8.3552e-27,
    					4.8149e-26,
    					2.7015e-25,
    					1.4758e-24,
    					7.8493e-24,
    					4.0648e-23,
    					2.0495e-22,
    					1.0061e-21,
    					4.8093e-21,
    					2.2383e-20,
    					1.0143e-19,
    					4.4755e-19,
    					1.9228e-18,
    					8.044e-18,
    					3.2767e-17,
    					1.2997e-16,
    					5.02e-16,
    					1.8881e-15,
    					6.915e-15,
    					2.4662e-14,
    					8.5654e-14,
    					2.897e-13,
    					9.5418e-13,
    					3.0607e-12,
    					9.5611e-12,
    					2.9089e-11,
    					8.6191e-11,
    					2.4874e-10,
    					6.9915e-10,
    					1.9141e-9,
    					5.1043e-9,
    					1.3259e-8,
    					3.3548e-8,
    					8.2693e-8,
    					1.9857e-7,
    					4.6452e-7,
    					0.0000010587,
    					0.0000023511,
    					0.0000050873,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0017,
    					0.0028,
    					0.0046,
    					0.0073,
    					0.0113,
    					0.0172,
    					0.0256,
    					0.0371,
    					0.0524,
    					0.0725,
    					0.098,
    					0.1295,
    					0.1673,
    					0.2117,
    					0.2623,
    					0.3184,
    					0.3791,
    					0.4429,
    					0.5082,
    					0.5733,
    					0.6365,
    					0.6961,
    					0.751,
    					0.8,
    					0.8428,
    					0.879,
    					0.909,
    					0.933,
    					0.9518,
    					0.9662,
    					0.9768,
    					0.9844,
    					0.9898,
    					0.9935,
    					0.996,
    					0.9975,
    					0.9985,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.8003,
    				"std.error": 0.9115,
    				statistic: 0.878,
    				"p.value": 0.3809,
    				"conf.low": -0.9963,
    				"conf.high": 2.5968,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.1954e-10,
    					3.0737e-10,
    					7.7379e-10,
    					1.9071e-9,
    					4.6021e-9,
    					1.0873e-8,
    					2.5153e-8,
    					5.6972e-8,
    					1.2636e-7,
    					2.7442e-7,
    					5.8359e-7,
    					0.0000012154,
    					0.0000024788,
    					0.000004951,
    					0.0000096852,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0026,
    					0.004,
    					0.0061,
    					0.0092,
    					0.0135,
    					0.0196,
    					0.0277,
    					0.0385,
    					0.0525,
    					0.0703,
    					0.0923,
    					0.1191,
    					0.151,
    					0.1882,
    					0.2304,
    					0.2775,
    					0.3289,
    					0.3838,
    					0.441,
    					0.4996,
    					0.5581,
    					0.6154,
    					0.6703,
    					0.7217,
    					0.7689,
    					0.8113,
    					0.8485,
    					0.8804,
    					0.9073,
    					0.9294,
    					0.9473,
    					0.9613,
    					0.9722,
    					0.9803,
    					0.9864,
    					0.9907,
    					0.9938,
    					0.996,
    					0.9974,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 114,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.1742,
    				"std.error": 0.4452,
    				statistic: 13.8679,
    				"p.value": 1.9584e-29,
    				"conf.low": 5.2951,
    				"conf.high": 7.0533,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					6.4815e-11,
    					1.6073e-10,
    					3.9106e-10,
    					9.3353e-10,
    					2.1865e-9,
    					5.0251e-9,
    					1.1332e-8,
    					2.5073e-8,
    					5.4439e-8,
    					1.1599e-7,
    					2.425e-7,
    					4.9753e-7,
    					0.0000010018,
    					0.0000019795,
    					0.0000038389,
    					0.0000073068,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0026,
    					0.0039,
    					0.0059,
    					0.0086,
    					0.0125,
    					0.0178,
    					0.0249,
    					0.0342,
    					0.0462,
    					0.0614,
    					0.0802,
    					0.103,
    					0.1303,
    					0.1622,
    					0.1988,
    					0.24,
    					0.2855,
    					0.3346,
    					0.3868,
    					0.4411,
    					0.4966,
    					0.5521,
    					0.6066,
    					0.6591,
    					0.7087,
    					0.7546,
    					0.7964,
    					0.8335,
    					0.866,
    					0.8939,
    					0.9173,
    					0.9366,
    					0.9521,
    					0.9645,
    					0.9741,
    					0.9814,
    					0.9869,
    					0.991,
    					0.9938,
    					0.9959,
    					0.9973,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.4165,
    				"std.error": 0.6093,
    				statistic: -2.325,
    				"p.value": 0.0213,
    				"conf.low": -2.6195,
    				"conf.high": -0.2135,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.0682e-9,
    					8.6868e-9,
    					1.825e-8,
    					3.7722e-8,
    					7.6715e-8,
    					1.5351e-7,
    					3.0223e-7,
    					5.8549e-7,
    					0.0000011161,
    					0.0000020935,
    					0.0000038642,
    					0.0000070189,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0026,
    					0.0039,
    					0.0057,
    					0.0081,
    					0.0115,
    					0.016,
    					0.0219,
    					0.0296,
    					0.0394,
    					0.0518,
    					0.067,
    					0.0855,
    					0.1075,
    					0.1334,
    					0.1632,
    					0.1971,
    					0.2349,
    					0.2764,
    					0.3213,
    					0.3689,
    					0.4186,
    					0.4696,
    					0.5212,
    					0.5723,
    					0.6223,
    					0.6704,
    					0.7158,
    					0.7579,
    					0.7964,
    					0.831,
    					0.8616,
    					0.8882,
    					0.9109,
    					0.9299,
    					0.9457,
    					0.9585,
    					0.9688,
    					0.9768,
    					0.9831,
    					0.9878,
    					0.9914,
    					0.994,
    					0.9958,
    					0.9972,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.3887,
    				"std.error": 0.7107,
    				statistic: -0.5469,
    				"p.value": 0.5852,
    				"conf.low": -1.792,
    				"conf.high": 1.0147,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.1243e-21,
    					4.7182e-21,
    					1.936e-20,
    					7.7675e-20,
    					3.0474e-19,
    					1.169e-18,
    					4.3852e-18,
    					1.6085e-17,
    					5.7696e-17,
    					2.0236e-16,
    					6.9408e-16,
    					2.3279e-15,
    					7.6352e-15,
    					2.4489e-14,
    					7.6812e-14,
    					2.3561e-13,
    					7.0676e-13,
    					2.0734e-12,
    					5.9485e-12,
    					1.6691e-11,
    					4.5802e-11,
    					1.2293e-10,
    					3.2268e-10,
    					8.2846e-10,
    					2.0804e-9,
    					5.1099e-9,
    					1.2277e-8,
    					2.8852e-8,
    					6.6326e-8,
    					1.4915e-7,
    					3.2813e-7,
    					7.0618e-7,
    					0.0000014869,
    					0.0000030631,
    					0.0000061738,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0033,
    					0.0052,
    					0.0079,
    					0.0118,
    					0.0173,
    					0.0249,
    					0.0351,
    					0.0485,
    					0.0656,
    					0.0871,
    					0.1135,
    					0.1451,
    					0.1822,
    					0.2248,
    					0.2724,
    					0.3246,
    					0.3804,
    					0.4389,
    					0.4988,
    					0.5587,
    					0.6172,
    					0.6732,
    					0.7256,
    					0.7734,
    					0.8161,
    					0.8535,
    					0.8853,
    					0.9119,
    					0.9336,
    					0.9509,
    					0.9644,
    					0.9747,
    					0.9824,
    					0.988,
    					0.992,
    					0.9947,
    					0.9966,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3758,
    				"std.error": 0.9787,
    				statistic: 1.4056,
    				"p.value": 0.1617,
    				"conf.low": -0.5568,
    				"conf.high": 3.3083,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.3884e-11,
    					1.0801e-10,
    					2.6101e-10,
    					6.1923e-10,
    					1.4424e-9,
    					3.2985e-9,
    					7.4064e-9,
    					1.6328e-8,
    					3.5345e-8,
    					7.5125e-8,
    					1.5679e-7,
    					3.2132e-7,
    					6.4663e-7,
    					0.0000012779,
    					0.00000248,
    					0.0000047265,
    					0.0000088469,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0027,
    					0.0041,
    					0.0061,
    					0.0088,
    					0.0127,
    					0.018,
    					0.025,
    					0.0341,
    					0.0459,
    					0.0607,
    					0.079,
    					0.1012,
    					0.1276,
    					0.1585,
    					0.194,
    					0.2339,
    					0.2779,
    					0.3257,
    					0.3765,
    					0.4296,
    					0.4839,
    					0.5386,
    					0.5925,
    					0.6447,
    					0.6944,
    					0.7407,
    					0.7831,
    					0.8211,
    					0.8547,
    					0.8838,
    					0.9084,
    					0.929,
    					0.9458,
    					0.9593,
    					0.9699,
    					0.9782,
    					0.9844,
    					0.989,
    					0.9924,
    					0.9949,
    					0.9966,
    					0.9977,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 115,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.0103,
    				"std.error": 0.5259,
    				statistic: 11.4285,
    				"p.value": 4.4017e-26,
    				"conf.low": 4.9761,
    				"conf.high": 7.0445,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.4505e-7,
    					2.6985e-7,
    					4.953e-7,
    					8.9691e-7,
    					0.0000016024,
    					0.0000028248,
    					0.0000049131,
    					0.0000084314,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.002,
    					0.0028,
    					0.004,
    					0.0057,
    					0.0079,
    					0.0109,
    					0.0148,
    					0.0198,
    					0.0262,
    					0.0342,
    					0.0442,
    					0.0564,
    					0.0711,
    					0.0886,
    					0.1091,
    					0.1328,
    					0.1598,
    					0.1903,
    					0.224,
    					0.2609,
    					0.3006,
    					0.3429,
    					0.3873,
    					0.4332,
    					0.48,
    					0.5271,
    					0.5739,
    					0.6196,
    					0.6637,
    					0.7056,
    					0.745,
    					0.7814,
    					0.8146,
    					0.8445,
    					0.871,
    					0.8942,
    					0.9143,
    					0.9313,
    					0.9456,
    					0.9575,
    					0.9671,
    					0.9749,
    					0.9811,
    					0.9859,
    					0.9896,
    					0.9925,
    					0.9946,
    					0.9962,
    					0.9973,
    					0.9982,
    					0.9987,
    					0.9992,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3313,
    				"std.error": 0.5871,
    				statistic: -0.5643,
    				"p.value": 0.5729,
    				"conf.low": -1.4859,
    				"conf.high": 0.8232,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.4138e-15,
    					6.9569e-15,
    					1.9699e-14,
    					5.4798e-14,
    					1.4976e-13,
    					4.0211e-13,
    					1.0607e-12,
    					2.7492e-12,
    					7.0003e-12,
    					1.7513e-11,
    					4.3049e-11,
    					1.0397e-10,
    					2.467e-10,
    					5.752e-10,
    					1.3177e-9,
    					2.9662e-9,
    					6.5608e-9,
    					1.4259e-8,
    					3.0454e-8,
    					6.3912e-8,
    					1.3181e-7,
    					2.6713e-7,
    					5.3203e-7,
    					0.0000010414,
    					0.0000020032,
    					0.0000037873,
    					0.0000070374,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0013,
    					0.0021,
    					0.0031,
    					0.0047,
    					0.0069,
    					0.0099,
    					0.0141,
    					0.0196,
    					0.027,
    					0.0365,
    					0.0485,
    					0.0636,
    					0.0821,
    					0.1045,
    					0.1308,
    					0.1615,
    					0.1965,
    					0.2358,
    					0.279,
    					0.3258,
    					0.3755,
    					0.4273,
    					0.4805,
    					0.5339,
    					0.5868,
    					0.6382,
    					0.6871,
    					0.733,
    					0.7752,
    					0.8133,
    					0.8472,
    					0.8767,
    					0.902,
    					0.9232,
    					0.9408,
    					0.955,
    					0.9663,
    					0.9752,
    					0.982,
    					0.9872,
    					0.991,
    					0.9938,
    					0.9958,
    					0.9972,
    					0.9982,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.2952,
    				"std.error": 0.6845,
    				statistic: -1.8923,
    				"p.value": 0.0592,
    				"conf.low": -2.6411,
    				"conf.high": 0.0508,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					7.1543e-18,
    					2.7333e-17,
    					1.0193e-16,
    					3.7108e-16,
    					1.3187e-15,
    					4.5746e-15,
    					1.5491e-14,
    					5.1213e-14,
    					1.6528e-13,
    					5.2073e-13,
    					1.6016e-12,
    					4.8094e-12,
    					1.4099e-11,
    					4.0354e-11,
    					1.1277e-10,
    					3.0767e-10,
    					8.1958e-10,
    					2.1317e-9,
    					5.414e-9,
    					1.3426e-8,
    					3.2513e-8,
    					7.6884e-8,
    					1.7755e-7,
    					4.0041e-7,
    					8.819e-7,
    					0.0000018971,
    					0.0000039859,
    					0.0000081801,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0019,
    					0.003,
    					0.0048,
    					0.0075,
    					0.0114,
    					0.017,
    					0.0248,
    					0.0354,
    					0.0494,
    					0.0676,
    					0.0905,
    					0.1187,
    					0.1527,
    					0.1926,
    					0.2382,
    					0.2892,
    					0.3448,
    					0.4041,
    					0.4656,
    					0.5279,
    					0.5895,
    					0.6491,
    					0.7051,
    					0.7567,
    					0.8029,
    					0.8434,
    					0.878,
    					0.9068,
    					0.9302,
    					0.9489,
    					0.9633,
    					0.9742,
    					0.9823,
    					0.9881,
    					0.9922,
    					0.995,
    					0.9968,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.0292,
    				"std.error": 0.7742,
    				statistic: 1.3295,
    				"p.value": 0.1845,
    				"conf.low": -0.4931,
    				"conf.high": 2.5515,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.4789e-15,
    					1.7299e-14,
    					6.4869e-14,
    					2.3616e-13,
    					8.3471e-13,
    					2.8645e-12,
    					9.5442e-12,
    					3.0877e-11,
    					9.6993e-11,
    					2.9585e-10,
    					8.7627e-10,
    					2.5203e-9,
    					7.0396e-9,
    					1.9095e-8,
    					5.0304e-8,
    					1.2871e-7,
    					3.1987e-7,
    					7.7215e-7,
    					0.0000018106,
    					0.0000041246,
    					0.0000091282,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0032,
    					0.0054,
    					0.0087,
    					0.0137,
    					0.0211,
    					0.0316,
    					0.0461,
    					0.0654,
    					0.0905,
    					0.1222,
    					0.1609,
    					0.2069,
    					0.2599,
    					0.319,
    					0.3832,
    					0.4508,
    					0.5199,
    					0.5883,
    					0.6542,
    					0.7157,
    					0.7714,
    					0.8204,
    					0.8622,
    					0.8968,
    					0.9246,
    					0.9463,
    					0.9628,
    					0.9748,
    					0.9834,
    					0.9894,
    					0.9934,
    					0.996,
    					0.9976,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 116,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.4017,
    				"std.error": 0.4004,
    				statistic: 13.4909,
    				"p.value": 5.7644e-34,
    				"conf.low": 4.6143,
    				"conf.high": 6.1891,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					9.0542e-8,
    					2.0678e-7,
    					4.6135e-7,
    					0.0000010057,
    					0.0000021419,
    					0.0000044572,
    					0.0000090636,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.0031,
    					0.0049,
    					0.0077,
    					0.0116,
    					0.0172,
    					0.025,
    					0.0356,
    					0.0496,
    					0.0676,
    					0.0903,
    					0.1183,
    					0.1519,
    					0.1913,
    					0.2364,
    					0.2868,
    					0.3418,
    					0.4003,
    					0.4612,
    					0.523,
    					0.5843,
    					0.6436,
    					0.6996,
    					0.7513,
    					0.7978,
    					0.8386,
    					0.8737,
    					0.903,
    					0.9271,
    					0.9462,
    					0.9612,
    					0.9726,
    					0.981,
    					0.9871,
    					0.9915,
    					0.9945,
    					0.9965,
    					0.9978,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: 0.0087,
    				"std.error": 0.4527,
    				statistic: 0.0193,
    				"p.value": 0.9846,
    				"conf.low": -0.8815,
    				"conf.high": 0.8989,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.2741e-28,
    					3.5224e-27,
    					2.283e-26,
    					1.4359e-25,
    					8.7638e-25,
    					5.1908e-24,
    					2.9837e-23,
    					1.6643e-22,
    					9.0098e-22,
    					4.7334e-21,
    					2.4133e-20,
    					1.1941e-19,
    					5.7344e-19,
    					2.6726e-18,
    					1.2089e-17,
    					5.3071e-17,
    					2.2613e-16,
    					9.3514e-16,
    					3.7535e-15,
    					1.4624e-14,
    					5.5299e-14,
    					2.0298e-13,
    					7.2318e-13,
    					2.5011e-12,
    					8.3967e-12,
    					2.7365e-11,
    					8.6575e-11,
    					2.659e-10,
    					7.9287e-10,
    					2.2953e-9,
    					6.4514e-9,
    					1.7606e-8,
    					4.6653e-8,
    					1.2004e-7,
    					2.9995e-7,
    					7.2783e-7,
    					0.0000017152,
    					0.000003926,
    					0.0000087285,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0018,
    					0.0032,
    					0.0053,
    					0.0086,
    					0.0137,
    					0.021,
    					0.0315,
    					0.046,
    					0.0654,
    					0.0907,
    					0.1225,
    					0.1614,
    					0.2076,
    					0.2609,
    					0.3204,
    					0.3849,
    					0.4528,
    					0.5221,
    					0.5907,
    					0.6567,
    					0.7182,
    					0.7738,
    					0.8227,
    					0.8642,
    					0.8986,
    					0.9261,
    					0.9476,
    					0.9637,
    					0.9756,
    					0.984,
    					0.9898,
    					0.9936,
    					0.9962,
    					0.9977,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.5396,
    				"std.error": 0.7446,
    				statistic: -0.7247,
    				"p.value": 0.4691,
    				"conf.low": -2.0038,
    				"conf.high": 0.9246,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.0652e-19,
    					1.461e-18,
    					5.1446e-18,
    					1.775e-17,
    					6.0001e-17,
    					1.9874e-16,
    					6.4498e-16,
    					2.051e-15,
    					6.3905e-15,
    					1.951e-14,
    					5.8366e-14,
    					1.7109e-13,
    					4.9144e-13,
    					1.3832e-12,
    					3.815e-12,
    					1.0311e-11,
    					2.7309e-11,
    					7.0877e-11,
    					1.8027e-10,
    					4.4934e-10,
    					1.0976e-9,
    					2.6276e-9,
    					6.1648e-9,
    					1.4175e-8,
    					3.1946e-8,
    					7.0565e-8,
    					1.5277e-7,
    					3.242e-7,
    					6.7435e-7,
    					0.000001375,
    					0.0000027483,
    					0.000005385,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0024,
    					0.0037,
    					0.0057,
    					0.0085,
    					0.0124,
    					0.0178,
    					0.0252,
    					0.0349,
    					0.0475,
    					0.0636,
    					0.0835,
    					0.1079,
    					0.1369,
    					0.1709,
    					0.2099,
    					0.2537,
    					0.3018,
    					0.3537,
    					0.4084,
    					0.465,
    					0.5223,
    					0.5792,
    					0.6344,
    					0.687,
    					0.736,
    					0.7808,
    					0.8209,
    					0.856,
    					0.8861,
    					0.9115,
    					0.9324,
    					0.9492,
    					0.9626,
    					0.9729,
    					0.9807,
    					0.9865,
    					0.9908,
    					0.9938,
    					0.9959,
    					0.9973,
    					0.9983,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.0323,
    				"std.error": 0.8506,
    				statistic: 1.2137,
    				"p.value": 0.2256,
    				"conf.low": -0.6403,
    				"conf.high": 2.705,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					8.31e-13,
    					2.556e-12,
    					7.6718e-12,
    					2.2472e-11,
    					6.4235e-11,
    					1.7919e-10,
    					4.8786e-10,
    					1.2963e-9,
    					3.3617e-9,
    					8.5089e-9,
    					2.1021e-8,
    					5.069e-8,
    					1.1932e-7,
    					2.7415e-7,
    					6.1491e-7,
    					0.0000013465,
    					0.0000028784,
    					0.0000060076,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0026,
    					0.0041,
    					0.0065,
    					0.01,
    					0.0151,
    					0.0222,
    					0.032,
    					0.0451,
    					0.0622,
    					0.084,
    					0.1111,
    					0.1439,
    					0.1827,
    					0.2274,
    					0.2777,
    					0.3329,
    					0.392,
    					0.4538,
    					0.5166,
    					0.5791,
    					0.6396,
    					0.6968,
    					0.7495,
    					0.7969,
    					0.8386,
    					0.8742,
    					0.9039,
    					0.9281,
    					0.9474,
    					0.9623,
    					0.9735,
    					0.9818,
    					0.9878,
    					0.992,
    					0.9949,
    					0.9968,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 117,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.0103,
    				"std.error": 0.5261,
    				statistic: 11.4239,
    				"p.value": 6.8969e-25,
    				"conf.low": 4.9744,
    				"conf.high": 7.0461,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.4666e-7,
    					2.7271e-7,
    					5.003e-7,
    					9.0554e-7,
    					0.0000016171,
    					0.0000028494,
    					0.0000049538,
    					0.0000084978,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.002,
    					0.0028,
    					0.004,
    					0.0057,
    					0.0079,
    					0.0109,
    					0.0148,
    					0.0198,
    					0.0262,
    					0.0343,
    					0.0443,
    					0.0565,
    					0.0712,
    					0.0887,
    					0.1092,
    					0.1329,
    					0.1599,
    					0.1903,
    					0.2241,
    					0.2609,
    					0.3007,
    					0.343,
    					0.3874,
    					0.4333,
    					0.4801,
    					0.5271,
    					0.5738,
    					0.6195,
    					0.6636,
    					0.7055,
    					0.7449,
    					0.7813,
    					0.8145,
    					0.8444,
    					0.8709,
    					0.8942,
    					0.9142,
    					0.9312,
    					0.9456,
    					0.9574,
    					0.9671,
    					0.9749,
    					0.981,
    					0.9859,
    					0.9896,
    					0.9924,
    					0.9946,
    					0.9962,
    					0.9973,
    					0.9981,
    					0.9987,
    					0.9992,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3313,
    				"std.error": 0.5874,
    				statistic: -0.5641,
    				"p.value": 0.5732,
    				"conf.low": -1.4877,
    				"conf.high": 0.8251,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.4753e-15,
    					7.1281e-15,
    					2.0167e-14,
    					5.6054e-14,
    					1.5307e-13,
    					4.1068e-13,
    					1.0825e-12,
    					2.8035e-12,
    					7.1334e-12,
    					1.7833e-11,
    					4.3804e-11,
    					1.0572e-10,
    					2.5069e-10,
    					5.8409e-10,
    					1.3372e-9,
    					3.0082e-9,
    					6.6495e-9,
    					1.4443e-8,
    					3.0828e-8,
    					6.466e-8,
    					1.3328e-7,
    					2.6996e-7,
    					5.3737e-7,
    					0.0000010513,
    					0.0000020212,
    					0.0000038195,
    					0.0000070938,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.0032,
    					0.0047,
    					0.0069,
    					0.0099,
    					0.0141,
    					0.0197,
    					0.027,
    					0.0365,
    					0.0486,
    					0.0637,
    					0.0822,
    					0.1045,
    					0.1309,
    					0.1616,
    					0.1966,
    					0.2359,
    					0.2791,
    					0.3259,
    					0.3755,
    					0.4274,
    					0.4805,
    					0.5339,
    					0.5868,
    					0.6381,
    					0.6871,
    					0.7329,
    					0.7751,
    					0.8132,
    					0.8471,
    					0.8766,
    					0.9019,
    					0.9231,
    					0.9407,
    					0.9549,
    					0.9663,
    					0.9752,
    					0.982,
    					0.9872,
    					0.991,
    					0.9938,
    					0.9958,
    					0.9972,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.1482,
    				"std.error": 0.8179,
    				statistic: -1.4039,
    				"p.value": 0.1615,
    				"conf.low": -2.7585,
    				"conf.high": 0.4621,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.2363e-13,
    					3.2518e-13,
    					8.41e-13,
    					2.1388e-12,
    					5.3484e-12,
    					1.3152e-11,
    					3.1802e-11,
    					7.5622e-11,
    					1.7683e-10,
    					4.0661e-10,
    					9.1946e-10,
    					2.0447e-9,
    					4.4716e-9,
    					9.6174e-9,
    					2.0343e-8,
    					4.2318e-8,
    					8.6579e-8,
    					1.7422e-7,
    					3.448e-7,
    					6.7118e-7,
    					0.0000012851,
    					0.0000024202,
    					0.0000044835,
    					0.0000081702,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.0021,
    					0.0031,
    					0.0046,
    					0.0066,
    					0.0095,
    					0.0134,
    					0.0186,
    					0.0254,
    					0.0342,
    					0.0453,
    					0.0593,
    					0.0763,
    					0.0969,
    					0.1213,
    					0.1498,
    					0.1823,
    					0.219,
    					0.2595,
    					0.3037,
    					0.3509,
    					0.4005,
    					0.4518,
    					0.5039,
    					0.5559,
    					0.607,
    					0.6563,
    					0.7031,
    					0.7467,
    					0.7867,
    					0.8228,
    					0.8547,
    					0.8825,
    					0.9064,
    					0.9264,
    					0.943,
    					0.9565,
    					0.9673,
    					0.9758,
    					0.9823,
    					0.9873,
    					0.991,
    					0.9937,
    					0.9957,
    					0.9971,
    					0.9981,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3724,
    				"std.error": 0.9279,
    				statistic: 1.4791,
    				"p.value": 0.1403,
    				"conf.low": -0.4545,
    				"conf.high": 3.1992,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.9986e-12,
    					1.0863e-11,
    					2.8913e-11,
    					7.5393e-11,
    					1.9261e-10,
    					4.8209e-10,
    					1.1822e-9,
    					2.8406e-9,
    					6.6872e-9,
    					1.5426e-8,
    					3.4865e-8,
    					7.7219e-8,
    					1.6758e-7,
    					3.564e-7,
    					7.4278e-7,
    					0.0000015171,
    					0.0000030367,
    					0.0000059572,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0027,
    					0.0041,
    					0.0062,
    					0.0093,
    					0.0136,
    					0.0195,
    					0.0274,
    					0.0379,
    					0.0515,
    					0.0687,
    					0.09,
    					0.1158,
    					0.1465,
    					0.1822,
    					0.2229,
    					0.2684,
    					0.3181,
    					0.3713,
    					0.4272,
    					0.4845,
    					0.5421,
    					0.5989,
    					0.6536,
    					0.7053,
    					0.7531,
    					0.7965,
    					0.8349,
    					0.8683,
    					0.8967,
    					0.9204,
    					0.9397,
    					0.9552,
    					0.9672,
    					0.9765,
    					0.9835,
    					0.9886,
    					0.9923,
    					0.9948,
    					0.9966,
    					0.9978,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 118,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.0896,
    				"std.error": 0.4104,
    				statistic: 14.8373,
    				"p.value": 2.4085e-39,
    				"conf.low": 5.2826,
    				"conf.high": 6.8967,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					6.6011e-12,
    					1.8573e-11,
    					5.1099e-11,
    					1.3747e-10,
    					3.6162e-10,
    					9.302e-10,
    					2.3399e-9,
    					5.7558e-9,
    					1.3846e-8,
    					3.2574e-8,
    					7.4946e-8,
    					1.6864e-7,
    					3.7116e-7,
    					7.9898e-7,
    					0.0000016823,
    					0.0000034648,
    					0.0000069808,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0023,
    					0.0037,
    					0.0057,
    					0.0087,
    					0.013,
    					0.019,
    					0.0273,
    					0.0383,
    					0.0526,
    					0.071,
    					0.0939,
    					0.1219,
    					0.1552,
    					0.1941,
    					0.2384,
    					0.2877,
    					0.3413,
    					0.3984,
    					0.4578,
    					0.5181,
    					0.578,
    					0.6361,
    					0.6913,
    					0.7424,
    					0.7888,
    					0.8298,
    					0.8654,
    					0.8955,
    					0.9204,
    					0.9405,
    					0.9564,
    					0.9687,
    					0.9779,
    					0.9848,
    					0.9897,
    					0.9932,
    					0.9956,
    					0.9972,
    					0.9983,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5118,
    				"std.error": 0.4998,
    				statistic: -1.0241,
    				"p.value": 0.3065,
    				"conf.low": -1.4946,
    				"conf.high": 0.471,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.8279e-19,
    					1.9548e-18,
    					7.7227e-18,
    					2.9771e-17,
    					1.1199e-16,
    					4.1105e-16,
    					1.4723e-15,
    					5.1456e-15,
    					1.755e-14,
    					5.8409e-14,
    					1.897e-13,
    					6.0127e-13,
    					1.8598e-12,
    					5.6138e-12,
    					1.6538e-11,
    					4.7546e-11,
    					1.3341e-10,
    					3.6535e-10,
    					9.7655e-10,
    					2.5477e-9,
    					6.4873e-9,
    					1.6124e-8,
    					3.9121e-8,
    					9.2653e-8,
    					2.1421e-7,
    					4.8349e-7,
    					0.0000010654,
    					0.000002292,
    					0.0000048143,
    					0.0000098742,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0022,
    					0.0036,
    					0.0056,
    					0.0087,
    					0.0133,
    					0.0197,
    					0.0285,
    					0.0404,
    					0.0561,
    					0.0763,
    					0.1016,
    					0.1324,
    					0.1692,
    					0.2119,
    					0.2604,
    					0.314,
    					0.3719,
    					0.4328,
    					0.4953,
    					0.558,
    					0.6193,
    					0.6777,
    					0.732,
    					0.7813,
    					0.8249,
    					0.8625,
    					0.8942,
    					0.9203,
    					0.9412,
    					0.9575,
    					0.9699,
    					0.9792,
    					0.9859,
    					0.9907,
    					0.994,
    					0.9962,
    					0.9976,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8922,
    				"std.error": 0.5489,
    				statistic: -1.6253,
    				"p.value": 0.105,
    				"conf.low": -1.9716,
    				"conf.high": 0.1872,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.8272e-30,
    					2.5934e-29,
    					2.2907e-28,
    					1.9485e-27,
    					1.596e-26,
    					1.2589e-25,
    					9.5624e-25,
    					6.9949e-24,
    					4.9275e-23,
    					3.3429e-22,
    					2.1841e-21,
    					1.3742e-20,
    					8.3275e-20,
    					4.8601e-19,
    					2.7318e-18,
    					1.4789e-17,
    					7.7113e-17,
    					3.8727e-16,
    					1.8733e-15,
    					8.7286e-15,
    					3.9175e-14,
    					1.6937e-13,
    					7.0534e-13,
    					2.8298e-12,
    					1.0937e-11,
    					4.0723e-11,
    					1.4609e-10,
    					5.0494e-10,
    					1.6816e-9,
    					5.3963e-9,
    					1.6687e-8,
    					4.9728e-8,
    					1.4282e-7,
    					3.9535e-7,
    					0.0000010549,
    					0.0000027132,
    					0.000006728,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0014,
    					0.0026,
    					0.0047,
    					0.0081,
    					0.0136,
    					0.0221,
    					0.0346,
    					0.0524,
    					0.0768,
    					0.109,
    					0.1499,
    					0.1999,
    					0.2588,
    					0.3257,
    					0.3986,
    					0.4753,
    					0.553,
    					0.6286,
    					0.6996,
    					0.7637,
    					0.8195,
    					0.8661,
    					0.9038,
    					0.933,
    					0.9548,
    					0.9705,
    					0.9814,
    					0.9887,
    					0.9933,
    					0.9962,
    					0.9979,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.5797,
    				"std.error": 0.6755,
    				statistic: 0.8582,
    				"p.value": 0.3914,
    				"conf.low": -0.7487,
    				"conf.high": 1.9081,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.0183e-16,
    					5.2362e-16,
    					2.5898e-15,
    					1.232e-14,
    					5.6376e-14,
    					2.4814e-13,
    					1.0506e-12,
    					4.2792e-12,
    					1.6767e-11,
    					6.3203e-11,
    					2.2921e-10,
    					7.9977e-10,
    					2.6851e-9,
    					8.6743e-9,
    					2.6966e-8,
    					8.0674e-8,
    					2.3228e-7,
    					6.4374e-7,
    					0.0000017173,
    					0.0000044102,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0022,
    					0.004,
    					0.007,
    					0.012,
    					0.0197,
    					0.0314,
    					0.0482,
    					0.0717,
    					0.103,
    					0.1432,
    					0.1929,
    					0.2519,
    					0.3192,
    					0.3931,
    					0.4711,
    					0.5503,
    					0.6274,
    					0.6998,
    					0.765,
    					0.8215,
    					0.8686,
    					0.9064,
    					0.9354,
    					0.9569,
    					0.9722,
    					0.9827,
    					0.9896,
    					0.994,
    					0.9966,
    					0.9982,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 119,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.5451,
    				"std.error": 0.3197,
    				statistic: 17.3451,
    				"p.value": 1.1983e-49,
    				"conf.low": 4.9164,
    				"conf.high": 6.1737,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.4405e-12,
    					5.6426e-12,
    					2.13e-11,
    					7.7481e-11,
    					2.7162e-10,
    					9.1772e-10,
    					2.9884e-9,
    					9.3797e-9,
    					2.8377e-8,
    					8.276e-8,
    					2.3269e-7,
    					6.3073e-7,
    					0.0000016485,
    					0.0000041545,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.001,
    					0.0019,
    					0.0034,
    					0.006,
    					0.0102,
    					0.0168,
    					0.0268,
    					0.0412,
    					0.0615,
    					0.0889,
    					0.1244,
    					0.1688,
    					0.2222,
    					0.2842,
    					0.3534,
    					0.4279,
    					0.505,
    					0.582,
    					0.6559,
    					0.7243,
    					0.7852,
    					0.8375,
    					0.8807,
    					0.9151,
    					0.9415,
    					0.9609,
    					0.9748,
    					0.9842,
    					0.9905,
    					0.9944,
    					0.9969,
    					0.9983,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.2079,
    				"std.error": 0.3945,
    				statistic: -0.527,
    				"p.value": 0.5985,
    				"conf.low": -0.9836,
    				"conf.high": 0.5678,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.5727e-33,
    					2.7996e-32,
    					2.9281e-31,
    					2.9437e-30,
    					2.8445e-29,
    					2.6419e-28,
    					2.3586e-27,
    					2.024e-26,
    					1.6695e-25,
    					1.3237e-24,
    					1.0089e-23,
    					7.3915e-23,
    					5.2056e-22,
    					3.5242e-21,
    					2.2936e-20,
    					1.435e-19,
    					8.6308e-19,
    					4.9904e-18,
    					2.7741e-17,
    					1.4826e-16,
    					7.6178e-16,
    					3.7633e-15,
    					1.7875e-14,
    					8.1634e-14,
    					3.5848e-13,
    					1.5137e-12,
    					6.1462e-12,
    					2.3999e-11,
    					9.0116e-11,
    					3.2544e-10,
    					1.1303e-9,
    					3.7761e-9,
    					1.2134e-8,
    					3.7506e-8,
    					1.1153e-7,
    					3.1907e-7,
    					8.7828e-7,
    					0.0000023263,
    					0.0000059297,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0014,
    					0.0027,
    					0.0049,
    					0.0086,
    					0.0145,
    					0.0237,
    					0.0372,
    					0.0566,
    					0.0831,
    					0.1181,
    					0.1623,
    					0.2161,
    					0.2791,
    					0.3498,
    					0.4262,
    					0.5054,
    					0.5844,
    					0.6602,
    					0.73,
    					0.7917,
    					0.8443,
    					0.8872,
    					0.921,
    					0.9464,
    					0.9649,
    					0.9778,
    					0.9865,
    					0.992,
    					0.9955,
    					0.9975,
    					0.9987,
    					0.9993,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: 0.1711,
    				"std.error": 0.6179,
    				statistic: 0.277,
    				"p.value": 0.782,
    				"conf.low": -1.0439,
    				"conf.high": 1.3861,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.4406e-32,
    					1.1174e-31,
    					8.4126e-31,
    					6.1477e-30,
    					4.3607e-29,
    					3.0023e-28,
    					2.0064e-27,
    					1.3015e-26,
    					8.1953e-26,
    					5.0089e-25,
    					2.9717e-24,
    					1.7114e-23,
    					9.567e-23,
    					5.1915e-22,
    					2.7347e-21,
    					1.3984e-20,
    					6.9414e-20,
    					3.3449e-19,
    					1.5647e-18,
    					7.1054e-18,
    					3.1324e-17,
    					1.3406e-16,
    					5.5703e-16,
    					2.247e-15,
    					8.7996e-15,
    					3.3458e-14,
    					1.2351e-13,
    					4.4268e-13,
    					1.5405e-12,
    					5.2054e-12,
    					1.7078e-11,
    					5.4408e-11,
    					1.6831e-10,
    					5.0561e-10,
    					1.475e-9,
    					4.1786e-9,
    					1.1497e-8,
    					3.0721e-8,
    					7.9733e-8,
    					2.01e-7,
    					4.9217e-7,
    					0.0000011707,
    					0.0000027053,
    					0.0000060735,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.0041,
    					0.0068,
    					0.0108,
    					0.0169,
    					0.0256,
    					0.0379,
    					0.0545,
    					0.0765,
    					0.1045,
    					0.1394,
    					0.1815,
    					0.2308,
    					0.2867,
    					0.3484,
    					0.4143,
    					0.4828,
    					0.5517,
    					0.6192,
    					0.6832,
    					0.7421,
    					0.7948,
    					0.8405,
    					0.8789,
    					0.9104,
    					0.9353,
    					0.9544,
    					0.9688,
    					0.9791,
    					0.9864,
    					0.9914,
    					0.9947,
    					0.9968,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.1126,
    				"std.error": 0.761,
    				statistic: 0.148,
    				"p.value": 0.8825,
    				"conf.low": -1.3839,
    				"conf.high": 1.6091,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.1741e-11,
    					3.8547e-11,
    					1.2276e-10,
    					3.7925e-10,
    					1.1365e-9,
    					3.3041e-9,
    					9.3185e-9,
    					2.5497e-8,
    					6.7688e-8,
    					1.7435e-7,
    					4.3576e-7,
    					0.0000010569,
    					0.0000024875,
    					0.0000056819,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0025,
    					0.0043,
    					0.0072,
    					0.0115,
    					0.018,
    					0.0274,
    					0.0406,
    					0.0585,
    					0.0821,
    					0.1123,
    					0.1496,
    					0.1945,
    					0.2466,
    					0.3054,
    					0.3698,
    					0.438,
    					0.5081,
    					0.578,
    					0.6455,
    					0.7087,
    					0.7661,
    					0.8166,
    					0.8596,
    					0.8953,
    					0.9239,
    					0.9461,
    					0.9628,
    					0.975,
    					0.9837,
    					0.9897,
    					0.9936,
    					0.9962,
    					0.9978,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 120,
    		cycle_length: "cl_option2",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.0896,
    				"std.error": 0.411,
    				statistic: 14.8175,
    				"p.value": 1.0795e-36,
    				"conf.low": 5.2805,
    				"conf.high": 6.8988,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					7.0255e-12,
    					1.9714e-11,
    					5.4095e-11,
    					1.4515e-10,
    					3.8087e-10,
    					9.7732e-10,
    					2.4525e-9,
    					6.0188e-9,
    					1.4446e-8,
    					3.3909e-8,
    					7.7851e-8,
    					1.7482e-7,
    					3.8396e-7,
    					8.249e-7,
    					0.0000017336,
    					0.0000035638,
    					0.0000071674,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0023,
    					0.0037,
    					0.0058,
    					0.0088,
    					0.0131,
    					0.0192,
    					0.0274,
    					0.0385,
    					0.0529,
    					0.0713,
    					0.0942,
    					0.1222,
    					0.1555,
    					0.1944,
    					0.2387,
    					0.2879,
    					0.3415,
    					0.3986,
    					0.4578,
    					0.518,
    					0.5779,
    					0.6359,
    					0.691,
    					0.7421,
    					0.7885,
    					0.8295,
    					0.8651,
    					0.8952,
    					0.9201,
    					0.9403,
    					0.9562,
    					0.9685,
    					0.9778,
    					0.9847,
    					0.9896,
    					0.9931,
    					0.9955,
    					0.9972,
    					0.9982,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5118,
    				"std.error": 0.5004,
    				statistic: -1.0227,
    				"p.value": 0.3074,
    				"conf.low": -1.4971,
    				"conf.high": 0.4735,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.3649e-19,
    					2.1642e-18,
    					8.5192e-18,
    					3.2725e-17,
    					1.2267e-16,
    					4.4873e-16,
    					1.6018e-15,
    					5.5801e-15,
    					1.897e-14,
    					6.2939e-14,
    					2.0379e-13,
    					6.4395e-13,
    					1.9859e-12,
    					5.9773e-12,
    					1.7559e-11,
    					5.0343e-11,
    					1.4088e-10,
    					3.848e-10,
    					1.0259e-9,
    					2.6697e-9,
    					6.7816e-9,
    					1.6816e-8,
    					4.0706e-8,
    					9.6192e-8,
    					2.2191e-7,
    					4.9982e-7,
    					0.0000010991,
    					0.00000236,
    					0.0000049477,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0022,
    					0.0036,
    					0.0057,
    					0.0088,
    					0.0134,
    					0.0198,
    					0.0287,
    					0.0406,
    					0.0564,
    					0.0766,
    					0.1019,
    					0.1327,
    					0.1695,
    					0.2122,
    					0.2607,
    					0.3142,
    					0.372,
    					0.4329,
    					0.4953,
    					0.5579,
    					0.6191,
    					0.6775,
    					0.7317,
    					0.781,
    					0.8246,
    					0.8622,
    					0.8939,
    					0.92,
    					0.9409,
    					0.9573,
    					0.9698,
    					0.9791,
    					0.9858,
    					0.9906,
    					0.9939,
    					0.9961,
    					0.9976,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.3735,
    				"std.error": 0.6686,
    				statistic: -0.5585,
    				"p.value": 0.5769,
    				"conf.low": -1.6899,
    				"conf.high": 0.943,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.4221e-24,
    					1.2264e-23,
    					6.0537e-23,
    					2.9134e-22,
    					1.3669e-21,
    					6.253e-21,
    					2.7888e-20,
    					1.2126e-19,
    					5.141e-19,
    					2.125e-18,
    					8.5639e-18,
    					3.3651e-17,
    					1.2893e-16,
    					4.8161e-16,
    					1.7542e-15,
    					6.2302e-15,
    					2.1575e-14,
    					7.2854e-14,
    					2.3988e-13,
    					7.7021e-13,
    					2.4115e-12,
    					7.3626e-12,
    					2.1921e-11,
    					6.3649e-11,
    					1.8023e-10,
    					4.977e-10,
    					1.3404e-9,
    					3.5208e-9,
    					9.0199e-9,
    					2.2539e-8,
    					5.4933e-8,
    					1.306e-7,
    					3.0286e-7,
    					6.8516e-7,
    					0.0000015121,
    					0.0000032558,
    					0.0000068396,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0018,
    					0.003,
    					0.0048,
    					0.0076,
    					0.0117,
    					0.0175,
    					0.0257,
    					0.037,
    					0.0519,
    					0.0712,
    					0.0956,
    					0.1257,
    					0.1619,
    					0.2042,
    					0.2526,
    					0.3063,
    					0.3646,
    					0.4262,
    					0.4896,
    					0.5533,
    					0.6157,
    					0.6752,
    					0.7305,
    					0.7807,
    					0.825,
    					0.8632,
    					0.8952,
    					0.9215,
    					0.9424,
    					0.9586,
    					0.971,
    					0.9801,
    					0.9866,
    					0.9912,
    					0.9944,
    					0.9965,
    					0.9979,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.4165,
    				"std.error": 0.8197,
    				statistic: 0.5081,
    				"p.value": 0.6118,
    				"conf.low": -1.1974,
    				"conf.high": 2.0304,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.4348e-11,
    					7.2233e-11,
    					2.0874e-10,
    					5.8763e-10,
    					1.6115e-9,
    					4.3051e-9,
    					1.1205e-8,
    					2.841e-8,
    					7.0184e-8,
    					1.6893e-7,
    					3.9618e-7,
    					9.0536e-7,
    					0.0000020161,
    					0.0000043752,
    					0.0000092533,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0025,
    					0.0041,
    					0.0066,
    					0.0103,
    					0.0156,
    					0.0233,
    					0.0339,
    					0.0483,
    					0.067,
    					0.091,
    					0.1209,
    					0.157,
    					0.1996,
    					0.2484,
    					0.3031,
    					0.3625,
    					0.4254,
    					0.4903,
    					0.5554,
    					0.6191,
    					0.6797,
    					0.7359,
    					0.7865,
    					0.831,
    					0.8691,
    					0.9007,
    					0.9264,
    					0.9467,
    					0.9622,
    					0.9739,
    					0.9823,
    					0.9883,
    					0.9925,
    					0.9953,
    					0.9971,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 121,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option1",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5411,
    				"std.error": 0.5195,
    				statistic: 12.592,
    				"p.value": 6.7509e-27,
    				"conf.low": 5.5165,
    				"conf.high": 7.5657,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.5635e-10,
    					5.4525e-10,
    					1.1436e-9,
    					2.3655e-9,
    					4.8249e-9,
    					9.7053e-9,
    					1.9252e-8,
    					3.7663e-8,
    					7.2665e-8,
    					1.3826e-7,
    					2.5946e-7,
    					4.8019e-7,
    					8.7653e-7,
    					0.0000015781,
    					0.0000028022,
    					0.0000049078,
    					0.0000084786,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.003,
    					0.0043,
    					0.0061,
    					0.0085,
    					0.0117,
    					0.0158,
    					0.0212,
    					0.0281,
    					0.0367,
    					0.0474,
    					0.0605,
    					0.0762,
    					0.0948,
    					0.1166,
    					0.1418,
    					0.1703,
    					0.2024,
    					0.2377,
    					0.2762,
    					0.3176,
    					0.3613,
    					0.407,
    					0.454,
    					0.5016,
    					0.5492,
    					0.596,
    					0.6416,
    					0.6852,
    					0.7264,
    					0.7647,
    					0.7999,
    					0.8317,
    					0.86,
    					0.8849,
    					0.9065,
    					0.9249,
    					0.9405,
    					0.9534,
    					0.9639,
    					0.9724,
    					0.9792,
    					0.9845,
    					0.9886,
    					0.9917,
    					0.9941,
    					0.9958,
    					0.9971,
    					0.998,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.4971,
    				"std.error": 0.6769,
    				statistic: -2.2117,
    				"p.value": 0.0282,
    				"conf.low": -2.8323,
    				"conf.high": -0.162,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.9864e-7,
    					3.6374e-7,
    					6.5741e-7,
    					0.0000011727,
    					0.0000020649,
    					0.0000035886,
    					0.0000061561,
    					0,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.001,
    					0.0015,
    					0.0021,
    					0.003,
    					0.0043,
    					0.006,
    					0.0083,
    					0.0114,
    					0.0154,
    					0.0205,
    					0.0269,
    					0.035,
    					0.045,
    					0.0572,
    					0.0718,
    					0.0891,
    					0.1094,
    					0.1328,
    					0.1594,
    					0.1893,
    					0.2224,
    					0.2585,
    					0.2975,
    					0.339,
    					0.3826,
    					0.4277,
    					0.4737,
    					0.5201,
    					0.5662,
    					0.6115,
    					0.6553,
    					0.6971,
    					0.7364,
    					0.773,
    					0.8065,
    					0.8368,
    					0.8639,
    					0.8877,
    					0.9083,
    					0.926,
    					0.941,
    					0.9535,
    					0.9638,
    					0.9721,
    					0.9788,
    					0.984,
    					0.9881,
    					0.9913,
    					0.9937,
    					0.9955,
    					0.9968,
    					0.9978,
    					0.9985,
    					0.999,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.6945,
    				"std.error": 0.6796,
    				statistic: -2.4935,
    				"p.value": 0.0135,
    				"conf.low": -3.035,
    				"conf.high": -0.3541,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.9207e-16,
    					2.1042e-15,
    					7.2979e-15,
    					2.47e-14,
    					8.1579e-14,
    					2.6295e-13,
    					8.2711e-13,
    					2.5391e-12,
    					7.607e-12,
    					2.2243e-11,
    					6.3474e-11,
    					1.7679e-10,
    					4.8061e-10,
    					1.2752e-9,
    					3.3027e-9,
    					8.3493e-9,
    					2.0604e-8,
    					4.9631e-8,
    					1.1671e-7,
    					2.6793e-7,
    					6.0049e-7,
    					0.000001314,
    					0.0000028072,
    					0.0000058559,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0025,
    					0.004,
    					0.0063,
    					0.0098,
    					0.0147,
    					0.0217,
    					0.0313,
    					0.0441,
    					0.0609,
    					0.0823,
    					0.1089,
    					0.1412,
    					0.1795,
    					0.2237,
    					0.2735,
    					0.3283,
    					0.387,
    					0.4485,
    					0.5112,
    					0.5736,
    					0.6342,
    					0.6917,
    					0.7448,
    					0.7926,
    					0.8348,
    					0.8709,
    					0.9012,
    					0.9259,
    					0.9456,
    					0.9609,
    					0.9725,
    					0.981,
    					0.9872,
    					0.9916,
    					0.9946,
    					0.9966,
    					0.9979,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.4406,
    				"std.error": 0.9139,
    				statistic: 2.6707,
    				"p.value": 0.0082,
    				"conf.low": 0.6381,
    				"conf.high": 4.2431,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.4796e-16,
    					8.2214e-16,
    					2.6685e-15,
    					8.4795e-15,
    					2.6378e-14,
    					8.0332e-14,
    					2.3951e-13,
    					6.9911e-13,
    					1.9979e-12,
    					5.5897e-12,
    					1.5312e-11,
    					4.1064e-11,
    					1.0783e-10,
    					2.7723e-10,
    					6.979e-10,
    					1.7202e-9,
    					4.1519e-9,
    					9.8123e-9,
    					2.2708e-8,
    					5.1461e-8,
    					1.142e-7,
    					2.482e-7,
    					5.2827e-7,
    					0.0000011012,
    					0.0000022481,
    					0.0000044954,
    					0.0000088048,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0024,
    					0.0037,
    					0.0057,
    					0.0086,
    					0.0127,
    					0.0183,
    					0.026,
    					0.0362,
    					0.0496,
    					0.0665,
    					0.0877,
    					0.1134,
    					0.1442,
    					0.1802,
    					0.2213,
    					0.2673,
    					0.3178,
    					0.3718,
    					0.4285,
    					0.4867,
    					0.5452,
    					0.6028,
    					0.6581,
    					0.7103,
    					0.7584,
    					0.8018,
    					0.8401,
    					0.8732,
    					0.9013,
    					0.9245,
    					0.9432,
    					0.9581,
    					0.9697,
    					0.9785,
    					0.985,
    					0.9897,
    					0.9931,
    					0.9955,
    					0.9971,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 122,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option1",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.8123,
    				"std.error": 0.4043,
    				statistic: 14.3765,
    				"p.value": 2.7345e-32,
    				"conf.low": 5.0148,
    				"conf.high": 6.6097,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.1438e-10,
    					8.2295e-10,
    					2.1052e-9,
    					5.2626e-9,
    					1.2857e-8,
    					3.0696e-8,
    					7.1625e-8,
    					1.6335e-7,
    					3.641e-7,
    					7.9325e-7,
    					0.0000016893,
    					0.0000035166,
    					0.0000071563,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0016,
    					0.0025,
    					0.004,
    					0.0063,
    					0.0096,
    					0.0143,
    					0.021,
    					0.03,
    					0.0421,
    					0.0579,
    					0.0779,
    					0.1028,
    					0.1331,
    					0.169,
    					0.2105,
    					0.2575,
    					0.3095,
    					0.3656,
    					0.4247,
    					0.4855,
    					0.5467,
    					0.6068,
    					0.6645,
    					0.7185,
    					0.7679,
    					0.8121,
    					0.8507,
    					0.8836,
    					0.911,
    					0.9333,
    					0.9509,
    					0.9647,
    					0.9751,
    					0.9828,
    					0.9884,
    					0.9923,
    					0.995,
    					0.9968,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.7206,
    				"std.error": 0.5386,
    				statistic: -1.3379,
    				"p.value": 0.1825,
    				"conf.low": -1.783,
    				"conf.high": 0.3418,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.778e-15,
    					8.7772e-15,
    					2.7154e-14,
    					8.2258e-14,
    					2.4399e-13,
    					7.0868e-13,
    					2.0156e-12,
    					5.6135e-12,
    					1.5309e-11,
    					4.0886e-11,
    					1.0693e-10,
    					2.7385e-10,
    					6.8687e-10,
    					1.6871e-9,
    					4.0585e-9,
    					9.5617e-9,
    					2.2063e-8,
    					4.9861e-8,
    					1.1037e-7,
    					2.3928e-7,
    					5.0816e-7,
    					0.0000010571,
    					0.0000021541,
    					0.0000043,
    					0.0000084093,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0022,
    					0.0035,
    					0.0054,
    					0.0082,
    					0.012,
    					0.0174,
    					0.0248,
    					0.0346,
    					0.0474,
    					0.0637,
    					0.0841,
    					0.109,
    					0.1388,
    					0.1737,
    					0.2138,
    					0.2588,
    					0.3083,
    					0.3615,
    					0.4176,
    					0.4753,
    					0.5336,
    					0.5912,
    					0.6469,
    					0.6996,
    					0.7484,
    					0.7927,
    					0.832,
    					0.8661,
    					0.8952,
    					0.9193,
    					0.9391,
    					0.9548,
    					0.9671,
    					0.9765,
    					0.9835,
    					0.9886,
    					0.9923,
    					0.9949,
    					0.9967,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8611,
    				"std.error": 0.734,
    				statistic: -1.1732,
    				"p.value": 0.2422,
    				"conf.low": -2.3089,
    				"conf.high": 0.5866,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.2673e-18,
    					2.1937e-17,
    					7.5191e-17,
    					2.5237e-16,
    					8.2948e-16,
    					2.6697e-15,
    					8.4143e-15,
    					2.5971e-14,
    					7.8497e-14,
    					2.3235e-13,
    					6.7351e-13,
    					1.912e-12,
    					5.3155e-12,
    					1.4473e-11,
    					3.8592e-11,
    					1.0079e-10,
    					2.5779e-10,
    					6.4582e-10,
    					1.5846e-9,
    					3.8083e-9,
    					8.9646e-9,
    					2.067e-8,
    					4.6684e-8,
    					1.0328e-7,
    					2.2384e-7,
    					4.7523e-7,
    					9.8844e-7,
    					0.0000020141,
    					0.0000040208,
    					0.0000078646,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0033,
    					0.0051,
    					0.0077,
    					0.0114,
    					0.0166,
    					0.0236,
    					0.033,
    					0.0452,
    					0.0609,
    					0.0806,
    					0.1047,
    					0.1336,
    					0.1676,
    					0.2067,
    					0.2508,
    					0.2994,
    					0.3519,
    					0.4073,
    					0.4647,
    					0.5229,
    					0.5805,
    					0.6365,
    					0.6897,
    					0.7391,
    					0.7842,
    					0.8244,
    					0.8595,
    					0.8895,
    					0.9147,
    					0.9352,
    					0.9517,
    					0.9647,
    					0.9746,
    					0.9821,
    					0.9876,
    					0.9916,
    					0.9944,
    					0.9963,
    					0.9977,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.1643,
    				"std.error": 1.0202,
    				statistic: 2.1215,
    				"p.value": 0.0352,
    				"conf.low": 0.1521,
    				"conf.high": 4.1765,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.3156e-12,
    					3.3349e-12,
    					8.3117e-12,
    					2.0366e-11,
    					4.9065e-11,
    					1.1622e-10,
    					2.7065e-10,
    					6.1974e-10,
    					1.3953e-9,
    					3.0887e-9,
    					6.7229e-9,
    					1.4389e-8,
    					3.0281e-8,
    					6.2664e-8,
    					1.2752e-7,
    					2.5517e-7,
    					5.0214e-7,
    					9.7174e-7,
    					0.0000018494,
    					0.0000034614,
    					0.0000063718,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0027,
    					0.004,
    					0.0058,
    					0.0084,
    					0.0119,
    					0.0167,
    					0.023,
    					0.0311,
    					0.0416,
    					0.0547,
    					0.0708,
    					0.0904,
    					0.1138,
    					0.1412,
    					0.1728,
    					0.2085,
    					0.2482,
    					0.2917,
    					0.3384,
    					0.3877,
    					0.4389,
    					0.4911,
    					0.5436,
    					0.5952,
    					0.6453,
    					0.6929,
    					0.7375,
    					0.7786,
    					0.8156,
    					0.8486,
    					0.8774,
    					0.9021,
    					0.923,
    					0.9402,
    					0.9543,
    					0.9656,
    					0.9745,
    					0.9814,
    					0.9866,
    					0.9905,
    					0.9934,
    					0.9955,
    					0.9969,
    					0.998,
    					0.9987,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 123,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option1",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5411,
    				"std.error": 0.5231,
    				statistic: 12.5052,
    				"p.value": 1.4578e-24,
    				"conf.low": 5.5069,
    				"conf.high": 7.5752,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.364e-10,
    					7.083e-10,
    					1.4709e-9,
    					3.013e-9,
    					6.0874e-9,
    					1.2131e-8,
    					2.3846e-8,
    					4.6234e-8,
    					8.8423e-8,
    					1.6681e-7,
    					3.1043e-7,
    					5.6986e-7,
    					0.0000010319,
    					0.0000018435,
    					0.0000032488,
    					0.0000056482,
    					0.0000096878,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.001,
    					0.0015,
    					0.0022,
    					0.0032,
    					0.0045,
    					0.0064,
    					0.0089,
    					0.0121,
    					0.0164,
    					0.0219,
    					0.0289,
    					0.0377,
    					0.0486,
    					0.0618,
    					0.0776,
    					0.0964,
    					0.1182,
    					0.1434,
    					0.172,
    					0.204,
    					0.2392,
    					0.2776,
    					0.3188,
    					0.3623,
    					0.4076,
    					0.4543,
    					0.5016,
    					0.5488,
    					0.5954,
    					0.6407,
    					0.684,
    					0.725,
    					0.7632,
    					0.7982,
    					0.83,
    					0.8583,
    					0.8833,
    					0.905,
    					0.9235,
    					0.9392,
    					0.9522,
    					0.9629,
    					0.9716,
    					0.9785,
    					0.9839,
    					0.9881,
    					0.9913,
    					0.9938,
    					0.9956,
    					0.9969,
    					0.9978,
    					0.9985,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.4971,
    				"std.error": 0.6816,
    				statistic: -2.1964,
    				"p.value": 0.0297,
    				"conf.low": -2.8447,
    				"conf.high": -0.1495,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.385e-7,
    					4.3325e-7,
    					7.7693e-7,
    					0.0000013754,
    					0.0000024036,
    					0.000004147,
    					0.0000070637,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0011,
    					0.0016,
    					0.0023,
    					0.0032,
    					0.0046,
    					0.0063,
    					0.0087,
    					0.0119,
    					0.0159,
    					0.0212,
    					0.0278,
    					0.036,
    					0.0461,
    					0.0584,
    					0.0732,
    					0.0906,
    					0.111,
    					0.1344,
    					0.1611,
    					0.1909,
    					0.2239,
    					0.26,
    					0.2988,
    					0.3401,
    					0.3834,
    					0.4282,
    					0.4739,
    					0.52,
    					0.5658,
    					0.6107,
    					0.6542,
    					0.6958,
    					0.735,
    					0.7714,
    					0.8049,
    					0.8351,
    					0.8622,
    					0.8861,
    					0.9068,
    					0.9246,
    					0.9397,
    					0.9524,
    					0.9628,
    					0.9712,
    					0.978,
    					0.9834,
    					0.9876,
    					0.9909,
    					0.9934,
    					0.9952,
    					0.9966,
    					0.9976,
    					0.9984,
    					0.9989,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.59,
    				"std.error": 0.8053,
    				statistic: -1.9743,
    				"p.value": 0.0503,
    				"conf.low": -3.1821,
    				"conf.high": 0.0022,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.8676e-12,
    					7.2341e-12,
    					1.7936e-11,
    					4.3705e-11,
    					1.0467e-10,
    					2.4639e-10,
    					5.7005e-10,
    					1.2963e-9,
    					2.8974e-9,
    					6.3655e-9,
    					1.3746e-8,
    					2.9179e-8,
    					6.0884e-8,
    					1.2488e-7,
    					2.5179e-7,
    					4.9906e-7,
    					9.7243e-7,
    					0.0000018628,
    					0.0000035081,
    					0.0000064955,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0019,
    					0.0028,
    					0.0042,
    					0.0062,
    					0.009,
    					0.0128,
    					0.0179,
    					0.0246,
    					0.0333,
    					0.0444,
    					0.0584,
    					0.0756,
    					0.0963,
    					0.1211,
    					0.1499,
    					0.183,
    					0.2204,
    					0.2617,
    					0.3068,
    					0.3549,
    					0.4055,
    					0.4577,
    					0.5106,
    					0.5634,
    					0.6151,
    					0.6648,
    					0.7117,
    					0.7553,
    					0.7951,
    					0.8308,
    					0.8622,
    					0.8894,
    					0.9125,
    					0.9318,
    					0.9476,
    					0.9604,
    					0.9705,
    					0.9783,
    					0.9844,
    					0.9889,
    					0.9922,
    					0.9947,
    					0.9964,
    					0.9976,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.9408,
    				"std.error": 1.102,
    				statistic: 2.6686,
    				"p.value": 0.0085,
    				"conf.low": 0.7621,
    				"conf.high": 5.1196,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.4562e-13,
    					8.3645e-13,
    					1.995e-12,
    					4.6896e-12,
    					1.0864e-11,
    					2.4806e-11,
    					5.582e-11,
    					1.238e-10,
    					2.7061e-10,
    					5.83e-10,
    					1.2379e-9,
    					2.5909e-9,
    					5.3445e-9,
    					1.0867e-8,
    					2.1778e-8,
    					4.302e-8,
    					8.3766e-8,
    					1.6077e-7,
    					3.0417e-7,
    					5.6728e-7,
    					0.0000010429,
    					0.0000018901,
    					0.0000033769,
    					0.0000059479,
    					0,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0026,
    					0.0037,
    					0.0054,
    					0.0075,
    					0.0105,
    					0.0144,
    					0.0195,
    					0.026,
    					0.0343,
    					0.0446,
    					0.0573,
    					0.0727,
    					0.0911,
    					0.1127,
    					0.1377,
    					0.1663,
    					0.1985,
    					0.2342,
    					0.2731,
    					0.3151,
    					0.3595,
    					0.406,
    					0.4538,
    					0.5023,
    					0.5507,
    					0.5985,
    					0.6447,
    					0.689,
    					0.7307,
    					0.7693,
    					0.8047,
    					0.8365,
    					0.8648,
    					0.8895,
    					0.9108,
    					0.9289,
    					0.944,
    					0.9565,
    					0.9666,
    					0.9747,
    					0.9811,
    					0.986,
    					0.9898,
    					0.9927,
    					0.9948,
    					0.9964,
    					0.9975,
    					0.9983,
    					0.9989,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 124,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option2",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5719,
    				"std.error": 0.4851,
    				statistic: 13.5473,
    				"p.value": 4.9007e-31,
    				"conf.low": 5.616,
    				"conf.high": 7.5278,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					9.1558e-12,
    					2.187e-11,
    					5.1408e-11,
    					1.1891e-10,
    					2.7069e-10,
    					6.0638e-10,
    					1.3368e-9,
    					2.9003e-9,
    					6.1925e-9,
    					1.3012e-8,
    					2.691e-8,
    					5.4772e-8,
    					1.0972e-7,
    					2.1633e-7,
    					4.198e-7,
    					8.0184e-7,
    					0.0000015075,
    					0.0000027898,
    					0.000005082,
    					0.0000091128,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.002,
    					0.003,
    					0.0044,
    					0.0063,
    					0.009,
    					0.0127,
    					0.0175,
    					0.0238,
    					0.032,
    					0.0423,
    					0.0552,
    					0.071,
    					0.0901,
    					0.1128,
    					0.1392,
    					0.1696,
    					0.2039,
    					0.2421,
    					0.2838,
    					0.3287,
    					0.3762,
    					0.4257,
    					0.4763,
    					0.5274,
    					0.578,
    					0.6274,
    					0.6747,
    					0.7194,
    					0.7609,
    					0.7987,
    					0.8328,
    					0.8629,
    					0.889,
    					0.9114,
    					0.9302,
    					0.9458,
    					0.9585,
    					0.9687,
    					0.9767,
    					0.9829,
    					0.9876,
    					0.9912,
    					0.9938,
    					0.9957,
    					0.9971,
    					0.9981,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.4184,
    				"std.error": 0.6263,
    				statistic: -2.2649,
    				"p.value": 0.0245,
    				"conf.low": -2.6525,
    				"conf.high": -0.1844,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.0352e-8,
    					2.124e-8,
    					4.2914e-8,
    					8.5382e-8,
    					1.6729e-7,
    					3.228e-7,
    					6.1339e-7,
    					0.0000011479,
    					0.0000021157,
    					0.0000038405,
    					0.0000068663,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.001,
    					0.0015,
    					0.0023,
    					0.0033,
    					0.0048,
    					0.0069,
    					0.0098,
    					0.0136,
    					0.0186,
    					0.0251,
    					0.0335,
    					0.044,
    					0.057,
    					0.0729,
    					0.0919,
    					0.1144,
    					0.1406,
    					0.1706,
    					0.2044,
    					0.2419,
    					0.2829,
    					0.3269,
    					0.3734,
    					0.4219,
    					0.4716,
    					0.5218,
    					0.5716,
    					0.6203,
    					0.6671,
    					0.7115,
    					0.7529,
    					0.7908,
    					0.8251,
    					0.8556,
    					0.8823,
    					0.9053,
    					0.9248,
    					0.9411,
    					0.9545,
    					0.9653,
    					0.9739,
    					0.9806,
    					0.9858,
    					0.9898,
    					0.9928,
    					0.9949,
    					0.9965,
    					0.9976,
    					0.9984,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.9254,
    				"std.error": 0.6224,
    				statistic: -3.0936,
    				"p.value": 0.0022,
    				"conf.low": -3.1519,
    				"conf.high": -0.699,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.863e-17,
    					1.2147e-16,
    					5.0055e-16,
    					2.0033e-15,
    					7.7876e-15,
    					2.9404e-14,
    					1.0784e-13,
    					3.8414e-13,
    					1.3292e-12,
    					4.4676e-12,
    					1.4587e-11,
    					4.6265e-11,
    					1.4255e-10,
    					4.2668e-10,
    					1.2408e-9,
    					3.5055e-9,
    					9.6226e-9,
    					2.5664e-8,
    					6.6507e-8,
    					1.6748e-7,
    					4.0982e-7,
    					9.7456e-7,
    					0.0000022524,
    					0.0000050594,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0021,
    					0.0035,
    					0.0058,
    					0.0094,
    					0.0147,
    					0.0224,
    					0.0333,
    					0.0482,
    					0.068,
    					0.0937,
    					0.1258,
    					0.1649,
    					0.2111,
    					0.2642,
    					0.3233,
    					0.3872,
    					0.4544,
    					0.5229,
    					0.5908,
    					0.656,
    					0.7169,
    					0.772,
    					0.8206,
    					0.862,
    					0.8964,
    					0.9242,
    					0.9458,
    					0.9623,
    					0.9744,
    					0.9831,
    					0.9891,
    					0.9932,
    					0.9958,
    					0.9975,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.5042,
    				"std.error": 0.8404,
    				statistic: 2.9798,
    				"p.value": 0.0032,
    				"conf.low": 0.8482,
    				"conf.high": 4.1603,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.867e-19,
    					1.1933e-18,
    					4.8432e-18,
    					1.9168e-17,
    					7.3972e-17,
    					2.7838e-16,
    					1.0216e-15,
    					3.6561e-15,
    					1.2759e-14,
    					4.3424e-14,
    					1.4413e-13,
    					4.665e-13,
    					1.4726e-12,
    					4.5335e-12,
    					1.3612e-11,
    					3.9861e-11,
    					1.1385e-10,
    					3.1714e-10,
    					8.6171e-10,
    					2.2838e-9,
    					5.904e-9,
    					1.4888e-8,
    					3.6624e-8,
    					8.7887e-8,
    					2.0575e-7,
    					4.6993e-7,
    					0.0000010472,
    					0.0000022768,
    					0.0000048302,
    					0.0000099992,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0023,
    					0.0038,
    					0.0061,
    					0.0094,
    					0.0143,
    					0.0212,
    					0.0308,
    					0.0437,
    					0.0606,
    					0.0823,
    					0.1093,
    					0.1422,
    					0.1813,
    					0.2264,
    					0.2772,
    					0.3331,
    					0.3929,
    					0.4554,
    					0.5191,
    					0.5822,
    					0.6433,
    					0.7009,
    					0.7539,
    					0.8013,
    					0.8428,
    					0.8782,
    					0.9075,
    					0.9313,
    					0.95,
    					0.9644,
    					0.9753,
    					0.9832,
    					0.9888,
    					0.9927,
    					0.9954,
    					0.9971,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 125,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option2",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.596,
    				"std.error": 0.3685,
    				statistic: 15.1854,
    				"p.value": 2.064e-36,
    				"conf.low": 4.8699,
    				"conf.high": 6.3221,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.8872e-10,
    					8.3063e-10,
    					2.3242e-9,
    					6.3259e-9,
    					1.6747e-8,
    					4.3128e-8,
    					1.0804e-7,
    					2.6331e-7,
    					6.2431e-7,
    					0.0000014402,
    					0.0000032325,
    					0.0000070597,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.004,
    					0.0064,
    					0.0102,
    					0.0158,
    					0.0238,
    					0.0349,
    					0.05,
    					0.07,
    					0.0955,
    					0.1274,
    					0.166,
    					0.2114,
    					0.2633,
    					0.3212,
    					0.3837,
    					0.4494,
    					0.5165,
    					0.5831,
    					0.6475,
    					0.7078,
    					0.7629,
    					0.8117,
    					0.8538,
    					0.889,
    					0.9177,
    					0.9405,
    					0.9579,
    					0.971,
    					0.9805,
    					0.9872,
    					0.9918,
    					0.9949,
    					0.9969,
    					0.9982,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.4222,
    				"std.error": 0.4941,
    				statistic: -0.8544,
    				"p.value": 0.3938,
    				"conf.low": -1.3958,
    				"conf.high": 0.5515,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.7037e-20,
    					1.5929e-19,
    					6.6807e-19,
    					2.7325e-18,
    					1.0899e-17,
    					4.2395e-17,
    					1.6083e-16,
    					5.9499e-16,
    					2.1467e-15,
    					7.5539e-15,
    					2.5924e-14,
    					8.6768e-14,
    					2.8325e-13,
    					9.0183e-13,
    					2.8006e-12,
    					8.4827e-12,
    					2.5061e-11,
    					7.2218e-11,
    					2.03e-10,
    					5.566e-10,
    					1.4887e-9,
    					3.8843e-9,
    					9.887e-9,
    					2.4551e-8,
    					5.9476e-8,
    					1.4057e-7,
    					3.2417e-7,
    					7.2941e-7,
    					0.0000016014,
    					0.000003431,
    					0.0000071732,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0018,
    					0.003,
    					0.0049,
    					0.0076,
    					0.0117,
    					0.0176,
    					0.0258,
    					0.0369,
    					0.0518,
    					0.071,
    					0.0952,
    					0.1251,
    					0.161,
    					0.203,
    					0.251,
    					0.3043,
    					0.3622,
    					0.4234,
    					0.4865,
    					0.55,
    					0.6122,
    					0.6717,
    					0.7271,
    					0.7774,
    					0.822,
    					0.8604,
    					0.8928,
    					0.9194,
    					0.9407,
    					0.9573,
    					0.9699,
    					0.9793,
    					0.986,
    					0.9908,
    					0.9941,
    					0.9963,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.6479,
    				"std.error": 0.6739,
    				statistic: -0.9614,
    				"p.value": 0.3374,
    				"conf.low": -1.9757,
    				"conf.high": 0.6799,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.0613e-22,
    					1.4183e-21,
    					6.4089e-21,
    					2.8246e-20,
    					1.2142e-19,
    					5.0907e-19,
    					2.0818e-18,
    					8.3038e-18,
    					3.2307e-17,
    					1.226e-16,
    					4.5382e-16,
    					1.6386e-15,
    					5.7709e-15,
    					1.9826e-14,
    					6.644e-14,
    					2.1719e-13,
    					6.9262e-13,
    					2.1546e-12,
    					6.5388e-12,
    					1.9359e-11,
    					5.5912e-11,
    					1.5755e-10,
    					4.3311e-10,
    					1.1616e-9,
    					3.0398e-9,
    					7.7615e-9,
    					1.9336e-8,
    					4.7005e-8,
    					1.115e-7,
    					2.5809e-7,
    					5.8301e-7,
    					0.0000012853,
    					0.0000027653,
    					0.000005807,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0026,
    					0.0042,
    					0.0066,
    					0.0102,
    					0.0154,
    					0.0227,
    					0.0327,
    					0.0461,
    					0.0636,
    					0.0859,
    					0.1137,
    					0.1472,
    					0.1869,
    					0.2325,
    					0.2837,
    					0.3398,
    					0.3997,
    					0.4621,
    					0.5254,
    					0.5881,
    					0.6486,
    					0.7055,
    					0.7578,
    					0.8046,
    					0.8454,
    					0.8802,
    					0.909,
    					0.9323,
    					0.9508,
    					0.9649,
    					0.9756,
    					0.9834,
    					0.9889,
    					0.9928,
    					0.9954,
    					0.9971,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.7407,
    				"std.error": 0.9497,
    				statistic: 1.8329,
    				"p.value": 0.0681,
    				"conf.low": -0.1307,
    				"conf.high": 3.6121,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					7.7878e-13,
    					2.1354e-12,
    					5.7416e-12,
    					1.5138e-11,
    					3.9139e-11,
    					9.9234e-11,
    					2.4672e-10,
    					6.0157e-10,
    					1.4384e-9,
    					3.373e-9,
    					7.7571e-9,
    					1.7496e-8,
    					3.8701e-8,
    					8.3964e-8,
    					1.7867e-7,
    					3.7291e-7,
    					7.6343e-7,
    					0.0000015331,
    					0.0000030199,
    					0.0000058356,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0036,
    					0.0054,
    					0.0081,
    					0.0118,
    					0.0169,
    					0.0238,
    					0.0329,
    					0.0448,
    					0.0598,
    					0.0785,
    					0.1013,
    					0.1287,
    					0.1608,
    					0.1977,
    					0.2393,
    					0.2853,
    					0.3351,
    					0.388,
    					0.4431,
    					0.4993,
    					0.5555,
    					0.6106,
    					0.6636,
    					0.7135,
    					0.7596,
    					0.8013,
    					0.8383,
    					0.8705,
    					0.898,
    					0.921,
    					0.9398,
    					0.9549,
    					0.9668,
    					0.976,
    					0.9829,
    					0.9881,
    					0.9918,
    					0.9945,
    					0.9964,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 126,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option2",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5719,
    				"std.error": 0.4839,
    				statistic: 13.5807,
    				"p.value": 1.3885e-28,
    				"conf.low": 5.6164,
    				"conf.high": 7.5275,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					8.1725e-12,
    					1.9604e-11,
    					4.6271e-11,
    					1.0747e-10,
    					2.456e-10,
    					5.5232e-10,
    					1.2222e-9,
    					2.6616e-9,
    					5.7036e-9,
    					1.2028e-8,
    					2.4961e-8,
    					5.0977e-8,
    					1.0246e-7,
    					2.0266e-7,
    					3.9453e-7,
    					7.559e-7,
    					0.0000014254,
    					0.0000026455,
    					0.0000048329,
    					0.00000869,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.002,
    					0.0029,
    					0.0043,
    					0.0062,
    					0.0089,
    					0.0125,
    					0.0173,
    					0.0236,
    					0.0317,
    					0.042,
    					0.0548,
    					0.0706,
    					0.0896,
    					0.1122,
    					0.1386,
    					0.169,
    					0.2033,
    					0.2415,
    					0.2833,
    					0.3283,
    					0.3759,
    					0.4255,
    					0.4763,
    					0.5275,
    					0.5782,
    					0.6277,
    					0.6751,
    					0.7199,
    					0.7614,
    					0.7993,
    					0.8334,
    					0.8635,
    					0.8896,
    					0.9119,
    					0.9307,
    					0.9462,
    					0.9589,
    					0.969,
    					0.977,
    					0.9831,
    					0.9878,
    					0.9913,
    					0.9939,
    					0.9958,
    					0.9972,
    					0.9981,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.4184,
    				"std.error": 0.6247,
    				statistic: -2.2704,
    				"p.value": 0.0245,
    				"conf.low": -2.652,
    				"conf.high": -0.1848,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					9.5584e-9,
    					1.9679e-8,
    					3.9894e-8,
    					7.9636e-8,
    					1.5653e-7,
    					3.0299e-7,
    					5.7751e-7,
    					0.000001084,
    					0.0000020037,
    					0.0000036474,
    					0.000006539,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0022,
    					0.0033,
    					0.0048,
    					0.0068,
    					0.0096,
    					0.0134,
    					0.0184,
    					0.0248,
    					0.0331,
    					0.0436,
    					0.0565,
    					0.0724,
    					0.0914,
    					0.1139,
    					0.14,
    					0.17,
    					0.2038,
    					0.2414,
    					0.2824,
    					0.3265,
    					0.3731,
    					0.4217,
    					0.4716,
    					0.5218,
    					0.5718,
    					0.6206,
    					0.6675,
    					0.712,
    					0.7534,
    					0.7914,
    					0.8257,
    					0.8562,
    					0.8829,
    					0.9059,
    					0.9253,
    					0.9416,
    					0.9549,
    					0.9656,
    					0.9742,
    					0.9809,
    					0.986,
    					0.99,
    					0.9929,
    					0.995,
    					0.9966,
    					0.9977,
    					0.9984,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.6238,
    				"std.error": 0.7359,
    				statistic: -2.2066,
    				"p.value": 0.0287,
    				"conf.low": -3.0769,
    				"conf.high": -0.1707,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.4488e-14,
    					1.034e-13,
    					3.0362e-13,
    					8.7321e-13,
    					2.4597e-12,
    					6.786e-12,
    					1.8337e-11,
    					4.8535e-11,
    					1.2583e-10,
    					3.1952e-10,
    					7.9478e-10,
    					1.9365e-9,
    					4.622e-9,
    					1.0807e-8,
    					2.4752e-8,
    					5.5537e-8,
    					1.2208e-7,
    					2.6291e-7,
    					5.5471e-7,
    					0.0000011467,
    					0.0000023226,
    					0.0000046095,
    					0.000008964,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0023,
    					0.0036,
    					0.0055,
    					0.0082,
    					0.0121,
    					0.0176,
    					0.0249,
    					0.0347,
    					0.0474,
    					0.0636,
    					0.0838,
    					0.1086,
    					0.1381,
    					0.1728,
    					0.2125,
    					0.2571,
    					0.3062,
    					0.3589,
    					0.4146,
    					0.472,
    					0.53,
    					0.5873,
    					0.6429,
    					0.6955,
    					0.7444,
    					0.7889,
    					0.8284,
    					0.8629,
    					0.8923,
    					0.9169,
    					0.937,
    					0.9531,
    					0.9657,
    					0.9754,
    					0.9827,
    					0.988,
    					0.9919,
    					0.9946,
    					0.9965,
    					0.9977,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.737,
    				"std.error": 1.0127,
    				statistic: 2.7027,
    				"p.value": 0.0076,
    				"conf.low": 0.7373,
    				"conf.high": 4.7366,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.3334e-14,
    					3.6884e-14,
    					1.0028e-13,
    					2.6796e-13,
    					7.038e-13,
    					1.8169e-12,
    					4.61e-12,
    					1.1497e-11,
    					2.8185e-11,
    					6.7915e-11,
    					1.6086e-10,
    					3.745e-10,
    					8.5705e-10,
    					1.928e-9,
    					4.2636e-9,
    					9.2683e-9,
    					1.9806e-8,
    					4.1609e-8,
    					8.5932e-8,
    					1.7447e-7,
    					3.4827e-7,
    					6.8347e-7,
    					0.0000013187,
    					0.0000025017,
    					0.0000046663,
    					0.0000085583,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0022,
    					0.0034,
    					0.005,
    					0.0073,
    					0.0104,
    					0.0147,
    					0.0204,
    					0.0278,
    					0.0375,
    					0.0496,
    					0.0648,
    					0.0833,
    					0.1055,
    					0.1318,
    					0.1622,
    					0.1968,
    					0.2356,
    					0.2783,
    					0.3245,
    					0.3735,
    					0.4246,
    					0.477,
    					0.5299,
    					0.5822,
    					0.6331,
    					0.6818,
    					0.7275,
    					0.7697,
    					0.8079,
    					0.842,
    					0.8719,
    					0.8976,
    					0.9193,
    					0.9374,
    					0.9521,
    					0.9639,
    					0.9732,
    					0.9805,
    					0.986,
    					0.9901,
    					0.9931,
    					0.9953,
    					0.9968,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 127,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option3",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.3063,
    				"std.error": 0.4553,
    				statistic: 13.8497,
    				"p.value": 1.3033e-30,
    				"conf.low": 5.4082,
    				"conf.high": 7.2045,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.4351e-11,
    					6.0364e-11,
    					1.4694e-10,
    					3.5123e-10,
    					8.2442e-10,
    					1.9002e-9,
    					4.3011e-9,
    					9.5605e-9,
    					2.087e-8,
    					4.4739e-8,
    					9.4192e-8,
    					1.9476e-7,
    					3.9551e-7,
    					7.8887e-7,
    					0.0000015454,
    					0.0000029737,
    					0.0000056206,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0019,
    					0.0029,
    					0.0044,
    					0.0065,
    					0.0095,
    					0.0136,
    					0.0191,
    					0.0264,
    					0.036,
    					0.0482,
    					0.0634,
    					0.0822,
    					0.105,
    					0.1319,
    					0.1633,
    					0.1992,
    					0.2395,
    					0.2838,
    					0.3318,
    					0.3826,
    					0.4356,
    					0.4897,
    					0.5441,
    					0.5976,
    					0.6494,
    					0.6985,
    					0.7442,
    					0.7861,
    					0.8237,
    					0.8567,
    					0.8854,
    					0.9097,
    					0.9299,
    					0.9465,
    					0.9598,
    					0.9702,
    					0.9784,
    					0.9845,
    					0.9891,
    					0.9925,
    					0.9949,
    					0.9966,
    					0.9977,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1431,
    				"std.error": 0.6508,
    				statistic: -1.7566,
    				"p.value": 0.0806,
    				"conf.low": -2.4268,
    				"conf.high": 0.1405,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.9775e-9,
    					6.0982e-9,
    					1.2313e-8,
    					2.4508e-8,
    					4.8093e-8,
    					9.3041e-8,
    					1.7746e-7,
    					3.337e-7,
    					6.1868e-7,
    					0.0000011309,
    					0.0000020382,
    					0.000003622,
    					0.0000063465,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0026,
    					0.0038,
    					0.0054,
    					0.0076,
    					0.0105,
    					0.0144,
    					0.0194,
    					0.0259,
    					0.0341,
    					0.0444,
    					0.0569,
    					0.0722,
    					0.0903,
    					0.1116,
    					0.1364,
    					0.1646,
    					0.1964,
    					0.2316,
    					0.2701,
    					0.3115,
    					0.3555,
    					0.4015,
    					0.4489,
    					0.4971,
    					0.5453,
    					0.5928,
    					0.639,
    					0.6833,
    					0.7251,
    					0.764,
    					0.7996,
    					0.8318,
    					0.8604,
    					0.8856,
    					0.9073,
    					0.9258,
    					0.9414,
    					0.9542,
    					0.9647,
    					0.9732,
    					0.9799,
    					0.9851,
    					0.9891,
    					0.9921,
    					0.9944,
    					0.996,
    					0.9973,
    					0.9981,
    					0.9987,
    					0.9992,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.1101,
    				"std.error": 0.6376,
    				statistic: -1.741,
    				"p.value": 0.0833,
    				"conf.low": -2.3677,
    				"conf.high": 0.1476,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.6941e-21,
    					8.3084e-21,
    					3.9628e-20,
    					1.8381e-19,
    					8.2917e-19,
    					3.6376e-18,
    					1.5521e-17,
    					6.4403e-17,
    					2.5991e-16,
    					1.0202e-15,
    					3.8946e-15,
    					1.4461e-14,
    					5.2223e-14,
    					1.8344e-13,
    					6.2675e-13,
    					2.0829e-12,
    					6.7332e-12,
    					2.1173e-11,
    					6.4763e-11,
    					1.9271e-10,
    					5.5783e-10,
    					1.5709e-9,
    					4.3037e-9,
    					1.1471e-8,
    					2.9749e-8,
    					7.5066e-8,
    					1.8431e-7,
    					4.4033e-7,
    					0.0000010237,
    					0.0000023162,
    					0.0000051004,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0031,
    					0.0051,
    					0.0082,
    					0.0129,
    					0.0196,
    					0.0291,
    					0.0421,
    					0.0596,
    					0.0822,
    					0.1107,
    					0.1458,
    					0.1876,
    					0.2361,
    					0.2908,
    					0.3508,
    					0.4148,
    					0.4811,
    					0.548,
    					0.6135,
    					0.6759,
    					0.7338,
    					0.7859,
    					0.8315,
    					0.8703,
    					0.9025,
    					0.9284,
    					0.9486,
    					0.964,
    					0.9754,
    					0.9836,
    					0.9894,
    					0.9933,
    					0.9958,
    					0.9975,
    					0.9985,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.6418,
    				"std.error": 0.9159,
    				statistic: 1.7925,
    				"p.value": 0.0746,
    				"conf.low": -0.1649,
    				"conf.high": 3.4484,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.5573e-13,
    					7.4374e-13,
    					2.1179e-12,
    					5.905e-12,
    					1.6121e-11,
    					4.3094e-11,
    					1.128e-10,
    					2.8912e-10,
    					7.2567e-10,
    					1.7835e-9,
    					4.2926e-9,
    					1.0118e-8,
    					2.3354e-8,
    					5.2791e-8,
    					1.1687e-7,
    					2.5341e-7,
    					5.3817e-7,
    					0.0000011194,
    					0.0000022807,
    					0.0000045518,
    					0.0000088986,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0024,
    					0.0037,
    					0.0057,
    					0.0085,
    					0.0126,
    					0.0182,
    					0.0258,
    					0.036,
    					0.0492,
    					0.066,
    					0.087,
    					0.1126,
    					0.1431,
    					0.1788,
    					0.2197,
    					0.2654,
    					0.3156,
    					0.3694,
    					0.4258,
    					0.4839,
    					0.5423,
    					0.5998,
    					0.6552,
    					0.7074,
    					0.7557,
    					0.7993,
    					0.8378,
    					0.8712,
    					0.8995,
    					0.923,
    					0.942,
    					0.9571,
    					0.9689,
    					0.9779,
    					0.9845,
    					0.9894,
    					0.9929,
    					0.9953,
    					0.997,
    					0.9981,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 128,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option3",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.8335,
    				"std.error": 0.3715,
    				statistic: 15.7029,
    				"p.value": 3.6281e-36,
    				"conf.low": 5.1007,
    				"conf.high": 6.5663,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.7594e-12,
    					1.8096e-11,
    					5.532e-11,
    					1.6455e-10,
    					4.7624e-10,
    					1.3412e-9,
    					3.6755e-9,
    					9.8016e-9,
    					2.5437e-8,
    					6.4242e-8,
    					1.5791e-7,
    					3.7776e-7,
    					8.7959e-7,
    					0.0000019936,
    					0.0000043984,
    					0.0000094469,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0028,
    					0.0046,
    					0.0074,
    					0.0116,
    					0.0177,
    					0.0264,
    					0.0384,
    					0.0546,
    					0.0757,
    					0.1025,
    					0.1356,
    					0.1754,
    					0.222,
    					0.2748,
    					0.3332,
    					0.3959,
    					0.4615,
    					0.5281,
    					0.594,
    					0.6573,
    					0.7164,
    					0.7702,
    					0.8177,
    					0.8586,
    					0.8927,
    					0.9205,
    					0.9425,
    					0.9593,
    					0.9719,
    					0.9811,
    					0.9876,
    					0.9921,
    					0.995,
    					0.997,
    					0.9982,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.6973,
    				"std.error": 0.5309,
    				statistic: -1.3135,
    				"p.value": 0.1906,
    				"conf.low": -1.7445,
    				"conf.high": 0.3499,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					7.8394e-16,
    					2.5772e-15,
    					8.2907e-15,
    					2.6099e-14,
    					8.0396e-14,
    					2.4235e-13,
    					7.1493e-13,
    					2.0639e-12,
    					5.8308e-12,
    					1.6121e-11,
    					4.3619e-11,
    					1.155e-10,
    					2.9934e-10,
    					7.5926e-10,
    					1.8849e-9,
    					4.5797e-9,
    					1.0891e-8,
    					2.5353e-8,
    					5.7766e-8,
    					1.2884e-7,
    					2.8128e-7,
    					6.0117e-7,
    					0.0000012578,
    					0.0000025764,
    					0.0000051667,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0017,
    					0.0027,
    					0.0043,
    					0.0066,
    					0.0098,
    					0.0145,
    					0.0209,
    					0.0296,
    					0.041,
    					0.0558,
    					0.0746,
    					0.0979,
    					0.126,
    					0.1594,
    					0.198,
    					0.2419,
    					0.2905,
    					0.3433,
    					0.3993,
    					0.4575,
    					0.5166,
    					0.5754,
    					0.6325,
    					0.6868,
    					0.7374,
    					0.7834,
    					0.8243,
    					0.86,
    					0.8904,
    					0.9158,
    					0.9364,
    					0.9529,
    					0.9658,
    					0.9756,
    					0.983,
    					0.9883,
    					0.9922,
    					0.9948,
    					0.9967,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.3589,
    				"std.error": 0.7286,
    				statistic: -0.4926,
    				"p.value": 0.6229,
    				"conf.low": -1.796,
    				"conf.high": 1.0782,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.9359e-21,
    					2.7337e-20,
    					1.0547e-19,
    					3.9834e-19,
    					1.4726e-18,
    					5.3294e-18,
    					1.888e-17,
    					6.5474e-17,
    					2.2227e-16,
    					7.3868e-16,
    					2.4032e-15,
    					7.6538e-15,
    					2.3863e-14,
    					7.2839e-14,
    					2.1766e-13,
    					6.3674e-13,
    					1.8236e-12,
    					5.1135e-12,
    					1.4038e-11,
    					3.773e-11,
    					9.9286e-11,
    					2.5581e-10,
    					6.4534e-10,
    					1.594e-9,
    					3.8553e-9,
    					9.1303e-9,
    					2.1173e-8,
    					4.808e-8,
    					1.0692e-7,
    					2.3283e-7,
    					4.9654e-7,
    					0.0000010371,
    					0.0000021214,
    					0.0000042503,
    					0.0000083407,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0023,
    					0.0036,
    					0.0055,
    					0.0083,
    					0.0123,
    					0.0178,
    					0.0253,
    					0.0354,
    					0.0484,
    					0.0651,
    					0.0859,
    					0.1113,
    					0.1418,
    					0.1773,
    					0.2181,
    					0.2638,
    					0.3139,
    					0.3678,
    					0.4243,
    					0.4825,
    					0.5411,
    					0.5987,
    					0.6543,
    					0.7068,
    					0.7552,
    					0.7989,
    					0.8376,
    					0.8711,
    					0.8995,
    					0.923,
    					0.9421,
    					0.9572,
    					0.969,
    					0.978,
    					0.9846,
    					0.9895,
    					0.9929,
    					0.9954,
    					0.997,
    					0.9981,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5557,
    				"std.error": 1.0577,
    				statistic: 1.4709,
    				"p.value": 0.143,
    				"conf.low": -0.5305,
    				"conf.high": 3.642,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.3542e-10,
    					7.4291e-10,
    					1.6198e-9,
    					3.4766e-9,
    					7.3456e-9,
    					1.5279e-8,
    					3.1286e-8,
    					6.3069e-8,
    					1.2517e-7,
    					2.4457e-7,
    					4.7047e-7,
    					8.9105e-7,
    					0.0000016616,
    					0.0000030507,
    					0.0000055152,
    					0.0000098176,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.002,
    					0.003,
    					0.0044,
    					0.0063,
    					0.009,
    					0.0126,
    					0.0174,
    					0.0236,
    					0.0316,
    					0.0418,
    					0.0544,
    					0.0699,
    					0.0885,
    					0.1107,
    					0.1365,
    					0.1663,
    					0.1999,
    					0.2372,
    					0.2782,
    					0.3223,
    					0.369,
    					0.4178,
    					0.4679,
    					0.5185,
    					0.5688,
    					0.618,
    					0.6653,
    					0.7102,
    					0.752,
    					0.7904,
    					0.825,
    					0.8558,
    					0.8827,
    					0.9058,
    					0.9254,
    					0.9417,
    					0.9551,
    					0.9659,
    					0.9744,
    					0.9811,
    					0.9862,
    					0.9901,
    					0.993,
    					0.9951,
    					0.9967,
    					0.9977,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 129,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option3",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.3063,
    				"std.error": 0.4637,
    				statistic: 13.5993,
    				"p.value": 1.9538e-27,
    				"conf.low": 5.3896,
    				"conf.high": 7.2231,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.3747e-11,
    					1.2906e-10,
    					3.0453e-10,
    					7.0605e-10,
    					1.6085e-9,
    					3.601e-9,
    					7.9217e-9,
    					1.7125e-8,
    					3.6379e-8,
    					7.5947e-8,
    					1.5581e-7,
    					3.1416e-7,
    					6.2254e-7,
    					0.0000012124,
    					0.0000023207,
    					0.000004366,
    					0.0000080735,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0034,
    					0.0051,
    					0.0074,
    					0.0106,
    					0.015,
    					0.0209,
    					0.0287,
    					0.0386,
    					0.0512,
    					0.0669,
    					0.0861,
    					0.1092,
    					0.1363,
    					0.1678,
    					0.2035,
    					0.2435,
    					0.2873,
    					0.3346,
    					0.3847,
    					0.4367,
    					0.4899,
    					0.5433,
    					0.5959,
    					0.6468,
    					0.6952,
    					0.7404,
    					0.7819,
    					0.8193,
    					0.8523,
    					0.8811,
    					0.9057,
    					0.9263,
    					0.9432,
    					0.957,
    					0.9679,
    					0.9764,
    					0.9829,
    					0.9878,
    					0.9915,
    					0.9941,
    					0.996,
    					0.9973,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1431,
    				"std.error": 0.6627,
    				statistic: -1.7249,
    				"p.value": 0.0867,
    				"conf.low": -2.4533,
    				"conf.high": 0.1671,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.5547e-9,
    					1.1095e-8,
    					2.1861e-8,
    					4.2483e-8,
    					8.1435e-8,
    					1.5398e-7,
    					2.8718e-7,
    					5.2835e-7,
    					9.5886e-7,
    					0.0000017166,
    					0.0000030317,
    					0.0000052819,
    					0.0000090784,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0014,
    					0.0021,
    					0.0031,
    					0.0044,
    					0.0062,
    					0.0086,
    					0.0117,
    					0.0159,
    					0.0213,
    					0.0281,
    					0.0367,
    					0.0473,
    					0.0603,
    					0.0758,
    					0.0943,
    					0.1159,
    					0.1407,
    					0.169,
    					0.2007,
    					0.2357,
    					0.2738,
    					0.3147,
    					0.358,
    					0.4033,
    					0.4499,
    					0.4972,
    					0.5445,
    					0.5912,
    					0.6366,
    					0.6802,
    					0.7215,
    					0.7599,
    					0.7953,
    					0.8274,
    					0.856,
    					0.8813,
    					0.9033,
    					0.9221,
    					0.938,
    					0.9512,
    					0.9621,
    					0.9709,
    					0.978,
    					0.9835,
    					0.9878,
    					0.9911,
    					0.9936,
    					0.9954,
    					0.9968,
    					0.9978,
    					0.9985,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8317,
    				"std.error": 0.7876,
    				statistic: -1.056,
    				"p.value": 0.2928,
    				"conf.low": -2.3887,
    				"conf.high": 0.7253,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.0337e-16,
    					1.8042e-15,
    					5.2975e-15,
    					1.5274e-14,
    					4.3246e-14,
    					1.2024e-13,
    					3.2828e-13,
    					8.8017e-13,
    					2.3175e-12,
    					5.9921e-12,
    					1.5215e-11,
    					3.7941e-11,
    					9.2915e-11,
    					2.2347e-10,
    					5.2783e-10,
    					1.2244e-9,
    					2.7897e-9,
    					6.2424e-9,
    					1.3719e-8,
    					2.9614e-8,
    					6.2789e-8,
    					1.3076e-7,
    					2.6748e-7,
    					5.3747e-7,
    					0.0000010609,
    					0.000002057,
    					0.0000039181,
    					0.0000073317,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0034,
    					0.0051,
    					0.0075,
    					0.0109,
    					0.0154,
    					0.0215,
    					0.0296,
    					0.04,
    					0.0531,
    					0.0695,
    					0.0896,
    					0.1137,
    					0.142,
    					0.1748,
    					0.212,
    					0.2535,
    					0.2989,
    					0.3476,
    					0.399,
    					0.4523,
    					0.5064,
    					0.5604,
    					0.6133,
    					0.6642,
    					0.7122,
    					0.7567,
    					0.7972,
    					0.8334,
    					0.8651,
    					0.8924,
    					0.9155,
    					0.9346,
    					0.9502,
    					0.9627,
    					0.9725,
    					0.9801,
    					0.9858,
    					0.99,
    					0.9931,
    					0.9953,
    					0.9969,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.0016,
    				"std.error": 1.1413,
    				statistic: 1.7537,
    				"p.value": 0.0817,
    				"conf.low": -0.2548,
    				"conf.high": 4.2579,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.9518e-10,
    					1.0279e-9,
    					2.105e-9,
    					4.2532e-9,
    					8.4786e-9,
    					1.6676e-8,
    					3.2359e-8,
    					6.1955e-8,
    					1.1704e-7,
    					2.1815e-7,
    					4.0121e-7,
    					7.2807e-7,
    					0.0000013037,
    					0.0000023036,
    					0.0000040164,
    					0.0000069103,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0011,
    					0.0017,
    					0.0024,
    					0.0035,
    					0.0049,
    					0.0069,
    					0.0095,
    					0.0129,
    					0.0173,
    					0.0231,
    					0.0303,
    					0.0393,
    					0.0503,
    					0.0638,
    					0.0798,
    					0.0988,
    					0.1208,
    					0.1461,
    					0.1747,
    					0.2066,
    					0.2418,
    					0.28,
    					0.3209,
    					0.364,
    					0.409,
    					0.4552,
    					0.5021,
    					0.5489,
    					0.595,
    					0.6398,
    					0.6828,
    					0.7235,
    					0.7614,
    					0.7963,
    					0.828,
    					0.8563,
    					0.8813,
    					0.903,
    					0.9217,
    					0.9375,
    					0.9507,
    					0.9616,
    					0.9704,
    					0.9775,
    					0.9831,
    					0.9875,
    					0.9908,
    					0.9933,
    					0.9952,
    					0.9966,
    					0.9977,
    					0.9984,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 130,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option4",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.7682,
    				"std.error": 0.5438,
    				statistic: 12.4472,
    				"p.value": 2.1564e-29,
    				"conf.low": 5.6985,
    				"conf.high": 7.8379,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.0407e-10,
    					2.1745e-10,
    					4.4859e-10,
    					9.1372e-10,
    					1.8375e-9,
    					3.6487e-9,
    					7.1533e-9,
    					1.3847e-8,
    					2.6466e-8,
    					4.9949e-8,
    					9.3079e-8,
    					1.7127e-7,
    					3.1119e-7,
    					5.5831e-7,
    					9.8914e-7,
    					0.0000017305,
    					0.0000029897,
    					0.0000051007,
    					0.0000085938,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0002,
    					0.0004,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0017,
    					0.0025,
    					0.0035,
    					0.0049,
    					0.0067,
    					0.0092,
    					0.0125,
    					0.0167,
    					0.022,
    					0.0288,
    					0.0371,
    					0.0474,
    					0.0598,
    					0.0746,
    					0.0921,
    					0.1124,
    					0.1358,
    					0.1623,
    					0.1919,
    					0.2246,
    					0.2603,
    					0.2987,
    					0.3395,
    					0.3822,
    					0.4265,
    					0.4716,
    					0.5172,
    					0.5625,
    					0.6071,
    					0.6502,
    					0.6915,
    					0.7305,
    					0.7669,
    					0.8004,
    					0.8308,
    					0.858,
    					0.8821,
    					0.9032,
    					0.9213,
    					0.9368,
    					0.9498,
    					0.9605,
    					0.9693,
    					0.9765,
    					0.9821,
    					0.9866,
    					0.9901,
    					0.9927,
    					0.9947,
    					0.9962,
    					0.9973,
    					0.9981,
    					0.9987,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.0167,
    				"std.error": 0.6129,
    				statistic: -1.6589,
    				"p.value": 0.0981,
    				"conf.low": -2.2224,
    				"conf.high": 0.189,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					8.6388e-11,
    					1.9846e-10,
    					4.486e-10,
    					9.9781e-10,
    					2.1839e-9,
    					4.7034e-9,
    					9.9681e-9,
    					2.0789e-8,
    					4.2665e-8,
    					8.6168e-8,
    					1.7126e-7,
    					3.3499e-7,
    					6.4486e-7,
    					0.0000012217,
    					0.000002278,
    					0.0000041806,
    					0.0000075514,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0027,
    					0.004,
    					0.0057,
    					0.0082,
    					0.0116,
    					0.0161,
    					0.022,
    					0.0297,
    					0.0395,
    					0.0518,
    					0.0669,
    					0.0852,
    					0.1071,
    					0.1327,
    					0.1623,
    					0.1958,
    					0.2333,
    					0.2744,
    					0.3188,
    					0.366,
    					0.4153,
    					0.4659,
    					0.5172,
    					0.5681,
    					0.618,
    					0.6659,
    					0.7113,
    					0.7536,
    					0.7923,
    					0.8271,
    					0.858,
    					0.8849,
    					0.908,
    					0.9274,
    					0.9436,
    					0.9567,
    					0.9673,
    					0.9756,
    					0.9821,
    					0.9871,
    					0.9908,
    					0.9935,
    					0.9955,
    					0.9969,
    					0.998,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.73,
    				"std.error": 0.7193,
    				statistic: -2.4051,
    				"p.value": 0.0167,
    				"conf.low": -3.1451,
    				"conf.high": -0.3149,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.8525e-14,
    					8.8011e-14,
    					2.657e-13,
    					7.8486e-13,
    					2.2685e-12,
    					6.4158e-12,
    					1.7755e-11,
    					4.8082e-11,
    					1.2741e-10,
    					3.304e-10,
    					8.3843e-10,
    					2.0821e-9,
    					5.06e-9,
    					1.2035e-8,
    					2.8013e-8,
    					6.3817e-8,
    					1.4229e-7,
    					3.1054e-7,
    					6.6334e-7,
    					0.000001387,
    					0.0000028388,
    					0.0000056878,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0019,
    					0.003,
    					0.0046,
    					0.0071,
    					0.0106,
    					0.0155,
    					0.0223,
    					0.0315,
    					0.0436,
    					0.0592,
    					0.0789,
    					0.1032,
    					0.1324,
    					0.167,
    					0.2069,
    					0.2519,
    					0.3017,
    					0.3554,
    					0.4122,
    					0.4709,
    					0.5302,
    					0.5888,
    					0.6456,
    					0.6992,
    					0.7489,
    					0.7939,
    					0.8337,
    					0.8681,
    					0.8973,
    					0.9215,
    					0.9411,
    					0.9566,
    					0.9687,
    					0.9778,
    					0.9846,
    					0.9895,
    					0.993,
    					0.9954,
    					0.9971,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3821,
    				"std.error": 0.819,
    				statistic: 1.6875,
    				"p.value": 0.0925,
    				"conf.low": -0.2291,
    				"conf.high": 2.9932,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.2594e-15,
    					1.5306e-14,
    					5.3565e-14,
    					1.8257e-13,
    					6.0606e-13,
    					1.9595e-12,
    					6.1704e-12,
    					1.8925e-11,
    					5.6538e-11,
    					1.6452e-10,
    					4.6632e-10,
    					1.2875e-9,
    					3.4629e-9,
    					9.073e-9,
    					2.3158e-8,
    					5.7588e-8,
    					1.3952e-7,
    					3.2933e-7,
    					7.5743e-7,
    					0.0000016974,
    					0.0000037069,
    					0.0000078888,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0022,
    					0.0037,
    					0.006,
    					0.0094,
    					0.0144,
    					0.0215,
    					0.0315,
    					0.045,
    					0.0629,
    					0.0858,
    					0.1144,
    					0.1493,
    					0.1907,
    					0.2384,
    					0.292,
    					0.3506,
    					0.413,
    					0.4777,
    					0.543,
    					0.6071,
    					0.6685,
    					0.7256,
    					0.7775,
    					0.8232,
    					0.8625,
    					0.8953,
    					0.9221,
    					0.9433,
    					0.9597,
    					0.972,
    					0.981,
    					0.9874,
    					0.9919,
    					0.9949,
    					0.9968,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 131,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option4",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.0125,
    				"std.error": 0.4239,
    				statistic: 14.1828,
    				"p.value": 6.1334e-36,
    				"conf.low": 5.1786,
    				"conf.high": 6.8465,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					9.5132e-11,
    					2.4472e-10,
    					6.1646e-10,
    					1.5207e-9,
    					3.6733e-9,
    					8.6894e-9,
    					2.013e-8,
    					4.5671e-8,
    					1.0148e-7,
    					2.2084e-7,
    					4.707e-7,
    					9.8266e-7,
    					0.0000020094,
    					0.0000040248,
    					0.0000078971,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0022,
    					0.0034,
    					0.0053,
    					0.0079,
    					0.0117,
    					0.017,
    					0.0243,
    					0.0339,
    					0.0465,
    					0.0627,
    					0.0828,
    					0.1075,
    					0.1371,
    					0.1719,
    					0.2118,
    					0.2567,
    					0.3061,
    					0.3592,
    					0.4153,
    					0.4731,
    					0.5316,
    					0.5893,
    					0.6452,
    					0.6981,
    					0.7471,
    					0.7916,
    					0.8311,
    					0.8654,
    					0.8946,
    					0.919,
    					0.9388,
    					0.9546,
    					0.967,
    					0.9764,
    					0.9834,
    					0.9886,
    					0.9923,
    					0.9949,
    					0.9967,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5674,
    				"std.error": 0.4811,
    				statistic: -1.1794,
    				"p.value": 0.2391,
    				"conf.low": -1.5139,
    				"conf.high": 0.379,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					6.1604e-20,
    					2.7305e-19,
    					1.1786e-18,
    					4.9546e-18,
    					2.0283e-17,
    					8.0868e-17,
    					3.14e-16,
    					1.1874e-15,
    					4.3732e-15,
    					1.5686e-14,
    					5.4801e-14,
    					1.8647e-13,
    					6.1798e-13,
    					1.9948e-12,
    					6.272e-12,
    					1.9208e-11,
    					5.7302e-11,
    					1.6651e-10,
    					4.7134e-10,
    					1.2997e-9,
    					3.4915e-9,
    					9.1372e-9,
    					2.3296e-8,
    					5.7869e-8,
    					1.4006e-7,
    					3.3029e-7,
    					7.5894e-7,
    					0.0000016994,
    					0.0000037081,
    					0.0000078856,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0022,
    					0.0037,
    					0.0059,
    					0.0093,
    					0.0143,
    					0.0214,
    					0.0313,
    					0.0448,
    					0.0625,
    					0.0853,
    					0.1138,
    					0.1485,
    					0.1897,
    					0.2372,
    					0.2906,
    					0.3491,
    					0.4114,
    					0.476,
    					0.5412,
    					0.6053,
    					0.6668,
    					0.724,
    					0.7759,
    					0.8218,
    					0.8612,
    					0.8943,
    					0.9212,
    					0.9426,
    					0.9592,
    					0.9716,
    					0.9807,
    					0.9872,
    					0.9917,
    					0.9948,
    					0.9968,
    					0.9981,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8153,
    				"std.error": 0.7931,
    				statistic: -1.028,
    				"p.value": 0.3047,
    				"conf.low": -2.3755,
    				"conf.high": 0.7449,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					8.0055e-16,
    					2.3648e-15,
    					6.8612e-15,
    					1.9553e-14,
    					5.4732e-14,
    					1.5048e-13,
    					4.064e-13,
    					1.0781e-12,
    					2.8091e-12,
    					7.1899e-12,
    					1.8077e-11,
    					4.4644e-11,
    					1.0831e-10,
    					2.5812e-10,
    					6.0428e-10,
    					1.3897e-9,
    					3.1398e-9,
    					6.969e-9,
    					1.5196e-8,
    					3.2553e-8,
    					6.8511e-8,
    					1.4166e-7,
    					2.878e-7,
    					5.7448e-7,
    					0.0000011267,
    					0.0000021713,
    					0.0000041116,
    					0.0000076507,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0034,
    					0.0051,
    					0.0075,
    					0.0107,
    					0.0152,
    					0.0212,
    					0.0291,
    					0.0392,
    					0.0521,
    					0.0682,
    					0.0878,
    					0.1113,
    					0.139,
    					0.1711,
    					0.2076,
    					0.2483,
    					0.293,
    					0.341,
    					0.3917,
    					0.4444,
    					0.4981,
    					0.5518,
    					0.6046,
    					0.6555,
    					0.7037,
    					0.7486,
    					0.7896,
    					0.8264,
    					0.8588,
    					0.8869,
    					0.9107,
    					0.9306,
    					0.9468,
    					0.9599,
    					0.9703,
    					0.9783,
    					0.9844,
    					0.989,
    					0.9923,
    					0.9948,
    					0.9965,
    					0.9977,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3128,
    				"std.error": 0.9139,
    				statistic: 1.4365,
    				"p.value": 0.1518,
    				"conf.low": -0.485,
    				"conf.high": 3.1106,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.0344e-12,
    					8.417e-12,
    					2.2859e-11,
    					6.0783e-11,
    					1.5825e-10,
    					4.0338e-10,
    					1.0068e-9,
    					2.4606e-9,
    					5.8883e-9,
    					1.3798e-8,
    					3.1661e-8,
    					7.1145e-8,
    					1.5655e-7,
    					3.3737e-7,
    					7.1203e-7,
    					0.0000014718,
    					0.0000029796,
    					0.0000059083,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0028,
    					0.0044,
    					0.0067,
    					0.01,
    					0.0147,
    					0.0211,
    					0.0298,
    					0.0412,
    					0.0559,
    					0.0745,
    					0.0974,
    					0.1252,
    					0.158,
    					0.1961,
    					0.2392,
    					0.2871,
    					0.3391,
    					0.3943,
    					0.4518,
    					0.5102,
    					0.5685,
    					0.6253,
    					0.6795,
    					0.7301,
    					0.7764,
    					0.8178,
    					0.854,
    					0.8851,
    					0.9111,
    					0.9325,
    					0.9496,
    					0.9631,
    					0.9735,
    					0.9813,
    					0.9871,
    					0.9912,
    					0.9942,
    					0.9962,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 132,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option4",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.7682,
    				"std.error": 0.539,
    				statistic: 12.5568,
    				"p.value": 4.6164e-28,
    				"conf.low": 5.7063,
    				"conf.high": 7.83,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					7.2209e-11,
    					1.5281e-10,
    					3.1922e-10,
    					6.5824e-10,
    					1.3398e-9,
    					2.6919e-9,
    					5.3391e-9,
    					1.0453e-8,
    					2.0203e-8,
    					3.8547e-8,
    					7.2602e-8,
    					1.3499e-7,
    					2.4779e-7,
    					4.4903e-7,
    					8.0332e-7,
    					0.0000014188,
    					0.0000024741,
    					0.0000042595,
    					0.0000072403,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0011,
    					0.0016,
    					0.0023,
    					0.0032,
    					0.0046,
    					0.0063,
    					0.0087,
    					0.0119,
    					0.0159,
    					0.0211,
    					0.0277,
    					0.0359,
    					0.046,
    					0.0582,
    					0.0728,
    					0.0902,
    					0.1104,
    					0.1337,
    					0.1601,
    					0.1898,
    					0.2226,
    					0.2585,
    					0.2971,
    					0.3381,
    					0.3812,
    					0.4258,
    					0.4714,
    					0.5174,
    					0.5631,
    					0.608,
    					0.6515,
    					0.6931,
    					0.7323,
    					0.7689,
    					0.8024,
    					0.8329,
    					0.8601,
    					0.8842,
    					0.9051,
    					0.9232,
    					0.9385,
    					0.9513,
    					0.9618,
    					0.9705,
    					0.9774,
    					0.9829,
    					0.9872,
    					0.9906,
    					0.9931,
    					0.995,
    					0.9965,
    					0.9975,
    					0.9983,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.0167,
    				"std.error": 0.6075,
    				statistic: -1.6735,
    				"p.value": 0.0956,
    				"conf.low": -2.2136,
    				"conf.high": 0.1802,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.9749e-11,
    					1.3925e-10,
    					3.1922e-10,
    					7.199e-10,
    					1.5971e-9,
    					3.4854e-9,
    					7.4827e-9,
    					1.5804e-8,
    					3.2837e-8,
    					6.7122e-8,
    					1.3499e-7,
    					2.6708e-7,
    					5.1991e-7,
    					9.9577e-7,
    					0.0000018765,
    					0.0000034794,
    					0.0000063481,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0016,
    					0.0025,
    					0.0037,
    					0.0054,
    					0.0078,
    					0.011,
    					0.0154,
    					0.0211,
    					0.0286,
    					0.0382,
    					0.0503,
    					0.0652,
    					0.0833,
    					0.1051,
    					0.1306,
    					0.1601,
    					0.1937,
    					0.2313,
    					0.2726,
    					0.3173,
    					0.3648,
    					0.4145,
    					0.4656,
    					0.5173,
    					0.5687,
    					0.619,
    					0.6673,
    					0.713,
    					0.7555,
    					0.7943,
    					0.8292,
    					0.8601,
    					0.8869,
    					0.9099,
    					0.9292,
    					0.9451,
    					0.9581,
    					0.9685,
    					0.9766,
    					0.9829,
    					0.9877,
    					0.9913,
    					0.9939,
    					0.9958,
    					0.9972,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.5709,
    				"std.error": 0.8522,
    				statistic: -1.8433,
    				"p.value": 0.0665,
    				"conf.low": -3.2499,
    				"conf.high": 0.108,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.305e-11,
    					7.5861e-11,
    					1.7146e-10,
    					3.816e-10,
    					8.3628e-10,
    					1.8047e-9,
    					3.8352e-9,
    					8.0257e-9,
    					1.6539e-8,
    					3.3564e-8,
    					6.7077e-8,
    					1.3202e-7,
    					2.5589e-7,
    					4.8848e-7,
    					9.1835e-7,
    					0.0000017005,
    					0.0000031012,
    					0.0000055705,
    					0.0000098556,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.0019,
    					0.0029,
    					0.0042,
    					0.006,
    					0.0086,
    					0.012,
    					0.0165,
    					0.0224,
    					0.03,
    					0.0396,
    					0.0515,
    					0.0662,
    					0.084,
    					0.105,
    					0.1297,
    					0.1582,
    					0.1904,
    					0.2264,
    					0.2659,
    					0.3087,
    					0.3542,
    					0.4019,
    					0.4511,
    					0.5011,
    					0.5511,
    					0.6003,
    					0.6479,
    					0.6933,
    					0.736,
    					0.7753,
    					0.8112,
    					0.8432,
    					0.8715,
    					0.896,
    					0.9169,
    					0.9345,
    					0.9491,
    					0.9609,
    					0.9704,
    					0.9779,
    					0.9838,
    					0.9882,
    					0.9916,
    					0.9941,
    					0.9959,
    					0.9972,
    					0.9981,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.7621,
    				"std.error": 0.9771,
    				statistic: 1.8034,
    				"p.value": 0.0726,
    				"conf.low": -0.1628,
    				"conf.high": 3.687,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.7312e-12,
    					7.1112e-12,
    					1.8176e-11,
    					4.5604e-11,
    					1.1233e-10,
    					2.7162e-10,
    					6.448e-10,
    					1.5027e-9,
    					3.4383e-9,
    					7.7234e-9,
    					1.7033e-8,
    					3.6882e-8,
    					7.8411e-8,
    					1.6368e-7,
    					3.3547e-7,
    					6.7515e-7,
    					0.0000013342,
    					0.0000025892,
    					0.0000049341,
    					0.0000092338,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0018,
    					0.0028,
    					0.0042,
    					0.0063,
    					0.0092,
    					0.0131,
    					0.0186,
    					0.0258,
    					0.0352,
    					0.0472,
    					0.0624,
    					0.0811,
    					0.1038,
    					0.1308,
    					0.1622,
    					0.1982,
    					0.2387,
    					0.2833,
    					0.3315,
    					0.3827,
    					0.436,
    					0.4906,
    					0.5453,
    					0.5991,
    					0.6512,
    					0.7005,
    					0.7464,
    					0.7883,
    					0.8259,
    					0.8589,
    					0.8874,
    					0.9115,
    					0.9316,
    					0.9479,
    					0.961,
    					0.9713,
    					0.9792,
    					0.9852,
    					0.9896,
    					0.9928,
    					0.9952,
    					0.9968,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 133,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option5",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.3459,
    				"std.error": 0.4262,
    				statistic: 14.8881,
    				"p.value": 1.1679e-38,
    				"conf.low": 5.5074,
    				"conf.high": 7.1844,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.5298e-13,
    					1.5749e-12,
    					4.3925e-12,
    					1.1999e-11,
    					3.2101e-11,
    					8.4114e-11,
    					2.1587e-10,
    					5.4261e-10,
    					1.3359e-9,
    					3.2215e-9,
    					7.6094e-9,
    					1.7606e-8,
    					3.9903e-8,
    					8.859e-8,
    					1.9267e-7,
    					4.1051e-7,
    					8.5687e-7,
    					0.0000017523,
    					0.0000035107,
    					0.0000068918,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.003,
    					0.0047,
    					0.0071,
    					0.0105,
    					0.0153,
    					0.0219,
    					0.0308,
    					0.0424,
    					0.0573,
    					0.076,
    					0.0991,
    					0.127,
    					0.1599,
    					0.1979,
    					0.2409,
    					0.2885,
    					0.3402,
    					0.3951,
    					0.4521,
    					0.5101,
    					0.5679,
    					0.6243,
    					0.6782,
    					0.7285,
    					0.7746,
    					0.8159,
    					0.8521,
    					0.8833,
    					0.9094,
    					0.931,
    					0.9483,
    					0.962,
    					0.9726,
    					0.9806,
    					0.9865,
    					0.9908,
    					0.9938,
    					0.996,
    					0.9974,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5801,
    				"std.error": 0.528,
    				statistic: -1.0986,
    				"p.value": 0.2728,
    				"conf.low": -1.6188,
    				"conf.high": 0.4587,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					8.8564e-17,
    					3.0467e-16,
    					1.0253e-15,
    					3.3759e-15,
    					1.0874e-14,
    					3.4265e-14,
    					1.0564e-13,
    					3.1862e-13,
    					9.4023e-13,
    					2.7146e-12,
    					7.6681e-12,
    					2.1193e-11,
    					5.7309e-11,
    					1.5163e-10,
    					3.9257e-10,
    					9.9446e-10,
    					2.465e-9,
    					5.9791e-9,
    					1.4192e-8,
    					3.2964e-8,
    					7.4928e-8,
    					1.6668e-7,
    					3.6287e-7,
    					7.7317e-7,
    					0.0000016124,
    					0.0000032912,
    					0.0000065758,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0033,
    					0.0051,
    					0.0078,
    					0.0116,
    					0.017,
    					0.0244,
    					0.0343,
    					0.0473,
    					0.0639,
    					0.0848,
    					0.1104,
    					0.1411,
    					0.1772,
    					0.2186,
    					0.2651,
    					0.3161,
    					0.371,
    					0.4285,
    					0.4877,
    					0.5471,
    					0.6054,
    					0.6615,
    					0.7143,
    					0.7627,
    					0.8063,
    					0.8446,
    					0.8775,
    					0.9052,
    					0.928,
    					0.9463,
    					0.9607,
    					0.9718,
    					0.9802,
    					0.9863,
    					0.9908,
    					0.9939,
    					0.996,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.1708,
    				"std.error": 0.5852,
    				statistic: -2.0006,
    				"p.value": 0.0463,
    				"conf.low": -2.3222,
    				"conf.high": -0.0195,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.0813e-24,
    					6.9834e-24,
    					4.3629e-23,
    					2.6369e-22,
    					1.5418e-21,
    					8.7215e-21,
    					4.7728e-20,
    					2.5269e-19,
    					1.2943e-18,
    					6.4141e-18,
    					3.0753e-17,
    					1.4266e-16,
    					6.4028e-16,
    					2.7805e-15,
    					1.1683e-14,
    					4.75e-14,
    					1.8687e-13,
    					7.1135e-13,
    					2.6204e-12,
    					9.3408e-12,
    					3.2223e-11,
    					1.0757e-10,
    					3.4756e-10,
    					1.0868e-9,
    					3.2893e-9,
    					9.6357e-9,
    					2.7323e-8,
    					7.4997e-8,
    					1.9928e-7,
    					5.1266e-7,
    					0.0000012769,
    					0.0000030794,
    					0.0000071913,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0036,
    					0.0061,
    					0.01,
    					0.0161,
    					0.025,
    					0.0378,
    					0.0555,
    					0.0791,
    					0.1097,
    					0.1479,
    					0.1942,
    					0.2484,
    					0.3098,
    					0.3769,
    					0.448,
    					0.5208,
    					0.593,
    					0.6621,
    					0.7261,
    					0.7835,
    					0.8332,
    					0.8749,
    					0.9087,
    					0.9352,
    					0.9553,
    					0.9701,
    					0.9805,
    					0.9877,
    					0.9925,
    					0.9955,
    					0.9974,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.7901,
    				"std.error": 0.724,
    				statistic: 1.0912,
    				"p.value": 0.276,
    				"conf.low": -0.6343,
    				"conf.high": 2.2144,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					8.6226e-16,
    					3.7933e-15,
    					1.6132e-14,
    					6.6326e-14,
    					2.6363e-13,
    					1.013e-12,
    					3.7635e-12,
    					1.3518e-11,
    					4.6949e-11,
    					1.5765e-10,
    					5.1191e-10,
    					1.6073e-9,
    					4.8801e-9,
    					1.4329e-8,
    					4.0692e-8,
    					1.1176e-7,
    					2.969e-7,
    					7.6293e-7,
    					0.0000018965,
    					0.0000045609,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0016,
    					0.0028,
    					0.0049,
    					0.0083,
    					0.0135,
    					0.0213,
    					0.0328,
    					0.0489,
    					0.0707,
    					0.0994,
    					0.1357,
    					0.1803,
    					0.233,
    					0.2934,
    					0.3601,
    					0.4314,
    					0.5051,
    					0.5785,
    					0.6493,
    					0.7153,
    					0.7747,
    					0.8263,
    					0.8697,
    					0.905,
    					0.9327,
    					0.9537,
    					0.969,
    					0.9799,
    					0.9874,
    					0.9923,
    					0.9955,
    					0.9974,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 134,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option5",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.8195,
    				"std.error": 0.3457,
    				statistic: 16.834,
    				"p.value": 2.864e-46,
    				"conf.low": 5.1394,
    				"conf.high": 6.4996,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.0543e-13,
    					7.6235e-13,
    					2.7408e-12,
    					9.5464e-12,
    					3.2215e-11,
    					1.0532e-10,
    					3.3364e-10,
    					1.0241e-9,
    					3.0457e-9,
    					8.7775e-9,
    					2.4514e-8,
    					6.6346e-8,
    					1.7402e-7,
    					4.4241e-7,
    					0.0000010902,
    					0.0000026039,
    					0.0000060294,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0029,
    					0.0049,
    					0.0082,
    					0.0132,
    					0.0207,
    					0.0314,
    					0.0464,
    					0.0667,
    					0.0932,
    					0.1268,
    					0.168,
    					0.217,
    					0.2734,
    					0.3362,
    					0.404,
    					0.4747,
    					0.5463,
    					0.6164,
    					0.6829,
    					0.7439,
    					0.7982,
    					0.8449,
    					0.8839,
    					0.9153,
    					0.9399,
    					0.9585,
    					0.9722,
    					0.9818,
    					0.9885,
    					0.9929,
    					0.9958,
    					0.9975,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3736,
    				"std.error": 0.4247,
    				statistic: -0.8796,
    				"p.value": 0.3797,
    				"conf.low": -1.209,
    				"conf.high": 0.4619,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.795e-27,
    					2.7757e-26,
    					1.9621e-25,
    					1.3405e-24,
    					8.851e-24,
    					5.6484e-23,
    					3.4838e-22,
    					2.0768e-21,
    					1.1966e-20,
    					6.6638e-20,
    					3.5869e-19,
    					1.8662e-18,
    					9.3847e-18,
    					4.5618e-17,
    					2.1435e-16,
    					9.7354e-16,
    					4.2743e-15,
    					1.8141e-14,
    					7.4429e-14,
    					2.9521e-13,
    					1.132e-12,
    					4.1964e-12,
    					1.504e-11,
    					5.2117e-11,
    					1.7461e-10,
    					5.6567e-10,
    					1.772e-9,
    					5.3676e-9,
    					1.5723e-8,
    					4.4542e-8,
    					1.2204e-7,
    					3.234e-7,
    					8.2897e-7,
    					0.0000020555,
    					0.0000049306,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0017,
    					0.003,
    					0.0052,
    					0.0087,
    					0.0141,
    					0.0223,
    					0.0341,
    					0.0507,
    					0.0732,
    					0.1026,
    					0.1398,
    					0.1852,
    					0.2388,
    					0.2999,
    					0.3672,
    					0.4389,
    					0.5127,
    					0.586,
    					0.6564,
    					0.7218,
    					0.7805,
    					0.8313,
    					0.8738,
    					0.9083,
    					0.9352,
    					0.9556,
    					0.9704,
    					0.9809,
    					0.988,
    					0.9927,
    					0.9957,
    					0.9976,
    					0.9986,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.3401,
    				"std.error": 0.6554,
    				statistic: -0.519,
    				"p.value": 0.6041,
    				"conf.low": -1.6294,
    				"conf.high": 0.9491,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.7166e-25,
    					9.3599e-25,
    					4.9704e-24,
    					2.5706e-23,
    					1.2948e-22,
    					6.3517e-22,
    					3.0347e-21,
    					1.4121e-20,
    					6.3997e-20,
    					2.8248e-19,
    					1.2144e-18,
    					5.0852e-18,
    					2.0739e-17,
    					8.2385e-17,
    					3.1876e-16,
    					1.2013e-15,
    					4.4099e-15,
    					1.5768e-14,
    					5.4921e-14,
    					1.8633e-13,
    					6.1582e-13,
    					1.9826e-12,
    					6.2177e-12,
    					1.8996e-11,
    					5.654e-11,
    					1.6394e-10,
    					4.6312e-10,
    					1.2746e-9,
    					3.4179e-9,
    					8.9297e-9,
    					2.2732e-8,
    					5.6387e-8,
    					1.3629e-7,
    					3.2102e-7,
    					7.3688e-7,
    					0.0000016484,
    					0.000003594,
    					0.0000076374,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0022,
    					0.0036,
    					0.0057,
    					0.009,
    					0.0139,
    					0.0208,
    					0.0304,
    					0.0435,
    					0.0609,
    					0.0831,
    					0.1111,
    					0.1451,
    					0.1856,
    					0.2324,
    					0.2852,
    					0.3431,
    					0.4049,
    					0.4692,
    					0.5343,
    					0.5985,
    					0.6601,
    					0.7177,
    					0.7702,
    					0.8167,
    					0.8568,
    					0.8906,
    					0.9182,
    					0.9402,
    					0.9572,
    					0.9701,
    					0.9796,
    					0.9864,
    					0.9912,
    					0.9944,
    					0.9965,
    					0.9979,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.8077,
    				"std.error": 0.821,
    				statistic: 0.9838,
    				"p.value": 0.3259,
    				"conf.low": -0.8074,
    				"conf.high": 2.4228,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					9.5324e-13,
    					3.0424e-12,
    					9.459e-12,
    					2.8647e-11,
    					8.4519e-11,
    					2.4292e-10,
    					6.8018e-10,
    					1.8554e-9,
    					4.9311e-9,
    					1.2768e-8,
    					3.2212e-8,
    					7.9185e-8,
    					1.8967e-7,
    					4.427e-7,
    					0.0000010069,
    					0.000002232,
    					0.000004822,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0026,
    					0.0043,
    					0.0069,
    					0.0107,
    					0.0163,
    					0.0243,
    					0.0352,
    					0.0499,
    					0.0692,
    					0.0937,
    					0.1241,
    					0.1608,
    					0.2039,
    					0.2533,
    					0.3083,
    					0.368,
    					0.431,
    					0.4959,
    					0.5609,
    					0.6243,
    					0.6845,
    					0.7401,
    					0.7903,
    					0.8342,
    					0.8717,
    					0.9028,
    					0.928,
    					0.9479,
    					0.9631,
    					0.9745,
    					0.9828,
    					0.9887,
    					0.9927,
    					0.9954,
    					0.9972,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 135,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option1",
    		fertile: "fer_option5",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option1"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.3459,
    				"std.error": 0.4232,
    				statistic: 14.9937,
    				"p.value": 3.4463e-36,
    				"conf.low": 5.5121,
    				"conf.high": 7.1797,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.8305e-13,
    					1.107e-12,
    					3.1321e-12,
    					8.6765e-12,
    					2.3533e-11,
    					6.2496e-11,
    					1.625e-10,
    					4.1374e-10,
    					1.0314e-9,
    					2.5178e-9,
    					6.0185e-9,
    					1.4088e-8,
    					3.2292e-8,
    					7.2486e-8,
    					1.5934e-7,
    					3.4305e-7,
    					7.2332e-7,
    					0.0000014937,
    					0.0000030213,
    					0.0000059859,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0029,
    					0.0044,
    					0.0068,
    					0.0101,
    					0.0148,
    					0.0212,
    					0.0299,
    					0.0413,
    					0.056,
    					0.0746,
    					0.0976,
    					0.1253,
    					0.1582,
    					0.1962,
    					0.2394,
    					0.2872,
    					0.3391,
    					0.3943,
    					0.4518,
    					0.5102,
    					0.5684,
    					0.6252,
    					0.6794,
    					0.73,
    					0.7762,
    					0.8176,
    					0.8538,
    					0.8849,
    					0.911,
    					0.9323,
    					0.9495,
    					0.963,
    					0.9734,
    					0.9813,
    					0.987,
    					0.9912,
    					0.9941,
    					0.9962,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5801,
    				"std.error": 0.5243,
    				statistic: -1.1064,
    				"p.value": 0.2697,
    				"conf.low": -1.613,
    				"conf.high": 0.4528,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.4281e-17,
    					1.9e-16,
    					6.504e-16,
    					2.1774e-15,
    					7.1294e-15,
    					2.283e-14,
    					7.1501e-14,
    					2.1902e-13,
    					6.5615e-13,
    					1.9227e-12,
    					5.5103e-12,
    					1.5447e-11,
    					4.2353e-11,
    					1.1359e-10,
    					2.9799e-10,
    					7.6468e-10,
    					1.9195e-9,
    					4.7134e-9,
    					1.1322e-8,
    					2.6606e-8,
    					6.1166e-8,
    					1.3757e-7,
    					3.0272e-7,
    					6.5175e-7,
    					0.0000013729,
    					0.0000028299,
    					0.0000057078,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0031,
    					0.0049,
    					0.0074,
    					0.0112,
    					0.0164,
    					0.0236,
    					0.0333,
    					0.0461,
    					0.0626,
    					0.0833,
    					0.1088,
    					0.1394,
    					0.1755,
    					0.217,
    					0.2636,
    					0.3149,
    					0.3701,
    					0.428,
    					0.4876,
    					0.5474,
    					0.6062,
    					0.6626,
    					0.7156,
    					0.7643,
    					0.808,
    					0.8463,
    					0.8792,
    					0.9068,
    					0.9294,
    					0.9476,
    					0.9618,
    					0.9727,
    					0.9809,
    					0.9869,
    					0.9912,
    					0.9942,
    					0.9962,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8666,
    				"std.error": 0.6938,
    				statistic: -1.2489,
    				"p.value": 0.2129,
    				"conf.low": -2.2334,
    				"conf.high": 0.5003,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					8.2002e-20,
    					3.3219e-19,
    					1.3144e-18,
    					5.0801e-18,
    					1.9178e-17,
    					7.0717e-17,
    					2.5471e-16,
    					8.9615e-16,
    					3.0798e-15,
    					1.0339e-14,
    					3.3904e-14,
    					1.0861e-13,
    					3.3985e-13,
    					1.0389e-12,
    					3.1024e-12,
    					9.0507e-12,
    					2.5795e-11,
    					7.1821e-11,
    					1.9537e-10,
    					5.1921e-10,
    					1.3481e-9,
    					3.4201e-9,
    					8.4776e-9,
    					2.0533e-8,
    					4.8592e-8,
    					1.1237e-7,
    					2.5392e-7,
    					5.6074e-7,
    					0.0000012101,
    					0.0000025524,
    					0.0000052614,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0034,
    					0.0053,
    					0.0082,
    					0.0124,
    					0.0182,
    					0.0263,
    					0.0373,
    					0.0517,
    					0.0702,
    					0.0934,
    					0.1218,
    					0.1559,
    					0.1956,
    					0.241,
    					0.2916,
    					0.3466,
    					0.4051,
    					0.4658,
    					0.5273,
    					0.5881,
    					0.6469,
    					0.7024,
    					0.7535,
    					0.7995,
    					0.8399,
    					0.8746,
    					0.9037,
    					0.9275,
    					0.9465,
    					0.9613,
    					0.9726,
    					0.981,
    					0.9871,
    					0.9914,
    					0.9944,
    					0.9964,
    					0.9978,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.0142,
    				"std.error": 0.8697,
    				statistic: 1.1662,
    				"p.value": 0.2447,
    				"conf.low": -0.699,
    				"conf.high": 2.7275,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.8994e-12,
    					8.4745e-12,
    					2.4198e-11,
    					6.7498e-11,
    					1.8394e-10,
    					4.8974e-10,
    					1.2739e-9,
    					3.2375e-9,
    					8.0389e-9,
    					1.9503e-8,
    					4.6235e-8,
    					1.071e-7,
    					2.4242e-7,
    					5.3621e-7,
    					0.0000011591,
    					0.0000024486,
    					0.0000050554,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0033,
    					0.0052,
    					0.008,
    					0.0121,
    					0.0179,
    					0.0259,
    					0.0367,
    					0.0509,
    					0.0692,
    					0.0921,
    					0.1203,
    					0.1541,
    					0.1936,
    					0.2388,
    					0.2892,
    					0.344,
    					0.4024,
    					0.463,
    					0.5245,
    					0.5855,
    					0.6444,
    					0.7001,
    					0.7514,
    					0.7977,
    					0.8384,
    					0.8733,
    					0.9026,
    					0.9266,
    					0.9458,
    					0.9608,
    					0.9722,
    					0.9807,
    					0.9869,
    					0.9913,
    					0.9943,
    					0.9964,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 136,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2553,
    				"std.error": 0.5469,
    				statistic: 11.4388,
    				"p.value": 4.8768e-23,
    				"conf.low": 5.1761,
    				"conf.high": 7.3345,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.6974e-8,
    					6.9073e-8,
    					1.2743e-7,
    					2.3218e-7,
    					4.1779e-7,
    					7.4243e-7,
    					0.000001303,
    					0.0000022586,
    					0.0000038667,
    					0.0000065381,
    					0,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.002,
    					0.0028,
    					0.004,
    					0.0055,
    					0.0076,
    					0.0103,
    					0.0139,
    					0.0185,
    					0.0242,
    					0.0315,
    					0.0404,
    					0.0513,
    					0.0644,
    					0.08,
    					0.0983,
    					0.1194,
    					0.1436,
    					0.1709,
    					0.2013,
    					0.2347,
    					0.271,
    					0.3099,
    					0.351,
    					0.394,
    					0.4383,
    					0.4834,
    					0.5287,
    					0.5736,
    					0.6176,
    					0.6601,
    					0.7007,
    					0.7389,
    					0.7744,
    					0.8071,
    					0.8366,
    					0.8631,
    					0.8865,
    					0.9068,
    					0.9244,
    					0.9393,
    					0.9518,
    					0.9621,
    					0.9706,
    					0.9774,
    					0.9829,
    					0.9871,
    					0.9905,
    					0.993,
    					0.9949,
    					0.9964,
    					0.9974,
    					0.9982,
    					0.9988,
    					0.9992,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.3193,
    				"std.error": 0.7033,
    				statistic: -1.876,
    				"p.value": 0.0623,
    				"conf.low": -2.7072,
    				"conf.high": 0.0685,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.4245e-7,
    					2.5681e-7,
    					4.574e-7,
    					8.0484e-7,
    					0.0000013992,
    					0.0000024031,
    					0.0000040779,
    					0.000006837,
    					0,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.0019,
    					0.0027,
    					0.0038,
    					0.0053,
    					0.0072,
    					0.0098,
    					0.0132,
    					0.0175,
    					0.0229,
    					0.0297,
    					0.0382,
    					0.0484,
    					0.0607,
    					0.0754,
    					0.0927,
    					0.1127,
    					0.1356,
    					0.1615,
    					0.1904,
    					0.2223,
    					0.2571,
    					0.2945,
    					0.3342,
    					0.3759,
    					0.4191,
    					0.4632,
    					0.5079,
    					0.5524,
    					0.5963,
    					0.639,
    					0.6801,
    					0.719,
    					0.7555,
    					0.7893,
    					0.8201,
    					0.848,
    					0.8729,
    					0.8947,
    					0.9137,
    					0.93,
    					0.9439,
    					0.9554,
    					0.965,
    					0.9728,
    					0.9791,
    					0.9841,
    					0.9881,
    					0.9912,
    					0.9935,
    					0.9953,
    					0.9966,
    					0.9976,
    					0.9983,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.5731,
    				"std.error": 0.7246,
    				statistic: -2.1711,
    				"p.value": 0.0313,
    				"conf.low": -3.003,
    				"conf.high": -0.1432,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					8.1529e-15,
    					2.5548e-14,
    					7.8355e-14,
    					2.3521e-13,
    					6.9107e-13,
    					1.9874e-12,
    					5.5942e-12,
    					1.5413e-11,
    					4.1568e-11,
    					1.0973e-10,
    					2.8356e-10,
    					7.1728e-10,
    					1.7761e-9,
    					4.3053e-9,
    					1.0217e-8,
    					2.3734e-8,
    					5.3981e-8,
    					1.202e-7,
    					2.6204e-7,
    					5.5933e-7,
    					0.000001169,
    					0.0000023923,
    					0.0000047939,
    					0.0000094074,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0025,
    					0.004,
    					0.0061,
    					0.0092,
    					0.0136,
    					0.0196,
    					0.0278,
    					0.0386,
    					0.0527,
    					0.0706,
    					0.0928,
    					0.1199,
    					0.152,
    					0.1894,
    					0.232,
    					0.2794,
    					0.3311,
    					0.3862,
    					0.4438,
    					0.5025,
    					0.5612,
    					0.6186,
    					0.6735,
    					0.7249,
    					0.7719,
    					0.814,
    					0.851,
    					0.8827,
    					0.9092,
    					0.9311,
    					0.9486,
    					0.9624,
    					0.973,
    					0.981,
    					0.9869,
    					0.9911,
    					0.9941,
    					0.9962,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.2639,
    				"std.error": 0.9612,
    				statistic: 2.3553,
    				"p.value": 0.0196,
    				"conf.low": 0.3671,
    				"conf.high": 4.1608,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.5528e-14,
    					7.3675e-14,
    					2.0859e-13,
    					5.7935e-13,
    					1.5786e-12,
    					4.2196e-12,
    					1.1066e-11,
    					2.8469e-11,
    					7.1858e-11,
    					1.7795e-10,
    					4.3233e-10,
    					1.0305e-9,
    					2.4102e-9,
    					5.5307e-9,
    					1.2452e-8,
    					2.751e-8,
    					5.9635e-8,
    					1.2685e-7,
    					2.6477e-7,
    					5.4231e-7,
    					0.0000010901,
    					0.0000021502,
    					0.0000041626,
    					0.0000079087,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0027,
    					0.0041,
    					0.0062,
    					0.0091,
    					0.0131,
    					0.0187,
    					0.026,
    					0.0357,
    					0.0481,
    					0.0638,
    					0.0832,
    					0.1067,
    					0.1346,
    					0.1672,
    					0.2046,
    					0.2464,
    					0.2925,
    					0.3422,
    					0.3948,
    					0.4494,
    					0.505,
    					0.5605,
    					0.6148,
    					0.6669,
    					0.7161,
    					0.7614,
    					0.8025,
    					0.8389,
    					0.8707,
    					0.8979,
    					0.9206,
    					0.9393,
    					0.9543,
    					0.9662,
    					0.9755,
    					0.9825,
    					0.9877,
    					0.9915,
    					0.9942,
    					0.9962,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 137,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.5421,
    				"std.error": 0.428,
    				statistic: 12.949,
    				"p.value": 2.0702e-27,
    				"conf.low": 4.6975,
    				"conf.high": 6.3868,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					9.4717e-8,
    					2.0499e-7,
    					4.3471e-7,
    					9.0325e-7,
    					0.0000018391,
    					0.0000036692,
    					0.0000071737,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.0031,
    					0.0047,
    					0.0071,
    					0.0105,
    					0.0153,
    					0.0219,
    					0.0307,
    					0.0422,
    					0.057,
    					0.0756,
    					0.0985,
    					0.1261,
    					0.1587,
    					0.1964,
    					0.239,
    					0.2862,
    					0.3375,
    					0.392,
    					0.4487,
    					0.5065,
    					0.5641,
    					0.6204,
    					0.6743,
    					0.7247,
    					0.771,
    					0.8125,
    					0.849,
    					0.8805,
    					0.907,
    					0.9289,
    					0.9466,
    					0.9606,
    					0.9715,
    					0.9797,
    					0.9859,
    					0.9903,
    					0.9935,
    					0.9957,
    					0.9972,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.6411,
    				"std.error": 0.5673,
    				statistic: -1.1301,
    				"p.value": 0.26,
    				"conf.low": -1.7606,
    				"conf.high": 0.4784,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.0264e-14,
    					5.8378e-14,
    					1.6502e-13,
    					4.5768e-13,
    					1.2456e-12,
    					3.3264e-12,
    					8.7166e-12,
    					2.2413e-11,
    					5.6554e-11,
    					1.4003e-10,
    					3.4024e-10,
    					8.1129e-10,
    					1.8984e-9,
    					4.3593e-9,
    					9.8242e-9,
    					2.1728e-8,
    					4.7164e-8,
    					1.0048e-7,
    					2.1009e-7,
    					4.3116e-7,
    					8.6852e-7,
    					0.0000017173,
    					0.0000033329,
    					0.0000063499,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0035,
    					0.0052,
    					0.0077,
    					0.0112,
    					0.016,
    					0.0225,
    					0.0311,
    					0.0421,
    					0.0562,
    					0.0737,
    					0.0951,
    					0.1208,
    					0.151,
    					0.1858,
    					0.2253,
    					0.2691,
    					0.3168,
    					0.3677,
    					0.4211,
    					0.476,
    					0.5314,
    					0.5861,
    					0.6393,
    					0.6898,
    					0.737,
    					0.7803,
    					0.8191,
    					0.8533,
    					0.8829,
    					0.908,
    					0.9289,
    					0.9459,
    					0.9595,
    					0.9702,
    					0.9785,
    					0.9847,
    					0.9893,
    					0.9926,
    					0.995,
    					0.9967,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.6282,
    				"std.error": 0.7932,
    				statistic: -0.792,
    				"p.value": 0.4294,
    				"conf.low": -2.1936,
    				"conf.high": 0.9371,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.1668e-16,
    					3.5554e-16,
    					1.0641e-15,
    					3.1281e-15,
    					9.0322e-15,
    					2.5616e-14,
    					7.1359e-14,
    					1.9526e-13,
    					5.2479e-13,
    					1.3855e-12,
    					3.5929e-12,
    					9.1521e-12,
    					2.2901e-11,
    					5.6289e-11,
    					1.3591e-10,
    					3.2237e-10,
    					7.5114e-10,
    					1.7194e-9,
    					3.8663e-9,
    					8.541e-9,
    					1.8536e-8,
    					3.9523e-8,
    					8.2794e-8,
    					1.704e-7,
    					3.4458e-7,
    					6.8462e-7,
    					0.0000013365,
    					0.0000025638,
    					0.0000048326,
    					0.0000089511,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0016,
    					0.0025,
    					0.0038,
    					0.0056,
    					0.0082,
    					0.0118,
    					0.0166,
    					0.023,
    					0.0314,
    					0.0422,
    					0.0559,
    					0.0728,
    					0.0934,
    					0.1179,
    					0.1468,
    					0.18,
    					0.2176,
    					0.2593,
    					0.3048,
    					0.3536,
    					0.4049,
    					0.4579,
    					0.5117,
    					0.5653,
    					0.6176,
    					0.6679,
    					0.7154,
    					0.7593,
    					0.7993,
    					0.835,
    					0.8663,
    					0.8933,
    					0.9161,
    					0.935,
    					0.9504,
    					0.9628,
    					0.9725,
    					0.98,
    					0.9857,
    					0.9899,
    					0.993,
    					0.9953,
    					0.9968,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.9889,
    				"std.error": 1.065,
    				statistic: 1.8676,
    				"p.value": 0.0635,
    				"conf.low": -0.1128,
    				"conf.high": 4.0906,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.1346e-11,
    					7.2225e-11,
    					1.6385e-10,
    					3.6597e-10,
    					8.0483e-10,
    					1.7427e-9,
    					3.7156e-9,
    					7.8e-9,
    					1.6123e-8,
    					3.2817e-8,
    					6.5772e-8,
    					1.298e-7,
    					2.5226e-7,
    					4.8277e-7,
    					9.0984e-7,
    					0.0000016886,
    					0.0000030863,
    					0.0000055556,
    					0.000009849,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.002,
    					0.0029,
    					0.0043,
    					0.0061,
    					0.0087,
    					0.0122,
    					0.0168,
    					0.0228,
    					0.0305,
    					0.0403,
    					0.0525,
    					0.0674,
    					0.0855,
    					0.1069,
    					0.132,
    					0.1608,
    					0.1935,
    					0.23,
    					0.27,
    					0.3132,
    					0.3591,
    					0.4072,
    					0.4567,
    					0.5069,
    					0.557,
    					0.6062,
    					0.6538,
    					0.699,
    					0.7414,
    					0.7804,
    					0.8159,
    					0.8475,
    					0.8753,
    					0.8994,
    					0.9198,
    					0.937,
    					0.9511,
    					0.9626,
    					0.9718,
    					0.979,
    					0.9846,
    					0.9889,
    					0.9921,
    					0.9944,
    					0.9961,
    					0.9974,
    					0.9982,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 138,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2553,
    				"std.error": 0.5486,
    				statistic: 11.4022,
    				"p.value": 1.9811e-21,
    				"conf.low": 5.1702,
    				"conf.high": 7.3404,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					4.0674e-8,
    					7.5693e-8,
    					1.3912e-7,
    					2.5254e-7,
    					4.5277e-7,
    					8.0175e-7,
    					0.0000014023,
    					0.0000024225,
    					0.0000041336,
    					0.0000069669,
    					0,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.001,
    					0.0014,
    					0.002,
    					0.0029,
    					0.0041,
    					0.0057,
    					0.0078,
    					0.0105,
    					0.0141,
    					0.0188,
    					0.0246,
    					0.0319,
    					0.0409,
    					0.0519,
    					0.065,
    					0.0807,
    					0.099,
    					0.1202,
    					0.1444,
    					0.1717,
    					0.2021,
    					0.2354,
    					0.2717,
    					0.3105,
    					0.3515,
    					0.3943,
    					0.4385,
    					0.4834,
    					0.5286,
    					0.5734,
    					0.6172,
    					0.6596,
    					0.7001,
    					0.7382,
    					0.7737,
    					0.8063,
    					0.8359,
    					0.8623,
    					0.8857,
    					0.9061,
    					0.9237,
    					0.9387,
    					0.9513,
    					0.9617,
    					0.9702,
    					0.9771,
    					0.9826,
    					0.9869,
    					0.9903,
    					0.9929,
    					0.9948,
    					0.9963,
    					0.9974,
    					0.9982,
    					0.9987,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.3193,
    				"std.error": 0.7055,
    				statistic: -1.87,
    				"p.value": 0.0637,
    				"conf.low": -2.7148,
    				"conf.high": 0.0761,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.554e-7,
    					2.7915e-7,
    					4.9542e-7,
    					8.6872e-7,
    					0.0000015051,
    					0.0000025765,
    					0.000004358,
    					0.0000072835,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.002,
    					0.0028,
    					0.0039,
    					0.0054,
    					0.0074,
    					0.01,
    					0.0134,
    					0.0178,
    					0.0233,
    					0.0302,
    					0.0386,
    					0.0489,
    					0.0613,
    					0.0761,
    					0.0934,
    					0.1134,
    					0.1363,
    					0.1622,
    					0.1912,
    					0.2231,
    					0.2578,
    					0.2951,
    					0.3347,
    					0.3763,
    					0.4193,
    					0.4634,
    					0.5079,
    					0.5523,
    					0.596,
    					0.6386,
    					0.6795,
    					0.7184,
    					0.7548,
    					0.7885,
    					0.8194,
    					0.8472,
    					0.8721,
    					0.894,
    					0.913,
    					0.9294,
    					0.9433,
    					0.9549,
    					0.9646,
    					0.9724,
    					0.9788,
    					0.9839,
    					0.9879,
    					0.991,
    					0.9934,
    					0.9952,
    					0.9965,
    					0.9975,
    					0.9983,
    					0.9988,
    					0.9992,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.3414,
    				"std.error": 0.8636,
    				statistic: -1.5532,
    				"p.value": 0.1228,
    				"conf.low": -3.0496,
    				"conf.high": 0.3669,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					9.8063e-12,
    					2.2757e-11,
    					5.2021e-11,
    					1.1714e-10,
    					2.5985e-10,
    					5.6782e-10,
    					1.2223e-9,
    					2.592e-9,
    					5.4148e-9,
    					1.1144e-8,
    					2.2594e-8,
    					4.513e-8,
    					8.8809e-8,
    					1.7218e-7,
    					3.2888e-7,
    					6.1894e-7,
    					0.0000011477,
    					0.0000020967,
    					0.0000037744,
    					0.0000066949,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.0031,
    					0.0044,
    					0.0063,
    					0.0089,
    					0.0123,
    					0.0169,
    					0.0228,
    					0.0304,
    					0.04,
    					0.0519,
    					0.0665,
    					0.084,
    					0.1048,
    					0.1291,
    					0.157,
    					0.1887,
    					0.224,
    					0.2628,
    					0.3047,
    					0.3494,
    					0.3963,
    					0.4447,
    					0.494,
    					0.5434,
    					0.5921,
    					0.6394,
    					0.6847,
    					0.7273,
    					0.7669,
    					0.8031,
    					0.8356,
    					0.8645,
    					0.8896,
    					0.9113,
    					0.9296,
    					0.9448,
    					0.9573,
    					0.9674,
    					0.9755,
    					0.9818,
    					0.9867,
    					0.9904,
    					0.9931,
    					0.9952,
    					0.9967,
    					0.9977,
    					0.9985,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.6672,
    				"std.error": 1.1437,
    				statistic: 2.332,
    				"p.value": 0.0212,
    				"conf.low": 0.405,
    				"conf.high": 4.9295,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.1939e-11,
    					2.6416e-11,
    					5.7663e-11,
    					1.2419e-10,
    					2.6388e-10,
    					5.5321e-10,
    					1.1443e-9,
    					2.3352e-9,
    					4.7021e-9,
    					9.3419e-9,
    					1.8313e-8,
    					3.542e-8,
    					6.7599e-8,
    					1.273e-7,
    					2.3655e-7,
    					4.3373e-7,
    					7.8476e-7,
    					0.0000014011,
    					0.0000024687,
    					0.0000042922,
    					0.0000073648,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0017,
    					0.0025,
    					0.0036,
    					0.0051,
    					0.007,
    					0.0097,
    					0.0132,
    					0.0177,
    					0.0236,
    					0.0309,
    					0.04,
    					0.0512,
    					0.0648,
    					0.081,
    					0.1001,
    					0.1223,
    					0.1477,
    					0.1765,
    					0.2085,
    					0.2438,
    					0.282,
    					0.3229,
    					0.3661,
    					0.4111,
    					0.4573,
    					0.504,
    					0.5507,
    					0.5967,
    					0.6414,
    					0.6842,
    					0.7247,
    					0.7625,
    					0.7972,
    					0.8287,
    					0.8569,
    					0.8817,
    					0.9034,
    					0.922,
    					0.9377,
    					0.9509,
    					0.9617,
    					0.9705,
    					0.9775,
    					0.9831,
    					0.9875,
    					0.9908,
    					0.9933,
    					0.9952,
    					0.9966,
    					0.9976,
    					0.9984,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 139,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.3893,
    				"std.error": 0.4892,
    				statistic: 13.0604,
    				"p.value": 1.0718e-28,
    				"conf.low": 5.4247,
    				"conf.high": 7.3539,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.5953e-10,
    					3.5864e-10,
    					7.9365e-10,
    					1.7289e-9,
    					3.7074e-9,
    					7.8262e-9,
    					1.6263e-8,
    					3.3271e-8,
    					6.7006e-8,
    					1.3285e-7,
    					2.5932e-7,
    					4.9834e-7,
    					9.4288e-7,
    					0.0000017564,
    					0.0000032214,
    					0.0000058176,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.0031,
    					0.0046,
    					0.0066,
    					0.0093,
    					0.013,
    					0.0179,
    					0.0243,
    					0.0326,
    					0.0429,
    					0.0559,
    					0.0717,
    					0.0907,
    					0.1132,
    					0.1395,
    					0.1697,
    					0.2037,
    					0.2415,
    					0.2828,
    					0.3273,
    					0.3743,
    					0.4233,
    					0.4735,
    					0.5241,
    					0.5744,
    					0.6234,
    					0.6706,
    					0.7151,
    					0.7566,
    					0.7946,
    					0.8288,
    					0.8591,
    					0.8856,
    					0.9083,
    					0.9275,
    					0.9434,
    					0.9565,
    					0.967,
    					0.9753,
    					0.9818,
    					0.9868,
    					0.9905,
    					0.9933,
    					0.9953,
    					0.9968,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.4351,
    				"std.error": 0.6424,
    				statistic: -2.2342,
    				"p.value": 0.0266,
    				"conf.low": -2.7017,
    				"conf.high": -0.1686,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.6717e-8,
    					5.2789e-8,
    					1.028e-7,
    					1.9727e-7,
    					3.7311e-7,
    					6.955e-7,
    					0.0000012777,
    					0.0000023137,
    					0.0000041292,
    					0.0000072638,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.0031,
    					0.0044,
    					0.0063,
    					0.0088,
    					0.0122,
    					0.0167,
    					0.0225,
    					0.0299,
    					0.0392,
    					0.0507,
    					0.0649,
    					0.0819,
    					0.1021,
    					0.1257,
    					0.1528,
    					0.1836,
    					0.2179,
    					0.2557,
    					0.2967,
    					0.3404,
    					0.3864,
    					0.4341,
    					0.4827,
    					0.5316,
    					0.58,
    					0.6273,
    					0.6726,
    					0.7156,
    					0.7557,
    					0.7925,
    					0.8258,
    					0.8555,
    					0.8816,
    					0.9042,
    					0.9234,
    					0.9395,
    					0.9529,
    					0.9638,
    					0.9725,
    					0.9794,
    					0.9848,
    					0.9889,
    					0.992,
    					0.9943,
    					0.996,
    					0.9973,
    					0.9981,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.5489,
    				"std.error": 0.6636,
    				statistic: -2.3341,
    				"p.value": 0.0206,
    				"conf.low": -2.8573,
    				"conf.high": -0.2405,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.9058e-17,
    					7.455e-17,
    					2.8422e-16,
    					1.0561e-15,
    					3.8251e-15,
    					1.3503e-14,
    					4.6463e-14,
    					1.5583e-13,
    					5.0944e-13,
    					1.6234e-12,
    					5.0428e-12,
    					1.5269e-11,
    					4.5071e-11,
    					1.2969e-10,
    					3.638e-10,
    					9.9489e-10,
    					2.6525e-9,
    					6.8947e-9,
    					1.7473e-8,
    					4.3175e-8,
    					1.0402e-7,
    					2.4438e-7,
    					5.5984e-7,
    					0.0000012507,
    					0.0000027248,
    					0.0000057896,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0028,
    					0.0045,
    					0.0072,
    					0.0111,
    					0.0167,
    					0.0247,
    					0.0356,
    					0.0502,
    					0.0692,
    					0.0934,
    					0.1233,
    					0.1593,
    					0.2015,
    					0.2499,
    					0.3038,
    					0.3624,
    					0.4243,
    					0.4882,
    					0.5524,
    					0.6153,
    					0.6753,
    					0.731,
    					0.7815,
    					0.826,
    					0.8643,
    					0.8964,
    					0.9225,
    					0.9434,
    					0.9595,
    					0.9717,
    					0.9807,
    					0.9871,
    					0.9916,
    					0.9946,
    					0.9967,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.0626,
    				"std.error": 0.8888,
    				statistic: 2.3206,
    				"p.value": 0.0213,
    				"conf.low": 0.3101,
    				"conf.high": 3.8152,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.2298e-15,
    					4.0945e-15,
    					1.3329e-14,
    					4.2428e-14,
    					1.3206e-13,
    					4.0191e-13,
    					1.1961e-12,
    					3.4808e-12,
    					9.9054e-12,
    					2.7565e-11,
    					7.5012e-11,
    					1.9962e-10,
    					5.1953e-10,
    					1.3223e-9,
    					3.2915e-9,
    					8.013e-9,
    					1.9079e-8,
    					4.4431e-8,
    					1.012e-7,
    					2.2548e-7,
    					4.914e-7,
    					0.0000010476,
    					0.0000021847,
    					0.0000044571,
    					0.0000088963,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0027,
    					0.0043,
    					0.0066,
    					0.01,
    					0.0148,
    					0.0214,
    					0.0304,
    					0.0424,
    					0.0579,
    					0.0776,
    					0.102,
    					0.1315,
    					0.1665,
    					0.2069,
    					0.2526,
    					0.3032,
    					0.3579,
    					0.4156,
    					0.4752,
    					0.5354,
    					0.5948,
    					0.6521,
    					0.7061,
    					0.7559,
    					0.8007,
    					0.8402,
    					0.8741,
    					0.9027,
    					0.9262,
    					0.9451,
    					0.96,
    					0.9714,
    					0.9799,
    					0.9862,
    					0.9907,
    					0.9939,
    					0.9961,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 140,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.6978,
    				"std.error": 0.3948,
    				statistic: 14.4308,
    				"p.value": 5.9269e-33,
    				"conf.low": 4.9193,
    				"conf.high": 6.4764,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					7.6469e-10,
    					2.0037e-9,
    					5.1249e-9,
    					1.2796e-8,
    					3.1189e-8,
    					7.4213e-8,
    					1.724e-7,
    					3.91e-7,
    					8.6582e-7,
    					0.000001872,
    					0.000003952,
    					0.0000081473,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0019,
    					0.0031,
    					0.0049,
    					0.0077,
    					0.0118,
    					0.0175,
    					0.0256,
    					0.0365,
    					0.051,
    					0.0697,
    					0.0933,
    					0.1223,
    					0.1572,
    					0.198,
    					0.2446,
    					0.2966,
    					0.3532,
    					0.4132,
    					0.4753,
    					0.538,
    					0.5997,
    					0.6591,
    					0.7148,
    					0.7657,
    					0.8111,
    					0.8507,
    					0.8843,
    					0.9121,
    					0.9347,
    					0.9524,
    					0.9661,
    					0.9763,
    					0.9839,
    					0.9892,
    					0.993,
    					0.9955,
    					0.9972,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.8428,
    				"std.error": 0.5245,
    				statistic: -1.6068,
    				"p.value": 0.1097,
    				"conf.low": -1.877,
    				"conf.high": 0.1914,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.3234e-15,
    					1.0791e-14,
    					3.4271e-14,
    					1.0645e-13,
    					3.2338e-13,
    					9.6088e-13,
    					2.7925e-12,
    					7.9381e-12,
    					2.2071e-11,
    					6.0027e-11,
    					1.5969e-10,
    					4.1554e-10,
    					1.0578e-9,
    					2.6339e-9,
    					6.4159e-9,
    					1.5289e-8,
    					3.5643e-8,
    					8.1294e-8,
    					1.814e-7,
    					3.9603e-7,
    					8.4597e-7,
    					0.0000017682,
    					0.0000036163,
    					0.0000072375,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0023,
    					0.0036,
    					0.0056,
    					0.0086,
    					0.0127,
    					0.0186,
    					0.0266,
    					0.0373,
    					0.0512,
    					0.0691,
    					0.0913,
    					0.1185,
    					0.151,
    					0.1889,
    					0.2321,
    					0.2804,
    					0.3331,
    					0.3893,
    					0.4479,
    					0.5076,
    					0.5672,
    					0.6253,
    					0.6807,
    					0.7323,
    					0.7794,
    					0.8213,
    					0.8578,
    					0.8889,
    					0.9148,
    					0.9359,
    					0.9527,
    					0.9657,
    					0.9757,
    					0.9831,
    					0.9885,
    					0.9923,
    					0.995,
    					0.9968,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9996,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.5123,
    				"std.error": 0.7288,
    				statistic: -0.7029,
    				"p.value": 0.4829,
    				"conf.low": -1.9494,
    				"conf.high": 0.9248,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.0809e-20,
    					1.9403e-19,
    					7.253e-19,
    					2.6541e-18,
    					9.5074e-18,
    					3.3339e-17,
    					1.1445e-16,
    					3.846e-16,
    					1.2653e-15,
    					4.0749e-15,
    					1.2848e-14,
    					3.9656e-14,
    					1.1983e-13,
    					3.5451e-13,
    					1.0268e-12,
    					2.9115e-12,
    					8.083e-12,
    					2.1971e-11,
    					5.8469e-11,
    					1.5235e-10,
    					3.8868e-10,
    					9.7093e-10,
    					2.3749e-9,
    					5.688e-9,
    					1.334e-8,
    					3.0635e-8,
    					6.8897e-8,
    					1.5173e-7,
    					3.2726e-7,
    					6.9126e-7,
    					0.00000143,
    					0.0000028975,
    					0.0000057502,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0028,
    					0.0043,
    					0.0066,
    					0.0099,
    					0.0145,
    					0.0208,
    					0.0294,
    					0.0407,
    					0.0552,
    					0.0737,
    					0.0964,
    					0.124,
    					0.1566,
    					0.1945,
    					0.2374,
    					0.2851,
    					0.3369,
    					0.392,
    					0.4494,
    					0.5079,
    					0.5662,
    					0.6231,
    					0.6774,
    					0.7282,
    					0.7746,
    					0.8162,
    					0.8527,
    					0.8839,
    					0.9102,
    					0.9317,
    					0.949,
    					0.9627,
    					0.9732,
    					0.9811,
    					0.9869,
    					0.9911,
    					0.9941,
    					0.9961,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.8682,
    				"std.error": 0.9941,
    				statistic: 1.8793,
    				"p.value": 0.0616,
    				"conf.low": -0.0918,
    				"conf.high": 3.8283,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.952e-12,
    					7.5515e-12,
    					1.8975e-11,
    					4.6835e-11,
    					1.1355e-10,
    					2.7045e-10,
    					6.3276e-10,
    					1.4543e-9,
    					3.2835e-9,
    					7.283e-9,
    					1.587e-8,
    					3.3972e-8,
    					7.1448e-8,
    					1.4763e-7,
    					2.997e-7,
    					5.9779e-7,
    					0.0000011715,
    					0.0000022559,
    					0.0000042685,
    					0.0000079363,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0023,
    					0.0035,
    					0.0052,
    					0.0076,
    					0.011,
    					0.0156,
    					0.0217,
    					0.0297,
    					0.04,
    					0.0531,
    					0.0694,
    					0.0893,
    					0.1131,
    					0.1411,
    					0.1735,
    					0.2103,
    					0.2514,
    					0.2963,
    					0.3445,
    					0.3955,
    					0.4483,
    					0.502,
    					0.5557,
    					0.6084,
    					0.6591,
    					0.7072,
    					0.7518,
    					0.7925,
    					0.829,
    					0.8611,
    					0.8888,
    					0.9124,
    					0.9319,
    					0.948,
    					0.9608,
    					0.971,
    					0.9789,
    					0.9848,
    					0.9893,
    					0.9926,
    					0.9949,
    					0.9966,
    					0.9978,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 141,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.3893,
    				"std.error": 0.4893,
    				statistic: 13.0573,
    				"p.value": 1.1743e-26,
    				"conf.low": 5.4226,
    				"conf.high": 7.356,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.6107e-10,
    					3.6196e-10,
    					8.0071e-10,
    					1.7436e-9,
    					3.7377e-9,
    					7.8875e-9,
    					1.6385e-8,
    					3.3509e-8,
    					6.7464e-8,
    					1.3372e-7,
    					2.6093e-7,
    					5.0129e-7,
    					9.4818e-7,
    					0.0000017658,
    					0.0000032377,
    					0.0000058454,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.0031,
    					0.0046,
    					0.0066,
    					0.0093,
    					0.013,
    					0.018,
    					0.0244,
    					0.0326,
    					0.043,
    					0.0559,
    					0.0717,
    					0.0908,
    					0.1133,
    					0.1396,
    					0.1697,
    					0.2038,
    					0.2416,
    					0.2829,
    					0.3273,
    					0.3743,
    					0.4233,
    					0.4735,
    					0.5241,
    					0.5743,
    					0.6234,
    					0.6705,
    					0.7151,
    					0.7566,
    					0.7945,
    					0.8287,
    					0.8591,
    					0.8855,
    					0.9083,
    					0.9275,
    					0.9434,
    					0.9565,
    					0.967,
    					0.9753,
    					0.9818,
    					0.9868,
    					0.9905,
    					0.9933,
    					0.9953,
    					0.9968,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.4351,
    				"std.error": 0.6425,
    				statistic: -2.2336,
    				"p.value": 0.027,
    				"conf.low": -2.7045,
    				"conf.high": -0.1658,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.6911e-8,
    					5.3156e-8,
    					1.0348e-7,
    					1.9852e-7,
    					3.7537e-7,
    					6.995e-7,
    					0.0000012847,
    					0.0000023257,
    					0.0000041496,
    					0.0000072978,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.0031,
    					0.0044,
    					0.0063,
    					0.0088,
    					0.0122,
    					0.0167,
    					0.0225,
    					0.0299,
    					0.0392,
    					0.0508,
    					0.0649,
    					0.082,
    					0.1021,
    					0.1257,
    					0.1529,
    					0.1836,
    					0.218,
    					0.2558,
    					0.2967,
    					0.3405,
    					0.3865,
    					0.4341,
    					0.4827,
    					0.5316,
    					0.58,
    					0.6272,
    					0.6726,
    					0.7156,
    					0.7556,
    					0.7924,
    					0.8258,
    					0.8555,
    					0.8816,
    					0.9041,
    					0.9234,
    					0.9395,
    					0.9529,
    					0.9637,
    					0.9725,
    					0.9794,
    					0.9848,
    					0.9889,
    					0.992,
    					0.9943,
    					0.996,
    					0.9973,
    					0.9981,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.2037,
    				"std.error": 0.7822,
    				statistic: -1.5388,
    				"p.value": 0.1259,
    				"conf.low": -2.7491,
    				"conf.high": 0.3417,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.6893e-14,
    					4.8084e-14,
    					1.3436e-13,
    					3.6862e-13,
    					9.9283e-13,
    					2.6253e-12,
    					6.8158e-12,
    					1.7373e-11,
    					4.3476e-11,
    					1.0682e-10,
    					2.5771e-10,
    					6.1044e-10,
    					1.4197e-9,
    					3.2422e-9,
    					7.2701e-9,
    					1.6007e-8,
    					3.461e-8,
    					7.348e-8,
    					1.532e-7,
    					3.1366e-7,
    					6.3066e-7,
    					0.0000012453,
    					0.000002415,
    					0.0000045998,
    					0.0000086049,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0026,
    					0.004,
    					0.0059,
    					0.0086,
    					0.0124,
    					0.0175,
    					0.0243,
    					0.0333,
    					0.0448,
    					0.0592,
    					0.0772,
    					0.099,
    					0.125,
    					0.1554,
    					0.1903,
    					0.2297,
    					0.2732,
    					0.3205,
    					0.3709,
    					0.4236,
    					0.4778,
    					0.5323,
    					0.5863,
    					0.6387,
    					0.6885,
    					0.7352,
    					0.778,
    					0.8166,
    					0.8506,
    					0.8802,
    					0.9054,
    					0.9264,
    					0.9437,
    					0.9576,
    					0.9686,
    					0.9771,
    					0.9836,
    					0.9884,
    					0.992,
    					0.9945,
    					0.9963,
    					0.9976,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.4606,
    				"std.error": 1.0585,
    				statistic: 2.3245,
    				"p.value": 0.0214,
    				"conf.low": 0.3693,
    				"conf.high": 4.5518,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.0897e-12,
    					2.6805e-12,
    					6.49e-12,
    					1.5468e-11,
    					3.6289e-11,
    					8.3808e-11,
    					1.9053e-10,
    					4.2638e-10,
    					9.3932e-10,
    					2.0371e-9,
    					4.3492e-9,
    					9.141e-9,
    					1.8914e-8,
    					3.8528e-8,
    					7.7267e-8,
    					1.5256e-7,
    					2.9656e-7,
    					5.676e-7,
    					0.0000010696,
    					0.0000019845,
    					0.0000036256,
    					0.0000065221,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0023,
    					0.0034,
    					0.0049,
    					0.007,
    					0.0099,
    					0.0138,
    					0.0189,
    					0.0256,
    					0.0341,
    					0.0449,
    					0.0583,
    					0.0746,
    					0.0941,
    					0.1172,
    					0.1441,
    					0.1748,
    					0.2094,
    					0.2477,
    					0.2895,
    					0.3343,
    					0.3816,
    					0.4308,
    					0.481,
    					0.5316,
    					0.5816,
    					0.6304,
    					0.6771,
    					0.7212,
    					0.7622,
    					0.7996,
    					0.8332,
    					0.863,
    					0.8889,
    					0.9111,
    					0.9298,
    					0.9453,
    					0.958,
    					0.9682,
    					0.9762,
    					0.9825,
    					0.9873,
    					0.9909,
    					0.9936,
    					0.9955,
    					0.9969,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 142,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4105,
    				"std.error": 0.5053,
    				statistic: 12.6854,
    				"p.value": 1.7149e-26,
    				"conf.low": 5.4131,
    				"conf.high": 7.408,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					4.3823e-10,
    					9.4212e-10,
    					1.9958e-9,
    					4.1659e-9,
    					8.5686e-9,
    					1.7367e-8,
    					3.4686e-8,
    					6.8268e-8,
    					1.3241e-7,
    					2.5307e-7,
    					4.7667e-7,
    					8.8483e-7,
    					0.0000016187,
    					0.0000029184,
    					0.0000051859,
    					0.0000090822,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0025,
    					0.0036,
    					0.0052,
    					0.0073,
    					0.0102,
    					0.014,
    					0.0191,
    					0.0256,
    					0.0338,
    					0.0441,
    					0.0569,
    					0.0723,
    					0.0908,
    					0.1126,
    					0.1379,
    					0.1668,
    					0.1993,
    					0.2354,
    					0.2749,
    					0.3173,
    					0.3623,
    					0.4093,
    					0.4576,
    					0.5066,
    					0.5555,
    					0.6035,
    					0.65,
    					0.6944,
    					0.7361,
    					0.7746,
    					0.8098,
    					0.8414,
    					0.8693,
    					0.8936,
    					0.9145,
    					0.9321,
    					0.9468,
    					0.9589,
    					0.9686,
    					0.9763,
    					0.9824,
    					0.9871,
    					0.9907,
    					0.9933,
    					0.9953,
    					0.9967,
    					0.9978,
    					0.9985,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.5026,
    				"std.error": 0.6836,
    				statistic: -2.1982,
    				"p.value": 0.0293,
    				"conf.low": -2.8519,
    				"conf.high": -0.1534,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.6822e-7,
    					4.8518e-7,
    					8.6647e-7,
    					0.0000015277,
    					0.0000026592,
    					0.0000045701,
    					0.0000077547,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0011,
    					0.0016,
    					0.0024,
    					0.0034,
    					0.0048,
    					0.0066,
    					0.0091,
    					0.0123,
    					0.0165,
    					0.0219,
    					0.0286,
    					0.0371,
    					0.0474,
    					0.0599,
    					0.0749,
    					0.0926,
    					0.1132,
    					0.1369,
    					0.1637,
    					0.1938,
    					0.227,
    					0.2632,
    					0.3022,
    					0.3435,
    					0.3868,
    					0.4315,
    					0.4772,
    					0.5231,
    					0.5688,
    					0.6135,
    					0.6568,
    					0.6981,
    					0.737,
    					0.7732,
    					0.8064,
    					0.8365,
    					0.8633,
    					0.8869,
    					0.9075,
    					0.9252,
    					0.9402,
    					0.9527,
    					0.963,
    					0.9714,
    					0.9782,
    					0.9835,
    					0.9877,
    					0.9909,
    					0.9934,
    					0.9952,
    					0.9966,
    					0.9976,
    					0.9984,
    					0.9989,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.0569,
    				"std.error": 0.6742,
    				statistic: -1.5676,
    				"p.value": 0.1188,
    				"conf.low": -2.3877,
    				"conf.high": 0.2738,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					9.7835e-20,
    					4.1141e-19,
    					1.6875e-18,
    					6.7513e-18,
    					2.6346e-17,
    					1.0029e-16,
    					3.7238e-16,
    					1.3487e-15,
    					4.765e-15,
    					1.6422e-14,
    					5.5209e-14,
    					1.8106e-13,
    					5.7926e-13,
    					1.8079e-12,
    					5.5044e-12,
    					1.635e-11,
    					4.7381e-11,
    					1.3396e-10,
    					3.695e-10,
    					9.944e-10,
    					2.6111e-9,
    					6.6898e-9,
    					1.6724e-8,
    					4.0796e-8,
    					9.711e-8,
    					2.2558e-7,
    					5.1137e-7,
    					0.0000011313,
    					0.0000024428,
    					0.0000051483,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.0039,
    					0.0061,
    					0.0095,
    					0.0143,
    					0.0212,
    					0.0307,
    					0.0435,
    					0.0602,
    					0.0817,
    					0.1084,
    					0.1409,
    					0.1794,
    					0.224,
    					0.2743,
    					0.3295,
    					0.3888,
    					0.4508,
    					0.514,
    					0.5769,
    					0.6379,
    					0.6955,
    					0.7487,
    					0.7965,
    					0.8384,
    					0.8742,
    					0.9041,
    					0.9284,
    					0.9477,
    					0.9626,
    					0.9738,
    					0.9821,
    					0.988,
    					0.9922,
    					0.995,
    					0.9969,
    					0.9981,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5639,
    				"std.error": 0.9536,
    				statistic: 1.64,
    				"p.value": 0.1028,
    				"conf.low": -0.3183,
    				"conf.high": 3.4461,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.5692e-12,
    					9.4622e-12,
    					2.4603e-11,
    					6.2739e-11,
    					1.5692e-10,
    					3.8494e-10,
    					9.2621e-10,
    					2.1858e-9,
    					5.0599e-9,
    					1.1489e-8,
    					2.5588e-8,
    					5.5905e-8,
    					1.1981e-7,
    					2.5189e-7,
    					5.1952e-7,
    					0.0000010512,
    					0.0000020866,
    					0.0000040638,
    					0.0000077653,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0028,
    					0.0042,
    					0.0064,
    					0.0094,
    					0.0136,
    					0.0193,
    					0.0269,
    					0.037,
    					0.0498,
    					0.0661,
    					0.0861,
    					0.1105,
    					0.1393,
    					0.1729,
    					0.2113,
    					0.2543,
    					0.3014,
    					0.3522,
    					0.4057,
    					0.461,
    					0.5171,
    					0.5728,
    					0.6272,
    					0.6791,
    					0.7277,
    					0.7724,
    					0.8126,
    					0.8481,
    					0.8788,
    					0.9049,
    					0.9265,
    					0.9442,
    					0.9584,
    					0.9695,
    					0.978,
    					0.9844,
    					0.9891,
    					0.9926,
    					0.995,
    					0.9967,
    					0.9979,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 143,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.8521,
    				"std.error": 0.399,
    				statistic: 14.6664,
    				"p.value": 3.5926e-32,
    				"conf.low": 5.0645,
    				"conf.high": 6.6396,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					9.7902e-11,
    					2.6679e-10,
    					7.1002e-10,
    					1.8454e-9,
    					4.6842e-9,
    					1.1612e-8,
    					2.8117e-8,
    					6.6495e-8,
    					1.536e-7,
    					3.4657e-7,
    					7.6388e-7,
    					0.0000016447,
    					0.0000034595,
    					0.0000071091,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0027,
    					0.0043,
    					0.0067,
    					0.0103,
    					0.0154,
    					0.0225,
    					0.0322,
    					0.0452,
    					0.062,
    					0.0835,
    					0.11,
    					0.1421,
    					0.1801,
    					0.2238,
    					0.2731,
    					0.3271,
    					0.3851,
    					0.4457,
    					0.5077,
    					0.5694,
    					0.6295,
    					0.6866,
    					0.7396,
    					0.7875,
    					0.8298,
    					0.8663,
    					0.897,
    					0.9223,
    					0.9425,
    					0.9584,
    					0.9705,
    					0.9795,
    					0.9861,
    					0.9907,
    					0.994,
    					0.9962,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.9821,
    				"std.error": 0.5621,
    				statistic: -1.7472,
    				"p.value": 0.0824,
    				"conf.low": -2.0915,
    				"conf.high": 0.1273,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.0891e-12,
    					2.9423e-12,
    					7.7972e-12,
    					2.0269e-11,
    					5.1684e-11,
    					1.2928e-10,
    					3.1723e-10,
    					7.636e-10,
    					1.8031e-9,
    					4.1771e-9,
    					9.4932e-9,
    					2.1166e-8,
    					4.63e-8,
    					9.9367e-8,
    					2.0923e-7,
    					4.3227e-7,
    					8.7628e-7,
    					0.000001743,
    					0.000003402,
    					0.0000065159,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0024,
    					0.0037,
    					0.0056,
    					0.0083,
    					0.012,
    					0.0171,
    					0.024,
    					0.0331,
    					0.0449,
    					0.0598,
    					0.0784,
    					0.101,
    					0.128,
    					0.1597,
    					0.1961,
    					0.2372,
    					0.2825,
    					0.3317,
    					0.384,
    					0.4385,
    					0.4941,
    					0.5499,
    					0.6047,
    					0.6576,
    					0.7075,
    					0.7537,
    					0.7957,
    					0.8331,
    					0.8658,
    					0.8938,
    					0.9173,
    					0.9366,
    					0.9523,
    					0.9646,
    					0.9743,
    					0.9816,
    					0.9871,
    					0.9911,
    					0.9939,
    					0.996,
    					0.9974,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.1209,
    				"std.error": 0.7382,
    				statistic: -0.1638,
    				"p.value": 0.8701,
    				"conf.low": -1.578,
    				"conf.high": 1.3362,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.0316e-21,
    					4.1107e-21,
    					1.6043e-20,
    					6.132e-20,
    					2.2956e-19,
    					8.4173e-19,
    					3.0229e-18,
    					1.0633e-17,
    					3.6633e-17,
    					1.2362e-16,
    					4.0857e-16,
    					1.3227e-15,
    					4.1942e-15,
    					1.3027e-14,
    					3.9632e-14,
    					1.181e-13,
    					3.4475e-13,
    					9.8577e-13,
    					2.7611e-12,
    					7.5755e-12,
    					2.0361e-11,
    					5.3608e-11,
    					1.3827e-10,
    					3.4937e-10,
    					8.648e-10,
    					2.0972e-9,
    					4.9826e-9,
    					1.1598e-8,
    					2.6449e-8,
    					5.9097e-8,
    					1.2938e-7,
    					2.7753e-7,
    					5.8334e-7,
    					0.0000012015,
    					0.0000024249,
    					0.0000047963,
    					0.0000092968,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0036,
    					0.0055,
    					0.0083,
    					0.0122,
    					0.0176,
    					0.0249,
    					0.0347,
    					0.0474,
    					0.0635,
    					0.0837,
    					0.1083,
    					0.1377,
    					0.1721,
    					0.2116,
    					0.256,
    					0.3048,
    					0.3573,
    					0.4127,
    					0.4699,
    					0.5277,
    					0.5849,
    					0.6404,
    					0.693,
    					0.742,
    					0.7865,
    					0.8263,
    					0.8609,
    					0.8906,
    					0.9154,
    					0.9357,
    					0.952,
    					0.9648,
    					0.9747,
    					0.9821,
    					0.9876,
    					0.9916,
    					0.9944,
    					0.9963,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.1259,
    				"std.error": 1.0581,
    				statistic: 1.0641,
    				"p.value": 0.2888,
    				"conf.low": -0.9626,
    				"conf.high": 3.2144,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.1098e-9,
    					8.6506e-9,
    					1.7925e-8,
    					3.6567e-8,
    					7.3439e-8,
    					1.4521e-7,
    					2.8267e-7,
    					5.4175e-7,
    					0.0000010223,
    					0.0000018994,
    					0.0000034746,
    					0.0000062588,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0022,
    					0.0033,
    					0.0048,
    					0.0068,
    					0.0097,
    					0.0135,
    					0.0185,
    					0.0251,
    					0.0335,
    					0.0442,
    					0.0574,
    					0.0735,
    					0.0928,
    					0.1157,
    					0.1423,
    					0.1728,
    					0.2072,
    					0.2453,
    					0.2869,
    					0.3316,
    					0.3788,
    					0.4279,
    					0.4781,
    					0.5287,
    					0.5788,
    					0.6277,
    					0.6746,
    					0.7188,
    					0.76,
    					0.7976,
    					0.8315,
    					0.8614,
    					0.8876,
    					0.91,
    					0.9289,
    					0.9446,
    					0.9574,
    					0.9677,
    					0.9759,
    					0.9822,
    					0.9871,
    					0.9908,
    					0.9935,
    					0.9955,
    					0.9969,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 144,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4105,
    				"std.error": 0.5066,
    				statistic: 12.653,
    				"p.value": 1.5914e-24,
    				"conf.low": 5.4083,
    				"conf.high": 7.4127,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					4.8348e-10,
    					1.0355e-9,
    					2.1853e-9,
    					4.5449e-9,
    					9.3148e-9,
    					1.8813e-8,
    					3.7447e-8,
    					7.3454e-8,
    					1.42e-7,
    					2.7054e-7,
    					5.0799e-7,
    					9.401e-7,
    					0.0000017147,
    					0.0000030826,
    					0.0000054623,
    					0.0000095401,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0011,
    					0.0017,
    					0.0025,
    					0.0037,
    					0.0053,
    					0.0074,
    					0.0104,
    					0.0142,
    					0.0193,
    					0.0259,
    					0.0342,
    					0.0445,
    					0.0573,
    					0.0728,
    					0.0914,
    					0.1132,
    					0.1385,
    					0.1674,
    					0.1999,
    					0.236,
    					0.2754,
    					0.3177,
    					0.3627,
    					0.4095,
    					0.4577,
    					0.5066,
    					0.5553,
    					0.6032,
    					0.6496,
    					0.6939,
    					0.7355,
    					0.774,
    					0.8092,
    					0.8407,
    					0.8687,
    					0.893,
    					0.9139,
    					0.9316,
    					0.9464,
    					0.9585,
    					0.9683,
    					0.9761,
    					0.9822,
    					0.9869,
    					0.9905,
    					0.9932,
    					0.9952,
    					0.9967,
    					0.9977,
    					0.9985,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.5026,
    				"std.error": 0.6853,
    				statistic: -2.1926,
    				"p.value": 0.0301,
    				"conf.low": -2.8583,
    				"conf.high": -0.147,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.8665e-7,
    					5.1702e-7,
    					9.2068e-7,
    					0.0000016188,
    					0.0000028101,
    					0.0000048167,
    					0.000008152,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0017,
    					0.0024,
    					0.0035,
    					0.0049,
    					0.0067,
    					0.0092,
    					0.0125,
    					0.0167,
    					0.0221,
    					0.029,
    					0.0374,
    					0.0478,
    					0.0604,
    					0.0754,
    					0.0932,
    					0.1138,
    					0.1375,
    					0.1644,
    					0.1944,
    					0.2276,
    					0.2637,
    					0.3026,
    					0.3439,
    					0.3871,
    					0.4317,
    					0.4772,
    					0.5231,
    					0.5686,
    					0.6132,
    					0.6564,
    					0.6977,
    					0.7365,
    					0.7726,
    					0.8058,
    					0.8358,
    					0.8627,
    					0.8864,
    					0.907,
    					0.9247,
    					0.9397,
    					0.9523,
    					0.9626,
    					0.9711,
    					0.9779,
    					0.9833,
    					0.9875,
    					0.9908,
    					0.9933,
    					0.9952,
    					0.9966,
    					0.9976,
    					0.9983,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.6794,
    				"std.error": 0.8011,
    				statistic: -0.8481,
    				"p.value": 0.3979,
    				"conf.low": -2.264,
    				"conf.high": 0.9052,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.8361e-16,
    					1.1345e-15,
    					3.297e-15,
    					9.4138e-15,
    					2.6411e-14,
    					7.2806e-14,
    					1.9721e-13,
    					5.2487e-13,
    					1.3727e-12,
    					3.5275e-12,
    					8.9075e-12,
    					2.2102e-11,
    					5.3892e-11,
    					1.2913e-10,
    					3.0403e-10,
    					7.0347e-10,
    					1.5996e-9,
    					3.5743e-9,
    					7.849e-9,
    					1.6939e-8,
    					3.5927e-8,
    					7.4891e-8,
    					1.5343e-7,
    					3.0894e-7,
    					6.1142e-7,
    					0.0000011894,
    					0.0000022741,
    					0.0000042741,
    					0.0000078963,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0022,
    					0.0033,
    					0.0049,
    					0.0072,
    					0.0104,
    					0.0147,
    					0.0204,
    					0.028,
    					0.0377,
    					0.05,
    					0.0654,
    					0.0842,
    					0.1068,
    					0.1335,
    					0.1645,
    					0.1997,
    					0.2392,
    					0.2825,
    					0.3294,
    					0.379,
    					0.4308,
    					0.4837,
    					0.537,
    					0.5896,
    					0.6406,
    					0.6893,
    					0.7348,
    					0.7767,
    					0.8145,
    					0.8481,
    					0.8774,
    					0.9025,
    					0.9235,
    					0.941,
    					0.9551,
    					0.9664,
    					0.9752,
    					0.982,
    					0.9872,
    					0.991,
    					0.9938,
    					0.9958,
    					0.9972,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.6465,
    				"std.error": 1.1277,
    				statistic: 1.46,
    				"p.value": 0.1467,
    				"conf.low": -0.5843,
    				"conf.high": 3.8773,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.1834e-9,
    					4.4456e-9,
    					8.9275e-9,
    					1.7682e-8,
    					3.4544e-8,
    					6.6561e-8,
    					1.265e-7,
    					2.3715e-7,
    					4.3852e-7,
    					7.9984e-7,
    					0.0000014391,
    					0.0000025541,
    					0.0000044716,
    					0.0000077231,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.0019,
    					0.0028,
    					0.004,
    					0.0056,
    					0.0078,
    					0.0108,
    					0.0146,
    					0.0197,
    					0.0261,
    					0.0342,
    					0.0442,
    					0.0565,
    					0.0714,
    					0.0891,
    					0.1098,
    					0.1339,
    					0.1613,
    					0.1921,
    					0.2263,
    					0.2636,
    					0.3039,
    					0.3467,
    					0.3916,
    					0.438,
    					0.4852,
    					0.5327,
    					0.5797,
    					0.6255,
    					0.6697,
    					0.7116,
    					0.7509,
    					0.787,
    					0.82,
    					0.8495,
    					0.8756,
    					0.8984,
    					0.9179,
    					0.9345,
    					0.9484,
    					0.9598,
    					0.9691,
    					0.9765,
    					0.9824,
    					0.9869,
    					0.9905,
    					0.9931,
    					0.9951,
    					0.9965,
    					0.9976,
    					0.9984,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 145,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.178,
    				"std.error": 0.5707,
    				statistic: 10.8246,
    				"p.value": 2.4086e-23,
    				"conf.low": 5.055,
    				"conf.high": 7.301,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.5746e-7,
    					4.5118e-7,
    					7.8168e-7,
    					0.0000013389,
    					0.0000022672,
    					0.0000037956,
    					0.0000062825,
    					0,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0002,
    					0.0004,
    					0.0005,
    					0.0008,
    					0.0011,
    					0.0016,
    					0.0022,
    					0.0031,
    					0.0043,
    					0.0059,
    					0.008,
    					0.0107,
    					0.0142,
    					0.0187,
    					0.0243,
    					0.0312,
    					0.0396,
    					0.0499,
    					0.0621,
    					0.0766,
    					0.0935,
    					0.113,
    					0.1352,
    					0.1603,
    					0.1883,
    					0.2191,
    					0.2525,
    					0.2885,
    					0.3268,
    					0.3669,
    					0.4086,
    					0.4514,
    					0.4947,
    					0.538,
    					0.581,
    					0.6229,
    					0.6635,
    					0.7023,
    					0.7388,
    					0.7729,
    					0.8044,
    					0.8331,
    					0.8588,
    					0.8818,
    					0.902,
    					0.9195,
    					0.9346,
    					0.9473,
    					0.958,
    					0.9669,
    					0.9742,
    					0.9801,
    					0.9848,
    					0.9885,
    					0.9914,
    					0.9936,
    					0.9953,
    					0.9966,
    					0.9976,
    					0.9983,
    					0.9988,
    					0.9992,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3444,
    				"std.error": 0.6392,
    				statistic: -0.5389,
    				"p.value": 0.5904,
    				"conf.low": -1.6022,
    				"conf.high": 0.9133,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.6688e-13,
    					8.9625e-13,
    					2.157e-12,
    					5.1146e-12,
    					1.1948e-11,
    					2.7499e-11,
    					6.2354e-11,
    					1.393e-10,
    					3.0663e-10,
    					6.6498e-10,
    					1.4209e-9,
    					2.9915e-9,
    					6.2054e-9,
    					1.2683e-8,
    					2.5544e-8,
    					5.069e-8,
    					9.9119e-8,
    					1.9098e-7,
    					3.6262e-7,
    					6.7846e-7,
    					0.0000012509,
    					0.0000022729,
    					0.0000040698,
    					0.0000071818,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.0031,
    					0.0045,
    					0.0064,
    					0.009,
    					0.0124,
    					0.017,
    					0.0229,
    					0.0305,
    					0.0401,
    					0.0519,
    					0.0664,
    					0.0838,
    					0.1044,
    					0.1285,
    					0.1561,
    					0.1875,
    					0.2224,
    					0.2609,
    					0.3024,
    					0.3467,
    					0.3932,
    					0.4413,
    					0.4902,
    					0.5393,
    					0.5879,
    					0.6351,
    					0.6803,
    					0.723,
    					0.7627,
    					0.7991,
    					0.8319,
    					0.861,
    					0.8865,
    					0.9085,
    					0.9271,
    					0.9427,
    					0.9555,
    					0.9659,
    					0.9743,
    					0.9808,
    					0.9859,
    					0.9898,
    					0.9927,
    					0.9948,
    					0.9964,
    					0.9975,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.5272,
    				"std.error": 0.755,
    				statistic: -2.0228,
    				"p.value": 0.044,
    				"conf.low": -3.0129,
    				"conf.high": -0.0416,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.5157e-14,
    					1.5949e-13,
    					4.5216e-13,
    					1.2568e-12,
    					3.425e-12,
    					9.1517e-12,
    					2.3976e-11,
    					6.1589e-11,
    					1.5512e-10,
    					3.831e-10,
    					9.2773e-10,
    					2.203e-9,
    					5.1295e-9,
    					1.1712e-8,
    					2.6225e-8,
    					5.7583e-8,
    					1.24e-7,
    					2.6185e-7,
    					5.4233e-7,
    					0.0000011016,
    					0.0000021947,
    					0.0000042887,
    					0.0000082204,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0019,
    					0.003,
    					0.0046,
    					0.0068,
    					0.0101,
    					0.0146,
    					0.0207,
    					0.0289,
    					0.0395,
    					0.0532,
    					0.0704,
    					0.0916,
    					0.1172,
    					0.1475,
    					0.1826,
    					0.2226,
    					0.267,
    					0.3156,
    					0.3676,
    					0.4221,
    					0.4782,
    					0.5347,
    					0.5906,
    					0.6446,
    					0.6959,
    					0.7436,
    					0.787,
    					0.8259,
    					0.8599,
    					0.8891,
    					0.9136,
    					0.9339,
    					0.9502,
    					0.9632,
    					0.9732,
    					0.9809,
    					0.9866,
    					0.9908,
    					0.9937,
    					0.9958,
    					0.9973,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.1434,
    				"std.error": 0.8558,
    				statistic: 1.3362,
    				"p.value": 0.1825,
    				"conf.low": -0.5404,
    				"conf.high": 2.8273,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.4189e-13,
    					1.3683e-12,
    					4.136e-12,
    					1.2203e-11,
    					3.5149e-11,
    					9.8827e-11,
    					2.7126e-10,
    					7.2686e-10,
    					1.9014e-9,
    					4.8561e-9,
    					1.2108e-8,
    					2.9477e-8,
    					7.0066e-8,
    					1.6261e-7,
    					3.6852e-7,
    					8.1552e-7,
    					0.0000017624,
    					0.0000037193,
    					0.0000076659,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0018,
    					0.0029,
    					0.0047,
    					0.0073,
    					0.0112,
    					0.0167,
    					0.0244,
    					0.0348,
    					0.0487,
    					0.0668,
    					0.0896,
    					0.1177,
    					0.1516,
    					0.1914,
    					0.237,
    					0.2881,
    					0.3438,
    					0.4031,
    					0.4648,
    					0.5273,
    					0.5891,
    					0.6488,
    					0.7051,
    					0.7568,
    					0.8031,
    					0.8437,
    					0.8783,
    					0.9071,
    					0.9306,
    					0.9492,
    					0.9636,
    					0.9745,
    					0.9825,
    					0.9882,
    					0.9923,
    					0.995,
    					0.9969,
    					0.9981,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 146,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.5514,
    				"std.error": 0.4478,
    				statistic: 12.3976,
    				"p.value": 6.8309e-29,
    				"conf.low": 4.6703,
    				"conf.high": 6.4325,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.8665e-7,
    					5.8322e-7,
    					0.0000011647,
    					0.0000022834,
    					0.0000043941,
    					0.0000083011,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0027,
    					0.0041,
    					0.0062,
    					0.009,
    					0.013,
    					0.0185,
    					0.0257,
    					0.0352,
    					0.0474,
    					0.0628,
    					0.0819,
    					0.1049,
    					0.1324,
    					0.1644,
    					0.2011,
    					0.2423,
    					0.2877,
    					0.3367,
    					0.3887,
    					0.4428,
    					0.4979,
    					0.5531,
    					0.6073,
    					0.6595,
    					0.7088,
    					0.7544,
    					0.796,
    					0.833,
    					0.8654,
    					0.8932,
    					0.9165,
    					0.9359,
    					0.9515,
    					0.9639,
    					0.9736,
    					0.9811,
    					0.9866,
    					0.9907,
    					0.9937,
    					0.9957,
    					0.9972,
    					0.9982,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.0868,
    				"std.error": 0.5042,
    				statistic: -0.1722,
    				"p.value": 0.8634,
    				"conf.low": -1.0789,
    				"conf.high": 0.9052,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.821e-22,
    					1.7204e-21,
    					7.561e-21,
    					3.2437e-20,
    					1.3584e-19,
    					5.5529e-19,
    					2.2159e-18,
    					8.6316e-18,
    					3.2823e-17,
    					1.2184e-16,
    					4.4152e-16,
    					1.5619e-15,
    					5.3941e-15,
    					1.8186e-14,
    					5.9858e-14,
    					1.9234e-13,
    					6.0341e-13,
    					1.8481e-12,
    					5.5264e-12,
    					1.6134e-11,
    					4.5991e-11,
    					1.28e-10,
    					3.4784e-10,
    					9.2297e-10,
    					2.3914e-9,
    					6.0502e-9,
    					1.4947e-8,
    					3.6062e-8,
    					8.4964e-8,
    					1.955e-7,
    					4.3932e-7,
    					9.6421e-7,
    					0.000002067,
    					0.0000043281,
    					0.0000088526,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0032,
    					0.005,
    					0.0078,
    					0.0119,
    					0.0177,
    					0.0257,
    					0.0366,
    					0.0509,
    					0.0695,
    					0.0929,
    					0.1216,
    					0.1561,
    					0.1964,
    					0.2425,
    					0.2939,
    					0.3499,
    					0.4093,
    					0.4708,
    					0.5331,
    					0.5946,
    					0.6538,
    					0.7095,
    					0.7606,
    					0.8063,
    					0.8463,
    					0.8804,
    					0.9088,
    					0.9318,
    					0.9501,
    					0.9642,
    					0.9749,
    					0.9828,
    					0.9884,
    					0.9924,
    					0.9951,
    					0.9969,
    					0.9981,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8205,
    				"std.error": 0.8175,
    				statistic: -1.0036,
    				"p.value": 0.3164,
    				"conf.low": -2.4292,
    				"conf.high": 0.7882,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.619e-15,
    					1.5575e-14,
    					4.2448e-14,
    					1.1375e-13,
    					2.9974e-13,
    					7.7664e-13,
    					1.9787e-12,
    					4.957e-12,
    					1.2211e-11,
    					2.958e-11,
    					7.0461e-11,
    					1.6505e-10,
    					3.8018e-10,
    					8.6117e-10,
    					1.9183e-9,
    					4.2023e-9,
    					9.0531e-9,
    					1.9181e-8,
    					3.9966e-8,
    					8.1899e-8,
    					1.6506e-7,
    					3.272e-7,
    					6.3792e-7,
    					0.0000012233,
    					0.0000023074,
    					0.000004281,
    					0.0000078129,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.002,
    					0.003,
    					0.0044,
    					0.0065,
    					0.0093,
    					0.0131,
    					0.0182,
    					0.0248,
    					0.0335,
    					0.0445,
    					0.0582,
    					0.0751,
    					0.0955,
    					0.1196,
    					0.1478,
    					0.1801,
    					0.2165,
    					0.2569,
    					0.3008,
    					0.3478,
    					0.3974,
    					0.4486,
    					0.5007,
    					0.5528,
    					0.604,
    					0.6534,
    					0.7004,
    					0.7442,
    					0.7845,
    					0.8208,
    					0.853,
    					0.8811,
    					0.9051,
    					0.9254,
    					0.9422,
    					0.9558,
    					0.9667,
    					0.9753,
    					0.982,
    					0.9871,
    					0.9908,
    					0.9936,
    					0.9956,
    					0.997,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5397,
    				"std.error": 0.9442,
    				statistic: 1.6307,
    				"p.value": 0.104,
    				"conf.low": -0.3182,
    				"conf.high": 3.3975,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.6396e-12,
    					7.1083e-12,
    					1.8767e-11,
    					4.8574e-11,
    					1.2326e-10,
    					3.0667e-10,
    					7.4804e-10,
    					1.789e-9,
    					4.195e-9,
    					9.6451e-9,
    					2.1744e-8,
    					4.8065e-8,
    					1.0418e-7,
    					2.2144e-7,
    					4.6156e-7,
    					9.4344e-7,
    					0.0000018912,
    					0.0000037179,
    					0.0000071683,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0028,
    					0.0042,
    					0.0064,
    					0.0094,
    					0.0137,
    					0.0195,
    					0.0273,
    					0.0376,
    					0.0508,
    					0.0674,
    					0.088,
    					0.113,
    					0.1426,
    					0.1771,
    					0.2165,
    					0.2604,
    					0.3086,
    					0.3603,
    					0.4147,
    					0.4708,
    					0.5275,
    					0.5836,
    					0.6381,
    					0.6899,
    					0.7381,
    					0.7822,
    					0.8217,
    					0.8564,
    					0.8862,
    					0.9113,
    					0.932,
    					0.9488,
    					0.9621,
    					0.9724,
    					0.9803,
    					0.9862,
    					0.9905,
    					0.9935,
    					0.9957,
    					0.9972,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 147,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.178,
    				"std.error": 0.5675,
    				statistic: 10.8855,
    				"p.value": 2.0769e-22,
    				"conf.low": 5.0596,
    				"conf.high": 7.2964,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.2218e-7,
    					3.9175e-7,
    					6.8278e-7,
    					0.0000011763,
    					0.0000020034,
    					0.0000033727,
    					0.000005613,
    					0.0000092347,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.001,
    					0.0015,
    					0.0021,
    					0.003,
    					0.0041,
    					0.0057,
    					0.0077,
    					0.0104,
    					0.0138,
    					0.0182,
    					0.0236,
    					0.0304,
    					0.0388,
    					0.0489,
    					0.0611,
    					0.0754,
    					0.0922,
    					0.1117,
    					0.1339,
    					0.159,
    					0.187,
    					0.2178,
    					0.2513,
    					0.2875,
    					0.3259,
    					0.3662,
    					0.4081,
    					0.4511,
    					0.4946,
    					0.5382,
    					0.5814,
    					0.6236,
    					0.6644,
    					0.7033,
    					0.74,
    					0.7742,
    					0.8057,
    					0.8344,
    					0.8602,
    					0.8831,
    					0.9032,
    					0.9207,
    					0.9356,
    					0.9483,
    					0.9589,
    					0.9677,
    					0.9748,
    					0.9806,
    					0.9852,
    					0.9889,
    					0.9917,
    					0.9939,
    					0.9955,
    					0.9968,
    					0.9977,
    					0.9984,
    					0.9989,
    					0.9992,
    					0.9995,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3444,
    				"std.error": 0.6356,
    				statistic: -0.5419,
    				"p.value": 0.5884,
    				"conf.low": -1.597,
    				"conf.high": 0.9081,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.7302e-13,
    					6.7359e-13,
    					1.637e-12,
    					3.9187e-12,
    					9.2406e-12,
    					2.1464e-11,
    					4.9112e-11,
    					1.107e-10,
    					2.4579e-10,
    					5.376e-10,
    					1.1584e-9,
    					2.4587e-9,
    					5.1414e-9,
    					1.0591e-8,
    					2.1495e-8,
    					4.2976e-8,
    					8.4653e-8,
    					1.6428e-7,
    					3.1411e-7,
    					5.9172e-7,
    					0.0000010983,
    					0.0000020085,
    					0.0000036191,
    					0.0000064258,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.002,
    					0.003,
    					0.0043,
    					0.0061,
    					0.0087,
    					0.012,
    					0.0165,
    					0.0223,
    					0.0298,
    					0.0392,
    					0.0509,
    					0.0653,
    					0.0826,
    					0.1031,
    					0.1271,
    					0.1548,
    					0.1861,
    					0.2212,
    					0.2597,
    					0.3014,
    					0.3459,
    					0.3926,
    					0.441,
    					0.4902,
    					0.5396,
    					0.5883,
    					0.6358,
    					0.6812,
    					0.7241,
    					0.764,
    					0.8004,
    					0.8332,
    					0.8623,
    					0.8878,
    					0.9097,
    					0.9282,
    					0.9437,
    					0.9564,
    					0.9667,
    					0.9749,
    					0.9813,
    					0.9863,
    					0.9901,
    					0.9929,
    					0.995,
    					0.9966,
    					0.9976,
    					0.9984,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.447,
    				"std.error": 0.8845,
    				statistic: -1.6361,
    				"p.value": 0.1032,
    				"conf.low": -3.19,
    				"conf.high": 0.2959,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.3172e-11,
    					1.391e-10,
    					3.0192e-10,
    					6.4603e-10,
    					1.3627e-9,
    					2.8336e-9,
    					5.8085e-9,
    					1.1738e-8,
    					2.3386e-8,
    					4.5932e-8,
    					8.894e-8,
    					1.6979e-7,
    					3.1957e-7,
    					5.9302e-7,
    					0.000001085,
    					0.0000019573,
    					0.0000034813,
    					0.0000061056,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0017,
    					0.0026,
    					0.0037,
    					0.0053,
    					0.0074,
    					0.0103,
    					0.0141,
    					0.019,
    					0.0254,
    					0.0335,
    					0.0436,
    					0.0559,
    					0.0709,
    					0.0889,
    					0.11,
    					0.1344,
    					0.1624,
    					0.1939,
    					0.2289,
    					0.2671,
    					0.3084,
    					0.3522,
    					0.3981,
    					0.4454,
    					0.4935,
    					0.5417,
    					0.5893,
    					0.6357,
    					0.6801,
    					0.7221,
    					0.7611,
    					0.797,
    					0.8295,
    					0.8584,
    					0.8838,
    					0.9058,
    					0.9245,
    					0.9403,
    					0.9534,
    					0.964,
    					0.9726,
    					0.9794,
    					0.9847,
    					0.9888,
    					0.9919,
    					0.9942,
    					0.9959,
    					0.9972,
    					0.9981,
    					0.9987,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.7973,
    				"std.error": 1.0153,
    				statistic: 1.7703,
    				"p.value": 0.0781,
    				"conf.low": -0.2035,
    				"conf.high": 3.798,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.292e-11,
    					3.1531e-11,
    					7.5643e-11,
    					1.7839e-10,
    					4.1357e-10,
    					9.4257e-10,
    					2.1118e-9,
    					4.6517e-9,
    					1.0073e-8,
    					2.1445e-8,
    					4.4885e-8,
    					9.2367e-8,
    					1.8688e-7,
    					3.7177e-7,
    					7.2716e-7,
    					0.0000013985,
    					0.0000026447,
    					0.000004918,
    					0.0000089932,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0023,
    					0.0034,
    					0.0051,
    					0.0074,
    					0.0106,
    					0.0149,
    					0.0206,
    					0.0282,
    					0.0378,
    					0.0501,
    					0.0653,
    					0.0838,
    					0.1061,
    					0.1324,
    					0.1628,
    					0.1975,
    					0.2362,
    					0.2788,
    					0.3249,
    					0.3738,
    					0.4248,
    					0.4771,
    					0.5298,
    					0.582,
    					0.6328,
    					0.6813,
    					0.727,
    					0.7691,
    					0.8073,
    					0.8414,
    					0.8713,
    					0.897,
    					0.9188,
    					0.9369,
    					0.9517,
    					0.9636,
    					0.9729,
    					0.9802,
    					0.9858,
    					0.9899,
    					0.993,
    					0.9952,
    					0.9967,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 148,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2696,
    				"std.error": 0.4569,
    				statistic: 13.7209,
    				"p.value": 9.6414e-34,
    				"conf.low": 5.3705,
    				"conf.high": 7.1687,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					4.8521e-11,
    					1.1827e-10,
    					2.8311e-10,
    					6.6556e-10,
    					1.5367e-9,
    					3.4846e-9,
    					7.7606e-9,
    					1.6975e-8,
    					3.647e-8,
    					7.696e-8,
    					1.5952e-7,
    					3.2476e-7,
    					6.4947e-7,
    					0.0000012759,
    					0.0000024622,
    					0.0000046677,
    					0.0000086931,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0026,
    					0.0039,
    					0.0057,
    					0.0084,
    					0.012,
    					0.017,
    					0.0236,
    					0.0323,
    					0.0434,
    					0.0574,
    					0.0748,
    					0.096,
    					0.1212,
    					0.1508,
    					0.1849,
    					0.2233,
    					0.266,
    					0.3124,
    					0.362,
    					0.4141,
    					0.4677,
    					0.5219,
    					0.5756,
    					0.6281,
    					0.6782,
    					0.7253,
    					0.7687,
    					0.808,
    					0.8429,
    					0.8734,
    					0.8995,
    					0.9214,
    					0.9395,
    					0.9541,
    					0.9658,
    					0.9749,
    					0.9819,
    					0.9871,
    					0.991,
    					0.9938,
    					0.9958,
    					0.9972,
    					0.9982,
    					0.9988,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5366,
    				"std.error": 0.5531,
    				statistic: -0.9701,
    				"p.value": 0.3327,
    				"conf.low": -1.625,
    				"conf.high": 0.5518,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					9.9831e-16,
    					3.1168e-15,
    					9.5383e-15,
    					2.8613e-14,
    					8.4137e-14,
    					2.4252e-13,
    					6.8526e-13,
    					1.898e-12,
    					5.1536e-12,
    					1.3717e-11,
    					3.5793e-11,
    					9.156e-11,
    					2.2961e-10,
    					5.6449e-10,
    					1.3606e-9,
    					3.2151e-9,
    					7.4488e-9,
    					1.692e-8,
    					3.7682e-8,
    					8.2287e-8,
    					1.7619e-7,
    					3.6991e-7,
    					7.6154e-7,
    					0.0000015374,
    					0.0000030437,
    					0.0000059094,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0024,
    					0.0038,
    					0.0057,
    					0.0085,
    					0.0124,
    					0.0178,
    					0.025,
    					0.0346,
    					0.047,
    					0.0627,
    					0.0823,
    					0.1061,
    					0.1346,
    					0.1679,
    					0.206,
    					0.2489,
    					0.2962,
    					0.3472,
    					0.4011,
    					0.4569,
    					0.5137,
    					0.5701,
    					0.6252,
    					0.6778,
    					0.7271,
    					0.7723,
    					0.813,
    					0.8488,
    					0.8797,
    					0.9059,
    					0.9277,
    					0.9453,
    					0.9594,
    					0.9703,
    					0.9787,
    					0.985,
    					0.9896,
    					0.993,
    					0.9953,
    					0.9969,
    					0.998,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.0739,
    				"std.error": 0.6148,
    				statistic: -1.7467,
    				"p.value": 0.0817,
    				"conf.low": -2.2836,
    				"conf.high": 0.1359,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.1229e-23,
    					1.7425e-22,
    					9.4351e-22,
    					4.9578e-21,
    					2.5281e-20,
    					1.2511e-19,
    					6.0085e-19,
    					2.8005e-18,
    					1.2667e-17,
    					5.5609e-17,
    					2.3693e-16,
    					9.7971e-16,
    					3.9319e-15,
    					1.5316e-14,
    					5.7905e-14,
    					2.1249e-13,
    					7.5686e-13,
    					2.6168e-12,
    					8.7819e-12,
    					2.8609e-11,
    					9.0473e-11,
    					2.7775e-10,
    					8.2778e-10,
    					2.3951e-9,
    					6.728e-9,
    					1.835e-8,
    					4.8594e-8,
    					1.2495e-7,
    					3.1199e-7,
    					7.565e-7,
    					0.0000017814,
    					0.0000040742,
    					0.0000090505,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0033,
    					0.0055,
    					0.0089,
    					0.014,
    					0.0215,
    					0.0322,
    					0.047,
    					0.0667,
    					0.0923,
    					0.1245,
    					0.1639,
    					0.2106,
    					0.2642,
    					0.3241,
    					0.3889,
    					0.457,
    					0.5264,
    					0.595,
    					0.6607,
    					0.7219,
    					0.7772,
    					0.8256,
    					0.8667,
    					0.9006,
    					0.9278,
    					0.9488,
    					0.9647,
    					0.9762,
    					0.9844,
    					0.9901,
    					0.9939,
    					0.9963,
    					0.9978,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.6266,
    				"std.error": 0.7541,
    				statistic: 0.831,
    				"p.value": 0.4066,
    				"conf.low": -0.8571,
    				"conf.high": 2.1104,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.5948e-14,
    					2.1146e-13,
    					7.747e-13,
    					2.7512e-12,
    					9.4715e-12,
    					3.1609e-11,
    					1.0227e-10,
    					3.2076e-10,
    					9.754e-10,
    					2.8757e-9,
    					8.2206e-9,
    					2.2785e-8,
    					6.124e-8,
    					1.5961e-7,
    					4.0341e-7,
    					9.8888e-7,
    					0.000002351,
    					0.0000054216,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0015,
    					0.0026,
    					0.0044,
    					0.0073,
    					0.0118,
    					0.0185,
    					0.0282,
    					0.0419,
    					0.0604,
    					0.0848,
    					0.116,
    					0.1545,
    					0.2007,
    					0.2543,
    					0.3145,
    					0.3801,
    					0.4494,
    					0.5203,
    					0.5906,
    					0.658,
    					0.7207,
    					0.7773,
    					0.8267,
    					0.8685,
    					0.9027,
    					0.9299,
    					0.9509,
    					0.9665,
    					0.9777,
    					0.9856,
    					0.991,
    					0.9945,
    					0.9967,
    					0.9981,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 149,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.6843,
    				"std.error": 0.3612,
    				statistic: 15.7386,
    				"p.value": 2.477e-41,
    				"conf.low": 4.9737,
    				"conf.high": 6.395,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.5672e-11,
    					8.0287e-11,
    					2.4393e-10,
    					7.1999e-10,
    					2.0646e-9,
    					5.7521e-9,
    					1.557e-8,
    					4.0951e-8,
    					1.0465e-7,
    					2.599e-7,
    					6.272e-7,
    					0.000001471,
    					0.0000033529,
    					0.0000074284,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0027,
    					0.0045,
    					0.0074,
    					0.0117,
    					0.0181,
    					0.0273,
    					0.04,
    					0.0572,
    					0.0798,
    					0.1085,
    					0.144,
    					0.1866,
    					0.2362,
    					0.2924,
    					0.354,
    					0.4198,
    					0.4879,
    					0.5563,
    					0.6231,
    					0.6864,
    					0.7446,
    					0.7966,
    					0.8417,
    					0.8797,
    					0.9108,
    					0.9355,
    					0.9545,
    					0.9687,
    					0.979,
    					0.9863,
    					0.9913,
    					0.9946,
    					0.9968,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.2995,
    				"std.error": 0.4405,
    				statistic: -0.6801,
    				"p.value": 0.497,
    				"conf.low": -1.1662,
    				"conf.high": 0.5671,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.8267e-26,
    					2.5102e-25,
    					1.5952e-24,
    					9.8215e-24,
    					5.8582e-23,
    					3.3853e-22,
    					1.8953e-21,
    					1.028e-20,
    					5.4026e-20,
    					2.7508e-19,
    					1.357e-18,
    					6.486e-18,
    					3.0037e-17,
    					1.3478e-16,
    					5.86e-16,
    					2.4687e-15,
    					1.0078e-14,
    					3.9863e-14,
    					1.528e-13,
    					5.6754e-13,
    					2.0428e-12,
    					7.1258e-12,
    					2.4088e-11,
    					7.8918e-11,
    					2.5058e-10,
    					7.7115e-10,
    					2.3002e-9,
    					6.6504e-9,
    					1.8638e-8,
    					5.0634e-8,
    					1.3335e-7,
    					3.4049e-7,
    					8.429e-7,
    					0.0000020232,
    					0.0000047089,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0014,
    					0.0024,
    					0.0041,
    					0.0069,
    					0.0112,
    					0.0176,
    					0.027,
    					0.0403,
    					0.0584,
    					0.0823,
    					0.113,
    					0.1511,
    					0.1969,
    					0.2501,
    					0.3102,
    					0.3759,
    					0.4453,
    					0.5165,
    					0.5872,
    					0.6551,
    					0.7184,
    					0.7754,
    					0.8253,
    					0.8675,
    					0.9021,
    					0.9295,
    					0.9506,
    					0.9664,
    					0.9777,
    					0.9857,
    					0.991,
    					0.9945,
    					0.9968,
    					0.9982,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.0288,
    				"std.error": 0.6872,
    				statistic: -0.0419,
    				"p.value": 0.9666,
    				"conf.low": -1.3811,
    				"conf.high": 1.3235,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.3051e-25,
    					1.1574e-24,
    					5.6731e-24,
    					2.7147e-23,
    					1.2682e-22,
    					5.7839e-22,
    					2.5753e-21,
    					1.1194e-20,
    					4.7506e-20,
    					1.9683e-19,
    					7.9615e-19,
    					3.1441e-18,
    					1.2123e-17,
    					4.5634e-17,
    					1.6772e-16,
    					6.0185e-16,
    					2.1086e-15,
    					7.2133e-15,
    					2.4093e-14,
    					7.8573e-14,
    					2.502e-13,
    					7.7796e-13,
    					2.362e-12,
    					7.0023e-12,
    					2.0271e-11,
    					5.7305e-11,
    					1.5819e-10,
    					4.2647e-10,
    					1.1227e-9,
    					2.8866e-9,
    					7.2482e-9,
    					1.7775e-8,
    					4.2574e-8,
    					9.9597e-8,
    					2.2758e-7,
    					5.0795e-7,
    					0.0000011074,
    					0.0000023587,
    					0.0000049076,
    					0.000009976,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0021,
    					0.0034,
    					0.0054,
    					0.0083,
    					0.0125,
    					0.0186,
    					0.0269,
    					0.0381,
    					0.0529,
    					0.0719,
    					0.0958,
    					0.1251,
    					0.1601,
    					0.2009,
    					0.2474,
    					0.2992,
    					0.3553,
    					0.4148,
    					0.4763,
    					0.5384,
    					0.5995,
    					0.6583,
    					0.7135,
    					0.7641,
    					0.8093,
    					0.8487,
    					0.8823,
    					0.9103,
    					0.933,
    					0.9509,
    					0.9648,
    					0.9753,
    					0.9831,
    					0.9886,
    					0.9925,
    					0.9952,
    					0.997,
    					0.9981,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.524,
    				"std.error": 0.8568,
    				statistic: 0.6116,
    				"p.value": 0.5413,
    				"conf.low": -1.162,
    				"conf.high": 2.21,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					7.0107e-11,
    					1.9374e-10,
    					5.2272e-10,
    					1.3769e-9,
    					3.541e-9,
    					8.8914e-9,
    					2.1799e-8,
    					5.2184e-8,
    					1.2198e-7,
    					2.7844e-7,
    					6.2065e-7,
    					0.000001351,
    					0.0000028722,
    					0.0000059637,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0025,
    					0.004,
    					0.0062,
    					0.0096,
    					0.0144,
    					0.0212,
    					0.0306,
    					0.0431,
    					0.0595,
    					0.0804,
    					0.1065,
    					0.1381,
    					0.1756,
    					0.219,
    					0.268,
    					0.322,
    					0.38,
    					0.4409,
    					0.5032,
    					0.5654,
    					0.626,
    					0.6837,
    					0.7372,
    					0.7856,
    					0.8284,
    					0.8653,
    					0.8964,
    					0.9219,
    					0.9423,
    					0.9583,
    					0.9705,
    					0.9796,
    					0.9861,
    					0.9908,
    					0.994,
    					0.9962,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 150,
    		cycle_length: "cl_option2",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option2"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2696,
    				"std.error": 0.4561,
    				statistic: 13.7467,
    				"p.value": 1.4876e-31,
    				"conf.low": 5.3708,
    				"conf.high": 7.1683,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					4.4762e-11,
    					1.0946e-10,
    					2.6288e-10,
    					6.1994e-10,
    					1.4358e-9,
    					3.2655e-9,
    					7.2941e-9,
    					1.6001e-8,
    					3.4473e-8,
    					7.2943e-8,
    					1.5159e-7,
    					3.0943e-7,
    					6.2037e-7,
    					0.0000012217,
    					0.0000023632,
    					0.0000044905,
    					0.0000083819,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.001,
    					0.0016,
    					0.0025,
    					0.0038,
    					0.0057,
    					0.0083,
    					0.0119,
    					0.0168,
    					0.0234,
    					0.032,
    					0.0431,
    					0.0571,
    					0.0744,
    					0.0956,
    					0.1208,
    					0.1504,
    					0.1844,
    					0.2229,
    					0.2656,
    					0.3121,
    					0.3618,
    					0.4139,
    					0.4676,
    					0.5219,
    					0.5758,
    					0.6283,
    					0.6785,
    					0.7257,
    					0.7691,
    					0.8085,
    					0.8434,
    					0.8738,
    					0.8999,
    					0.9218,
    					0.9398,
    					0.9544,
    					0.9661,
    					0.9751,
    					0.9821,
    					0.9873,
    					0.9911,
    					0.9939,
    					0.9959,
    					0.9973,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5366,
    				"std.error": 0.5521,
    				statistic: -0.972,
    				"p.value": 0.3321,
    				"conf.low": -1.6246,
    				"conf.high": 0.5514,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					8.8493e-16,
    					2.7745e-15,
    					8.5261e-15,
    					2.5681e-14,
    					7.5818e-14,
    					2.194e-13,
    					6.223e-13,
    					1.7302e-12,
    					4.7151e-12,
    					1.2596e-11,
    					3.2983e-11,
    					8.4664e-11,
    					2.1303e-10,
    					5.2548e-10,
    					1.2707e-9,
    					3.0121e-9,
    					7e-9,
    					1.5948e-8,
    					3.5623e-8,
    					7.8011e-8,
    					1.675e-7,
    					3.5261e-7,
    					7.2784e-7,
    					0.0000014731,
    					0.0000029236,
    					0.0000056899,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0024,
    					0.0037,
    					0.0056,
    					0.0084,
    					0.0123,
    					0.0176,
    					0.0248,
    					0.0343,
    					0.0467,
    					0.0624,
    					0.0819,
    					0.1057,
    					0.1341,
    					0.1674,
    					0.2056,
    					0.2485,
    					0.2958,
    					0.3469,
    					0.4009,
    					0.4569,
    					0.5137,
    					0.5703,
    					0.6254,
    					0.6781,
    					0.7275,
    					0.7727,
    					0.8134,
    					0.8493,
    					0.8802,
    					0.9064,
    					0.928,
    					0.9456,
    					0.9597,
    					0.9706,
    					0.9789,
    					0.9852,
    					0.9898,
    					0.9931,
    					0.9954,
    					0.997,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.6141,
    				"std.error": 0.7383,
    				statistic: -0.8317,
    				"p.value": 0.4065,
    				"conf.low": -2.069,
    				"conf.high": 0.8409,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.1099e-19,
    					1.8496e-18,
    					6.5573e-18,
    					2.277e-17,
    					7.7442e-17,
    					2.5798e-16,
    					8.4177e-16,
    					2.6903e-15,
    					8.422e-15,
    					2.5825e-14,
    					7.7568e-14,
    					2.2821e-13,
    					6.577e-13,
    					1.8567e-12,
    					5.1345e-12,
    					1.3909e-11,
    					3.6911e-11,
    					9.5954e-11,
    					2.4437e-10,
    					6.0967e-10,
    					1.4901e-9,
    					3.5682e-9,
    					8.3711e-9,
    					1.9241e-8,
    					4.333e-8,
    					9.5607e-8,
    					2.067e-7,
    					4.3788e-7,
    					9.0894e-7,
    					0.0000018489,
    					0.0000036855,
    					0.0000071997,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.003,
    					0.0047,
    					0.0071,
    					0.0105,
    					0.0153,
    					0.0218,
    					0.0306,
    					0.042,
    					0.0567,
    					0.0753,
    					0.0981,
    					0.1255,
    					0.158,
    					0.1955,
    					0.238,
    					0.2851,
    					0.3363,
    					0.3906,
    					0.4472,
    					0.5049,
    					0.5625,
    					0.6188,
    					0.6727,
    					0.7232,
    					0.7695,
    					0.8112,
    					0.8479,
    					0.8795,
    					0.9061,
    					0.9282,
    					0.946,
    					0.9601,
    					0.9711,
    					0.9794,
    					0.9856,
    					0.9902,
    					0.9934,
    					0.9956,
    					0.9972,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.7611,
    				"std.error": 0.9151,
    				statistic: 0.8317,
    				"p.value": 0.4065,
    				"conf.low": -1.0423,
    				"conf.high": 2.5645,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.8526e-10,
    					4.7e-10,
    					1.1676e-9,
    					2.8404e-9,
    					6.7662e-9,
    					1.5784e-8,
    					3.6057e-8,
    					8.0668e-8,
    					1.7674e-7,
    					3.7926e-7,
    					7.9707e-7,
    					0.0000016407,
    					0.0000033081,
    					0.0000065334,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.003,
    					0.0047,
    					0.0071,
    					0.0106,
    					0.0154,
    					0.0221,
    					0.0311,
    					0.0428,
    					0.058,
    					0.0771,
    					0.1005,
    					0.1289,
    					0.1623,
    					0.2009,
    					0.2446,
    					0.2929,
    					0.3452,
    					0.4007,
    					0.4582,
    					0.5167,
    					0.5747,
    					0.6312,
    					0.685,
    					0.7352,
    					0.7809,
    					0.8217,
    					0.8574,
    					0.8879,
    					0.9134,
    					0.9343,
    					0.9511,
    					0.9642,
    					0.9743,
    					0.9819,
    					0.9875,
    					0.9915,
    					0.9944,
    					0.9963,
    					0.9977,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 151,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option1",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4733,
    				"std.error": 0.4606,
    				statistic: 14.0546,
    				"p.value": 8.7512e-32,
    				"conf.low": 5.5651,
    				"conf.high": 7.3814,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.3823e-12,
    					8.6212e-12,
    					2.1586e-11,
    					5.3092e-11,
    					1.2828e-10,
    					3.0448e-10,
    					7.0996e-10,
    					1.6263e-9,
    					3.6597e-9,
    					8.0909e-9,
    					1.7573e-8,
    					3.75e-8,
    					7.8621e-8,
    					1.6195e-7,
    					3.2777e-7,
    					6.518e-7,
    					0.0000012736,
    					0.0000024453,
    					0.0000046136,
    					0.0000085536,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0024,
    					0.0037,
    					0.0054,
    					0.008,
    					0.0114,
    					0.0161,
    					0.0224,
    					0.0306,
    					0.0412,
    					0.0546,
    					0.0712,
    					0.0914,
    					0.1156,
    					0.144,
    					0.1769,
    					0.214,
    					0.2554,
    					0.3006,
    					0.3491,
    					0.4001,
    					0.453,
    					0.5067,
    					0.5603,
    					0.6128,
    					0.6633,
    					0.711,
    					0.7553,
    					0.7956,
    					0.8317,
    					0.8634,
    					0.8908,
    					0.914,
    					0.9333,
    					0.949,
    					0.9617,
    					0.9716,
    					0.9793,
    					0.9852,
    					0.9896,
    					0.9928,
    					0.9951,
    					0.9967,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.0244,
    				"std.error": 0.6225,
    				statistic: -1.6455,
    				"p.value": 0.1014,
    				"conf.low": -2.2519,
    				"conf.high": 0.2031,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.7757e-10,
    					3.9726e-10,
    					8.7494e-10,
    					1.8971e-9,
    					4.0497e-9,
    					8.5109e-9,
    					1.761e-8,
    					3.5874e-8,
    					7.1953e-8,
    					1.4209e-7,
    					2.7629e-7,
    					5.2895e-7,
    					9.9714e-7,
    					0.0000018509,
    					0.0000033832,
    					0.0000060894,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.0032,
    					0.0046,
    					0.0066,
    					0.0094,
    					0.0131,
    					0.018,
    					0.0244,
    					0.0326,
    					0.043,
    					0.0559,
    					0.0716,
    					0.0906,
    					0.113,
    					0.1392,
    					0.1691,
    					0.203,
    					0.2406,
    					0.2816,
    					0.3258,
    					0.3726,
    					0.4214,
    					0.4714,
    					0.5218,
    					0.5719,
    					0.6209,
    					0.668,
    					0.7126,
    					0.7541,
    					0.7922,
    					0.8265,
    					0.857,
    					0.8837,
    					0.9066,
    					0.926,
    					0.9422,
    					0.9554,
    					0.9661,
    					0.9746,
    					0.9812,
    					0.9863,
    					0.9902,
    					0.993,
    					0.9951,
    					0.9967,
    					0.9977,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.7553,
    				"std.error": 0.6056,
    				statistic: -2.8985,
    				"p.value": 0.0042,
    				"conf.low": -2.9493,
    				"conf.high": -0.5612,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.2202e-19,
    					1.5549e-18,
    					7.2795e-18,
    					3.3045e-17,
    					1.4545e-16,
    					6.2081e-16,
    					2.5693e-15,
    					1.0311e-14,
    					4.0125e-14,
    					1.5142e-13,
    					5.5412e-13,
    					1.9665e-12,
    					6.7682e-12,
    					2.2591e-11,
    					7.3133e-11,
    					2.2961e-10,
    					6.9923e-10,
    					2.0653e-9,
    					5.9172e-9,
    					1.6445e-8,
    					4.4336e-8,
    					1.1596e-7,
    					2.9423e-7,
    					7.2435e-7,
    					0.0000017302,
    					0.0000040105,
    					0.0000090209,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0035,
    					0.0059,
    					0.0096,
    					0.0151,
    					0.0233,
    					0.0349,
    					0.0509,
    					0.0722,
    					0.0998,
    					0.1344,
    					0.1764,
    					0.226,
    					0.2825,
    					0.3451,
    					0.4122,
    					0.482,
    					0.5524,
    					0.6211,
    					0.6863,
    					0.746,
    					0.7992,
    					0.8451,
    					0.8834,
    					0.9145,
    					0.9389,
    					0.9575,
    					0.9713,
    					0.9811,
    					0.9879,
    					0.9924,
    					0.9954,
    					0.9973,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.9793,
    				"std.error": 0.8451,
    				statistic: 2.342,
    				"p.value": 0.0202,
    				"conf.low": 0.3129,
    				"conf.high": 3.6457,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					9.6613e-17,
    					3.5913e-16,
    					1.3021e-15,
    					4.6055e-15,
    					1.5889e-14,
    					5.3474e-14,
    					1.7555e-13,
    					5.6221e-13,
    					1.7564e-12,
    					5.3531e-12,
    					1.5916e-11,
    					4.6167e-11,
    					1.3065e-10,
    					3.607e-10,
    					9.7159e-10,
    					2.5535e-9,
    					6.5479e-9,
    					1.6383e-8,
    					3.9998e-8,
    					9.529e-8,
    					2.2153e-7,
    					5.0259e-7,
    					0.0000011128,
    					0.0000024046,
    					0.0000050713,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.0038,
    					0.0061,
    					0.0094,
    					0.0142,
    					0.0211,
    					0.0306,
    					0.0433,
    					0.06,
    					0.0813,
    					0.108,
    					0.1404,
    					0.1789,
    					0.2234,
    					0.2736,
    					0.3288,
    					0.3881,
    					0.4501,
    					0.5133,
    					0.5762,
    					0.6372,
    					0.6949,
    					0.7482,
    					0.796,
    					0.838,
    					0.8739,
    					0.9039,
    					0.9283,
    					0.9476,
    					0.9625,
    					0.9738,
    					0.9821,
    					0.988,
    					0.9922,
    					0.995,
    					0.9969,
    					0.9981,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 152,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option1",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.6265,
    				"std.error": 0.3577,
    				statistic: 15.7317,
    				"p.value": 5.4734e-37,
    				"conf.low": 4.9213,
    				"conf.high": 6.3317,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					4.905e-11,
    					1.5257e-10,
    					4.6078e-10,
    					1.3512e-9,
    					3.8472e-9,
    					1.0637e-8,
    					2.8557e-8,
    					7.4456e-8,
    					1.8853e-7,
    					4.6362e-7,
    					0.0000011073,
    					0.000002569,
    					0.0000057896,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.004,
    					0.0067,
    					0.0107,
    					0.0167,
    					0.0254,
    					0.0376,
    					0.0541,
    					0.076,
    					0.1041,
    					0.139,
    					0.1811,
    					0.2304,
    					0.2864,
    					0.3482,
    					0.4143,
    					0.483,
    					0.5521,
    					0.6197,
    					0.6838,
    					0.7428,
    					0.7956,
    					0.8412,
    					0.8797,
    					0.911,
    					0.9358,
    					0.9549,
    					0.9691,
    					0.9794,
    					0.9866,
    					0.9916,
    					0.9948,
    					0.9969,
    					0.9982,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.0228,
    				"std.error": 0.5058,
    				statistic: -0.0452,
    				"p.value": 0.964,
    				"conf.low": -1.0201,
    				"conf.high": 0.9745,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.5013e-22,
    					6.8273e-22,
    					3.0311e-21,
    					1.3138e-20,
    					5.5596e-20,
    					2.2969e-19,
    					9.2645e-19,
    					3.6483e-18,
    					1.4027e-17,
    					5.2655e-17,
    					1.9298e-16,
    					6.9056e-16,
    					2.4127e-15,
    					8.2305e-15,
    					2.7414e-14,
    					8.9158e-14,
    					2.8313e-13,
    					8.7793e-13,
    					2.6582e-12,
    					7.8591e-12,
    					2.269e-11,
    					6.3969e-11,
    					1.7611e-10,
    					4.735e-10,
    					1.2432e-9,
    					3.1879e-9,
    					7.9834e-9,
    					1.9526e-8,
    					4.6645e-8,
    					1.0883e-7,
    					2.4804e-7,
    					5.5217e-7,
    					0.0000012008,
    					0.0000025508,
    					0.0000052938,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0022,
    					0.0036,
    					0.0056,
    					0.0087,
    					0.0131,
    					0.0193,
    					0.0279,
    					0.0395,
    					0.0547,
    					0.0742,
    					0.0986,
    					0.1284,
    					0.164,
    					0.2054,
    					0.2525,
    					0.3047,
    					0.3612,
    					0.4209,
    					0.4826,
    					0.5446,
    					0.6056,
    					0.664,
    					0.7188,
    					0.7688,
    					0.8135,
    					0.8523,
    					0.8854,
    					0.9128,
    					0.935,
    					0.9525,
    					0.966,
    					0.9762,
    					0.9837,
    					0.9891,
    					0.9928,
    					0.9954,
    					0.9971,
    					0.9982,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.614,
    				"std.error": 0.6826,
    				statistic: -0.8994,
    				"p.value": 0.3695,
    				"conf.low": -1.9599,
    				"conf.high": 0.732,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.2725e-22,
    					2.8172e-21,
    					1.2349e-20,
    					5.2832e-20,
    					2.2059e-19,
    					8.9893e-19,
    					3.5753e-18,
    					1.3879e-17,
    					5.2582e-17,
    					1.9444e-16,
    					7.018e-16,
    					2.4723e-15,
    					8.501e-15,
    					2.8531e-14,
    					9.3468e-14,
    					2.9888e-13,
    					9.3292e-13,
    					2.8425e-12,
    					8.4541e-12,
    					2.4545e-11,
    					6.9567e-11,
    					1.9248e-10,
    					5.199e-10,
    					1.371e-9,
    					3.5295e-9,
    					8.8713e-9,
    					2.177e-8,
    					5.2163e-8,
    					1.2204e-7,
    					2.7878e-7,
    					6.2189e-7,
    					0.0000013547,
    					0.0000028819,
    					0.0000059876,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0025,
    					0.004,
    					0.0063,
    					0.0097,
    					0.0145,
    					0.0214,
    					0.0308,
    					0.0435,
    					0.06,
    					0.081,
    					0.1072,
    					0.139,
    					0.1768,
    					0.2204,
    					0.2696,
    					0.3237,
    					0.3819,
    					0.4429,
    					0.5053,
    					0.5675,
    					0.6281,
    					0.6857,
    					0.7391,
    					0.7874,
    					0.83,
    					0.8667,
    					0.8976,
    					0.9229,
    					0.9431,
    					0.9589,
    					0.971,
    					0.9799,
    					0.9864,
    					0.991,
    					0.9942,
    					0.9963,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.4726,
    				"std.error": 0.9483,
    				statistic: 0.4984,
    				"p.value": 0.6188,
    				"conf.low": -1.3972,
    				"conf.high": 2.3423,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.6618e-9,
    					1.0654e-8,
    					2.3877e-8,
    					5.2482e-8,
    					1.1313e-7,
    					2.3918e-7,
    					4.9597e-7,
    					0.0000010087,
    					0.0000020123,
    					0.0000039376,
    					0.0000075581,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0028,
    					0.0043,
    					0.0064,
    					0.0095,
    					0.0138,
    					0.0196,
    					0.0274,
    					0.0376,
    					0.0508,
    					0.0674,
    					0.0878,
    					0.1126,
    					0.1421,
    					0.1763,
    					0.2154,
    					0.259,
    					0.3068,
    					0.3582,
    					0.4123,
    					0.4681,
    					0.5245,
    					0.5804,
    					0.6348,
    					0.6865,
    					0.7349,
    					0.7791,
    					0.8188,
    					0.8537,
    					0.8837,
    					0.9091,
    					0.9302,
    					0.9472,
    					0.9608,
    					0.9714,
    					0.9795,
    					0.9855,
    					0.99,
    					0.9932,
    					0.9955,
    					0.997,
    					0.9981,
    					0.9988,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 153,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option1",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4733,
    				"std.error": 0.4632,
    				statistic: 13.9764,
    				"p.value": 5.9318e-29,
    				"conf.low": 5.5581,
    				"conf.high": 7.3884,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					4.4172e-12,
    					1.1145e-11,
    					2.7627e-11,
    					6.729e-11,
    					1.6103e-10,
    					3.7865e-10,
    					8.7484e-10,
    					1.986e-9,
    					4.4302e-9,
    					9.7108e-9,
    					2.0916e-8,
    					4.427e-8,
    					9.2076e-8,
    					1.882e-7,
    					3.7802e-7,
    					7.4621e-7,
    					0.0000014476,
    					0.0000027602,
    					0.0000051725,
    					0.000009527,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0026,
    					0.0038,
    					0.0057,
    					0.0082,
    					0.0118,
    					0.0166,
    					0.023,
    					0.0314,
    					0.0421,
    					0.0556,
    					0.0723,
    					0.0926,
    					0.1169,
    					0.1454,
    					0.1782,
    					0.2153,
    					0.2566,
    					0.3016,
    					0.3499,
    					0.4007,
    					0.4533,
    					0.5067,
    					0.56,
    					0.6122,
    					0.6624,
    					0.71,
    					0.7541,
    					0.7943,
    					0.8304,
    					0.8621,
    					0.8895,
    					0.9128,
    					0.9322,
    					0.9481,
    					0.9608,
    					0.9709,
    					0.9788,
    					0.9847,
    					0.9892,
    					0.9925,
    					0.9948,
    					0.9965,
    					0.9977,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.0244,
    				"std.error": 0.626,
    				statistic: -1.6364,
    				"p.value": 0.1039,
    				"conf.low": -2.2614,
    				"conf.high": 0.2125,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.2213e-10,
    					4.9261e-10,
    					1.0757e-9,
    					2.3129e-9,
    					4.897e-9,
    					1.0209e-8,
    					2.0959e-8,
    					4.237e-8,
    					8.4347e-8,
    					1.6535e-7,
    					3.1923e-7,
    					6.0692e-7,
    					0.0000011364,
    					0.0000020955,
    					0.0000038056,
    					0.0000068069,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0023,
    					0.0033,
    					0.0048,
    					0.0069,
    					0.0097,
    					0.0135,
    					0.0185,
    					0.0251,
    					0.0334,
    					0.0439,
    					0.0569,
    					0.0727,
    					0.0918,
    					0.1143,
    					0.1405,
    					0.1705,
    					0.2043,
    					0.2418,
    					0.2827,
    					0.3268,
    					0.3733,
    					0.4218,
    					0.4716,
    					0.5217,
    					0.5715,
    					0.6203,
    					0.6671,
    					0.7115,
    					0.7529,
    					0.7909,
    					0.8252,
    					0.8557,
    					0.8824,
    					0.9054,
    					0.9249,
    					0.9412,
    					0.9545,
    					0.9653,
    					0.9739,
    					0.9807,
    					0.9859,
    					0.9898,
    					0.9928,
    					0.9949,
    					0.9965,
    					0.9976,
    					0.9984,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.4608,
    				"std.error": 0.7375,
    				statistic: -1.9806,
    				"p.value": 0.0495,
    				"conf.low": -2.918,
    				"conf.high": -0.0035,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					7.1205e-15,
    					2.1927e-14,
    					6.6139e-14,
    					1.954e-13,
    					5.6547e-13,
    					1.6029e-12,
    					4.4505e-12,
    					1.2104e-11,
    					3.2248e-11,
    					8.4161e-11,
    					2.1516e-10,
    					5.3884e-10,
    					1.322e-9,
    					3.1773e-9,
    					7.4814e-9,
    					1.7258e-8,
    					3.9004e-8,
    					8.6365e-8,
    					1.8737e-7,
    					3.9828e-7,
    					8.2954e-7,
    					0.000001693,
    					0.0000033859,
    					0.0000066356,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0029,
    					0.0045,
    					0.0068,
    					0.0101,
    					0.0147,
    					0.021,
    					0.0295,
    					0.0407,
    					0.0551,
    					0.0732,
    					0.0956,
    					0.1226,
    					0.1546,
    					0.1916,
    					0.2337,
    					0.2804,
    					0.3313,
    					0.3854,
    					0.4419,
    					0.4996,
    					0.5574,
    					0.6139,
    					0.6681,
    					0.7189,
    					0.7657,
    					0.8079,
    					0.845,
    					0.877,
    					0.9041,
    					0.9266,
    					0.9447,
    					0.9592,
    					0.9704,
    					0.9789,
    					0.9852,
    					0.9899,
    					0.9932,
    					0.9955,
    					0.9971,
    					0.9981,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.4742,
    				"std.error": 1.0094,
    				statistic: 1.4604,
    				"p.value": 0.1463,
    				"conf.low": -0.5203,
    				"conf.high": 3.4686,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					8.4504e-11,
    					1.9983e-10,
    					4.6446e-10,
    					1.061e-9,
    					2.3823e-9,
    					5.2577e-9,
    					1.1405e-8,
    					2.4319e-8,
    					5.097e-8,
    					1.0501e-7,
    					2.1267e-7,
    					4.234e-7,
    					8.2864e-7,
    					0.0000015943,
    					0.0000030156,
    					0.0000056078,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0026,
    					0.0039,
    					0.0057,
    					0.0083,
    					0.0118,
    					0.0165,
    					0.0228,
    					0.0311,
    					0.0416,
    					0.0549,
    					0.0713,
    					0.0912,
    					0.115,
    					0.1429,
    					0.175,
    					0.2114,
    					0.2519,
    					0.2961,
    					0.3436,
    					0.3937,
    					0.4457,
    					0.4985,
    					0.5515,
    					0.6035,
    					0.6537,
    					0.7014,
    					0.7458,
    					0.7865,
    					0.8231,
    					0.8555,
    					0.8836,
    					0.9076,
    					0.9278,
    					0.9443,
    					0.9578,
    					0.9684,
    					0.9768,
    					0.9832,
    					0.988,
    					0.9916,
    					0.9942,
    					0.996,
    					0.9974,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 154,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option2",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5726,
    				"std.error": 0.4098,
    				statistic: 16.0396,
    				"p.value": 1.0648e-39,
    				"conf.low": 5.7654,
    				"conf.high": 7.3799,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					8.8945e-16,
    					2.9928e-15,
    					9.8449e-15,
    					3.166e-14,
    					9.954e-14,
    					3.0596e-13,
    					9.1942e-13,
    					2.7013e-12,
    					7.7594e-12,
    					2.1792e-11,
    					5.9839e-11,
    					1.6066e-10,
    					4.2175e-10,
    					1.0826e-9,
    					2.7172e-9,
    					6.6689e-9,
    					1.6005e-8,
    					3.7564e-8,
    					8.6214e-8,
    					1.9351e-7,
    					4.2479e-7,
    					9.1199e-7,
    					0.000001915,
    					0.0000039333,
    					0.0000079021,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0025,
    					0.004,
    					0.0062,
    					0.0095,
    					0.0141,
    					0.0205,
    					0.0293,
    					0.041,
    					0.0561,
    					0.0754,
    					0.0994,
    					0.1285,
    					0.1631,
    					0.2032,
    					0.2487,
    					0.2991,
    					0.3537,
    					0.4115,
    					0.4713,
    					0.5317,
    					0.5914,
    					0.6491,
    					0.7035,
    					0.7537,
    					0.7989,
    					0.8387,
    					0.873,
    					0.9019,
    					0.9256,
    					0.9447,
    					0.9597,
    					0.9712,
    					0.9798,
    					0.9862,
    					0.9907,
    					0.9939,
    					0.9961,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1301,
    				"std.error": 0.5669,
    				statistic: -1.9935,
    				"p.value": 0.0474,
    				"conf.low": -2.2468,
    				"conf.high": -0.0133,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.0281e-11,
    					2.6367e-11,
    					6.6354e-11,
    					1.6386e-10,
    					3.9706e-10,
    					9.442e-10,
    					2.2033e-9,
    					5.0456e-9,
    					1.1339e-8,
    					2.5009e-8,
    					5.4132e-8,
    					1.1499e-7,
    					2.3975e-7,
    					4.9061e-7,
    					9.8539e-7,
    					0.0000019426,
    					0.0000037592,
    					0.0000071407,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0025,
    					0.0038,
    					0.0057,
    					0.0083,
    					0.0121,
    					0.0172,
    					0.024,
    					0.033,
    					0.0447,
    					0.0594,
    					0.0776,
    					0.0999,
    					0.1265,
    					0.1576,
    					0.1935,
    					0.2338,
    					0.2785,
    					0.327,
    					0.3785,
    					0.4324,
    					0.4875,
    					0.5428,
    					0.5974,
    					0.6501,
    					0.7,
    					0.7465,
    					0.7888,
    					0.8267,
    					0.86,
    					0.8886,
    					0.9128,
    					0.9328,
    					0.9491,
    					0.9621,
    					0.9722,
    					0.98,
    					0.9858,
    					0.9901,
    					0.9932,
    					0.9955,
    					0.997,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.7893,
    				"std.error": 0.5502,
    				statistic: -3.2519,
    				"p.value": 0.0013,
    				"conf.low": -2.8733,
    				"conf.high": -0.7053,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.2875e-22,
    					8.5337e-22,
    					5.4482e-21,
    					3.3504e-20,
    					1.9847e-19,
    					1.1325e-18,
    					6.2249e-18,
    					3.2961e-17,
    					1.6813e-16,
    					8.262e-16,
    					3.9113e-15,
    					1.7838e-14,
    					7.8381e-14,
    					3.3182e-13,
    					1.3534e-12,
    					5.3191e-12,
    					2.0142e-11,
    					7.3498e-11,
    					2.5843e-10,
    					8.757e-10,
    					2.8597e-9,
    					9.0001e-9,
    					2.7301e-8,
    					7.9825e-8,
    					2.2499e-7,
    					6.1131e-7,
    					0.0000016014,
    					0.0000040447,
    					0.0000098512,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.001,
    					0.0018,
    					0.0033,
    					0.0059,
    					0.0101,
    					0.0167,
    					0.0266,
    					0.041,
    					0.0613,
    					0.0885,
    					0.124,
    					0.1684,
    					0.2218,
    					0.2838,
    					0.3531,
    					0.4277,
    					0.5049,
    					0.5819,
    					0.6559,
    					0.7244,
    					0.7854,
    					0.8377,
    					0.8809,
    					0.9153,
    					0.9416,
    					0.9611,
    					0.9749,
    					0.9843,
    					0.9905,
    					0.9945,
    					0.9969,
    					0.9983,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.888,
    				"std.error": 0.7715,
    				statistic: 2.4471,
    				"p.value": 0.0151,
    				"conf.low": 0.368,
    				"conf.high": 3.4079,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.9809e-19,
    					1.4064e-18,
    					6.4403e-18,
    					2.8623e-17,
    					1.2346e-16,
    					5.1689e-16,
    					2.1004e-15,
    					8.2841e-15,
    					3.1714e-14,
    					1.1785e-13,
    					4.2507e-13,
    					1.4883e-12,
    					5.0583e-12,
    					1.6689e-11,
    					5.3453e-11,
    					1.662e-10,
    					5.0171e-10,
    					1.4704e-9,
    					4.1839e-9,
    					1.1559e-8,
    					3.1007e-8,
    					8.0768e-8,
    					2.043e-7,
    					5.0184e-7,
    					0.0000011972,
    					0.0000027739,
    					0.0000062426,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0015,
    					0.0025,
    					0.0043,
    					0.007,
    					0.0113,
    					0.0176,
    					0.0266,
    					0.0393,
    					0.0565,
    					0.0791,
    					0.108,
    					0.1439,
    					0.187,
    					0.2373,
    					0.2942,
    					0.3568,
    					0.4234,
    					0.4924,
    					0.5615,
    					0.6289,
    					0.6925,
    					0.7507,
    					0.8026,
    					0.8473,
    					0.8847,
    					0.9151,
    					0.939,
    					0.9574,
    					0.9709,
    					0.9807,
    					0.9875,
    					0.9922,
    					0.9952,
    					0.9972,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 155,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option2",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.8337,
    				"std.error": 0.3234,
    				statistic: 18.0404,
    				"p.value": 2.2588e-46,
    				"conf.low": 5.1967,
    				"conf.high": 6.4708,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.1779e-15,
    					1.4294e-14,
    					6.2001e-14,
    					2.5934e-13,
    					1.0462e-12,
    					4.0698e-12,
    					1.527e-11,
    					5.5256e-11,
    					1.9286e-10,
    					6.4927e-10,
    					2.1084e-9,
    					6.6047e-9,
    					1.9959e-8,
    					5.8191e-8,
    					1.6369e-7,
    					4.4426e-7,
    					0.0000011635,
    					0.0000029408,
    					0.0000071736,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0014,
    					0.0025,
    					0.0045,
    					0.0078,
    					0.013,
    					0.021,
    					0.0328,
    					0.0496,
    					0.0726,
    					0.103,
    					0.1418,
    					0.1894,
    					0.2457,
    					0.3099,
    					0.3806,
    					0.4555,
    					0.532,
    					0.6074,
    					0.6789,
    					0.7443,
    					0.802,
    					0.851,
    					0.8912,
    					0.9229,
    					0.9471,
    					0.9648,
    					0.9773,
    					0.9859,
    					0.9915,
    					0.995,
    					0.9972,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.2821,
    				"std.error": 0.4586,
    				statistic: -0.6152,
    				"p.value": 0.539,
    				"conf.low": -1.1857,
    				"conf.high": 0.6214,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.9778e-24,
    					1.1297e-23,
    					6.2668e-23,
    					3.3763e-22,
    					1.7667e-21,
    					8.9781e-21,
    					4.4314e-20,
    					2.1243e-19,
    					9.8911e-19,
    					4.4731e-18,
    					1.9648e-17,
    					8.3827e-17,
    					3.4738e-16,
    					1.3983e-15,
    					5.4671e-15,
    					2.0764e-14,
    					7.6601e-14,
    					2.7452e-13,
    					9.5567e-13,
    					3.2319e-12,
    					1.0618e-11,
    					3.389e-11,
    					1.0509e-10,
    					3.1659e-10,
    					9.2663e-10,
    					2.6352e-9,
    					7.2818e-9,
    					1.9552e-8,
    					5.1011e-8,
    					1.2934e-7,
    					3.1868e-7,
    					7.6313e-7,
    					0.0000017761,
    					0.000004018,
    					0.0000088356,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0018,
    					0.003,
    					0.005,
    					0.0081,
    					0.0128,
    					0.0197,
    					0.0295,
    					0.0431,
    					0.0613,
    					0.085,
    					0.115,
    					0.1518,
    					0.1957,
    					0.2466,
    					0.3038,
    					0.3663,
    					0.4325,
    					0.5007,
    					0.5689,
    					0.6351,
    					0.6975,
    					0.7546,
    					0.8053,
    					0.8491,
    					0.8858,
    					0.9156,
    					0.9392,
    					0.9572,
    					0.9707,
    					0.9804,
    					0.9873,
    					0.992,
    					0.995,
    					0.997,
    					0.9983,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.9731,
    				"std.error": 0.6336,
    				statistic: -1.5359,
    				"p.value": 0.1259,
    				"conf.low": -2.2213,
    				"conf.high": 0.275,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.1641e-22,
    					6.0394e-22,
    					3.0461e-21,
    					1.4935e-20,
    					7.1192e-20,
    					3.299e-19,
    					1.4862e-18,
    					6.5094e-18,
    					2.7717e-17,
    					1.1474e-16,
    					4.6181e-16,
    					1.8071e-15,
    					6.8752e-15,
    					2.5432e-14,
    					9.1467e-14,
    					3.1986e-13,
    					1.0876e-12,
    					3.596e-12,
    					1.1561e-11,
    					3.6142e-11,
    					1.0987e-10,
    					3.2481e-10,
    					9.3381e-10,
    					2.6109e-9,
    					7.0994e-9,
    					1.8775e-8,
    					4.8295e-8,
    					1.2083e-7,
    					2.9406e-7,
    					6.9615e-7,
    					0.0000016032,
    					0.0000035921,
    					0.0000078304,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0026,
    					0.0043,
    					0.0069,
    					0.011,
    					0.0169,
    					0.0254,
    					0.0372,
    					0.0531,
    					0.074,
    					0.1007,
    					0.1338,
    					0.1737,
    					0.2204,
    					0.2737,
    					0.3326,
    					0.396,
    					0.4622,
    					0.5295,
    					0.596,
    					0.6599,
    					0.7194,
    					0.7734,
    					0.821,
    					0.8617,
    					0.8956,
    					0.9231,
    					0.9446,
    					0.9611,
    					0.9734,
    					0.9822,
    					0.9884,
    					0.9927,
    					0.9955,
    					0.9973,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.7735,
    				"std.error": 0.8776,
    				statistic: 0.8814,
    				"p.value": 0.379,
    				"conf.low": -0.9553,
    				"conf.high": 2.5023,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.9091e-11,
    					8.0082e-11,
    					2.1546e-10,
    					5.6659e-10,
    					1.4563e-9,
    					3.6585e-9,
    					8.9838e-9,
    					2.1564e-8,
    					5.0596e-8,
    					1.1605e-7,
    					2.6021e-7,
    					5.7038e-7,
    					0.0000012223,
    					0.0000025611,
    					0.0000052467,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0032,
    					0.0051,
    					0.0078,
    					0.0118,
    					0.0173,
    					0.025,
    					0.0354,
    					0.0491,
    					0.0668,
    					0.0889,
    					0.1162,
    					0.1488,
    					0.1872,
    					0.231,
    					0.2801,
    					0.3338,
    					0.3911,
    					0.4508,
    					0.5117,
    					0.5724,
    					0.6313,
    					0.6873,
    					0.7393,
    					0.7865,
    					0.8282,
    					0.8644,
    					0.8949,
    					0.9202,
    					0.9405,
    					0.9566,
    					0.9689,
    					0.9782,
    					0.985,
    					0.9899,
    					0.9934,
    					0.9957,
    					0.9973,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 156,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option2",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5726,
    				"std.error": 0.4093,
    				statistic: 16.0602,
    				"p.value": 4.0447e-36,
    				"conf.low": 5.7649,
    				"conf.high": 7.3804,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					8.1895e-16,
    					2.7641e-15,
    					9.1199e-15,
    					2.9416e-14,
    					9.275e-14,
    					2.859e-13,
    					8.6153e-13,
    					2.5381e-12,
    					7.31e-12,
    					2.0583e-11,
    					5.6664e-11,
    					1.5251e-10,
    					4.0134e-10,
    					1.0326e-9,
    					2.5978e-9,
    					6.3902e-9,
    					1.537e-8,
    					3.6149e-8,
    					8.314e-8,
    					1.8699e-7,
    					4.1127e-7,
    					8.8464e-7,
    					0.000001861,
    					0.0000038291,
    					0.000007706,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0016,
    					0.0025,
    					0.004,
    					0.0062,
    					0.0094,
    					0.014,
    					0.0204,
    					0.0291,
    					0.0408,
    					0.0559,
    					0.0752,
    					0.0991,
    					0.1282,
    					0.1628,
    					0.2029,
    					0.2485,
    					0.2989,
    					0.3536,
    					0.4114,
    					0.4713,
    					0.5318,
    					0.5915,
    					0.6492,
    					0.7037,
    					0.7539,
    					0.7992,
    					0.839,
    					0.8733,
    					0.9022,
    					0.9259,
    					0.945,
    					0.9599,
    					0.9714,
    					0.98,
    					0.9863,
    					0.9908,
    					0.9939,
    					0.9961,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1301,
    				"std.error": 0.5662,
    				statistic: -1.996,
    				"p.value": 0.0475,
    				"conf.low": -2.2475,
    				"conf.high": -0.0126,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					9.6924e-12,
    					2.4916e-11,
    					6.2849e-11,
    					1.5556e-10,
    					3.7779e-10,
    					9.0031e-10,
    					2.1054e-9,
    					4.8314e-9,
    					1.088e-8,
    					2.4043e-8,
    					5.2141e-8,
    					1.1097e-7,
    					2.3179e-7,
    					4.7516e-7,
    					9.5601e-7,
    					0.0000018879,
    					0.0000036592,
    					0.0000069618,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0024,
    					0.0037,
    					0.0056,
    					0.0083,
    					0.012,
    					0.0171,
    					0.0239,
    					0.0329,
    					0.0444,
    					0.0591,
    					0.0774,
    					0.0996,
    					0.1262,
    					0.1573,
    					0.1931,
    					0.2335,
    					0.2782,
    					0.3267,
    					0.3784,
    					0.4323,
    					0.4874,
    					0.5429,
    					0.5975,
    					0.6502,
    					0.7003,
    					0.7467,
    					0.7891,
    					0.8271,
    					0.8603,
    					0.8889,
    					0.9131,
    					0.9331,
    					0.9493,
    					0.9623,
    					0.9724,
    					0.9801,
    					0.9859,
    					0.9902,
    					0.9933,
    					0.9955,
    					0.997,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.712,
    				"std.error": 0.6737,
    				statistic: -2.5413,
    				"p.value": 0.0119,
    				"conf.low": -3.0417,
    				"conf.high": -0.3823,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.1205e-16,
    					1.491e-15,
    					5.2629e-15,
    					1.812e-14,
    					6.0855e-14,
    					1.9936e-13,
    					6.3712e-13,
    					1.9862e-12,
    					6.0403e-12,
    					1.792e-11,
    					5.1865e-11,
    					1.4644e-10,
    					4.034e-10,
    					1.0842e-9,
    					2.8428e-9,
    					7.2729e-9,
    					1.8155e-8,
    					4.422e-8,
    					1.051e-7,
    					2.4374e-7,
    					5.5165e-7,
    					0.0000012184,
    					0.0000026264,
    					0.0000055256,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0025,
    					0.0041,
    					0.0064,
    					0.0099,
    					0.015,
    					0.0221,
    					0.032,
    					0.0451,
    					0.0624,
    					0.0844,
    					0.1118,
    					0.145,
    					0.1842,
    					0.2295,
    					0.2804,
    					0.3363,
    					0.396,
    					0.4583,
    					0.5216,
    					0.5844,
    					0.645,
    					0.7022,
    					0.7548,
    					0.802,
    					0.8432,
    					0.8783,
    					0.9075,
    					0.9311,
    					0.9498,
    					0.9642,
    					0.9751,
    					0.983,
    					0.9887,
    					0.9926,
    					0.9953,
    					0.9971,
    					0.9982,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.6214,
    				"std.error": 0.9276,
    				statistic: 1.7479,
    				"p.value": 0.0823,
    				"conf.low": -0.2095,
    				"conf.high": 3.4523,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.8491e-13,
    					1.6517e-12,
    					4.5691e-12,
    					1.2383e-11,
    					3.2877e-11,
    					8.5517e-11,
    					2.1793e-10,
    					5.4412e-10,
    					1.331e-9,
    					3.1901e-9,
    					7.4913e-9,
    					1.7237e-8,
    					3.8861e-8,
    					8.585e-8,
    					1.8584e-7,
    					3.9423e-7,
    					8.1953e-7,
    					0.0000016696,
    					0.0000033333,
    					0.0000065224,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0028,
    					0.0044,
    					0.0066,
    					0.0098,
    					0.0143,
    					0.0205,
    					0.0288,
    					0.0397,
    					0.0537,
    					0.0714,
    					0.0934,
    					0.1199,
    					0.1513,
    					0.1877,
    					0.2292,
    					0.2753,
    					0.3256,
    					0.3793,
    					0.4354,
    					0.4928,
    					0.5504,
    					0.607,
    					0.6614,
    					0.7126,
    					0.7598,
    					0.8024,
    					0.8401,
    					0.8728,
    					0.9005,
    					0.9235,
    					0.9422,
    					0.9572,
    					0.9688,
    					0.9777,
    					0.9843,
    					0.9892,
    					0.9927,
    					0.9952,
    					0.9968,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 157,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option3",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.538,
    				"std.error": 0.4293,
    				statistic: 15.2302,
    				"p.value": 3.9616e-35,
    				"conf.low": 5.6914,
    				"conf.high": 7.3845,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.875e-14,
    					8.6002e-14,
    					2.5202e-13,
    					7.2348e-13,
    					2.0346e-12,
    					5.6055e-12,
    					1.5129e-11,
    					4.0005e-11,
    					1.0363e-10,
    					2.6302e-10,
    					6.5402e-10,
    					1.5933e-9,
    					3.8032e-9,
    					8.8946e-9,
    					2.0382e-8,
    					4.5765e-8,
    					1.0069e-7,
    					2.1708e-7,
    					4.5862e-7,
    					9.4951e-7,
    					0.0000019265,
    					0.0000038307,
    					0.0000074653,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.002,
    					0.0031,
    					0.0048,
    					0.0072,
    					0.0106,
    					0.0154,
    					0.022,
    					0.0308,
    					0.0423,
    					0.0571,
    					0.0756,
    					0.0984,
    					0.1259,
    					0.1584,
    					0.1959,
    					0.2384,
    					0.2854,
    					0.3365,
    					0.3907,
    					0.4472,
    					0.5048,
    					0.5623,
    					0.6185,
    					0.6723,
    					0.7227,
    					0.769,
    					0.8107,
    					0.8473,
    					0.879,
    					0.9057,
    					0.9278,
    					0.9456,
    					0.9598,
    					0.9709,
    					0.9792,
    					0.9855,
    					0.99,
    					0.9933,
    					0.9956,
    					0.9971,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1393,
    				"std.error": 0.6169,
    				statistic: -1.8467,
    				"p.value": 0.0663,
    				"conf.low": -2.3559,
    				"conf.high": 0.0773,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.0337e-10,
    					8.9448e-10,
    					1.9522e-9,
    					4.1935e-9,
    					8.8658e-9,
    					1.8449e-8,
    					3.7787e-8,
    					7.6178e-8,
    					1.5117e-7,
    					2.9527e-7,
    					5.6771e-7,
    					0.0000010745,
    					0.0000020019,
    					0.0000036717,
    					0.0000066296,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.001,
    					0.0016,
    					0.0024,
    					0.0035,
    					0.0051,
    					0.0073,
    					0.0104,
    					0.0144,
    					0.0198,
    					0.0268,
    					0.0358,
    					0.0471,
    					0.061,
    					0.078,
    					0.0984,
    					0.1224,
    					0.1502,
    					0.182,
    					0.2176,
    					0.2571,
    					0.2999,
    					0.3457,
    					0.3938,
    					0.4437,
    					0.4944,
    					0.5453,
    					0.5954,
    					0.644,
    					0.6904,
    					0.7339,
    					0.7741,
    					0.8106,
    					0.8432,
    					0.8719,
    					0.8967,
    					0.9179,
    					0.9356,
    					0.9501,
    					0.962,
    					0.9714,
    					0.9788,
    					0.9845,
    					0.9888,
    					0.9921,
    					0.9945,
    					0.9962,
    					0.9974,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.3459,
    				"std.error": 0.5808,
    				statistic: -2.3174,
    				"p.value": 0.0215,
    				"conf.low": -2.4913,
    				"conf.high": -0.2006,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.0496e-23,
    					6.6008e-23,
    					4.0136e-22,
    					2.3598e-21,
    					1.3416e-20,
    					7.3748e-20,
    					3.9202e-19,
    					2.015e-18,
    					1.0016e-17,
    					4.8141e-17,
    					2.2376e-16,
    					1.0058e-15,
    					4.3722e-15,
    					1.838e-14,
    					7.4727e-14,
    					2.9383e-13,
    					1.1174e-12,
    					4.11e-12,
    					1.4622e-11,
    					5.0314e-11,
    					1.6747e-10,
    					5.3921e-10,
    					1.6795e-9,
    					5.0604e-9,
    					1.4751e-8,
    					4.1603e-8,
    					1.1352e-7,
    					2.9975e-7,
    					7.6586e-7,
    					0.0000018937,
    					0.0000045316,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0015,
    					0.0027,
    					0.0047,
    					0.008,
    					0.013,
    					0.0206,
    					0.0316,
    					0.0471,
    					0.0682,
    					0.096,
    					0.1313,
    					0.1746,
    					0.2261,
    					0.2852,
    					0.3508,
    					0.4212,
    					0.4942,
    					0.5674,
    					0.6384,
    					0.7049,
    					0.7651,
    					0.8178,
    					0.8625,
    					0.899,
    					0.9279,
    					0.95,
    					0.9663,
    					0.9779,
    					0.986,
    					0.9914,
    					0.9949,
    					0.997,
    					0.9983,
    					0.9991,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3585,
    				"std.error": 0.8519,
    				statistic: 1.5947,
    				"p.value": 0.1124,
    				"conf.low": -0.3215,
    				"conf.high": 3.0385,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.34e-14,
    					1.7368e-13,
    					5.5128e-13,
    					1.7077e-12,
    					5.1623e-12,
    					1.523e-11,
    					4.3854e-11,
    					1.2324e-10,
    					3.3802e-10,
    					9.0488e-10,
    					2.3644e-9,
    					6.0302e-9,
    					1.5012e-8,
    					3.6482e-8,
    					8.6543e-8,
    					2.0041e-7,
    					4.531e-7,
    					0.0000010001,
    					0.0000021551,
    					0.0000045345,
    					0.0000093161,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0021,
    					0.0034,
    					0.0054,
    					0.0084,
    					0.0128,
    					0.019,
    					0.0276,
    					0.0392,
    					0.0546,
    					0.0743,
    					0.0991,
    					0.1294,
    					0.1656,
    					0.2078,
    					0.2558,
    					0.3089,
    					0.3664,
    					0.4271,
    					0.4896,
    					0.5523,
    					0.6137,
    					0.6724,
    					0.7271,
    					0.7769,
    					0.821,
    					0.8592,
    					0.8915,
    					0.918,
    					0.9394,
    					0.9561,
    					0.9689,
    					0.9784,
    					0.9854,
    					0.9903,
    					0.9937,
    					0.996,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 158,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option3",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.9413,
    				"std.error": 0.342,
    				statistic: 17.3709,
    				"p.value": 1.3351e-41,
    				"conf.low": 5.2668,
    				"conf.high": 6.6158,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					7.6e-15,
    					3.0904e-14,
    					1.2165e-13,
    					4.636e-13,
    					1.7104e-12,
    					6.1089e-12,
    					2.1125e-11,
    					7.0725e-11,
    					2.2926e-10,
    					7.196e-10,
    					2.187e-9,
    					6.4364e-9,
    					1.8344e-8,
    					5.0628e-8,
    					1.3533e-7,
    					3.5036e-7,
    					8.7857e-7,
    					0.0000021341,
    					0.0000050219,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0015,
    					0.0027,
    					0.0047,
    					0.0078,
    					0.0127,
    					0.0199,
    					0.0305,
    					0.0454,
    					0.0655,
    					0.092,
    					0.1258,
    					0.1673,
    					0.2167,
    					0.2737,
    					0.3372,
    					0.4058,
    					0.4774,
    					0.5497,
    					0.6204,
    					0.6873,
    					0.7485,
    					0.8027,
    					0.8492,
    					0.8878,
    					0.9187,
    					0.9427,
    					0.9608,
    					0.9739,
    					0.9831,
    					0.9894,
    					0.9935,
    					0.9962,
    					0.9978,
    					0.9988,
    					0.9993,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.4643,
    				"std.error": 0.5091,
    				statistic: -0.9121,
    				"p.value": 0.3628,
    				"conf.low": -1.4683,
    				"conf.high": 0.5396,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					8.8765e-19,
    					3.4677e-18,
    					1.323e-17,
    					4.9297e-17,
    					1.794e-16,
    					6.3762e-16,
    					2.2134e-15,
    					7.5041e-15,
    					2.4849e-14,
    					8.0366e-14,
    					2.5387e-13,
    					7.8331e-13,
    					2.3607e-12,
    					6.9493e-12,
    					1.9982e-11,
    					5.6126e-11,
    					1.5399e-10,
    					4.1272e-10,
    					1.0806e-9,
    					2.7638e-9,
    					6.906e-9,
    					1.6858e-8,
    					4.0206e-8,
    					9.3684e-8,
    					2.1329e-7,
    					4.7445e-7,
    					0.0000010313,
    					0.0000021904,
    					0.0000045463,
    					0.0000092217,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.0031,
    					0.0049,
    					0.0076,
    					0.0116,
    					0.0172,
    					0.0249,
    					0.0354,
    					0.0492,
    					0.0671,
    					0.0897,
    					0.1174,
    					0.1508,
    					0.1899,
    					0.2346,
    					0.2847,
    					0.3394,
    					0.3977,
    					0.4583,
    					0.52,
    					0.5811,
    					0.6404,
    					0.6965,
    					0.7483,
    					0.795,
    					0.8361,
    					0.8715,
    					0.9011,
    					0.9255,
    					0.9449,
    					0.9601,
    					0.9717,
    					0.9804,
    					0.9867,
    					0.9911,
    					0.9942,
    					0.9963,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.5161,
    				"std.error": 0.66,
    				statistic: -0.7819,
    				"p.value": 0.4352,
    				"conf.low": -1.8177,
    				"conf.high": 0.7856,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.7005e-24,
    					2.9079e-23,
    					1.4452e-22,
    					6.9981e-22,
    					3.3015e-21,
    					1.5176e-20,
    					6.7964e-20,
    					2.9656e-19,
    					1.2609e-18,
    					5.223e-18,
    					2.1081e-17,
    					8.2909e-17,
    					3.1771e-16,
    					1.1863e-15,
    					4.3163e-15,
    					1.5303e-14,
    					5.2866e-14,
    					1.7797e-13,
    					5.8384e-13,
    					1.8664e-12,
    					5.8145e-12,
    					1.7653e-11,
    					5.223e-11,
    					1.5061e-10,
    					4.2324e-10,
    					1.1592e-9,
    					3.0947e-9,
    					8.0522e-9,
    					2.0422e-8,
    					5.0485e-8,
    					1.2166e-7,
    					2.858e-7,
    					6.5452e-7,
    					0.0000014614,
    					0.0000031811,
    					0.0000067517,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0032,
    					0.0051,
    					0.0081,
    					0.0124,
    					0.0187,
    					0.0275,
    					0.0395,
    					0.0554,
    					0.076,
    					0.102,
    					0.134,
    					0.1722,
    					0.2167,
    					0.2672,
    					0.3231,
    					0.3833,
    					0.4464,
    					0.511,
    					0.5752,
    					0.6376,
    					0.6964,
    					0.7506,
    					0.7991,
    					0.8415,
    					0.8776,
    					0.9074,
    					0.9315,
    					0.9505,
    					0.965,
    					0.9758,
    					0.9837,
    					0.9892,
    					0.9931,
    					0.9956,
    					0.9973,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.2774,
    				"std.error": 0.9528,
    				statistic: 0.2911,
    				"p.value": 0.7713,
    				"conf.low": -1.6017,
    				"conf.high": 2.1564,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.7907e-8,
    					3.9488e-8,
    					8.5414e-8,
    					1.8123e-7,
    					3.7723e-7,
    					7.7025e-7,
    					0.0000015429,
    					0.0000030321,
    					0.000005846,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0035,
    					0.0054,
    					0.008,
    					0.0116,
    					0.0166,
    					0.0234,
    					0.0324,
    					0.044,
    					0.0587,
    					0.0771,
    					0.0996,
    					0.1265,
    					0.1582,
    					0.1946,
    					0.2357,
    					0.2812,
    					0.3305,
    					0.383,
    					0.4377,
    					0.4937,
    					0.5498,
    					0.6049,
    					0.6579,
    					0.7081,
    					0.7545,
    					0.7966,
    					0.8341,
    					0.8668,
    					0.8947,
    					0.9182,
    					0.9375,
    					0.953,
    					0.9653,
    					0.9748,
    					0.982,
    					0.9874,
    					0.9913,
    					0.9941,
    					0.9961,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 159,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option3",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.538,
    				"std.error": 0.4312,
    				statistic: 15.1605,
    				"p.value": 6.3195e-32,
    				"conf.low": 5.6858,
    				"conf.high": 7.3902,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.7365e-14,
    					1.1068e-13,
    					3.2122e-13,
    					9.1346e-13,
    					2.5452e-12,
    					6.9489e-12,
    					1.8589e-11,
    					4.8729e-11,
    					1.2516e-10,
    					3.1504e-10,
    					7.7702e-10,
    					1.878e-9,
    					4.4482e-9,
    					1.0325e-8,
    					2.3486e-8,
    					5.2358e-8,
    					1.144e-7,
    					2.4496e-7,
    					5.1412e-7,
    					0.0000010576,
    					0.0000021325,
    					0.0000042149,
    					0.0000081663,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0032,
    					0.0049,
    					0.0074,
    					0.0109,
    					0.0158,
    					0.0225,
    					0.0314,
    					0.043,
    					0.0579,
    					0.0766,
    					0.0995,
    					0.127,
    					0.1595,
    					0.197,
    					0.2394,
    					0.2863,
    					0.3372,
    					0.3912,
    					0.4475,
    					0.5048,
    					0.562,
    					0.618,
    					0.6715,
    					0.7218,
    					0.768,
    					0.8096,
    					0.8462,
    					0.8779,
    					0.9047,
    					0.9268,
    					0.9448,
    					0.9591,
    					0.9703,
    					0.9788,
    					0.9851,
    					0.9897,
    					0.9931,
    					0.9954,
    					0.997,
    					0.9981,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.1393,
    				"std.error": 0.6197,
    				statistic: -1.8383,
    				"p.value": 0.068,
    				"conf.low": -2.364,
    				"conf.high": 0.0854,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.813e-10,
    					1.0597e-9,
    					2.2969e-9,
    					4.9004e-9,
    					1.0292e-8,
    					2.1278e-8,
    					4.3304e-8,
    					8.6761e-8,
    					1.7113e-7,
    					3.3229e-7,
    					6.3522e-7,
    					0.0000011955,
    					0.0000022153,
    					0.0000040415,
    					0.0000072597,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0025,
    					0.0036,
    					0.0053,
    					0.0076,
    					0.0107,
    					0.0148,
    					0.0203,
    					0.0274,
    					0.0364,
    					0.0478,
    					0.0619,
    					0.0789,
    					0.0994,
    					0.1234,
    					0.1513,
    					0.1831,
    					0.2187,
    					0.258,
    					0.3007,
    					0.3463,
    					0.3943,
    					0.4439,
    					0.4945,
    					0.5451,
    					0.595,
    					0.6434,
    					0.6896,
    					0.7329,
    					0.773,
    					0.8095,
    					0.8421,
    					0.8708,
    					0.8957,
    					0.9169,
    					0.9347,
    					0.9494,
    					0.9613,
    					0.9708,
    					0.9783,
    					0.9841,
    					0.9885,
    					0.9918,
    					0.9943,
    					0.996,
    					0.9973,
    					0.9982,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.1128,
    				"std.error": 0.7073,
    				statistic: -1.5734,
    				"p.value": 0.1178,
    				"conf.low": -2.5104,
    				"conf.high": 0.2848,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					8.2936e-18,
    					3.028e-17,
    					1.0808e-16,
    					3.7715e-16,
    					1.2867e-15,
    					4.2917e-15,
    					1.3996e-14,
    					4.4622e-14,
    					1.391e-13,
    					4.2395e-13,
    					1.2634e-12,
    					3.6811e-12,
    					1.0487e-11,
    					2.9214e-11,
    					7.9576e-11,
    					2.1195e-10,
    					5.5201e-10,
    					1.4059e-9,
    					3.5014e-9,
    					8.5278e-9,
    					2.0312e-8,
    					4.7314e-8,
    					1.0779e-7,
    					2.4016e-7,
    					5.2337e-7,
    					0.0000011156,
    					0.0000023259,
    					0.0000047438,
    					0.0000094644,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0018,
    					0.0029,
    					0.0045,
    					0.0069,
    					0.0105,
    					0.0155,
    					0.0224,
    					0.0318,
    					0.0442,
    					0.0603,
    					0.0806,
    					0.1057,
    					0.136,
    					0.1718,
    					0.2131,
    					0.2597,
    					0.311,
    					0.3663,
    					0.4246,
    					0.4845,
    					0.5448,
    					0.6041,
    					0.661,
    					0.7145,
    					0.7636,
    					0.8077,
    					0.8463,
    					0.8794,
    					0.9072,
    					0.9299,
    					0.948,
    					0.9623,
    					0.9731,
    					0.9813,
    					0.9872,
    					0.9914,
    					0.9944,
    					0.9964,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.9523,
    				"std.error": 1.0118,
    				statistic: 0.9412,
    				"p.value": 0.3481,
    				"conf.low": -1.0472,
    				"conf.high": 2.9518,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.369e-9,
    					5.2192e-9,
    					1.1303e-8,
    					2.4062e-8,
    					5.0357e-8,
    					1.036e-7,
    					2.0953e-7,
    					4.1662e-7,
    					8.1441e-7,
    					0.0000015652,
    					0.0000029576,
    					0.0000054947,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0025,
    					0.0038,
    					0.0056,
    					0.008,
    					0.0115,
    					0.0161,
    					0.0223,
    					0.0303,
    					0.0406,
    					0.0536,
    					0.0697,
    					0.0893,
    					0.1126,
    					0.1401,
    					0.1718,
    					0.2077,
    					0.2476,
    					0.2914,
    					0.3385,
    					0.3882,
    					0.4399,
    					0.4926,
    					0.5454,
    					0.5975,
    					0.6478,
    					0.6957,
    					0.7405,
    					0.7816,
    					0.8186,
    					0.8515,
    					0.8801,
    					0.9046,
    					0.9252,
    					0.9422,
    					0.956,
    					0.967,
    					0.9757,
    					0.9823,
    					0.9874,
    					0.9911,
    					0.9938,
    					0.9958,
    					0.9972,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 160,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option4",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5731,
    				"std.error": 0.4771,
    				statistic: 13.7777,
    				"p.value": 2.4913e-34,
    				"conf.low": 5.6345,
    				"conf.high": 7.5116,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					4.1178e-12,
    					1.0128e-11,
    					2.45e-11,
    					5.8291e-11,
    					1.364e-10,
    					3.1393e-10,
    					7.1065e-10,
    					1.5823e-9,
    					3.4652e-9,
    					7.4645e-9,
    					1.5816e-8,
    					3.2964e-8,
    					6.758e-8,
    					1.3629e-7,
    					2.7037e-7,
    					5.2764e-7,
    					0.000001013,
    					0.0000019132,
    					0.000003555,
    					0.0000064988,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0026,
    					0.0038,
    					0.0056,
    					0.008,
    					0.0114,
    					0.0159,
    					0.0219,
    					0.0297,
    					0.0396,
    					0.052,
    					0.0674,
    					0.0861,
    					0.1085,
    					0.1347,
    					0.1649,
    					0.1993,
    					0.2376,
    					0.2797,
    					0.3251,
    					0.3733,
    					0.4235,
    					0.475,
    					0.5269,
    					0.5783,
    					0.6285,
    					0.6766,
    					0.7218,
    					0.7638,
    					0.802,
    					0.8362,
    					0.8663,
    					0.8924,
    					0.9146,
    					0.9332,
    					0.9485,
    					0.9608,
    					0.9707,
    					0.9783,
    					0.9843,
    					0.9887,
    					0.9921,
    					0.9945,
    					0.9962,
    					0.9975,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.6868,
    				"std.error": 0.5527,
    				statistic: -1.2427,
    				"p.value": 0.2149,
    				"conf.low": -1.7742,
    				"conf.high": 0.4005,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					8.2111e-15,
    					2.4719e-14,
    					7.2943e-14,
    					2.1099e-13,
    					5.9822e-13,
    					1.6626e-12,
    					4.5297e-12,
    					1.2097e-11,
    					3.1671e-11,
    					8.1281e-11,
    					2.045e-10,
    					5.0438e-10,
    					1.2196e-9,
    					2.891e-9,
    					6.7188e-9,
    					1.5309e-8,
    					3.4199e-8,
    					7.4905e-8,
    					1.6086e-7,
    					3.3873e-7,
    					6.9938e-7,
    					0.000001416,
    					0.0000028113,
    					0.0000054735,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0036,
    					0.0055,
    					0.0082,
    					0.0119,
    					0.0171,
    					0.0242,
    					0.0335,
    					0.0456,
    					0.061,
    					0.0801,
    					0.1035,
    					0.1315,
    					0.1644,
    					0.2021,
    					0.2446,
    					0.2915,
    					0.3422,
    					0.3959,
    					0.4517,
    					0.5084,
    					0.565,
    					0.6203,
    					0.6732,
    					0.7228,
    					0.7685,
    					0.8096,
    					0.8459,
    					0.8773,
    					0.9039,
    					0.926,
    					0.944,
    					0.9583,
    					0.9695,
    					0.9781,
    					0.9846,
    					0.9893,
    					0.9927,
    					0.9952,
    					0.9968,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.9061,
    				"std.error": 0.6393,
    				statistic: -2.9814,
    				"p.value": 0.0031,
    				"conf.low": -3.1639,
    				"conf.high": -0.6484,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.4294e-16,
    					5.657e-16,
    					2.1778e-15,
    					8.1558e-15,
    					2.9711e-14,
    					1.0529e-13,
    					3.6298e-13,
    					1.2174e-12,
    					3.9719e-12,
    					1.2607e-11,
    					3.8934e-11,
    					1.1698e-10,
    					3.4195e-10,
    					9.7259e-10,
    					2.6916e-9,
    					7.248e-9,
    					1.8992e-8,
    					4.8427e-8,
    					1.2017e-7,
    					2.9019e-7,
    					6.8202e-7,
    					0.0000015601,
    					0.0000034737,
    					0.0000075288,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.004,
    					0.0065,
    					0.0102,
    					0.0157,
    					0.0237,
    					0.0347,
    					0.0496,
    					0.0693,
    					0.0945,
    					0.1258,
    					0.1638,
    					0.2086,
    					0.2598,
    					0.3168,
    					0.3786,
    					0.4437,
    					0.5103,
    					0.5766,
    					0.6408,
    					0.7013,
    					0.7567,
    					0.8059,
    					0.8486,
    					0.8845,
    					0.9139,
    					0.9373,
    					0.9555,
    					0.9691,
    					0.9791,
    					0.9862,
    					0.9911,
    					0.9944,
    					0.9966,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.613,
    				"std.error": 0.746,
    				statistic: 2.1622,
    				"p.value": 0.0313,
    				"conf.low": 0.1454,
    				"conf.high": 3.0806,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.3105e-19,
    					2.6107e-18,
    					1.2431e-17,
    					5.7325e-17,
    					2.5605e-16,
    					1.1077e-15,
    					4.6419e-15,
    					1.8841e-14,
    					7.4074e-14,
    					2.821e-13,
    					1.0407e-12,
    					3.7191e-12,
    					1.2875e-11,
    					4.318e-11,
    					1.403e-10,
    					4.4163e-10,
    					1.3469e-9,
    					3.98e-9,
    					1.1396e-8,
    					3.1616e-8,
    					8.5e-8,
    					2.2146e-7,
    					5.5919e-7,
    					0.0000013685,
    					0.0000032462,
    					0.0000074642,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0034,
    					0.0057,
    					0.0094,
    					0.015,
    					0.0233,
    					0.0351,
    					0.0515,
    					0.0734,
    					0.1019,
    					0.1377,
    					0.1812,
    					0.2324,
    					0.2909,
    					0.3553,
    					0.4243,
    					0.4956,
    					0.5671,
    					0.6364,
    					0.7015,
    					0.7608,
    					0.8129,
    					0.8574,
    					0.8941,
    					0.9234,
    					0.9461,
    					0.9631,
    					0.9755,
    					0.9842,
    					0.9901,
    					0.9939,
    					0.9964,
    					0.9979,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 161,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option4",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.7347,
    				"std.error": 0.3769,
    				statistic: 15.2144,
    				"p.value": 7.588e-40,
    				"conf.low": 4.9932,
    				"conf.high": 6.4762,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					6.5455e-11,
    					1.9091e-10,
    					5.4222e-10,
    					1.4997e-9,
    					4.0393e-9,
    					1.0596e-8,
    					2.7069e-8,
    					6.7351e-8,
    					1.6322e-7,
    					3.8528e-7,
    					8.8587e-7,
    					0.0000019842,
    					0.0000043296,
    					0.0000092038,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0026,
    					0.0042,
    					0.0068,
    					0.0106,
    					0.0162,
    					0.0241,
    					0.0351,
    					0.0499,
    					0.0693,
    					0.094,
    					0.1247,
    					0.1619,
    					0.2055,
    					0.2555,
    					0.3112,
    					0.3716,
    					0.4354,
    					0.5008,
    					0.5663,
    					0.63,
    					0.6903,
    					0.7458,
    					0.7957,
    					0.8392,
    					0.8761,
    					0.9067,
    					0.9313,
    					0.9506,
    					0.9653,
    					0.9761,
    					0.984,
    					0.9895,
    					0.9933,
    					0.9958,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: 0.0525,
    				"std.error": 0.4388,
    				statistic: 0.1197,
    				"p.value": 0.9048,
    				"conf.low": -0.8108,
    				"conf.high": 0.9159,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.6218e-30,
    					2.7783e-29,
    					2.0642e-28,
    					1.4853e-27,
    					1.0352e-26,
    					6.9878e-26,
    					4.5686e-25,
    					2.8931e-24,
    					1.7745e-23,
    					1.0542e-22,
    					6.0662e-22,
    					3.3811e-21,
    					1.8254e-20,
    					9.5456e-20,
    					4.8353e-19,
    					2.3726e-18,
    					1.1277e-17,
    					5.1921e-17,
    					2.3157e-16,
    					1.0005e-15,
    					4.1878e-15,
    					1.6981e-14,
    					6.6704e-14,
    					2.5385e-13,
    					9.3597e-13,
    					3.3435e-12,
    					1.1572e-11,
    					3.8805e-11,
    					1.2609e-10,
    					3.9698e-10,
    					1.2111e-9,
    					3.5805e-9,
    					1.0258e-8,
    					2.8483e-8,
    					7.6647e-8,
    					1.9991e-7,
    					5.0539e-7,
    					0.0000012385,
    					0.0000029422,
    					0.0000067764,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0018,
    					0.0031,
    					0.0053,
    					0.0087,
    					0.014,
    					0.0218,
    					0.033,
    					0.0486,
    					0.0696,
    					0.0969,
    					0.1314,
    					0.1736,
    					0.2234,
    					0.2806,
    					0.344,
    					0.4121,
    					0.483,
    					0.5544,
    					0.6242,
    					0.69,
    					0.7503,
    					0.8037,
    					0.8495,
    					0.8876,
    					0.9183,
    					0.9421,
    					0.9602,
    					0.9733,
    					0.9826,
    					0.989,
    					0.9933,
    					0.996,
    					0.9977,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8176,
    				"std.error": 0.7218,
    				statistic: -1.1328,
    				"p.value": 0.2581,
    				"conf.low": -2.2375,
    				"conf.high": 0.6023,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.0352e-18,
    					3.8137e-18,
    					1.3748e-17,
    					4.8497e-17,
    					1.674e-16,
    					5.6543e-16,
    					1.8689e-15,
    					6.0445e-15,
    					1.9131e-14,
    					5.9254e-14,
    					1.7959e-13,
    					5.3269e-13,
    					1.5462e-12,
    					4.3923e-12,
    					1.2211e-11,
    					3.3222e-11,
    					8.846e-11,
    					2.3053e-10,
    					5.8797e-10,
    					1.4678e-9,
    					3.5863e-9,
    					8.5766e-9,
    					2.0077e-8,
    					4.6002e-8,
    					1.0318e-7,
    					2.2653e-7,
    					4.8689e-7,
    					0.0000010245,
    					0.0000021103,
    					0.000004256,
    					0.000008404,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0024,
    					0.0038,
    					0.0058,
    					0.0088,
    					0.013,
    					0.0188,
    					0.0268,
    					0.0374,
    					0.0512,
    					0.0687,
    					0.0906,
    					0.1173,
    					0.1491,
    					0.1862,
    					0.2285,
    					0.2758,
    					0.3274,
    					0.3826,
    					0.4402,
    					0.4992,
    					0.5582,
    					0.6159,
    					0.6711,
    					0.7228,
    					0.7702,
    					0.8127,
    					0.85,
    					0.8819,
    					0.9087,
    					0.9307,
    					0.9484,
    					0.9623,
    					0.973,
    					0.981,
    					0.9869,
    					0.9911,
    					0.9941,
    					0.9962,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.5984,
    				"std.error": 0.8488,
    				statistic: 0.705,
    				"p.value": 0.4813,
    				"conf.low": -1.0715,
    				"conf.high": 2.2683,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.6248e-11,
    					7.4922e-11,
    					2.0869e-10,
    					5.6724e-10,
    					1.5046e-9,
    					3.8949e-9,
    					9.8396e-9,
    					2.426e-8,
    					5.8378e-8,
    					1.3711e-7,
    					3.1431e-7,
    					7.0332e-7,
    					0.0000015362,
    					0.0000032757,
    					0.0000068187,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0028,
    					0.0045,
    					0.0071,
    					0.0109,
    					0.0164,
    					0.024,
    					0.0344,
    					0.0483,
    					0.0664,
    					0.0893,
    					0.1177,
    					0.1519,
    					0.192,
    					0.2382,
    					0.2898,
    					0.3461,
    					0.406,
    					0.4683,
    					0.5313,
    					0.5935,
    					0.6535,
    					0.7099,
    					0.7615,
    					0.8076,
    					0.8479,
    					0.8821,
    					0.9105,
    					0.9334,
    					0.9515,
    					0.9655,
    					0.9759,
    					0.9836,
    					0.9891,
    					0.9929,
    					0.9955,
    					0.9972,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 162,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option4",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5731,
    				"std.error": 0.47,
    				statistic: 13.9855,
    				"p.value": 1.0375e-32,
    				"conf.low": 5.6471,
    				"conf.high": 7.499,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.996e-12,
    					5.0428e-12,
    					1.2524e-11,
    					3.0574e-11,
    					7.3376e-11,
    					1.7311e-10,
    					4.0148e-10,
    					9.1538e-10,
    					2.0518e-9,
    					4.5212e-9,
    					9.7945e-9,
    					2.0861e-8,
    					4.3682e-8,
    					8.9931e-8,
    					1.8204e-7,
    					3.6229e-7,
    					7.0896e-7,
    					0.0000013641,
    					0.000002581,
    					0.0000048019,
    					0.0000087852,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0023,
    					0.0034,
    					0.005,
    					0.0073,
    					0.0104,
    					0.0147,
    					0.0204,
    					0.0278,
    					0.0374,
    					0.0495,
    					0.0645,
    					0.0829,
    					0.105,
    					0.1311,
    					0.1613,
    					0.1958,
    					0.2343,
    					0.2768,
    					0.3227,
    					0.3714,
    					0.4223,
    					0.4746,
    					0.5273,
    					0.5795,
    					0.6304,
    					0.679,
    					0.7248,
    					0.7671,
    					0.8055,
    					0.8398,
    					0.8699,
    					0.8958,
    					0.9178,
    					0.9361,
    					0.951,
    					0.963,
    					0.9725,
    					0.9799,
    					0.9855,
    					0.9897,
    					0.9928,
    					0.9951,
    					0.9967,
    					0.9978,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.6868,
    				"std.error": 0.5445,
    				statistic: -1.2615,
    				"p.value": 0.2084,
    				"conf.low": -1.7596,
    				"conf.high": 0.3859,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.3057e-15,
    					1.0285e-14,
    					3.1348e-14,
    					9.3596e-14,
    					2.7376e-13,
    					7.8442e-13,
    					2.2019e-12,
    					6.0552e-12,
    					1.6313e-11,
    					4.3057e-11,
    					1.1134e-10,
    					2.8206e-10,
    					7.0011e-10,
    					1.7026e-9,
    					4.0569e-9,
    					9.4713e-9,
    					2.1666e-8,
    					4.8564e-8,
    					1.0667e-7,
    					2.2957e-7,
    					4.842e-7,
    					0.0000010008,
    					0.0000020271,
    					0.0000040242,
    					0.0000078296,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.002,
    					0.0032,
    					0.0049,
    					0.0074,
    					0.0109,
    					0.0158,
    					0.0225,
    					0.0315,
    					0.0432,
    					0.0582,
    					0.077,
    					0.1001,
    					0.128,
    					0.1607,
    					0.1986,
    					0.2413,
    					0.2886,
    					0.3399,
    					0.3944,
    					0.4509,
    					0.5085,
    					0.566,
    					0.622,
    					0.6756,
    					0.7258,
    					0.7718,
    					0.8131,
    					0.8495,
    					0.8808,
    					0.9072,
    					0.929,
    					0.9466,
    					0.9606,
    					0.9714,
    					0.9797,
    					0.9858,
    					0.9903,
    					0.9935,
    					0.9957,
    					0.9972,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.656,
    				"std.error": 0.7615,
    				statistic: -2.1747,
    				"p.value": 0.0307,
    				"conf.low": -3.1562,
    				"conf.high": -0.1558,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.1043e-13,
    					8.6157e-13,
    					2.3453e-12,
    					6.2614e-12,
    					1.6396e-11,
    					4.2109e-11,
    					1.0608e-10,
    					2.621e-10,
    					6.3522e-10,
    					1.5101e-9,
    					3.5212e-9,
    					8.0543e-9,
    					1.8072e-8,
    					3.9778e-8,
    					8.5889e-8,
    					1.8193e-7,
    					3.7807e-7,
    					7.7079e-7,
    					0.0000015418,
    					0.0000030257,
    					0.0000058261,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0035,
    					0.0053,
    					0.0079,
    					0.0114,
    					0.0164,
    					0.0231,
    					0.0319,
    					0.0434,
    					0.058,
    					0.0761,
    					0.0984,
    					0.125,
    					0.1563,
    					0.1924,
    					0.2331,
    					0.2783,
    					0.3273,
    					0.3795,
    					0.434,
    					0.4898,
    					0.5457,
    					0.6008,
    					0.654,
    					0.7043,
    					0.7509,
    					0.7933,
    					0.8311,
    					0.8641,
    					0.8924,
    					0.9162,
    					0.9359,
    					0.9517,
    					0.9642,
    					0.974,
    					0.9814,
    					0.9869,
    					0.991,
    					0.9939,
    					0.9959,
    					0.9973,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3378,
    				"std.error": 0.8925,
    				statistic: 1.4989,
    				"p.value": 0.1353,
    				"conf.low": -0.4207,
    				"conf.high": 3.0963,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					7.7144e-13,
    					2.2554e-12,
    					6.449e-12,
    					1.8036e-11,
    					4.9335e-11,
    					1.3199e-10,
    					3.4542e-10,
    					8.8417e-10,
    					2.2138e-9,
    					5.422e-9,
    					1.299e-8,
    					3.0445e-8,
    					6.9803e-8,
    					1.5657e-7,
    					3.4357e-7,
    					7.3761e-7,
    					0.0000015494,
    					0.0000031844,
    					0.000006404,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0034,
    					0.0053,
    					0.008,
    					0.012,
    					0.0175,
    					0.0252,
    					0.0354,
    					0.0488,
    					0.0661,
    					0.0877,
    					0.1141,
    					0.1458,
    					0.183,
    					0.2255,
    					0.2731,
    					0.3253,
    					0.3811,
    					0.4395,
    					0.4993,
    					0.5591,
    					0.6176,
    					0.6735,
    					0.7257,
    					0.7735,
    					0.8161,
    					0.8534,
    					0.8852,
    					0.9118,
    					0.9335,
    					0.9508,
    					0.9643,
    					0.9746,
    					0.9823,
    					0.9879,
    					0.9919,
    					0.9947,
    					0.9966,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 163,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option5",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5642,
    				"std.error": 0.4031,
    				statistic: 16.2852,
    				"p.value": 5.1358e-44,
    				"conf.low": 5.7712,
    				"conf.high": 7.3572,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.5997e-16,
    					1.2567e-15,
    					4.2859e-15,
    					1.4279e-14,
    					4.6471e-14,
    					1.4775e-13,
    					4.5891e-13,
    					1.3925e-12,
    					4.1279e-12,
    					1.1955e-11,
    					3.3826e-11,
    					9.3508e-11,
    					2.5255e-10,
    					6.6646e-10,
    					1.7184e-9,
    					4.3292e-9,
    					1.0657e-8,
    					2.5635e-8,
    					6.0255e-8,
    					1.3841e-7,
    					3.1068e-7,
    					6.8155e-7,
    					0.0000014613,
    					0.000003062,
    					0.0000062715,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0024,
    					0.0038,
    					0.0059,
    					0.009,
    					0.0135,
    					0.0199,
    					0.0286,
    					0.0403,
    					0.0555,
    					0.075,
    					0.0993,
    					0.129,
    					0.1643,
    					0.2053,
    					0.2518,
    					0.3034,
    					0.3592,
    					0.4182,
    					0.4792,
    					0.5406,
    					0.601,
    					0.6592,
    					0.7137,
    					0.7637,
    					0.8085,
    					0.8477,
    					0.8812,
    					0.9091,
    					0.9318,
    					0.9498,
    					0.9639,
    					0.9745,
    					0.9824,
    					0.9881,
    					0.9921,
    					0.9949,
    					0.9968,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.7851,
    				"std.error": 0.5036,
    				statistic: -1.5588,
    				"p.value": 0.12,
    				"conf.low": -1.7759,
    				"conf.high": 0.2057,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					9.4807e-17,
    					3.4563e-16,
    					1.23e-15,
    					4.2729e-15,
    					1.449e-14,
    					4.7971e-14,
    					1.5503e-13,
    					4.8913e-13,
    					1.5066e-12,
    					4.5302e-12,
    					1.3299e-11,
    					3.8117e-11,
    					1.0666e-10,
    					2.9141e-10,
    					7.7735e-10,
    					2.0246e-9,
    					5.149e-9,
    					1.2786e-8,
    					3.1005e-8,
    					7.3417e-8,
    					1.6977e-7,
    					3.8338e-7,
    					8.4552e-7,
    					0.0000018212,
    					0.0000038316,
    					0.0000078738,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0018,
    					0.0029,
    					0.0047,
    					0.0073,
    					0.0112,
    					0.0167,
    					0.0243,
    					0.0347,
    					0.0486,
    					0.0665,
    					0.0892,
    					0.1171,
    					0.1508,
    					0.1903,
    					0.2357,
    					0.2864,
    					0.3418,
    					0.4009,
    					0.4623,
    					0.5246,
    					0.5864,
    					0.646,
    					0.7023,
    					0.7541,
    					0.8006,
    					0.8414,
    					0.8763,
    					0.9054,
    					0.9292,
    					0.948,
    					0.9627,
    					0.9737,
    					0.9819,
    					0.9878,
    					0.992,
    					0.9948,
    					0.9967,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.4055,
    				"std.error": 0.5516,
    				statistic: -2.5478,
    				"p.value": 0.0113,
    				"conf.low": -2.4907,
    				"conf.high": -0.3202,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.4193e-25,
    					1.0651e-24,
    					7.7005e-24,
    					5.3633e-23,
    					3.5987e-22,
    					2.3263e-21,
    					1.4488e-20,
    					8.693e-20,
    					5.0253e-19,
    					2.7989e-18,
    					1.502e-17,
    					7.7662e-17,
    					3.8691e-16,
    					1.8573e-15,
    					8.5909e-15,
    					3.8291e-14,
    					1.6446e-13,
    					6.8068e-13,
    					2.7149e-12,
    					1.0436e-11,
    					3.8661e-11,
    					1.3804e-10,
    					4.7502e-10,
    					1.5757e-9,
    					5.0379e-9,
    					1.5528e-8,
    					4.6139e-8,
    					1.3217e-7,
    					3.6507e-7,
    					9.7227e-7,
    					0.000002497,
    					0.0000061849,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0007,
    					0.0013,
    					0.0024,
    					0.0043,
    					0.0075,
    					0.0127,
    					0.0206,
    					0.0323,
    					0.0491,
    					0.0722,
    					0.1028,
    					0.1419,
    					0.19,
    					0.2471,
    					0.3122,
    					0.3838,
    					0.4596,
    					0.5369,
    					0.6128,
    					0.6847,
    					0.7501,
    					0.8075,
    					0.8561,
    					0.8956,
    					0.9266,
    					0.95,
    					0.9671,
    					0.979,
    					0.987,
    					0.9923,
    					0.9955,
    					0.9975,
    					0.9987,
    					0.9993,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.06,
    				"std.error": 0.6889,
    				statistic: 1.5387,
    				"p.value": 0.1249,
    				"conf.low": -0.2953,
    				"conf.high": 2.4152,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					9.9758e-19,
    					5.5127e-18,
    					2.9343e-17,
    					1.5044e-16,
    					7.4296e-16,
    					3.5343e-15,
    					1.6196e-14,
    					7.1496e-14,
    					3.0404e-13,
    					1.2456e-12,
    					4.9164e-12,
    					1.8695e-11,
    					6.8495e-11,
    					2.4179e-10,
    					8.2246e-10,
    					2.6958e-9,
    					8.5149e-9,
    					2.5919e-8,
    					7.604e-8,
    					2.1502e-7,
    					5.8605e-7,
    					0.0000015398,
    					0.0000039006,
    					0.0000095266,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0009,
    					0.0018,
    					0.0033,
    					0.0058,
    					0.01,
    					0.0165,
    					0.0264,
    					0.0407,
    					0.0609,
    					0.0881,
    					0.1235,
    					0.1678,
    					0.2212,
    					0.2832,
    					0.3526,
    					0.4272,
    					0.5045,
    					0.5817,
    					0.6558,
    					0.7244,
    					0.7855,
    					0.8378,
    					0.8811,
    					0.9155,
    					0.9418,
    					0.9612,
    					0.975,
    					0.9844,
    					0.9906,
    					0.9945,
    					0.9969,
    					0.9983,
    					0.9991,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 164,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option5",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.9314,
    				"std.error": 0.3235,
    				statistic: 18.3361,
    				"p.value": 4.6428e-52,
    				"conf.low": 5.295,
    				"conf.high": 6.5678,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.8428e-16,
    					1.3525e-15,
    					6.2049e-15,
    					2.7451e-14,
    					1.1712e-13,
    					4.8189e-13,
    					1.9122e-12,
    					7.3179e-12,
    					2.7011e-11,
    					9.616e-11,
    					3.302e-10,
    					1.0937e-9,
    					3.4947e-9,
    					1.0772e-8,
    					3.2033e-8,
    					9.1906e-8,
    					2.5442e-7,
    					6.7962e-7,
    					0.0000017519,
    					0.0000043585,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.001,
    					0.0018,
    					0.0033,
    					0.0058,
    					0.0098,
    					0.0161,
    					0.0256,
    					0.0394,
    					0.0587,
    					0.0847,
    					0.1186,
    					0.1612,
    					0.2125,
    					0.2724,
    					0.3396,
    					0.4124,
    					0.4883,
    					0.5646,
    					0.6386,
    					0.7077,
    					0.77,
    					0.824,
    					0.8693,
    					0.9057,
    					0.9341,
    					0.9553,
    					0.9707,
    					0.9814,
    					0.9886,
    					0.9932,
    					0.9961,
    					0.9978,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.2455,
    				"std.error": 0.4033,
    				statistic: -0.6087,
    				"p.value": 0.5432,
    				"conf.low": -1.0388,
    				"conf.high": 0.5479,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.7347e-31,
    					1.6734e-30,
    					1.5542e-29,
    					1.3899e-28,
    					1.1968e-27,
    					9.9223e-27,
    					7.9208e-26,
    					6.0883e-25,
    					4.5061e-24,
    					3.2113e-23,
    					2.2037e-22,
    					1.4562e-21,
    					9.2658e-21,
    					5.6774e-20,
    					3.3499e-19,
    					1.9035e-18,
    					1.0415e-17,
    					5.4885e-17,
    					2.7853e-16,
    					1.3613e-15,
    					6.4078e-15,
    					2.905e-14,
    					1.2684e-13,
    					5.3345e-13,
    					2.1609e-12,
    					8.4319e-12,
    					3.1693e-11,
    					1.1475e-10,
    					4.0027e-10,
    					1.3451e-9,
    					4.3548e-9,
    					1.3585e-8,
    					4.0833e-8,
    					1.1827e-7,
    					3.3013e-7,
    					8.8811e-7,
    					0.0000023028,
    					0.0000057557,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0007,
    					0.0013,
    					0.0024,
    					0.0043,
    					0.0075,
    					0.0126,
    					0.0206,
    					0.0324,
    					0.0493,
    					0.0726,
    					0.1037,
    					0.1433,
    					0.1921,
    					0.2499,
    					0.3158,
    					0.3881,
    					0.4646,
    					0.5424,
    					0.6186,
    					0.6905,
    					0.7557,
    					0.8127,
    					0.8607,
    					0.8995,
    					0.9298,
    					0.9525,
    					0.9689,
    					0.9803,
    					0.9879,
    					0.9929,
    					0.9959,
    					0.9978,
    					0.9988,
    					0.9994,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.4475,
    				"std.error": 0.6311,
    				statistic: -0.7091,
    				"p.value": 0.4788,
    				"conf.low": -1.6891,
    				"conf.high": 0.7941,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.5385e-26,
    					9.2986e-26,
    					5.4619e-25,
    					3.1181e-24,
    					1.7301e-23,
    					9.3293e-23,
    					4.8895e-22,
    					2.4906e-21,
    					1.2331e-20,
    					5.9336e-20,
    					2.7752e-19,
    					1.2616e-18,
    					5.5742e-18,
    					2.394e-17,
    					9.9935e-17,
    					4.055e-16,
    					1.5994e-15,
    					6.1319e-15,
    					2.2852e-14,
    					8.2789e-14,
    					2.9156e-13,
    					9.9816e-13,
    					3.322e-12,
    					1.0748e-11,
    					3.3809e-11,
    					1.0339e-10,
    					3.0741e-10,
    					8.8865e-10,
    					2.4977e-9,
    					6.8263e-9,
    					1.8141e-8,
    					4.6878e-8,
    					1.178e-7,
    					2.8789e-7,
    					6.8426e-7,
    					0.0000015818,
    					0.0000035566,
    					0.0000077788,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0026,
    					0.0043,
    					0.0071,
    					0.0112,
    					0.0172,
    					0.0258,
    					0.0379,
    					0.0541,
    					0.0754,
    					0.1025,
    					0.1362,
    					0.1767,
    					0.2241,
    					0.278,
    					0.3376,
    					0.4015,
    					0.4682,
    					0.5358,
    					0.6023,
    					0.6661,
    					0.7253,
    					0.7788,
    					0.8259,
    					0.866,
    					0.8992,
    					0.926,
    					0.947,
    					0.963,
    					0.9748,
    					0.9832,
    					0.9891,
    					0.9931,
    					0.9958,
    					0.9975,
    					0.9985,
    					0.9992,
    					0.9995,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.0886,
    				"std.error": 0.7905,
    				statistic: 0.1121,
    				"p.value": 0.9108,
    				"conf.low": -1.4665,
    				"conf.high": 1.6437,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					7.6098e-11,
    					2.283e-10,
    					6.6587e-10,
    					1.8882e-9,
    					5.2058e-9,
    					1.3955e-8,
    					3.6374e-8,
    					9.2192e-8,
    					2.2722e-7,
    					5.4461e-7,
    					0.0000012695,
    					0.000002878,
    					0.0000063463,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0023,
    					0.0038,
    					0.0063,
    					0.01,
    					0.0155,
    					0.0234,
    					0.0345,
    					0.0497,
    					0.0696,
    					0.0953,
    					0.1274,
    					0.1663,
    					0.2121,
    					0.2646,
    					0.3229,
    					0.386,
    					0.4523,
    					0.5199,
    					0.587,
    					0.6516,
    					0.7121,
    					0.7671,
    					0.8157,
    					0.8574,
    					0.8923,
    					0.9205,
    					0.9428,
    					0.9598,
    					0.9724,
    					0.9816,
    					0.988,
    					0.9924,
    					0.9953,
    					0.9972,
    					0.9983,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 165,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option5",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5642,
    				"std.error": 0.3957,
    				statistic: 16.5908,
    				"p.value": 2.1666e-41,
    				"conf.low": 5.7847,
    				"conf.high": 7.3437,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.0305e-16,
    					3.7694e-16,
    					1.3457e-15,
    					4.6892e-15,
    					1.5948e-14,
    					5.2935e-14,
    					1.715e-13,
    					5.4233e-13,
    					1.6739e-12,
    					5.0431e-12,
    					1.4831e-11,
    					4.2573e-11,
    					1.1929e-10,
    					3.2631e-10,
    					8.7131e-10,
    					2.2712e-9,
    					5.7798e-9,
    					1.4359e-8,
    					3.483e-8,
    					8.2482e-8,
    					1.9072e-7,
    					4.3057e-7,
    					9.4919e-7,
    					0.0000020433,
    					0.0000042955,
    					0.0000088186,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0032,
    					0.0051,
    					0.008,
    					0.0122,
    					0.0181,
    					0.0263,
    					0.0375,
    					0.0522,
    					0.0713,
    					0.0952,
    					0.1246,
    					0.1598,
    					0.2009,
    					0.2478,
    					0.3,
    					0.3567,
    					0.4167,
    					0.4788,
    					0.5413,
    					0.6029,
    					0.662,
    					0.7173,
    					0.7679,
    					0.813,
    					0.8522,
    					0.8855,
    					0.9131,
    					0.9354,
    					0.9529,
    					0.9665,
    					0.9766,
    					0.984,
    					0.9893,
    					0.993,
    					0.9956,
    					0.9972,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.7851,
    				"std.error": 0.4944,
    				statistic: -1.5881,
    				"p.value": 0.1136,
    				"conf.low": -1.7591,
    				"conf.high": 0.1889,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.582e-17,
    					9.8791e-17,
    					3.6863e-16,
    					1.3415e-15,
    					4.7613e-15,
    					1.6482e-14,
    					5.5645e-14,
    					1.8323e-13,
    					5.8847e-13,
    					1.8434e-12,
    					5.6325e-12,
    					1.6786e-11,
    					4.8799e-11,
    					1.3838e-10,
    					3.8277e-10,
    					1.0328e-9,
    					2.7187e-9,
    					6.9813e-9,
    					1.749e-8,
    					4.2747e-8,
    					1.0193e-7,
    					2.3716e-7,
    					5.3838e-7,
    					0.0000011926,
    					0.0000025778,
    					0.0000054376,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0025,
    					0.0041,
    					0.0064,
    					0.01,
    					0.0151,
    					0.0223,
    					0.0322,
    					0.0455,
    					0.0629,
    					0.0852,
    					0.1128,
    					0.1463,
    					0.1859,
    					0.2315,
    					0.2828,
    					0.339,
    					0.3991,
    					0.4616,
    					0.5251,
    					0.588,
    					0.6487,
    					0.7058,
    					0.7582,
    					0.805,
    					0.8459,
    					0.8807,
    					0.9095,
    					0.9328,
    					0.9512,
    					0.9653,
    					0.9759,
    					0.9836,
    					0.9891,
    					0.9929,
    					0.9955,
    					0.9972,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.0803,
    				"std.error": 0.659,
    				statistic: -1.6393,
    				"p.value": 0.1025,
    				"conf.low": -2.3786,
    				"conf.high": 0.218,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.9932e-20,
    					8.9056e-20,
    					3.8766e-19,
    					1.644e-18,
    					6.7927e-18,
    					2.7344e-17,
    					1.0724e-16,
    					4.098e-16,
    					1.5257e-15,
    					5.5346e-15,
    					1.9562e-14,
    					6.7368e-14,
    					2.2606e-13,
    					7.3915e-13,
    					2.3549e-12,
    					7.3111e-12,
    					2.2118e-11,
    					6.5205e-11,
    					1.8733e-10,
    					5.2446e-10,
    					1.431e-9,
    					3.8051e-9,
    					9.8613e-9,
    					2.4908e-8,
    					6.1323e-8,
    					1.4716e-7,
    					3.4422e-7,
    					7.8488e-7,
    					0.0000017447,
    					0.0000037808,
    					0.0000079881,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0022,
    					0.0036,
    					0.0057,
    					0.009,
    					0.0138,
    					0.0207,
    					0.0302,
    					0.0431,
    					0.0602,
    					0.0822,
    					0.1097,
    					0.1433,
    					0.1832,
    					0.2294,
    					0.2815,
    					0.3388,
    					0.4,
    					0.4638,
    					0.5285,
    					0.5925,
    					0.6541,
    					0.7119,
    					0.7646,
    					0.8116,
    					0.8523,
    					0.8866,
    					0.9148,
    					0.9374,
    					0.9551,
    					0.9685,
    					0.9784,
    					0.9855,
    					0.9905,
    					0.9939,
    					0.9962,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.6283,
    				"std.error": 0.8256,
    				statistic: 0.761,
    				"p.value": 0.4474,
    				"conf.low": -0.9982,
    				"conf.high": 2.2548,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.8146e-12,
    					1.7702e-11,
    					5.2511e-11,
    					1.5179e-10,
    					4.2758e-10,
    					1.1737e-9,
    					3.1399e-9,
    					8.1861e-9,
    					2.08e-8,
    					5.1508e-8,
    					1.2432e-7,
    					2.9248e-7,
    					6.7072e-7,
    					0.0000014993,
    					0.0000032673,
    					0.0000069414,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0033,
    					0.0053,
    					0.0083,
    					0.0128,
    					0.0193,
    					0.0283,
    					0.0406,
    					0.0569,
    					0.078,
    					0.1045,
    					0.1371,
    					0.1759,
    					0.2211,
    					0.2723,
    					0.3288,
    					0.3895,
    					0.453,
    					0.5178,
    					0.5821,
    					0.6442,
    					0.7028,
    					0.7565,
    					0.8044,
    					0.8462,
    					0.8816,
    					0.9107,
    					0.9342,
    					0.9526,
    					0.9666,
    					0.977,
    					0.9846,
    					0.9899,
    					0.9935,
    					0.9959,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 166,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2533,
    				"std.error": 0.5307,
    				statistic: 11.7821,
    				"p.value": 4.0448e-24,
    				"conf.low": 5.206,
    				"conf.high": 7.3006,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.5048e-8,
    					2.917e-8,
    					5.5795e-8,
    					1.0531e-7,
    					1.9616e-7,
    					3.6054e-7,
    					6.5398e-7,
    					0.0000011706,
    					0.000002068,
    					0.0000036053,
    					0.0000062032,
    					0,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.001,
    					0.0015,
    					0.0022,
    					0.0032,
    					0.0045,
    					0.0063,
    					0.0086,
    					0.0118,
    					0.0159,
    					0.0212,
    					0.0279,
    					0.0363,
    					0.0467,
    					0.0593,
    					0.0744,
    					0.0923,
    					0.1132,
    					0.1372,
    					0.1646,
    					0.1953,
    					0.2292,
    					0.2661,
    					0.3059,
    					0.3481,
    					0.3923,
    					0.4379,
    					0.4843,
    					0.531,
    					0.5772,
    					0.6224,
    					0.666,
    					0.7075,
    					0.7464,
    					0.7823,
    					0.8152,
    					0.8448,
    					0.871,
    					0.894,
    					0.9139,
    					0.9309,
    					0.9451,
    					0.957,
    					0.9666,
    					0.9745,
    					0.9807,
    					0.9855,
    					0.9893,
    					0.9922,
    					0.9944,
    					0.996,
    					0.9972,
    					0.9981,
    					0.9987,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.7276,
    				"std.error": 0.6786,
    				statistic: -1.0722,
    				"p.value": 0.2851,
    				"conf.low": -2.0665,
    				"conf.high": 0.6114,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.9701e-10,
    					6.1643e-10,
    					1.2626e-9,
    					2.5524e-9,
    					5.0924e-9,
    					1.0027e-8,
    					1.9488e-8,
    					3.7381e-8,
    					7.077e-8,
    					1.3224e-7,
    					2.439e-7,
    					4.4402e-7,
    					7.9788e-7,
    					0.0000014152,
    					0.0000024778,
    					0.0000042822,
    					0.0000073056,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0011,
    					0.0016,
    					0.0024,
    					0.0034,
    					0.0048,
    					0.0066,
    					0.0091,
    					0.0124,
    					0.0166,
    					0.0221,
    					0.029,
    					0.0375,
    					0.048,
    					0.0608,
    					0.0761,
    					0.0941,
    					0.1151,
    					0.1392,
    					0.1666,
    					0.1972,
    					0.231,
    					0.2678,
    					0.3074,
    					0.3493,
    					0.3932,
    					0.4384,
    					0.4845,
    					0.5308,
    					0.5766,
    					0.6215,
    					0.6648,
    					0.7059,
    					0.7446,
    					0.7805,
    					0.8132,
    					0.8428,
    					0.8691,
    					0.8922,
    					0.9122,
    					0.9293,
    					0.9437,
    					0.9557,
    					0.9655,
    					0.9735,
    					0.9799,
    					0.9849,
    					0.9888,
    					0.9918,
    					0.9941,
    					0.9957,
    					0.997,
    					0.9979,
    					0.9986,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.5133,
    				"std.error": 0.6955,
    				statistic: -2.1758,
    				"p.value": 0.0309,
    				"conf.low": -2.8858,
    				"conf.high": -0.1409,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.1586e-16,
    					1.1035e-15,
    					3.7663e-15,
    					1.2558e-14,
    					4.0908e-14,
    					1.3019e-13,
    					4.0477e-13,
    					1.2295e-12,
    					3.6491e-12,
    					1.0581e-11,
    					2.9976e-11,
    					8.2977e-11,
    					2.2442e-10,
    					5.9309e-10,
    					1.5315e-9,
    					3.8645e-9,
    					9.5288e-9,
    					2.296e-8,
    					5.4063e-8,
    					1.2441e-7,
    					2.7979e-7,
    					6.1497e-7,
    					0.0000013211,
    					0.0000027741,
    					0.0000056937,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0022,
    					0.0035,
    					0.0055,
    					0.0085,
    					0.0127,
    					0.0188,
    					0.027,
    					0.0382,
    					0.0528,
    					0.0715,
    					0.095,
    					0.1237,
    					0.158,
    					0.198,
    					0.2435,
    					0.2942,
    					0.3493,
    					0.4078,
    					0.4684,
    					0.5297,
    					0.5904,
    					0.6489,
    					0.7042,
    					0.755,
    					0.8007,
    					0.8409,
    					0.8754,
    					0.9042,
    					0.9278,
    					0.9467,
    					0.9614,
    					0.9727,
    					0.981,
    					0.9871,
    					0.9914,
    					0.9944,
    					0.9964,
    					0.9978,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3519,
    				"std.error": 0.9154,
    				statistic: 1.4769,
    				"p.value": 0.1415,
    				"conf.low": -0.4544,
    				"conf.high": 3.1582,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.4313e-12,
    					6.7636e-12,
    					1.8423e-11,
    					4.9135e-11,
    					1.2832e-10,
    					3.2812e-10,
    					8.2159e-10,
    					2.0145e-9,
    					4.8369e-9,
    					1.1373e-8,
    					2.6187e-8,
    					5.9051e-8,
    					1.3041e-7,
    					2.8206e-7,
    					5.975e-7,
    					0.0000012397,
    					0.0000025193,
    					0.0000050151,
    					0.0000097791,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0025,
    					0.0039,
    					0.006,
    					0.0091,
    					0.0133,
    					0.0192,
    					0.0272,
    					0.0378,
    					0.0515,
    					0.069,
    					0.0906,
    					0.117,
    					0.1483,
    					0.1849,
    					0.2265,
    					0.273,
    					0.3238,
    					0.3781,
    					0.435,
    					0.4932,
    					0.5515,
    					0.6088,
    					0.6638,
    					0.7155,
    					0.763,
    					0.8059,
    					0.8436,
    					0.8762,
    					0.9037,
    					0.9264,
    					0.9448,
    					0.9593,
    					0.9706,
    					0.9791,
    					0.9855,
    					0.9901,
    					0.9934,
    					0.9956,
    					0.9972,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 167,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.5544,
    				"std.error": 0.4011,
    				statistic: 13.8488,
    				"p.value": 3.657e-30,
    				"conf.low": 4.763,
    				"conf.high": 6.3458,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.1375e-8,
    					2.7433e-8,
    					6.4636e-8,
    					1.4879e-7,
    					3.3464e-7,
    					7.3536e-7,
    					0.000001579,
    					0.0000033128,
    					0.0000067923,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0025,
    					0.0041,
    					0.0064,
    					0.0097,
    					0.0146,
    					0.0213,
    					0.0306,
    					0.043,
    					0.0591,
    					0.0797,
    					0.1052,
    					0.1362,
    					0.1729,
    					0.2154,
    					0.2634,
    					0.3163,
    					0.3733,
    					0.4332,
    					0.4947,
    					0.5563,
    					0.6166,
    					0.6742,
    					0.7279,
    					0.7767,
    					0.8202,
    					0.8579,
    					0.8899,
    					0.9163,
    					0.9377,
    					0.9545,
    					0.9675,
    					0.9773,
    					0.9844,
    					0.9896,
    					0.9932,
    					0.9956,
    					0.9972,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.1982,
    				"std.error": 0.5393,
    				statistic: -0.3676,
    				"p.value": 0.7136,
    				"conf.low": -1.2625,
    				"conf.high": 0.866,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					8.7648e-19,
    					3.1747e-18,
    					1.1259e-17,
    					3.91e-17,
    					1.3295e-16,
    					4.4267e-16,
    					1.4432e-15,
    					4.6073e-15,
    					1.4402e-14,
    					4.4086e-14,
    					1.3215e-13,
    					3.8789e-13,
    					1.1149e-12,
    					3.1383e-12,
    					8.6505e-12,
    					2.3351e-11,
    					6.173e-11,
    					1.5981e-10,
    					4.052e-10,
    					1.0062e-9,
    					2.447e-9,
    					5.8286e-9,
    					1.3598e-8,
    					3.1071e-8,
    					6.9542e-8,
    					1.5246e-7,
    					3.274e-7,
    					6.8872e-7,
    					0.0000014193,
    					0.0000028652,
    					0.0000056667,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0017,
    					0.0027,
    					0.0042,
    					0.0064,
    					0.0095,
    					0.0139,
    					0.02,
    					0.0283,
    					0.0391,
    					0.0532,
    					0.071,
    					0.093,
    					0.1197,
    					0.1514,
    					0.1883,
    					0.2302,
    					0.2769,
    					0.3278,
    					0.3821,
    					0.4388,
    					0.4968,
    					0.5549,
    					0.6119,
    					0.6665,
    					0.7178,
    					0.765,
    					0.8074,
    					0.8448,
    					0.8771,
    					0.9043,
    					0.9269,
    					0.9451,
    					0.9595,
    					0.9707,
    					0.9792,
    					0.9855,
    					0.9901,
    					0.9933,
    					0.9956,
    					0.9972,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.7199,
    				"std.error": 0.7971,
    				statistic: -0.9031,
    				"p.value": 0.3677,
    				"conf.low": -2.2928,
    				"conf.high": 0.853,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.1958e-16,
    					1.2457e-15,
    					3.6335e-15,
    					1.0411e-14,
    					2.9308e-14,
    					8.1049e-14,
    					2.202e-13,
    					5.8772e-13,
    					1.5411e-12,
    					3.9703e-12,
    					1.0049e-11,
    					2.4988e-11,
    					6.1048e-11,
    					1.4654e-10,
    					3.4558e-10,
    					8.0078e-10,
    					1.8232e-9,
    					4.0784e-9,
    					8.9646e-9,
    					1.9362e-8,
    					4.1091e-8,
    					8.5692e-8,
    					1.756e-7,
    					3.5363e-7,
    					6.9982e-7,
    					0.000001361,
    					0.0000026013,
    					0.0000048863,
    					0.000009021,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.001,
    					0.0016,
    					0.0025,
    					0.0037,
    					0.0055,
    					0.008,
    					0.0115,
    					0.0162,
    					0.0225,
    					0.0307,
    					0.0413,
    					0.0546,
    					0.0711,
    					0.0912,
    					0.1153,
    					0.1435,
    					0.1761,
    					0.213,
    					0.2541,
    					0.299,
    					0.3472,
    					0.3979,
    					0.4505,
    					0.5039,
    					0.5573,
    					0.6097,
    					0.6601,
    					0.7078,
    					0.7522,
    					0.7927,
    					0.8289,
    					0.8609,
    					0.8885,
    					0.912,
    					0.9315,
    					0.9475,
    					0.9604,
    					0.9706,
    					0.9785,
    					0.9846,
    					0.9891,
    					0.9924,
    					0.9948,
    					0.9965,
    					0.9977,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.0091,
    				"std.error": 1.0305,
    				statistic: 0.9792,
    				"p.value": 0.3288,
    				"conf.low": -1.0244,
    				"conf.high": 3.0425,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.2218e-9,
    					6.9524e-9,
    					1.4757e-8,
    					3.081e-8,
    					6.3276e-8,
    					1.2783e-7,
    					2.5403e-7,
    					4.9659e-7,
    					9.55e-7,
    					0.0000018067,
    					0.0000033627,
    					0.0000061575,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0016,
    					0.0025,
    					0.0037,
    					0.0054,
    					0.0078,
    					0.0111,
    					0.0155,
    					0.0213,
    					0.0289,
    					0.0386,
    					0.0509,
    					0.066,
    					0.0844,
    					0.1064,
    					0.1323,
    					0.1623,
    					0.1963,
    					0.2344,
    					0.2761,
    					0.3213,
    					0.3693,
    					0.4194,
    					0.4708,
    					0.5227,
    					0.5743,
    					0.6246,
    					0.6728,
    					0.7184,
    					0.7606,
    					0.7991,
    					0.8337,
    					0.8641,
    					0.8905,
    					0.913,
    					0.9319,
    					0.9474,
    					0.96,
    					0.97,
    					0.9778,
    					0.9839,
    					0.9884,
    					0.9918,
    					0.9943,
    					0.9961,
    					0.9974,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 168,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2533,
    				"std.error": 0.5233,
    				statistic: 11.9508,
    				"p.value": 8.1967e-23,
    				"conf.low": 5.2183,
    				"conf.high": 7.2883,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					9.5375e-9,
    					1.8833e-8,
    					3.6683e-8,
    					7.0479e-8,
    					1.3357e-7,
    					2.4971e-7,
    					4.6051e-7,
    					8.3777e-7,
    					0.0000015035,
    					0.0000026619,
    					0.0000046492,
    					0.000008011,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.0019,
    					0.0028,
    					0.004,
    					0.0057,
    					0.0079,
    					0.0108,
    					0.0147,
    					0.0198,
    					0.0262,
    					0.0343,
    					0.0444,
    					0.0567,
    					0.0715,
    					0.0892,
    					0.1099,
    					0.1338,
    					0.1612,
    					0.1919,
    					0.226,
    					0.2632,
    					0.3034,
    					0.346,
    					0.3908,
    					0.437,
    					0.4841,
    					0.5314,
    					0.5783,
    					0.6241,
    					0.6683,
    					0.7101,
    					0.7494,
    					0.7856,
    					0.8186,
    					0.8482,
    					0.8744,
    					0.8973,
    					0.917,
    					0.9337,
    					0.9476,
    					0.9592,
    					0.9685,
    					0.9761,
    					0.982,
    					0.9867,
    					0.9902,
    					0.9929,
    					0.9949,
    					0.9964,
    					0.9975,
    					0.9983,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.7276,
    				"std.error": 0.669,
    				statistic: -1.0875,
    				"p.value": 0.2788,
    				"conf.low": -2.0508,
    				"conf.high": 0.5957,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.6859e-10,
    					3.5716e-10,
    					7.4646e-10,
    					1.5391e-9,
    					3.1309e-9,
    					6.2834e-9,
    					1.2441e-8,
    					2.4303e-8,
    					4.6839e-8,
    					8.9066e-8,
    					1.671e-7,
    					3.0932e-7,
    					5.6496e-7,
    					0.0000010181,
    					0.0000018105,
    					0.0000031767,
    					0.0000055001,
    					0.000009397,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0014,
    					0.0021,
    					0.003,
    					0.0043,
    					0.006,
    					0.0083,
    					0.0114,
    					0.0154,
    					0.0206,
    					0.0272,
    					0.0355,
    					0.0457,
    					0.0582,
    					0.0732,
    					0.091,
    					0.1118,
    					0.1358,
    					0.1632,
    					0.1939,
    					0.2278,
    					0.2649,
    					0.3048,
    					0.3473,
    					0.3917,
    					0.4375,
    					0.4843,
    					0.5312,
    					0.5777,
    					0.6232,
    					0.667,
    					0.7086,
    					0.7476,
    					0.7837,
    					0.8166,
    					0.8462,
    					0.8725,
    					0.8954,
    					0.9152,
    					0.9321,
    					0.9462,
    					0.9579,
    					0.9675,
    					0.9751,
    					0.9812,
    					0.986,
    					0.9897,
    					0.9925,
    					0.9946,
    					0.9962,
    					0.9973,
    					0.9982,
    					0.9987,
    					0.9992,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.4188,
    				"std.error": 0.8518,
    				statistic: -1.6657,
    				"p.value": 0.0981,
    				"conf.low": -3.1037,
    				"conf.high": 0.266,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					9.6534e-12,
    					2.267e-11,
    					5.2419e-11,
    					1.1935e-10,
    					2.6756e-10,
    					5.9066e-10,
    					1.284e-9,
    					2.7483e-9,
    					5.7929e-9,
    					1.2024e-8,
    					2.4577e-8,
    					4.9469e-8,
    					9.8059e-8,
    					1.9142e-7,
    					3.68e-7,
    					6.9675e-7,
    					0.0000012992,
    					0.000002386,
    					0.0000043159,
    					0.000007689,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0011,
    					0.0016,
    					0.0024,
    					0.0036,
    					0.0052,
    					0.0074,
    					0.0104,
    					0.0144,
    					0.0197,
    					0.0265,
    					0.0352,
    					0.0461,
    					0.0596,
    					0.076,
    					0.0956,
    					0.1188,
    					0.1456,
    					0.1762,
    					0.2107,
    					0.2488,
    					0.2902,
    					0.3347,
    					0.3816,
    					0.4303,
    					0.4801,
    					0.5302,
    					0.5798,
    					0.6282,
    					0.6746,
    					0.7185,
    					0.7593,
    					0.7967,
    					0.8303,
    					0.8602,
    					0.8863,
    					0.9087,
    					0.9276,
    					0.9434,
    					0.9563,
    					0.9668,
    					0.9751,
    					0.9815,
    					0.9865,
    					0.9903,
    					0.9931,
    					0.9952,
    					0.9967,
    					0.9977,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5384,
    				"std.error": 1.0871,
    				statistic: 1.4152,
    				"p.value": 0.1594,
    				"conf.low": -0.6118,
    				"conf.high": 3.6885,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.0495e-9,
    					2.2258e-9,
    					4.6512e-9,
    					9.576e-9,
    					1.9425e-8,
    					3.8824e-8,
    					7.6455e-8,
    					1.4835e-7,
    					2.8363e-7,
    					5.3434e-7,
    					9.9193e-7,
    					0.0000018145,
    					0.0000032708,
    					0.0000058102,
    					0,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0027,
    					0.004,
    					0.0057,
    					0.008,
    					0.0111,
    					0.0153,
    					0.0208,
    					0.0278,
    					0.0366,
    					0.0477,
    					0.0613,
    					0.0777,
    					0.0973,
    					0.1202,
    					0.1468,
    					0.177,
    					0.2109,
    					0.2483,
    					0.289,
    					0.3325,
    					0.3785,
    					0.4262,
    					0.4751,
    					0.5243,
    					0.5732,
    					0.621,
    					0.667,
    					0.7106,
    					0.7513,
    					0.7887,
    					0.8226,
    					0.8529,
    					0.8795,
    					0.9025,
    					0.9221,
    					0.9386,
    					0.9522,
    					0.9633,
    					0.9722,
    					0.9792,
    					0.9846,
    					0.9888,
    					0.992,
    					0.9943,
    					0.996,
    					0.9973,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 169,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2945,
    				"std.error": 0.4628,
    				statistic: 13.6012,
    				"p.value": 1.5957e-30,
    				"conf.low": 5.3821,
    				"conf.high": 7.2069,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.8377e-11,
    					1.402e-10,
    					3.308e-10,
    					7.6694e-10,
    					1.7471e-9,
    					3.9104e-9,
    					8.6002e-9,
    					1.8586e-8,
    					3.9468e-8,
    					8.2358e-8,
    					1.6888e-7,
    					3.4031e-7,
    					6.7391e-7,
    					0.0000013115,
    					0.0000025084,
    					0.0000047152,
    					0.0000087112,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0024,
    					0.0036,
    					0.0054,
    					0.0078,
    					0.0112,
    					0.0159,
    					0.022,
    					0.0301,
    					0.0405,
    					0.0536,
    					0.0699,
    					0.0898,
    					0.1135,
    					0.1415,
    					0.1737,
    					0.2103,
    					0.2511,
    					0.2957,
    					0.3436,
    					0.3942,
    					0.4467,
    					0.5001,
    					0.5535,
    					0.6059,
    					0.6565,
    					0.7044,
    					0.749,
    					0.7898,
    					0.8264,
    					0.8586,
    					0.8866,
    					0.9103,
    					0.9301,
    					0.9464,
    					0.9595,
    					0.9699,
    					0.978,
    					0.9841,
    					0.9888,
    					0.9922,
    					0.9946,
    					0.9964,
    					0.9976,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.8002,
    				"std.error": 0.6077,
    				statistic: -1.3168,
    				"p.value": 0.1893,
    				"conf.low": -1.9982,
    				"conf.high": 0.3978,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.4206e-12,
    					1.3213e-11,
    					3.1681e-11,
    					7.4721e-11,
    					1.7336e-10,
    					3.9565e-10,
    					8.8827e-10,
    					1.9618e-9,
    					4.2624e-9,
    					9.1103e-9,
    					1.9156e-8,
    					3.9627e-8,
    					8.0647e-8,
    					1.6148e-7,
    					3.1809e-7,
    					6.1652e-7,
    					0.0000011757,
    					0.0000022059,
    					0.0000040726,
    					0.0000073984,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0028,
    					0.0041,
    					0.0059,
    					0.0085,
    					0.012,
    					0.0167,
    					0.0228,
    					0.0308,
    					0.041,
    					0.0538,
    					0.0695,
    					0.0885,
    					0.1112,
    					0.1377,
    					0.1683,
    					0.2029,
    					0.2414,
    					0.2836,
    					0.3291,
    					0.3772,
    					0.4273,
    					0.4786,
    					0.5303,
    					0.5815,
    					0.6313,
    					0.679,
    					0.724,
    					0.7656,
    					0.8034,
    					0.8373,
    					0.8672,
    					0.893,
    					0.915,
    					0.9335,
    					0.9486,
    					0.9609,
    					0.9707,
    					0.9783,
    					0.9842,
    					0.9887,
    					0.992,
    					0.9944,
    					0.9962,
    					0.9974,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.5388,
    				"std.error": 0.6307,
    				statistic: -2.4399,
    				"p.value": 0.0155,
    				"conf.low": -2.7822,
    				"conf.high": -0.2954,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.53e-19,
    					1.5992e-18,
    					7.0412e-18,
    					3.0134e-17,
    					1.2535e-16,
    					5.0679e-16,
    					1.9916e-15,
    					7.6077e-15,
    					2.8247e-14,
    					1.0195e-13,
    					3.5769e-13,
    					1.2199e-12,
    					4.0444e-12,
    					1.3035e-11,
    					4.0841e-11,
    					1.244e-10,
    					3.6841e-10,
    					1.0607e-9,
    					2.9693e-9,
    					8.0819e-9,
    					2.1389e-8,
    					5.5044e-8,
    					1.3775e-7,
    					3.3522e-7,
    					7.9337e-7,
    					0.0000018262,
    					0.0000040886,
    					0.0000089038,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0017,
    					0.0029,
    					0.0048,
    					0.0077,
    					0.0121,
    					0.0186,
    					0.0278,
    					0.0405,
    					0.0577,
    					0.08,
    					0.1084,
    					0.1433,
    					0.1852,
    					0.2339,
    					0.289,
    					0.3495,
    					0.4142,
    					0.4812,
    					0.5488,
    					0.615,
    					0.678,
    					0.7363,
    					0.7886,
    					0.8343,
    					0.8731,
    					0.9051,
    					0.9307,
    					0.9506,
    					0.9656,
    					0.9767,
    					0.9846,
    					0.9901,
    					0.9938,
    					0.9962,
    					0.9977,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5548,
    				"std.error": 0.8354,
    				statistic: 1.8611,
    				"p.value": 0.0641,
    				"conf.low": -0.0922,
    				"conf.high": 3.2019,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.775e-15,
    					9.8101e-15,
    					3.381e-14,
    					1.136e-13,
    					3.7215e-13,
    					1.1886e-12,
    					3.701e-12,
    					1.1236e-11,
    					3.3259e-11,
    					9.5992e-11,
    					2.7014e-10,
    					7.4127e-10,
    					1.9834e-9,
    					5.1752e-9,
    					1.3168e-8,
    					3.2674e-8,
    					7.9066e-8,
    					1.866e-7,
    					4.295e-7,
    					9.6424e-7,
    					0.0000021115,
    					0.0000045103,
    					0.0000093983,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0023,
    					0.0038,
    					0.006,
    					0.0094,
    					0.0143,
    					0.0212,
    					0.0308,
    					0.0438,
    					0.0609,
    					0.0828,
    					0.1102,
    					0.1434,
    					0.1829,
    					0.2285,
    					0.2799,
    					0.3364,
    					0.3968,
    					0.4598,
    					0.5238,
    					0.5872,
    					0.6484,
    					0.706,
    					0.7588,
    					0.806,
    					0.847,
    					0.8819,
    					0.9107,
    					0.934,
    					0.9522,
    					0.9662,
    					0.9766,
    					0.9842,
    					0.9895,
    					0.9932,
    					0.9957,
    					0.9974,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 170,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.6724,
    				"std.error": 0.3677,
    				statistic: 15.4261,
    				"p.value": 3.0124e-36,
    				"conf.low": 4.9474,
    				"conf.high": 6.3973,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					6.9219e-11,
    					2.0701e-10,
    					6.0208e-10,
    					1.7029e-9,
    					4.6843e-9,
    					1.2532e-8,
    					3.2609e-8,
    					8.2531e-8,
    					2.0318e-7,
    					4.8655e-7,
    					0.0000011334,
    					0.0000025688,
    					0.000005664,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0021,
    					0.0035,
    					0.0057,
    					0.0091,
    					0.0141,
    					0.0214,
    					0.0317,
    					0.0458,
    					0.0645,
    					0.0887,
    					0.119,
    					0.156,
    					0.1999,
    					0.2504,
    					0.3071,
    					0.3687,
    					0.434,
    					0.5011,
    					0.5681,
    					0.6333,
    					0.6948,
    					0.7513,
    					0.8016,
    					0.8453,
    					0.8821,
    					0.9122,
    					0.9362,
    					0.9547,
    					0.9686,
    					0.9788,
    					0.9861,
    					0.9911,
    					0.9944,
    					0.9966,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.2254,
    				"std.error": 0.4933,
    				statistic: -0.4569,
    				"p.value": 0.6482,
    				"conf.low": -1.198,
    				"conf.high": 0.7472,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					7.5079e-22,
    					3.4547e-21,
    					1.5501e-20,
    					6.7816e-20,
    					2.8931e-19,
    					1.2035e-18,
    					4.8822e-18,
    					1.9312e-17,
    					7.4493e-17,
    					2.8021e-16,
    					1.0278e-15,
    					3.6766e-15,
    					1.2825e-14,
    					4.3631e-14,
    					1.4475e-13,
    					4.6834e-13,
    					1.4778e-12,
    					4.5479e-12,
    					1.365e-11,
    					3.9959e-11,
    					1.1409e-10,
    					3.1771e-10,
    					8.63e-10,
    					2.2865e-9,
    					5.9094e-9,
    					1.4898e-8,
    					3.6638e-8,
    					8.7901e-8,
    					2.0574e-7,
    					4.698e-7,
    					0.0000010467,
    					0.0000022753,
    					0.0000048261,
    					0.000009989,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0023,
    					0.0038,
    					0.0061,
    					0.0094,
    					0.0143,
    					0.0212,
    					0.0308,
    					0.0436,
    					0.0605,
    					0.0821,
    					0.1091,
    					0.142,
    					0.181,
    					0.226,
    					0.2768,
    					0.3326,
    					0.3924,
    					0.4549,
    					0.5185,
    					0.5816,
    					0.6427,
    					0.7004,
    					0.7534,
    					0.8009,
    					0.8424,
    					0.8778,
    					0.9072,
    					0.931,
    					0.9498,
    					0.9643,
    					0.9752,
    					0.9831,
    					0.9888,
    					0.9927,
    					0.9954,
    					0.9971,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8167,
    				"std.error": 0.7314,
    				statistic: -1.1166,
    				"p.value": 0.2655,
    				"conf.low": -2.2587,
    				"conf.high": 0.6253,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.8347e-18,
    					1.0098e-17,
    					3.5221e-17,
    					1.2027e-16,
    					4.0213e-16,
    					1.3164e-15,
    					4.2194e-15,
    					1.3242e-14,
    					4.0688e-14,
    					1.2242e-13,
    					3.6065e-13,
    					1.0403e-12,
    					2.9385e-12,
    					8.1275e-12,
    					2.2012e-11,
    					5.8378e-11,
    					1.5161e-10,
    					3.8558e-10,
    					9.603e-10,
    					2.3422e-9,
    					5.5944e-9,
    					1.3087e-8,
    					2.9982e-8,
    					6.7275e-8,
    					1.4785e-7,
    					3.1825e-7,
    					6.71e-7,
    					0.0000013858,
    					0.0000028035,
    					0.0000055559,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0027,
    					0.0042,
    					0.0064,
    					0.0095,
    					0.0139,
    					0.0201,
    					0.0283,
    					0.0392,
    					0.0533,
    					0.0712,
    					0.0933,
    					0.1202,
    					0.152,
    					0.189,
    					0.2311,
    					0.278,
    					0.3291,
    					0.3836,
    					0.4405,
    					0.4987,
    					0.5569,
    					0.6139,
    					0.6685,
    					0.7198,
    					0.7669,
    					0.8092,
    					0.8465,
    					0.8785,
    					0.9056,
    					0.9279,
    					0.946,
    					0.9602,
    					0.9713,
    					0.9796,
    					0.9858,
    					0.9903,
    					0.9935,
    					0.9957,
    					0.9973,
    					0.9983,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.0075,
    				"std.error": 0.9518,
    				statistic: 1.0585,
    				"p.value": 0.291,
    				"conf.low": -0.8689,
    				"conf.high": 2.8839,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.6536e-10,
    					4.059e-10,
    					9.7717e-10,
    					2.3072e-9,
    					5.3429e-9,
    					1.2135e-8,
    					2.7035e-8,
    					5.9075e-8,
    					1.2662e-7,
    					2.6621e-7,
    					5.4902e-7,
    					0.0000011107,
    					0.0000022045,
    					0.0000042922,
    					0.0000081989,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.0029,
    					0.0044,
    					0.0067,
    					0.0098,
    					0.0141,
    					0.0201,
    					0.028,
    					0.0383,
    					0.0516,
    					0.0684,
    					0.089,
    					0.1139,
    					0.1434,
    					0.1778,
    					0.2168,
    					0.2605,
    					0.3082,
    					0.3595,
    					0.4134,
    					0.469,
    					0.5253,
    					0.581,
    					0.6351,
    					0.6867,
    					0.7348,
    					0.7789,
    					0.8185,
    					0.8533,
    					0.8833,
    					0.9087,
    					0.9297,
    					0.9468,
    					0.9604,
    					0.9711,
    					0.9792,
    					0.9853,
    					0.9898,
    					0.9931,
    					0.9954,
    					0.997,
    					0.998,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 171,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2945,
    				"std.error": 0.4577,
    				statistic: 13.7533,
    				"p.value": 1.3841e-28,
    				"conf.low": 5.3904,
    				"conf.high": 7.1987,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.6213e-11,
    					8.8659e-11,
    					2.1318e-10,
    					5.0346e-10,
    					1.1678e-9,
    					2.6603e-9,
    					5.9527e-9,
    					1.3083e-8,
    					2.8242e-8,
    					5.9886e-8,
    					1.2474e-7,
    					2.5521e-7,
    					5.1294e-7,
    					0.0000010127,
    					0.0000019644,
    					0.0000037431,
    					0.0000070074,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0022,
    					0.0033,
    					0.005,
    					0.0073,
    					0.0105,
    					0.0149,
    					0.0209,
    					0.0287,
    					0.0388,
    					0.0517,
    					0.0677,
    					0.0874,
    					0.1109,
    					0.1388,
    					0.1711,
    					0.2077,
    					0.2487,
    					0.2936,
    					0.342,
    					0.3931,
    					0.4461,
    					0.5001,
    					0.5541,
    					0.6071,
    					0.6582,
    					0.7065,
    					0.7514,
    					0.7924,
    					0.829,
    					0.8613,
    					0.8891,
    					0.9127,
    					0.9323,
    					0.9484,
    					0.9612,
    					0.9713,
    					0.9791,
    					0.9851,
    					0.9895,
    					0.9927,
    					0.9951,
    					0.9967,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.8002,
    				"std.error": 0.601,
    				statistic: -1.3316,
    				"p.value": 0.185,
    				"conf.low": -1.9874,
    				"conf.high": 0.387,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.1911e-12,
    					7.9326e-12,
    					1.939e-11,
    					4.6604e-11,
    					1.1014e-10,
    					2.5598e-10,
    					5.8499e-10,
    					1.3146e-9,
    					2.9052e-9,
    					6.3136e-9,
    					1.3493e-8,
    					2.8359e-8,
    					5.8615e-8,
    					1.1915e-7,
    					2.382e-7,
    					4.6835e-7,
    					9.0571e-7,
    					0.0000017227,
    					0.0000032228,
    					0.0000059305,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0025,
    					0.0037,
    					0.0055,
    					0.0079,
    					0.0112,
    					0.0157,
    					0.0217,
    					0.0294,
    					0.0393,
    					0.0518,
    					0.0673,
    					0.0861,
    					0.1086,
    					0.135,
    					0.1656,
    					0.2003,
    					0.239,
    					0.2815,
    					0.3273,
    					0.3759,
    					0.4265,
    					0.4784,
    					0.5307,
    					0.5824,
    					0.6327,
    					0.6809,
    					0.7262,
    					0.768,
    					0.8061,
    					0.84,
    					0.8698,
    					0.8956,
    					0.9174,
    					0.9356,
    					0.9505,
    					0.9626,
    					0.9721,
    					0.9795,
    					0.9852,
    					0.9894,
    					0.9926,
    					0.9949,
    					0.9965,
    					0.9977,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.4389,
    				"std.error": 0.7694,
    				statistic: -1.8701,
    				"p.value": 0.0634,
    				"conf.low": -2.9588,
    				"conf.high": 0.0811,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.6103e-14,
    					1.8681e-13,
    					5.1796e-13,
    					1.4091e-12,
    					3.7612e-12,
    					9.8509e-12,
    					2.5315e-11,
    					6.3832e-11,
    					1.5793e-10,
    					3.8343e-10,
    					9.1344e-10,
    					2.1353e-9,
    					4.8984e-9,
    					1.1027e-8,
    					2.436e-8,
    					5.2811e-8,
    					1.1236e-7,
    					2.3461e-7,
    					4.8078e-7,
    					9.67e-7,
    					0.0000019089,
    					0.0000036988,
    					0.0000070349,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0025,
    					0.0038,
    					0.0056,
    					0.0083,
    					0.012,
    					0.0172,
    					0.024,
    					0.033,
    					0.0447,
    					0.0594,
    					0.0777,
    					0.1,
    					0.1266,
    					0.1579,
    					0.1937,
    					0.2342,
    					0.279,
    					0.3275,
    					0.3792,
    					0.4331,
    					0.4883,
    					0.5437,
    					0.5983,
    					0.651,
    					0.701,
    					0.7474,
    					0.7898,
    					0.8276,
    					0.8608,
    					0.8893,
    					0.9134,
    					0.9334,
    					0.9495,
    					0.9624,
    					0.9725,
    					0.9802,
    					0.986,
    					0.9903,
    					0.9933,
    					0.9955,
    					0.9971,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5823,
    				"std.error": 0.9975,
    				statistic: 1.5862,
    				"p.value": 0.1147,
    				"conf.low": -0.3883,
    				"conf.high": 3.5528,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.4871e-11,
    					6.0877e-11,
    					1.4639e-10,
    					3.4584e-10,
    					8.0271e-10,
    					1.8305e-9,
    					4.1011e-9,
    					9.0275e-9,
    					1.9525e-8,
    					4.1491e-8,
    					8.6633e-8,
    					1.7774e-7,
    					3.5833e-7,
    					7.0985e-7,
    					0.0000013818,
    					0.0000026435,
    					0.0000049696,
    					0.0000091816,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0025,
    					0.0038,
    					0.0056,
    					0.0082,
    					0.0117,
    					0.0166,
    					0.023,
    					0.0313,
    					0.0421,
    					0.0556,
    					0.0724,
    					0.0929,
    					0.1173,
    					0.1459,
    					0.1789,
    					0.2162,
    					0.2577,
    					0.303,
    					0.3515,
    					0.4026,
    					0.4554,
    					0.509,
    					0.5624,
    					0.6147,
    					0.665,
    					0.7125,
    					0.7566,
    					0.7967,
    					0.8326,
    					0.8641,
    					0.8913,
    					0.9144,
    					0.9336,
    					0.9492,
    					0.9618,
    					0.9717,
    					0.9794,
    					0.9852,
    					0.9896,
    					0.9928,
    					0.9951,
    					0.9967,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 172,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.35,
    				"std.error": 0.4641,
    				statistic: 13.6828,
    				"p.value": 1.1191e-29,
    				"conf.low": 5.4343,
    				"conf.high": 7.2657,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.973e-11,
    					7.2179e-11,
    					1.7219e-10,
    					4.0366e-10,
    					9.2984e-10,
    					2.1048e-9,
    					4.6818e-9,
    					1.0234e-8,
    					2.1983e-8,
    					4.6406e-8,
    					9.6273e-8,
    					1.9629e-7,
    					3.9332e-7,
    					7.746e-7,
    					0.0000014993,
    					0.0000028524,
    					0.0000053339,
    					0.0000098042,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0026,
    					0.0039,
    					0.0057,
    					0.0083,
    					0.0119,
    					0.0167,
    					0.0231,
    					0.0315,
    					0.0422,
    					0.0557,
    					0.0724,
    					0.0927,
    					0.117,
    					0.1454,
    					0.1781,
    					0.2151,
    					0.2563,
    					0.3012,
    					0.3493,
    					0.4001,
    					0.4525,
    					0.5058,
    					0.559,
    					0.6111,
    					0.6613,
    					0.7088,
    					0.753,
    					0.7932,
    					0.8294,
    					0.8611,
    					0.8886,
    					0.912,
    					0.9315,
    					0.9475,
    					0.9604,
    					0.9705,
    					0.9784,
    					0.9845,
    					0.989,
    					0.9923,
    					0.9947,
    					0.9964,
    					0.9976,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.792,
    				"std.error": 0.6419,
    				statistic: -1.2338,
    				"p.value": 0.2189,
    				"conf.low": -2.0586,
    				"conf.high": 0.4746,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.7584e-11,
    					1.284e-10,
    					2.8213e-10,
    					6.1083e-10,
    					1.3032e-9,
    					2.7398e-9,
    					5.676e-9,
    					1.1588e-8,
    					2.3313e-8,
    					4.6221e-8,
    					9.0307e-8,
    					1.7389e-7,
    					3.2997e-7,
    					6.1711e-7,
    					0.0000011374,
    					0.0000020663,
    					0.0000036996,
    					0.0000065287,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.0019,
    					0.0029,
    					0.0041,
    					0.0059,
    					0.0083,
    					0.0115,
    					0.0158,
    					0.0213,
    					0.0284,
    					0.0374,
    					0.0486,
    					0.0622,
    					0.0787,
    					0.0984,
    					0.1214,
    					0.1479,
    					0.1781,
    					0.2119,
    					0.2491,
    					0.2896,
    					0.333,
    					0.3787,
    					0.4261,
    					0.4747,
    					0.5236,
    					0.5722,
    					0.6197,
    					0.6654,
    					0.7089,
    					0.7495,
    					0.7869,
    					0.8208,
    					0.8511,
    					0.8777,
    					0.9009,
    					0.9206,
    					0.9372,
    					0.951,
    					0.9622,
    					0.9713,
    					0.9785,
    					0.984,
    					0.9883,
    					0.9916,
    					0.994,
    					0.9958,
    					0.9971,
    					0.998,
    					0.9987,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.1669,
    				"std.error": 0.6267,
    				statistic: -1.8619,
    				"p.value": 0.0642,
    				"conf.low": -2.4035,
    				"conf.high": 0.0697,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					8.3374e-22,
    					4.2556e-21,
    					2.1104e-20,
    					1.0168e-19,
    					4.7595e-19,
    					2.1646e-18,
    					9.5648e-18,
    					4.1064e-17,
    					1.7129e-16,
    					6.9426e-16,
    					2.7341e-15,
    					1.0462e-14,
    					3.89e-14,
    					1.4054e-13,
    					4.9341e-13,
    					1.6833e-12,
    					5.5805e-12,
    					1.7979e-11,
    					5.6288e-11,
    					1.7127e-10,
    					5.0646e-10,
    					1.4556e-9,
    					4.0659e-9,
    					1.1039e-8,
    					2.9132e-8,
    					7.4732e-8,
    					1.8636e-7,
    					4.5177e-7,
    					0.0000010647,
    					0.0000024397,
    					0.0000054356,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0021,
    					0.0036,
    					0.0059,
    					0.0094,
    					0.0147,
    					0.0223,
    					0.0331,
    					0.0479,
    					0.0675,
    					0.0927,
    					0.1244,
    					0.1629,
    					0.2085,
    					0.2608,
    					0.3192,
    					0.3824,
    					0.4489,
    					0.5169,
    					0.5845,
    					0.6496,
    					0.7105,
    					0.766,
    					0.815,
    					0.8571,
    					0.8922,
    					0.9206,
    					0.9429,
    					0.96,
    					0.9727,
    					0.9818,
    					0.9882,
    					0.9925,
    					0.9954,
    					0.9972,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.8086,
    				"std.error": 0.889,
    				statistic: 0.9095,
    				"p.value": 0.3643,
    				"conf.low": -0.9457,
    				"conf.high": 2.5629,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.9325e-11,
    					1.0615e-10,
    					2.8022e-10,
    					7.2341e-10,
    					1.8265e-9,
    					4.51e-9,
    					1.0892e-8,
    					2.5727e-8,
    					5.9438e-8,
    					1.3431e-7,
    					2.9689e-7,
    					6.4192e-7,
    					0.0000013577,
    					0.0000028093,
    					0.0000056869,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0032,
    					0.005,
    					0.0076,
    					0.0114,
    					0.0168,
    					0.0242,
    					0.0342,
    					0.0473,
    					0.0642,
    					0.0854,
    					0.1115,
    					0.1429,
    					0.1797,
    					0.222,
    					0.2695,
    					0.3215,
    					0.3773,
    					0.4359,
    					0.4958,
    					0.5559,
    					0.6147,
    					0.6709,
    					0.7236,
    					0.7717,
    					0.8147,
    					0.8523,
    					0.8844,
    					0.9112,
    					0.9331,
    					0.9506,
    					0.9642,
    					0.9746,
    					0.9823,
    					0.9879,
    					0.9919,
    					0.9947,
    					0.9966,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 173,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.7875,
    				"std.error": 0.3579,
    				statistic: 16.1691,
    				"p.value": 6.6365e-37,
    				"conf.low": 5.0812,
    				"conf.high": 6.4938,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.3462e-12,
    					7.8644e-12,
    					2.5594e-11,
    					8.0869e-11,
    					2.481e-10,
    					7.3907e-10,
    					2.1378e-9,
    					6.0047e-9,
    					1.6379e-8,
    					4.3385e-8,
    					1.1161e-7,
    					2.7886e-7,
    					6.7672e-7,
    					0.0000015952,
    					0.0000036525,
    					0.0000081247,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0017,
    					0.003,
    					0.005,
    					0.0082,
    					0.0129,
    					0.02,
    					0.03,
    					0.0439,
    					0.0625,
    					0.0869,
    					0.1177,
    					0.1555,
    					0.2006,
    					0.2527,
    					0.3112,
    					0.3749,
    					0.4422,
    					0.5113,
    					0.58,
    					0.6463,
    					0.7085,
    					0.765,
    					0.8149,
    					0.8576,
    					0.8931,
    					0.9217,
    					0.9441,
    					0.9611,
    					0.9737,
    					0.9826,
    					0.9888,
    					0.993,
    					0.9958,
    					0.9975,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.438,
    				"std.error": 0.5262,
    				statistic: -0.8323,
    				"p.value": 0.4063,
    				"conf.low": -1.4763,
    				"conf.high": 0.6004,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					6.9987e-18,
    					2.5268e-17,
    					8.9234e-17,
    					3.0823e-16,
    					1.0414e-15,
    					3.4419e-15,
    					1.1127e-14,
    					3.5186e-14,
    					1.0884e-13,
    					3.2933e-13,
    					9.7478e-13,
    					2.8225e-12,
    					7.9947e-12,
    					2.2153e-11,
    					6.0051e-11,
    					1.5925e-10,
    					4.1318e-10,
    					1.0487e-9,
    					2.6044e-9,
    					6.3278e-9,
    					1.5043e-8,
    					3.4989e-8,
    					7.963e-8,
    					1.7733e-7,
    					3.8643e-7,
    					8.2404e-7,
    					0.0000017196,
    					0.0000035119,
    					0.0000070193,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0022,
    					0.0035,
    					0.0054,
    					0.0083,
    					0.0123,
    					0.018,
    					0.0257,
    					0.0361,
    					0.0496,
    					0.067,
    					0.0887,
    					0.1152,
    					0.1469,
    					0.1841,
    					0.2266,
    					0.2741,
    					0.3261,
    					0.3817,
    					0.4398,
    					0.4993,
    					0.5589,
    					0.6171,
    					0.6727,
    					0.7248,
    					0.7724,
    					0.815,
    					0.8523,
    					0.8842,
    					0.9108,
    					0.9326,
    					0.95,
    					0.9637,
    					0.9741,
    					0.9819,
    					0.9876,
    					0.9917,
    					0.9945,
    					0.9965,
    					0.9978,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.3427,
    				"std.error": 0.7532,
    				statistic: -0.455,
    				"p.value": 0.6496,
    				"conf.low": -1.8291,
    				"conf.high": 1.1436,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					9.5878e-20,
    					3.4729e-19,
    					1.2331e-18,
    					4.2919e-18,
    					1.4643e-17,
    					4.8973e-17,
    					1.6056e-16,
    					5.1599e-16,
    					1.6256e-15,
    					5.0203e-15,
    					1.5199e-14,
    					4.5109e-14,
    					1.3125e-13,
    					3.7435e-13,
    					1.0468e-12,
    					2.8696e-12,
    					7.7121e-12,
    					2.032e-11,
    					5.2491e-11,
    					1.3294e-10,
    					3.301e-10,
    					8.0365e-10,
    					1.9183e-9,
    					4.4897e-9,
    					1.0303e-8,
    					2.3184e-8,
    					5.1153e-8,
    					1.1067e-7,
    					2.3481e-7,
    					4.8854e-7,
    					9.9681e-7,
    					0.0000019946,
    					0.0000039143,
    					0.0000075341,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0029,
    					0.0044,
    					0.0066,
    					0.0097,
    					0.0141,
    					0.02,
    					0.028,
    					0.0384,
    					0.0518,
    					0.0688,
    					0.0896,
    					0.1149,
    					0.1449,
    					0.1797,
    					0.2193,
    					0.2636,
    					0.312,
    					0.3639,
    					0.4184,
    					0.4745,
    					0.5312,
    					0.5872,
    					0.6415,
    					0.6931,
    					0.7411,
    					0.7849,
    					0.8241,
    					0.8584,
    					0.8879,
    					0.9127,
    					0.9331,
    					0.9497,
    					0.9628,
    					0.9729,
    					0.9807,
    					0.9865,
    					0.9907,
    					0.9937,
    					0.9958,
    					0.9973,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.4412,
    				"std.error": 1.017,
    				statistic: 0.4338,
    				"p.value": 0.665,
    				"conf.low": -1.5656,
    				"conf.high": 2.4479,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.0818e-8,
    					1.0415e-7,
    					2.0987e-7,
    					4.1585e-7,
    					8.1022e-7,
    					0.0000015523,
    					0.0000029244,
    					0.0000054179,
    					0.0000098712,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.001,
    					0.0016,
    					0.0024,
    					0.0036,
    					0.0054,
    					0.0078,
    					0.0111,
    					0.0155,
    					0.0215,
    					0.0293,
    					0.0392,
    					0.0518,
    					0.0674,
    					0.0863,
    					0.109,
    					0.1357,
    					0.1666,
    					0.2016,
    					0.2408,
    					0.2837,
    					0.33,
    					0.3791,
    					0.4302,
    					0.4825,
    					0.5351,
    					0.5871,
    					0.6376,
    					0.6859,
    					0.7311,
    					0.7728,
    					0.8106,
    					0.8443,
    					0.8737,
    					0.899,
    					0.9205,
    					0.9382,
    					0.9528,
    					0.9644,
    					0.9736,
    					0.9807,
    					0.9861,
    					0.9902,
    					0.9931,
    					0.9953,
    					0.9968,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 174,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.35,
    				"std.error": 0.4573,
    				statistic: 13.8863,
    				"p.value": 1.015e-27,
    				"conf.low": 5.4456,
    				"conf.high": 7.2544,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.5429e-11,
    					3.8447e-11,
    					9.4087e-11,
    					2.2613e-10,
    					5.3376e-10,
    					1.2374e-9,
    					2.8174e-9,
    					6.3004e-9,
    					1.3838e-8,
    					2.9854e-8,
    					6.3262e-8,
    					1.3167e-7,
    					2.6921e-7,
    					5.4066e-7,
    					0.0000010666,
    					0.0000020672,
    					0.0000039358,
    					0.0000073616,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0034,
    					0.0051,
    					0.0075,
    					0.0109,
    					0.0154,
    					0.0215,
    					0.0296,
    					0.0399,
    					0.0531,
    					0.0695,
    					0.0895,
    					0.1135,
    					0.1418,
    					0.1746,
    					0.2117,
    					0.2532,
    					0.2985,
    					0.3472,
    					0.3986,
    					0.4518,
    					0.5059,
    					0.5599,
    					0.6127,
    					0.6636,
    					0.7116,
    					0.7562,
    					0.7967,
    					0.8329,
    					0.8647,
    					0.892,
    					0.9152,
    					0.9344,
    					0.95,
    					0.9625,
    					0.9724,
    					0.9799,
    					0.9857,
    					0.9899,
    					0.9931,
    					0.9953,
    					0.9969,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.792,
    				"std.error": 0.6325,
    				statistic: -1.2521,
    				"p.value": 0.2127,
    				"conf.low": -2.0429,
    				"conf.high": 0.459,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.047e-11,
    					6.9558e-11,
    					1.564e-10,
    					3.4635e-10,
    					7.5549e-10,
    					1.6231e-9,
    					3.4349e-9,
    					7.1599e-9,
    					1.4701e-8,
    					2.9732e-8,
    					5.9231e-8,
    					1.1624e-7,
    					2.2471e-7,
    					4.2792e-7,
    					8.0278e-7,
    					0.0000014836,
    					0.0000027013,
    					0.0000048454,
    					0.0000085629,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0025,
    					0.0037,
    					0.0053,
    					0.0075,
    					0.0105,
    					0.0146,
    					0.0198,
    					0.0266,
    					0.0353,
    					0.0461,
    					0.0595,
    					0.0757,
    					0.0951,
    					0.1179,
    					0.1444,
    					0.1745,
    					0.2084,
    					0.246,
    					0.2868,
    					0.3306,
    					0.3769,
    					0.425,
    					0.4743,
    					0.5239,
    					0.5732,
    					0.6214,
    					0.6678,
    					0.7117,
    					0.7526,
    					0.7903,
    					0.8243,
    					0.8546,
    					0.8812,
    					0.9042,
    					0.9237,
    					0.94,
    					0.9535,
    					0.9644,
    					0.9731,
    					0.98,
    					0.9853,
    					0.9893,
    					0.9924,
    					0.9946,
    					0.9963,
    					0.9974,
    					0.9983,
    					0.9989,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.9052,
    				"std.error": 0.792,
    				statistic: -1.1429,
    				"p.value": 0.2551,
    				"conf.low": -2.4718,
    				"conf.high": 0.6613,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.8308e-15,
    					5.3423e-15,
    					1.5311e-14,
    					4.3097e-14,
    					1.1915e-13,
    					3.2356e-13,
    					8.6299e-13,
    					2.2608e-12,
    					5.8176e-12,
    					1.4704e-11,
    					3.6505e-11,
    					8.9023e-11,
    					2.1325e-10,
    					5.0178e-10,
    					1.1598e-9,
    					2.6335e-9,
    					5.8739e-9,
    					1.2871e-8,
    					2.7705e-8,
    					5.8588e-8,
    					1.2172e-7,
    					2.4844e-7,
    					4.9819e-7,
    					9.8156e-7,
    					0.0000019001,
    					0.0000036141,
    					0.0000067547,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0013,
    					0.0021,
    					0.0032,
    					0.0047,
    					0.007,
    					0.0101,
    					0.0143,
    					0.02,
    					0.0275,
    					0.0372,
    					0.0496,
    					0.0651,
    					0.0841,
    					0.107,
    					0.134,
    					0.1654,
    					0.2012,
    					0.2413,
    					0.2853,
    					0.3329,
    					0.3833,
    					0.4358,
    					0.4895,
    					0.5433,
    					0.5964,
    					0.6477,
    					0.6965,
    					0.742,
    					0.7837,
    					0.8212,
    					0.8543,
    					0.883,
    					0.9075,
    					0.9279,
    					0.9447,
    					0.9583,
    					0.969,
    					0.9773,
    					0.9837,
    					0.9884,
    					0.9919,
    					0.9945,
    					0.9963,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.7951,
    				"std.error": 1.0588,
    				statistic: 0.751,
    				"p.value": 0.454,
    				"conf.low": -1.299,
    				"conf.high": 2.8893,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.5512e-8,
    					5.1622e-8,
    					1.0284e-7,
    					2.0169e-7,
    					3.8947e-7,
    					7.4047e-7,
    					0.0000013861,
    					0.0000025549,
    					0.000004637,
    					0.0000082868,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0027,
    					0.0039,
    					0.0057,
    					0.0081,
    					0.0114,
    					0.0157,
    					0.0215,
    					0.0289,
    					0.0383,
    					0.0501,
    					0.0646,
    					0.0822,
    					0.1031,
    					0.1277,
    					0.1562,
    					0.1885,
    					0.2246,
    					0.2644,
    					0.3074,
    					0.3533,
    					0.4014,
    					0.4511,
    					0.5016,
    					0.552,
    					0.6016,
    					0.6496,
    					0.6953,
    					0.7382,
    					0.7778,
    					0.8136,
    					0.8457,
    					0.8739,
    					0.8983,
    					0.919,
    					0.9364,
    					0.9507,
    					0.9624,
    					0.9717,
    					0.9789,
    					0.9846,
    					0.9889,
    					0.9921,
    					0.9945,
    					0.9962,
    					0.9974,
    					0.9982,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 175,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2673,
    				"std.error": 0.5414,
    				statistic: 11.5753,
    				"p.value": 6.4367e-26,
    				"conf.low": 5.2019,
    				"conf.high": 7.3328,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.4167e-8,
    					4.5814e-8,
    					8.5749e-8,
    					1.5846e-7,
    					2.8911e-7,
    					5.208e-7,
    					9.2632e-7,
    					0.0000016268,
    					0.000002821,
    					0.0000048303,
    					0.0000081668,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0017,
    					0.0024,
    					0.0034,
    					0.0048,
    					0.0067,
    					0.0092,
    					0.0124,
    					0.0166,
    					0.022,
    					0.0287,
    					0.0371,
    					0.0474,
    					0.0599,
    					0.0748,
    					0.0923,
    					0.1128,
    					0.1363,
    					0.163,
    					0.1928,
    					0.2258,
    					0.2617,
    					0.3004,
    					0.3414,
    					0.3844,
    					0.4289,
    					0.4743,
    					0.5201,
    					0.5656,
    					0.6102,
    					0.6534,
    					0.6948,
    					0.7337,
    					0.77,
    					0.8033,
    					0.8336,
    					0.8606,
    					0.8845,
    					0.9053,
    					0.9233,
    					0.9385,
    					0.9512,
    					0.9618,
    					0.9704,
    					0.9773,
    					0.9828,
    					0.9871,
    					0.9905,
    					0.9931,
    					0.995,
    					0.9964,
    					0.9975,
    					0.9982,
    					0.9988,
    					0.9992,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.2699,
    				"std.error": 0.608,
    				statistic: -0.444,
    				"p.value": 0.6574,
    				"conf.low": -1.4663,
    				"conf.high": 0.9264,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					9.0292e-15,
    					2.4573e-14,
    					6.5777e-14,
    					1.7319e-13,
    					4.4855e-13,
    					1.1427e-12,
    					2.8635e-12,
    					7.0583e-12,
    					1.7114e-11,
    					4.0819e-11,
    					9.5772e-11,
    					2.2104e-10,
    					5.0186e-10,
    					1.1209e-9,
    					2.4629e-9,
    					5.3236e-9,
    					1.132e-8,
    					2.3683e-8,
    					4.8742e-8,
    					9.8698e-8,
    					1.9663e-7,
    					3.854e-7,
    					7.4326e-7,
    					0.0000014103,
    					0.0000026332,
    					0.0000048376,
    					0.0000087453,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.0031,
    					0.0045,
    					0.0066,
    					0.0094,
    					0.0132,
    					0.0182,
    					0.0249,
    					0.0334,
    					0.0443,
    					0.0578,
    					0.0744,
    					0.0943,
    					0.118,
    					0.1456,
    					0.1773,
    					0.213,
    					0.2525,
    					0.2956,
    					0.3419,
    					0.3906,
    					0.4411,
    					0.4926,
    					0.5442,
    					0.595,
    					0.6443,
    					0.6913,
    					0.7354,
    					0.776,
    					0.8128,
    					0.8456,
    					0.8744,
    					0.8992,
    					0.9202,
    					0.9378,
    					0.9521,
    					0.9637,
    					0.9729,
    					0.98,
    					0.9855,
    					0.9897,
    					0.9927,
    					0.995,
    					0.9966,
    					0.9977,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.7428,
    				"std.error": 0.7089,
    				statistic: -2.4584,
    				"p.value": 0.0145,
    				"conf.low": -3.1378,
    				"conf.high": -0.3478,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.4035e-14,
    					4.4626e-14,
    					1.3875e-13,
    					4.2181e-13,
    					1.254e-12,
    					3.6453e-12,
    					1.0362e-11,
    					2.8805e-11,
    					7.8305e-11,
    					2.0817e-10,
    					5.412e-10,
    					1.376e-9,
    					3.4216e-9,
    					8.3211e-9,
    					1.9792e-8,
    					4.6045e-8,
    					1.0477e-7,
    					2.3319e-7,
    					5.077e-7,
    					0.0000010812,
    					0.0000022526,
    					0.0000045912,
    					0.0000091548,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0028,
    					0.0044,
    					0.0067,
    					0.0101,
    					0.015,
    					0.0217,
    					0.0309,
    					0.043,
    					0.0586,
    					0.0785,
    					0.1031,
    					0.1328,
    					0.168,
    					0.2086,
    					0.2546,
    					0.3053,
    					0.3601,
    					0.418,
    					0.4776,
    					0.5378,
    					0.5971,
    					0.6543,
    					0.7081,
    					0.7577,
    					0.8023,
    					0.8416,
    					0.8753,
    					0.9037,
    					0.927,
    					0.9458,
    					0.9605,
    					0.9717,
    					0.9802,
    					0.9864,
    					0.9909,
    					0.994,
    					0.9961,
    					0.9975,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.4476,
    				"std.error": 0.8073,
    				statistic: 1.7932,
    				"p.value": 0.0739,
    				"conf.low": -0.1409,
    				"conf.high": 3.0362,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					9.0733e-16,
    					3.4279e-15,
    					1.2603e-14,
    					4.5091e-14,
    					1.57e-13,
    					5.3198e-13,
    					1.7543e-12,
    					5.6301e-12,
    					1.7585e-11,
    					5.346e-11,
    					1.5818e-10,
    					4.5554e-10,
    					1.2769e-9,
    					3.4841e-9,
    					9.2538e-9,
    					2.3925e-8,
    					6.0218e-8,
    					1.4755e-7,
    					3.5199e-7,
    					8.1754e-7,
    					0.0000018488,
    					0.0000040712,
    					0.0000087299,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0026,
    					0.0042,
    					0.0068,
    					0.0107,
    					0.0164,
    					0.0246,
    					0.0359,
    					0.0511,
    					0.071,
    					0.0965,
    					0.128,
    					0.1662,
    					0.211,
    					0.2621,
    					0.319,
    					0.3805,
    					0.4451,
    					0.5113,
    					0.5771,
    					0.6409,
    					0.701,
    					0.756,
    					0.805,
    					0.8476,
    					0.8834,
    					0.9129,
    					0.9364,
    					0.9546,
    					0.9684,
    					0.9785,
    					0.9857,
    					0.9908,
    					0.9942,
    					0.9964,
    					0.9978,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 176,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.4855,
    				"std.error": 0.4032,
    				statistic: 13.6047,
    				"p.value": 3.0117e-33,
    				"conf.low": 4.692,
    				"conf.high": 6.2789,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.539e-8,
    					8.2449e-8,
    					1.8771e-7,
    					4.1766e-7,
    					9.082e-7,
    					0.0000019302,
    					0.0000040095,
    					0.0000081408,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0028,
    					0.0045,
    					0.0069,
    					0.0105,
    					0.0156,
    					0.0228,
    					0.0325,
    					0.0454,
    					0.0621,
    					0.0833,
    					0.1096,
    					0.1412,
    					0.1786,
    					0.2216,
    					0.2701,
    					0.3233,
    					0.3804,
    					0.4402,
    					0.5015,
    					0.5627,
    					0.6224,
    					0.6794,
    					0.7324,
    					0.7806,
    					0.8234,
    					0.8604,
    					0.8918,
    					0.9178,
    					0.9388,
    					0.9553,
    					0.968,
    					0.9776,
    					0.9846,
    					0.9897,
    					0.9932,
    					0.9956,
    					0.9973,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: 0.3959,
    				"std.error": 0.4626,
    				statistic: 0.8558,
    				"p.value": 0.3928,
    				"conf.low": -0.5144,
    				"conf.high": 1.3061,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.712e-31,
    					4.0588e-30,
    					2.8022e-29,
    					1.8797e-28,
    					1.2252e-27,
    					7.759e-27,
    					4.7745e-26,
    					2.8546e-25,
    					1.6584e-24,
    					9.3616e-24,
    					5.1349e-23,
    					2.7368e-22,
    					1.4174e-21,
    					7.1327e-21,
    					3.4879e-20,
    					1.6574e-19,
    					7.6529e-19,
    					3.4339e-18,
    					1.4973e-17,
    					6.3444e-17,
    					2.6124e-16,
    					1.0454e-15,
    					4.0654e-15,
    					1.5364e-14,
    					5.6433e-14,
    					2.0145e-13,
    					6.9888e-13,
    					2.3565e-12,
    					7.723e-12,
    					2.4601e-11,
    					7.6166e-11,
    					2.2922e-10,
    					6.7055e-10,
    					1.9068e-9,
    					5.271e-9,
    					1.4165e-8,
    					3.7007e-8,
    					9.3999e-8,
    					2.3214e-7,
    					5.5742e-7,
    					0.0000013015,
    					0.0000029551,
    					0.000006525,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.004,
    					0.0065,
    					0.0103,
    					0.016,
    					0.0241,
    					0.0356,
    					0.0511,
    					0.0716,
    					0.0979,
    					0.1307,
    					0.1703,
    					0.2169,
    					0.2701,
    					0.3292,
    					0.3929,
    					0.4596,
    					0.5275,
    					0.5945,
    					0.6589,
    					0.719,
    					0.7734,
    					0.8213,
    					0.8623,
    					0.8964,
    					0.9238,
    					0.9454,
    					0.9618,
    					0.974,
    					0.9827,
    					0.9888,
    					0.9929,
    					0.9956,
    					0.9974,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.9943,
    				"std.error": 0.8298,
    				statistic: -1.1982,
    				"p.value": 0.2318,
    				"conf.low": -2.6271,
    				"conf.high": 0.6386,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.7632e-14,
    					1.7725e-13,
    					4.5702e-13,
    					1.1593e-12,
    					2.8928e-12,
    					7.1018e-12,
    					1.7153e-11,
    					4.0758e-11,
    					9.5281e-11,
    					2.1915e-10,
    					4.959e-10,
    					1.1041e-9,
    					2.4184e-9,
    					5.2123e-9,
    					1.1053e-8,
    					2.3062e-8,
    					4.7348e-8,
    					9.5648e-8,
    					1.9013e-7,
    					3.7189e-7,
    					7.1582e-7,
    					0.0000013558,
    					0.0000025272,
    					0.0000046359,
    					0.000008369,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.002,
    					0.0029,
    					0.0043,
    					0.0062,
    					0.0089,
    					0.0125,
    					0.0174,
    					0.0237,
    					0.0319,
    					0.0423,
    					0.0553,
    					0.0713,
    					0.0906,
    					0.1135,
    					0.1403,
    					0.1711,
    					0.2058,
    					0.2445,
    					0.2867,
    					0.3322,
    					0.3802,
    					0.4302,
    					0.4813,
    					0.5327,
    					0.5836,
    					0.6331,
    					0.6805,
    					0.7251,
    					0.7665,
    					0.8041,
    					0.8377,
    					0.8674,
    					0.8931,
    					0.915,
    					0.9334,
    					0.9485,
    					0.9607,
    					0.9705,
    					0.9782,
    					0.9841,
    					0.9886,
    					0.9919,
    					0.9944,
    					0.9961,
    					0.9974,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.8601,
    				"std.error": 0.9403,
    				statistic: 0.9147,
    				"p.value": 0.3611,
    				"conf.low": -0.9903,
    				"conf.high": 2.7104,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.7615e-10,
    					6.776e-10,
    					1.6299e-9,
    					3.8435e-9,
    					8.8849e-9,
    					2.0136e-8,
    					4.4739e-8,
    					9.7455e-8,
    					2.0813e-7,
    					4.3583e-7,
    					8.9482e-7,
    					0.0000018014,
    					0.000003556,
    					0.0000068836,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0027,
    					0.0042,
    					0.0064,
    					0.0094,
    					0.0137,
    					0.0195,
    					0.0274,
    					0.0377,
    					0.051,
    					0.0678,
    					0.0886,
    					0.1138,
    					0.1437,
    					0.1785,
    					0.2182,
    					0.2625,
    					0.311,
    					0.3631,
    					0.4179,
    					0.4742,
    					0.5311,
    					0.5874,
    					0.642,
    					0.6937,
    					0.7419,
    					0.7858,
    					0.825,
    					0.8594,
    					0.8888,
    					0.9136,
    					0.9339,
    					0.9504,
    					0.9634,
    					0.9734,
    					0.9811,
    					0.9868,
    					0.9909,
    					0.9939,
    					0.996,
    					0.9974,
    					0.9983,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 177,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.2673,
    				"std.error": 0.5352,
    				statistic: 11.7113,
    				"p.value": 6.1254e-25,
    				"conf.low": 5.2127,
    				"conf.high": 7.322,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.681e-8,
    					3.2338e-8,
    					6.1401e-8,
    					1.1507e-7,
    					2.1285e-7,
    					3.8862e-7,
    					7.0035e-7,
    					0.0000012458,
    					0.0000021875,
    					0.0000037916,
    					0.0000064873,
    					0,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.001,
    					0.0015,
    					0.0022,
    					0.0031,
    					0.0044,
    					0.0062,
    					0.0085,
    					0.0116,
    					0.0156,
    					0.0207,
    					0.0273,
    					0.0354,
    					0.0455,
    					0.0577,
    					0.0724,
    					0.0898,
    					0.1101,
    					0.1335,
    					0.1601,
    					0.19,
    					0.2231,
    					0.2593,
    					0.2982,
    					0.3397,
    					0.3831,
    					0.4281,
    					0.474,
    					0.5203,
    					0.5663,
    					0.6115,
    					0.6551,
    					0.6968,
    					0.7361,
    					0.7726,
    					0.8061,
    					0.8364,
    					0.8634,
    					0.8872,
    					0.9079,
    					0.9256,
    					0.9406,
    					0.9532,
    					0.9635,
    					0.9718,
    					0.9785,
    					0.9838,
    					0.988,
    					0.9912,
    					0.9936,
    					0.9954,
    					0.9967,
    					0.9977,
    					0.9984,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.2699,
    				"std.error": 0.6009,
    				statistic: -0.4492,
    				"p.value": 0.6537,
    				"conf.low": -1.4542,
    				"conf.high": 0.9143,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.4591e-15,
    					1.2421e-14,
    					3.4019e-14,
    					9.1611e-14,
    					2.4257e-13,
    					6.315e-13,
    					1.6166e-12,
    					4.0689e-12,
    					1.007e-11,
    					2.4507e-11,
    					5.8645e-11,
    					1.3799e-10,
    					3.1929e-10,
    					7.2649e-10,
    					1.6255e-9,
    					3.5764e-9,
    					7.7382e-9,
    					1.6465e-8,
    					3.4454e-8,
    					7.0901e-8,
    					1.4349e-7,
    					2.8562e-7,
    					5.5913e-7,
    					0.0000010765,
    					0.0000020387,
    					0.0000037975,
    					0.0000069576,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0028,
    					0.0041,
    					0.006,
    					0.0087,
    					0.0123,
    					0.0172,
    					0.0236,
    					0.0318,
    					0.0424,
    					0.0557,
    					0.072,
    					0.0918,
    					0.1153,
    					0.1428,
    					0.1745,
    					0.2103,
    					0.25,
    					0.2935,
    					0.3401,
    					0.3893,
    					0.4404,
    					0.4925,
    					0.5447,
    					0.5961,
    					0.646,
    					0.6934,
    					0.7378,
    					0.7787,
    					0.8156,
    					0.8485,
    					0.8772,
    					0.9018,
    					0.9227,
    					0.9399,
    					0.954,
    					0.9654,
    					0.9743,
    					0.9812,
    					0.9864,
    					0.9904,
    					0.9933,
    					0.9954,
    					0.9969,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.7762,
    				"std.error": 0.8898,
    				statistic: -1.9961,
    				"p.value": 0.0472,
    				"conf.low": -3.5298,
    				"conf.high": -0.0225,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					8.566e-10,
    					1.7892e-9,
    					3.6849e-9,
    					7.4827e-9,
    					1.4982e-8,
    					2.9578e-8,
    					5.7579e-8,
    					1.1052e-7,
    					2.092e-7,
    					3.9046e-7,
    					7.1864e-7,
    					0.0000013043,
    					0.0000023345,
    					0.0000041205,
    					0.0000071725,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.0019,
    					0.0028,
    					0.004,
    					0.0056,
    					0.0079,
    					0.0109,
    					0.0149,
    					0.0201,
    					0.0267,
    					0.035,
    					0.0454,
    					0.0581,
    					0.0734,
    					0.0916,
    					0.1131,
    					0.1378,
    					0.1661,
    					0.1978,
    					0.233,
    					0.2713,
    					0.3126,
    					0.3564,
    					0.4021,
    					0.4493,
    					0.4971,
    					0.545,
    					0.5923,
    					0.6382,
    					0.6823,
    					0.7239,
    					0.7626,
    					0.7981,
    					0.8303,
    					0.8589,
    					0.8841,
    					0.9059,
    					0.9246,
    					0.9402,
    					0.9532,
    					0.9639,
    					0.9724,
    					0.9792,
    					0.9846,
    					0.9887,
    					0.9918,
    					0.9941,
    					0.9959,
    					0.9971,
    					0.998,
    					0.9987,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5259,
    				"std.error": 1.0025,
    				statistic: 1.522,
    				"p.value": 0.1294,
    				"conf.low": -0.4499,
    				"conf.high": 3.5016,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.5103e-11,
    					1.0863e-10,
    					2.5709e-10,
    					5.9788e-10,
    					1.3663e-9,
    					3.068e-9,
    					6.7701e-9,
    					1.4681e-8,
    					3.1284e-8,
    					6.5515e-8,
    					1.3484e-7,
    					2.7272e-7,
    					5.4213e-7,
    					0.0000010592,
    					0.0000020339,
    					0.0000038387,
    					0.0000071213,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0013,
    					0.0021,
    					0.0031,
    					0.0047,
    					0.0068,
    					0.0099,
    					0.014,
    					0.0195,
    					0.0268,
    					0.0363,
    					0.0483,
    					0.0632,
    					0.0816,
    					0.1038,
    					0.13,
    					0.1605,
    					0.1953,
    					0.2343,
    					0.2773,
    					0.3239,
    					0.3733,
    					0.425,
    					0.478,
    					0.5314,
    					0.5842,
    					0.6355,
    					0.6845,
    					0.7305,
    					0.7728,
    					0.8111,
    					0.8452,
    					0.8749,
    					0.9004,
    					0.9219,
    					0.9396,
    					0.9541,
    					0.9656,
    					0.9746,
    					0.9816,
    					0.9868,
    					0.9907,
    					0.9936,
    					0.9956,
    					0.9971,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 178,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.256,
    				"std.error": 0.4353,
    				statistic: 14.372,
    				"p.value": 4.2563e-36,
    				"conf.low": 5.3994,
    				"conf.high": 7.1125,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					6.8033e-12,
    					1.8044e-11,
    					4.6911e-11,
    					1.1955e-10,
    					2.9867e-10,
    					7.3143e-10,
    					1.756e-9,
    					4.1327e-9,
    					9.5353e-9,
    					2.1569e-8,
    					4.7831e-8,
    					1.04e-7,
    					2.2169e-7,
    					4.6335e-7,
    					9.4956e-7,
    					0.0000019081,
    					0.0000037599,
    					0.000007265,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0028,
    					0.0044,
    					0.0066,
    					0.0097,
    					0.0141,
    					0.0201,
    					0.0281,
    					0.0386,
    					0.0522,
    					0.0693,
    					0.0904,
    					0.1159,
    					0.1462,
    					0.1813,
    					0.2214,
    					0.266,
    					0.3149,
    					0.3672,
    					0.4221,
    					0.4785,
    					0.5354,
    					0.5916,
    					0.6459,
    					0.6974,
    					0.7453,
    					0.7889,
    					0.8277,
    					0.8617,
    					0.8908,
    					0.9152,
    					0.9352,
    					0.9514,
    					0.9642,
    					0.9741,
    					0.9816,
    					0.9871,
    					0.9912,
    					0.9941,
    					0.9961,
    					0.9974,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.2999,
    				"std.error": 0.5295,
    				statistic: -0.5665,
    				"p.value": 0.5715,
    				"conf.low": -1.3418,
    				"conf.high": 0.742,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.1325e-18,
    					4.1829e-18,
    					1.5115e-17,
    					5.3438e-17,
    					1.8485e-16,
    					6.2559e-16,
    					2.0715e-15,
    					6.7115e-15,
    					2.1276e-14,
    					6.5991e-14,
    					2.0028e-13,
    					5.9474e-13,
    					1.7282e-12,
    					4.9136e-12,
    					1.3671e-11,
    					3.7218e-11,
    					9.9152e-11,
    					2.5849e-10,
    					6.5947e-10,
    					1.6465e-9,
    					4.0228e-9,
    					9.6194e-9,
    					2.2512e-8,
    					5.1561e-8,
    					1.1559e-7,
    					2.5361e-7,
    					5.4467e-7,
    					0.000001145,
    					0.0000023562,
    					0.0000047465,
    					0.0000093605,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0026,
    					0.0041,
    					0.0063,
    					0.0095,
    					0.014,
    					0.0203,
    					0.0288,
    					0.04,
    					0.0546,
    					0.0732,
    					0.0961,
    					0.124,
    					0.1571,
    					0.1956,
    					0.2392,
    					0.2878,
    					0.3405,
    					0.3965,
    					0.4548,
    					0.514,
    					0.573,
    					0.6304,
    					0.6849,
    					0.7358,
    					0.7821,
    					0.8233,
    					0.8592,
    					0.8898,
    					0.9153,
    					0.9361,
    					0.9527,
    					0.9657,
    					0.9755,
    					0.9829,
    					0.9883,
    					0.9921,
    					0.9948,
    					0.9967,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.1639,
    				"std.error": 0.5857,
    				statistic: -1.9873,
    				"p.value": 0.0478,
    				"conf.low": -2.3164,
    				"conf.high": -0.0114,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.0333e-24,
    					6.6694e-24,
    					4.1647e-23,
    					2.516e-22,
    					1.4705e-21,
    					8.315e-21,
    					4.5489e-20,
    					2.4077e-19,
    					1.233e-18,
    					6.1092e-18,
    					2.9288e-17,
    					1.3585e-16,
    					6.0971e-16,
    					2.6478e-15,
    					1.1126e-14,
    					4.5242e-14,
    					1.7801e-13,
    					6.7779e-13,
    					2.4974e-12,
    					8.9051e-12,
    					3.073e-11,
    					1.0263e-10,
    					3.3174e-10,
    					1.0379e-9,
    					3.1428e-9,
    					9.2121e-9,
    					2.6138e-8,
    					7.1793e-8,
    					1.9091e-7,
    					4.9149e-7,
    					0.0000012251,
    					0.0000029571,
    					0.0000069119,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0006,
    					0.0011,
    					0.002,
    					0.0035,
    					0.0059,
    					0.0097,
    					0.0157,
    					0.0244,
    					0.0369,
    					0.0543,
    					0.0775,
    					0.1076,
    					0.1454,
    					0.1912,
    					0.2448,
    					0.3057,
    					0.3725,
    					0.4434,
    					0.5161,
    					0.5883,
    					0.6576,
    					0.722,
    					0.7798,
    					0.83,
    					0.8723,
    					0.9066,
    					0.9335,
    					0.9541,
    					0.9691,
    					0.9799,
    					0.9873,
    					0.9922,
    					0.9953,
    					0.9973,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.7761,
    				"std.error": 0.7202,
    				statistic: 1.0775,
    				"p.value": 0.2821,
    				"conf.low": -0.6412,
    				"conf.high": 2.1933,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					7.169e-16,
    					3.1918e-15,
    					1.3733e-14,
    					5.7099e-14,
    					2.2943e-13,
    					8.9096e-13,
    					3.3438e-12,
    					1.2129e-11,
    					4.2523e-11,
    					1.4409e-10,
    					4.7196e-10,
    					1.4943e-9,
    					4.5735e-9,
    					1.3532e-8,
    					3.8707e-8,
    					1.0705e-7,
    					2.8625e-7,
    					7.4013e-7,
    					0.0000018506,
    					0.000004475,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0009,
    					0.0016,
    					0.0029,
    					0.005,
    					0.0084,
    					0.0137,
    					0.0218,
    					0.0335,
    					0.05,
    					0.0723,
    					0.1016,
    					0.1387,
    					0.1841,
    					0.2378,
    					0.2991,
    					0.3667,
    					0.4388,
    					0.5129,
    					0.5865,
    					0.6573,
    					0.7229,
    					0.7817,
    					0.8325,
    					0.8751,
    					0.9094,
    					0.9362,
    					0.9563,
    					0.971,
    					0.9814,
    					0.9884,
    					0.993,
    					0.9959,
    					0.9977,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 179,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.6794,
    				"std.error": 0.3338,
    				statistic: 17.013,
    				"p.value": 4.55e-46,
    				"conf.low": 5.0225,
    				"conf.high": 6.3363,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					6.7016e-13,
    					2.5283e-12,
    					9.2198e-12,
    					3.2499e-11,
    					1.1074e-10,
    					3.6474e-10,
    					1.1614e-9,
    					3.5754e-9,
    					1.0641e-8,
    					3.0621e-8,
    					8.5201e-8,
    					2.2923e-7,
    					5.9643e-7,
    					0.0000015008,
    					0.0000036524,
    					0.0000085978,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0014,
    					0.0025,
    					0.0044,
    					0.0074,
    					0.0122,
    					0.0195,
    					0.0301,
    					0.0452,
    					0.0659,
    					0.0933,
    					0.1282,
    					0.1714,
    					0.2229,
    					0.2822,
    					0.3482,
    					0.4191,
    					0.4928,
    					0.5667,
    					0.6384,
    					0.7055,
    					0.7662,
    					0.8192,
    					0.864,
    					0.9005,
    					0.9293,
    					0.9512,
    					0.9673,
    					0.9788,
    					0.9866,
    					0.9918,
    					0.9952,
    					0.9972,
    					0.9985,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: 0.1653,
    				"std.error": 0.4152,
    				statistic: 0.3982,
    				"p.value": 0.6908,
    				"conf.low": -0.6518,
    				"conf.high": 0.9825,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					6.6529e-35,
    					6.8037e-34,
    					6.7135e-33,
    					6.392e-32,
    					5.8721e-31,
    					5.2052e-30,
    					4.4521e-29,
    					3.6743e-28,
    					2.9261e-27,
    					2.2485e-26,
    					1.6672e-25,
    					1.1929e-24,
    					8.2365e-24,
    					5.4876e-23,
    					3.5282e-22,
    					2.189e-21,
    					1.3106e-20,
    					7.5724e-20,
    					4.2223e-19,
    					2.272e-18,
    					1.1799e-17,
    					5.9135e-17,
    					2.8604e-16,
    					1.3353e-15,
    					6.0166e-15,
    					2.6165e-14,
    					1.0983e-13,
    					4.4497e-13,
    					1.7402e-12,
    					6.5693e-12,
    					2.3939e-11,
    					8.4216e-11,
    					2.8601e-10,
    					9.3777e-10,
    					2.9686e-9,
    					9.0733e-9,
    					2.6777e-8,
    					7.6311e-8,
    					2.1001e-7,
    					5.5818e-7,
    					0.0000014329,
    					0.0000035528,
    					0.0000085098,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0015,
    					0.0027,
    					0.0048,
    					0.0081,
    					0.0134,
    					0.0215,
    					0.0333,
    					0.05,
    					0.0728,
    					0.1029,
    					0.1411,
    					0.1878,
    					0.2432,
    					0.3063,
    					0.3757,
    					0.4495,
    					0.525,
    					0.5996,
    					0.6708,
    					0.7363,
    					0.7943,
    					0.8441,
    					0.8851,
    					0.9178,
    					0.943,
    					0.9616,
    					0.975,
    					0.9842,
    					0.9903,
    					0.9943,
    					0.9967,
    					0.9982,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.2902,
    				"std.error": 0.6982,
    				statistic: -0.4156,
    				"p.value": 0.678,
    				"conf.low": -1.6642,
    				"conf.high": 1.0838,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					5.443e-23,
    					2.4559e-22,
    					1.0827e-21,
    					4.663e-21,
    					1.9622e-20,
    					8.067e-20,
    					3.2404e-19,
    					1.2717e-18,
    					4.8764e-18,
    					1.827e-17,
    					6.6878e-17,
    					2.392e-16,
    					8.3595e-16,
    					2.8545e-15,
    					9.5242e-15,
    					3.1051e-14,
    					9.8918e-14,
    					3.0792e-13,
    					9.3663e-13,
    					2.784e-12,
    					8.0866e-12,
    					2.2953e-11,
    					6.3668e-11,
    					1.7259e-10,
    					4.572e-10,
    					1.1837e-9,
    					2.9951e-9,
    					7.4067e-9,
    					1.7902e-8,
    					4.2292e-8,
    					9.7656e-8,
    					2.2042e-7,
    					4.863e-7,
    					0.0000010488,
    					0.0000022114,
    					0.0000045582,
    					0.0000091858,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.003,
    					0.0047,
    					0.0073,
    					0.011,
    					0.0163,
    					0.0236,
    					0.0336,
    					0.0467,
    					0.0638,
    					0.0852,
    					0.1117,
    					0.1437,
    					0.1812,
    					0.2244,
    					0.2729,
    					0.3261,
    					0.3831,
    					0.4427,
    					0.5037,
    					0.5646,
    					0.6239,
    					0.6805,
    					0.7332,
    					0.7811,
    					0.8236,
    					0.8605,
    					0.8917,
    					0.9176,
    					0.9385,
    					0.955,
    					0.9678,
    					0.9774,
    					0.9844,
    					0.9895,
    					0.9931,
    					0.9955,
    					0.9972,
    					0.9983,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: -0.0394,
    				"std.error": 0.8442,
    				statistic: -0.0467,
    				"p.value": 0.9628,
    				"conf.low": -1.7006,
    				"conf.high": 1.6218,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.5458e-9,
    					6.5355e-9,
    					1.637e-8,
    					4.0006e-8,
    					9.5398e-8,
    					2.2198e-7,
    					5.0403e-7,
    					0.0000011169,
    					0.0000024151,
    					0.0000050971,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0024,
    					0.0039,
    					0.0061,
    					0.0095,
    					0.0144,
    					0.0213,
    					0.0308,
    					0.0437,
    					0.0605,
    					0.082,
    					0.1088,
    					0.1415,
    					0.1802,
    					0.2249,
    					0.2754,
    					0.3308,
    					0.3903,
    					0.4524,
    					0.5157,
    					0.5786,
    					0.6396,
    					0.6972,
    					0.7503,
    					0.798,
    					0.8398,
    					0.8754,
    					0.9052,
    					0.9293,
    					0.9484,
    					0.9632,
    					0.9743,
    					0.9824,
    					0.9883,
    					0.9923,
    					0.9951,
    					0.997,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 180,
    		cycle_length: "cl_option3",
    		certainty: "cer_option1",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option1"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.256,
    				"std.error": 0.4298,
    				statistic: 14.5566,
    				"p.value": 4.5479e-34,
    				"conf.low": 5.409,
    				"conf.high": 7.1029,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.7211e-12,
    					1.0116e-11,
    					2.6944e-11,
    					7.0311e-11,
    					1.7976e-10,
    					4.503e-10,
    					1.1052e-9,
    					2.6578e-9,
    					6.2626e-9,
    					1.4459e-8,
    					3.2713e-8,
    					7.2522e-8,
    					1.5755e-7,
    					3.3542e-7,
    					6.9979e-7,
    					0.0000014308,
    					0.0000028673,
    					0.0000056315,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0025,
    					0.0039,
    					0.006,
    					0.009,
    					0.0131,
    					0.0188,
    					0.0266,
    					0.0368,
    					0.05,
    					0.0668,
    					0.0876,
    					0.1129,
    					0.1431,
    					0.1783,
    					0.2185,
    					0.2634,
    					0.3127,
    					0.3655,
    					0.4211,
    					0.4782,
    					0.5358,
    					0.5927,
    					0.6477,
    					0.6997,
    					0.748,
    					0.7918,
    					0.8308,
    					0.8647,
    					0.8937,
    					0.9179,
    					0.9377,
    					0.9535,
    					0.966,
    					0.9755,
    					0.9827,
    					0.988,
    					0.9919,
    					0.9946,
    					0.9964,
    					0.9977,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.2999,
    				"std.error": 0.5228,
    				statistic: -0.5738,
    				"p.value": 0.5667,
    				"conf.low": -1.3302,
    				"conf.high": 0.7303,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.1634e-19,
    					1.5899e-18,
    					5.9366e-18,
    					2.1676e-17,
    					7.7389e-17,
    					2.7018e-16,
    					9.2235e-16,
    					3.0791e-15,
    					1.0052e-14,
    					3.2088e-14,
    					1.0017e-13,
    					3.058e-13,
    					9.1296e-13,
    					2.6655e-12,
    					7.6107e-12,
    					2.1252e-11,
    					5.8038e-11,
    					1.5502e-10,
    					4.0494e-10,
    					1.0346e-9,
    					2.5854e-9,
    					6.3192e-9,
    					1.5108e-8,
    					3.533e-8,
    					8.0818e-8,
    					1.8085e-7,
    					3.9588e-7,
    					8.4777e-7,
    					0.0000017761,
    					0.0000036407,
    					0.0000073014,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0023,
    					0.0037,
    					0.0058,
    					0.0088,
    					0.013,
    					0.019,
    					0.0272,
    					0.0381,
    					0.0524,
    					0.0706,
    					0.0933,
    					0.121,
    					0.154,
    					0.1926,
    					0.2364,
    					0.2853,
    					0.3385,
    					0.3952,
    					0.4542,
    					0.5142,
    					0.5739,
    					0.632,
    					0.6871,
    					0.7384,
    					0.785,
    					0.8264,
    					0.8623,
    					0.8927,
    					0.918,
    					0.9385,
    					0.9548,
    					0.9674,
    					0.977,
    					0.984,
    					0.9892,
    					0.9928,
    					0.9953,
    					0.997,
    					0.9981,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.8668,
    				"std.error": 0.7392,
    				statistic: -1.1726,
    				"p.value": 0.2422,
    				"conf.low": -2.3236,
    				"conf.high": 0.59,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.1222e-17,
    					3.8567e-17,
    					1.2982e-16,
    					4.2807e-16,
    					1.3826e-15,
    					4.3742e-15,
    					1.3556e-14,
    					4.1152e-14,
    					1.2238e-13,
    					3.5649e-13,
    					1.0173e-12,
    					2.8438e-12,
    					7.7877e-12,
    					2.0892e-11,
    					5.491e-11,
    					1.4138e-10,
    					3.5663e-10,
    					8.8135e-10,
    					2.134e-9,
    					5.0623e-9,
    					1.1766e-8,
    					2.6795e-8,
    					5.9788e-8,
    					1.3072e-7,
    					2.8006e-7,
    					5.8796e-7,
    					0.0000012096,
    					0.0000024387,
    					0.0000048184,
    					0.0000093306,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0036,
    					0.0055,
    					0.0083,
    					0.0121,
    					0.0175,
    					0.0248,
    					0.0345,
    					0.0471,
    					0.0632,
    					0.0832,
    					0.1077,
    					0.137,
    					0.1712,
    					0.2106,
    					0.2548,
    					0.3034,
    					0.3557,
    					0.4109,
    					0.468,
    					0.5257,
    					0.5829,
    					0.6384,
    					0.6911,
    					0.7402,
    					0.7849,
    					0.8247,
    					0.8596,
    					0.8894,
    					0.9143,
    					0.9348,
    					0.9513,
    					0.9643,
    					0.9743,
    					0.9818,
    					0.9874,
    					0.9914,
    					0.9942,
    					0.9962,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.4259,
    				"std.error": 0.8904,
    				statistic: 0.4783,
    				"p.value": 0.6329,
    				"conf.low": -1.329,
    				"conf.high": 2.1807,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					6.6637e-10,
    					1.6834e-9,
    					4.1592e-9,
    					1.0052e-8,
    					2.376e-8,
    					5.4937e-8,
    					1.2425e-7,
    					2.7491e-7,
    					5.9499e-7,
    					0.0000012598,
    					0.0000026097,
    					0.000005289,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.003,
    					0.0047,
    					0.0072,
    					0.0109,
    					0.016,
    					0.0231,
    					0.0327,
    					0.0454,
    					0.0617,
    					0.0823,
    					0.1077,
    					0.1382,
    					0.1743,
    					0.2157,
    					0.2624,
    					0.3138,
    					0.369,
    					0.4271,
    					0.4869,
    					0.5469,
    					0.6059,
    					0.6625,
    					0.7157,
    					0.7645,
    					0.8083,
    					0.8467,
    					0.8796,
    					0.9072,
    					0.9299,
    					0.948,
    					0.9622,
    					0.973,
    					0.9811,
    					0.9871,
    					0.9913,
    					0.9943,
    					0.9963,
    					0.9977,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 181,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option1",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.9014,
    				"std.error": 0.5021,
    				statistic: 13.7451,
    				"p.value": 1.735e-29,
    				"conf.low": 5.9103,
    				"conf.high": 7.8924,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					4.4128e-13,
    					1.0784e-12,
    					2.5963e-12,
    					6.1572e-12,
    					1.4384e-11,
    					3.3104e-11,
    					7.5052e-11,
    					1.6762e-10,
    					3.6881e-10,
    					7.9943e-10,
    					1.7071e-9,
    					3.5914e-9,
    					7.4435e-9,
    					1.5199e-8,
    					3.0578e-8,
    					6.0607e-8,
    					1.1836e-7,
    					2.2773e-7,
    					4.3173e-7,
    					8.0644e-7,
    					0.0000014843,
    					0.0000026919,
    					0.0000048107,
    					0.0000084717,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0011,
    					0.0016,
    					0.0024,
    					0.0035,
    					0.0051,
    					0.0072,
    					0.0101,
    					0.014,
    					0.019,
    					0.0255,
    					0.0338,
    					0.0443,
    					0.0571,
    					0.0727,
    					0.0914,
    					0.1134,
    					0.139,
    					0.1683,
    					0.2012,
    					0.2378,
    					0.2777,
    					0.3206,
    					0.3661,
    					0.4135,
    					0.4622,
    					0.5115,
    					0.5607,
    					0.6089,
    					0.6555,
    					0.6998,
    					0.7414,
    					0.7798,
    					0.8146,
    					0.8459,
    					0.8734,
    					0.8973,
    					0.9177,
    					0.935,
    					0.9492,
    					0.9609,
    					0.9703,
    					0.9777,
    					0.9835,
    					0.988,
    					0.9913,
    					0.9939,
    					0.9957,
    					0.997,
    					0.998,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.394,
    				"std.error": 0.6744,
    				statistic: -2.0668,
    				"p.value": 0.0402,
    				"conf.low": -2.7252,
    				"conf.high": -0.0627,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					7.9497e-8,
    					1.4875e-7,
    					2.7469e-7,
    					5.0058e-7,
    					9.0031e-7,
    					0.0000015981,
    					0.0000027995,
    					0.0000048404,
    					0.0000082601,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0008,
    					0.0013,
    					0.0018,
    					0.0026,
    					0.0038,
    					0.0053,
    					0.0074,
    					0.0101,
    					0.0137,
    					0.0184,
    					0.0243,
    					0.0318,
    					0.0411,
    					0.0525,
    					0.0663,
    					0.0827,
    					0.102,
    					0.1243,
    					0.1499,
    					0.1788,
    					0.2109,
    					0.2462,
    					0.2845,
    					0.3254,
    					0.3685,
    					0.4133,
    					0.4592,
    					0.5058,
    					0.5522,
    					0.598,
    					0.6424,
    					0.685,
    					0.7252,
    					0.7628,
    					0.7973,
    					0.8287,
    					0.8567,
    					0.8815,
    					0.9031,
    					0.9216,
    					0.9374,
    					0.9505,
    					0.9613,
    					0.9702,
    					0.9773,
    					0.9829,
    					0.9873,
    					0.9906,
    					0.9932,
    					0.9951,
    					0.9965,
    					0.9976,
    					0.9983,
    					0.9989,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -2.2472,
    				"std.error": 0.6595,
    				statistic: -3.4073,
    				"p.value": 0.0008,
    				"conf.low": -3.5491,
    				"conf.high": -0.9454,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.2451e-14,
    					2.0969e-13,
    					6.8606e-13,
    					2.1873e-12,
    					6.7956e-12,
    					2.0575e-11,
    					6.0705e-11,
    					1.7455e-10,
    					4.8912e-10,
    					1.3358e-9,
    					3.5555e-9,
    					9.2238e-9,
    					2.3323e-8,
    					5.7483e-8,
    					1.381e-7,
    					3.2341e-7,
    					7.3834e-7,
    					0.0000016433,
    					0.0000035657,
    					0.0000075437,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0021,
    					0.0034,
    					0.0055,
    					0.0087,
    					0.0133,
    					0.0199,
    					0.0292,
    					0.0418,
    					0.0584,
    					0.0799,
    					0.1069,
    					0.1398,
    					0.1791,
    					0.2247,
    					0.2762,
    					0.333,
    					0.3938,
    					0.4574,
    					0.522,
    					0.5861,
    					0.648,
    					0.7062,
    					0.7594,
    					0.807,
    					0.8483,
    					0.8833,
    					0.9121,
    					0.9353,
    					0.9534,
    					0.9672,
    					0.9774,
    					0.9848,
    					0.99,
    					0.9936,
    					0.996,
    					0.9976,
    					0.9985,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.3113,
    				"std.error": 0.9273,
    				statistic: 2.4925,
    				"p.value": 0.0136,
    				"conf.low": 0.4809,
    				"conf.high": 4.1416,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.9914e-15,
    					6.2563e-15,
    					1.9254e-14,
    					5.8044e-14,
    					1.7142e-13,
    					4.959e-13,
    					1.4054e-12,
    					3.9018e-12,
    					1.0612e-11,
    					2.8276e-11,
    					7.3812e-11,
    					1.8877e-10,
    					4.7296e-10,
    					1.161e-9,
    					2.7923e-9,
    					6.5798e-9,
    					1.5192e-8,
    					3.4367e-8,
    					7.6181e-8,
    					1.6547e-7,
    					3.5219e-7,
    					7.3458e-7,
    					0.0000015015,
    					0.0000030076,
    					0.0000059044,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0026,
    					0.0041,
    					0.0062,
    					0.0093,
    					0.0136,
    					0.0195,
    					0.0274,
    					0.0379,
    					0.0515,
    					0.0687,
    					0.09,
    					0.1158,
    					0.1465,
    					0.1823,
    					0.223,
    					0.2686,
    					0.3183,
    					0.3716,
    					0.4274,
    					0.4848,
    					0.5425,
    					0.5993,
    					0.654,
    					0.7057,
    					0.7536,
    					0.7969,
    					0.8353,
    					0.8686,
    					0.897,
    					0.9207,
    					0.9399,
    					0.9553,
    					0.9674,
    					0.9766,
    					0.9836,
    					0.9886,
    					0.9923,
    					0.9949,
    					0.9967,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 182,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option1",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.865,
    				"std.error": 0.3925,
    				statistic: 14.942,
    				"p.value": 6.7435e-33,
    				"conf.low": 5.0902,
    				"conf.high": 6.6398,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.941e-11,
    					1.1153e-10,
    					3.0801e-10,
    					8.3001e-10,
    					2.1826e-9,
    					5.6011e-9,
    					1.4027e-8,
    					3.4283e-8,
    					8.1777e-8,
    					1.9038e-7,
    					4.326e-7,
    					9.5949e-7,
    					0.0000020773,
    					0.0000043901,
    					0.0000090575,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0013,
    					0.0021,
    					0.0034,
    					0.0055,
    					0.0085,
    					0.0129,
    					0.0192,
    					0.0279,
    					0.0397,
    					0.0552,
    					0.0752,
    					0.1003,
    					0.1311,
    					0.1677,
    					0.2105,
    					0.259,
    					0.3127,
    					0.3707,
    					0.4318,
    					0.4946,
    					0.5576,
    					0.6191,
    					0.6777,
    					0.7323,
    					0.7817,
    					0.8254,
    					0.8631,
    					0.8949,
    					0.9209,
    					0.9417,
    					0.958,
    					0.9703,
    					0.9795,
    					0.9862,
    					0.9909,
    					0.9941,
    					0.9963,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3025,
    				"std.error": 0.5551,
    				statistic: -0.5449,
    				"p.value": 0.5865,
    				"conf.low": -1.3982,
    				"conf.high": 0.7932,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.8747e-17,
    					1.273e-16,
    					4.1004e-16,
    					1.2947e-15,
    					4.0079e-15,
    					1.2163e-14,
    					3.6186e-14,
    					1.0555e-13,
    					3.0182e-13,
    					8.4618e-13,
    					2.3259e-12,
    					6.2679e-12,
    					1.6561e-11,
    					4.2901e-11,
    					1.0897e-10,
    					2.7136e-10,
    					6.6263e-10,
    					1.5865e-9,
    					3.7247e-9,
    					8.5745e-9,
    					1.9356e-8,
    					4.2847e-8,
    					9.301e-8,
    					1.98e-7,
    					4.1335e-7,
    					8.4631e-7,
    					0.0000016994,
    					0.0000033469,
    					0.0000064652,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0026,
    					0.0039,
    					0.0059,
    					0.0088,
    					0.0128,
    					0.0183,
    					0.0257,
    					0.0354,
    					0.048,
    					0.0639,
    					0.0836,
    					0.1077,
    					0.1363,
    					0.1697,
    					0.208,
    					0.251,
    					0.2982,
    					0.3492,
    					0.403,
    					0.4587,
    					0.5152,
    					0.5715,
    					0.6263,
    					0.6787,
    					0.7277,
    					0.7727,
    					0.8132,
    					0.8489,
    					0.8797,
    					0.9058,
    					0.9275,
    					0.9451,
    					0.9592,
    					0.9702,
    					0.9786,
    					0.9849,
    					0.9895,
    					0.9929,
    					0.9952,
    					0.9969,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.9754,
    				"std.error": 0.7516,
    				statistic: -1.2978,
    				"p.value": 0.1961,
    				"conf.low": -2.459,
    				"conf.high": 0.5082,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.2456e-16,
    					4.0304e-16,
    					1.2783e-15,
    					3.9741e-15,
    					1.2111e-14,
    					3.6176e-14,
    					1.0593e-13,
    					3.0404e-13,
    					8.5544e-13,
    					2.3594e-12,
    					6.3792e-12,
    					1.6908e-11,
    					4.3932e-11,
    					1.119e-10,
    					2.7944e-10,
    					6.8411e-10,
    					1.6419e-9,
    					3.8636e-9,
    					8.9135e-9,
    					2.0162e-8,
    					4.4713e-8,
    					9.7229e-8,
    					2.0731e-7,
    					4.3341e-7,
    					8.8854e-7,
    					0.0000017863,
    					0.0000035216,
    					0.0000068086,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0027,
    					0.0041,
    					0.0062,
    					0.0092,
    					0.0134,
    					0.0192,
    					0.0269,
    					0.037,
    					0.0501,
    					0.0666,
    					0.0871,
    					0.1119,
    					0.1414,
    					0.1758,
    					0.215,
    					0.2589,
    					0.3071,
    					0.3588,
    					0.4132,
    					0.4694,
    					0.5261,
    					0.5824,
    					0.637,
    					0.6889,
    					0.7374,
    					0.7816,
    					0.8213,
    					0.856,
    					0.8859,
    					0.9111,
    					0.9319,
    					0.9487,
    					0.962,
    					0.9724,
    					0.9803,
    					0.9862,
    					0.9905,
    					0.9936,
    					0.9957,
    					0.9972,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.8854,
    				"std.error": 1.0629,
    				statistic: 0.833,
    				"p.value": 0.406,
    				"conf.low": -1.2127,
    				"conf.high": 2.9835,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.7787e-8,
    					3.6175e-8,
    					7.2443e-8,
    					1.4284e-7,
    					2.7734e-7,
    					5.3024e-7,
    					9.9824e-7,
    					0.0000018506,
    					0.0000033786,
    					0.0000060742,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.0031,
    					0.0046,
    					0.0066,
    					0.0093,
    					0.0129,
    					0.0178,
    					0.0241,
    					0.0322,
    					0.0425,
    					0.0552,
    					0.0708,
    					0.0895,
    					0.1117,
    					0.1376,
    					0.1673,
    					0.2008,
    					0.2381,
    					0.2789,
    					0.3228,
    					0.3693,
    					0.4179,
    					0.4677,
    					0.5181,
    					0.5681,
    					0.6171,
    					0.6643,
    					0.709,
    					0.7507,
    					0.789,
    					0.8236,
    					0.8544,
    					0.8814,
    					0.9046,
    					0.9243,
    					0.9407,
    					0.9542,
    					0.9651,
    					0.9738,
    					0.9806,
    					0.9858,
    					0.9898,
    					0.9928,
    					0.9949,
    					0.9965,
    					0.9976,
    					0.9984,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 183,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option1",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.9014,
    				"std.error": 0.5068,
    				statistic: 13.6167,
    				"p.value": 1.369e-26,
    				"conf.low": 5.8984,
    				"conf.high": 7.9043,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					7.1603e-13,
    					1.7216e-12,
    					4.0787e-12,
    					9.5216e-12,
    					2.1903e-11,
    					4.9648e-11,
    					1.109e-10,
    					2.4409e-10,
    					5.2941e-10,
    					1.1315e-9,
    					2.3833e-9,
    					4.9468e-9,
    					1.0118e-8,
    					2.0396e-8,
    					4.0518e-8,
    					7.9325e-8,
    					1.5305e-7,
    					2.9104e-7,
    					5.4545e-7,
    					0.0000010075,
    					0.0000018342,
    					0.0000032914,
    					0.0000058214,
    					0,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0026,
    					0.0038,
    					0.0055,
    					0.0077,
    					0.0107,
    					0.0147,
    					0.0199,
    					0.0266,
    					0.0351,
    					0.0458,
    					0.0588,
    					0.0746,
    					0.0935,
    					0.1156,
    					0.1413,
    					0.1706,
    					0.2034,
    					0.2398,
    					0.2795,
    					0.3222,
    					0.3673,
    					0.4143,
    					0.4626,
    					0.5114,
    					0.5601,
    					0.6079,
    					0.6541,
    					0.6981,
    					0.7394,
    					0.7776,
    					0.8124,
    					0.8436,
    					0.8712,
    					0.8952,
    					0.9158,
    					0.9331,
    					0.9476,
    					0.9595,
    					0.9691,
    					0.9767,
    					0.9827,
    					0.9873,
    					0.9908,
    					0.9934,
    					0.9954,
    					0.9968,
    					0.9978,
    					0.9985,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.394,
    				"std.error": 0.6808,
    				statistic: -2.0475,
    				"p.value": 0.0427,
    				"conf.low": -2.7412,
    				"conf.high": -0.0468,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.0354e-7,
    					1.9157e-7,
    					3.4987e-7,
    					6.3077e-7,
    					0.0000011226,
    					0.0000019722,
    					0.0000034206,
    					0.0000058566,
    					0.0000098996,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.002,
    					0.0029,
    					0.0041,
    					0.0057,
    					0.0079,
    					0.0107,
    					0.0145,
    					0.0193,
    					0.0254,
    					0.0331,
    					0.0426,
    					0.0542,
    					0.0681,
    					0.0847,
    					0.1041,
    					0.1266,
    					0.1522,
    					0.181,
    					0.2131,
    					0.2483,
    					0.2863,
    					0.3269,
    					0.3696,
    					0.4141,
    					0.4596,
    					0.5057,
    					0.5517,
    					0.5971,
    					0.6411,
    					0.6834,
    					0.7234,
    					0.7607,
    					0.7951,
    					0.8264,
    					0.8545,
    					0.8793,
    					0.901,
    					0.9197,
    					0.9356,
    					0.9489,
    					0.9599,
    					0.969,
    					0.9762,
    					0.982,
    					0.9865,
    					0.9901,
    					0.9927,
    					0.9948,
    					0.9963,
    					0.9974,
    					0.9982,
    					0.9987,
    					0.9992,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -2.0118,
    				"std.error": 0.808,
    				statistic: -2.4897,
    				"p.value": 0.0141,
    				"conf.low": -3.6107,
    				"conf.high": -0.4128,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.1414e-10,
    					2.6745e-10,
    					6.1603e-10,
    					1.3948e-9,
    					3.1045e-9,
    					6.7926e-9,
    					1.461e-8,
    					3.0893e-8,
    					6.4219e-8,
    					1.3124e-7,
    					2.6369e-7,
    					5.2088e-7,
    					0.0000010116,
    					0.0000019317,
    					0.0000036269,
    					0.0000066956,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0019,
    					0.0029,
    					0.0043,
    					0.0062,
    					0.009,
    					0.0128,
    					0.0178,
    					0.0245,
    					0.0332,
    					0.0442,
    					0.0581,
    					0.0751,
    					0.0957,
    					0.1202,
    					0.1489,
    					0.1817,
    					0.2188,
    					0.2598,
    					0.3046,
    					0.3524,
    					0.4027,
    					0.4547,
    					0.5074,
    					0.5601,
    					0.6117,
    					0.6613,
    					0.7084,
    					0.7521,
    					0.7921,
    					0.8279,
    					0.8596,
    					0.8871,
    					0.9105,
    					0.93,
    					0.9461,
    					0.9592,
    					0.9695,
    					0.9776,
    					0.9838,
    					0.9884,
    					0.9919,
    					0.9944,
    					0.9962,
    					0.9975,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.9769,
    				"std.error": 1.1205,
    				statistic: 1.7643,
    				"p.value": 0.0801,
    				"conf.low": -0.2404,
    				"conf.high": 4.1942,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.7795e-10,
    					5.9106e-10,
    					1.2394e-9,
    					2.5627e-9,
    					5.2255e-9,
    					1.0507e-8,
    					2.0833e-8,
    					4.0737e-8,
    					7.8552e-8,
    					1.4938e-7,
    					2.8014e-7,
    					5.1813e-7,
    					9.4511e-7,
    					0.0000017002,
    					0.0000030167,
    					0.0000052791,
    					0.0000091119,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.001,
    					0.0015,
    					0.0022,
    					0.0032,
    					0.0045,
    					0.0064,
    					0.0089,
    					0.0123,
    					0.0166,
    					0.0222,
    					0.0294,
    					0.0384,
    					0.0495,
    					0.063,
    					0.0792,
    					0.0984,
    					0.1209,
    					0.1466,
    					0.1759,
    					0.2086,
    					0.2446,
    					0.2838,
    					0.3257,
    					0.3699,
    					0.4159,
    					0.4631,
    					0.5109,
    					0.5585,
    					0.6052,
    					0.6505,
    					0.6937,
    					0.7344,
    					0.7722,
    					0.8067,
    					0.8379,
    					0.8655,
    					0.8898,
    					0.9107,
    					0.9285,
    					0.9435,
    					0.9559,
    					0.9659,
    					0.9741,
    					0.9805,
    					0.9855,
    					0.9894,
    					0.9923,
    					0.9945,
    					0.9961,
    					0.9973,
    					0.9981,
    					0.9987,
    					0.9992,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 184,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option2",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.9223,
    				"std.error": 0.4401,
    				statistic: 15.73,
    				"p.value": 7.1236e-37,
    				"conf.low": 6.0546,
    				"conf.high": 7.7901,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.1743e-16,
    					3.7644e-16,
    					1.1833e-15,
    					3.6471e-15,
    					1.1023e-14,
    					3.2666e-14,
    					9.4928e-14,
    					2.7051e-13,
    					7.5591e-13,
    					2.0713e-12,
    					5.5659e-12,
    					1.4667e-11,
    					3.7901e-11,
    					9.6049e-11,
    					2.3871e-10,
    					5.8181e-10,
    					1.3907e-9,
    					3.2603e-9,
    					7.496e-9,
    					1.6904e-8,
    					3.7387e-8,
    					8.1106e-8,
    					1.7258e-7,
    					3.602e-7,
    					7.3745e-7,
    					0.000001481,
    					0.0000029178,
    					0.0000056394,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0023,
    					0.0035,
    					0.0053,
    					0.0079,
    					0.0115,
    					0.0165,
    					0.0232,
    					0.0322,
    					0.0437,
    					0.0585,
    					0.0769,
    					0.0994,
    					0.1263,
    					0.158,
    					0.1944,
    					0.2356,
    					0.2812,
    					0.3306,
    					0.3832,
    					0.4381,
    					0.4941,
    					0.5503,
    					0.6055,
    					0.6587,
    					0.7089,
    					0.7553,
    					0.7974,
    					0.8349,
    					0.8675,
    					0.8954,
    					0.9188,
    					0.938,
    					0.9535,
    					0.9657,
    					0.9751,
    					0.9823,
    					0.9876,
    					0.9915,
    					0.9942,
    					0.9962,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.3555,
    				"std.error": 0.6129,
    				statistic: -2.2115,
    				"p.value": 0.0281,
    				"conf.low": -2.5642,
    				"conf.high": -0.1469,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.7642e-9,
    					5.9238e-9,
    					1.2492e-8,
    					2.5924e-8,
    					5.2941e-8,
    					1.064e-7,
    					2.1043e-7,
    					4.0957e-7,
    					7.8457e-7,
    					0.0000014791,
    					0.0000027445,
    					0.0000050122,
    					0.0000090096,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.002,
    					0.003,
    					0.0044,
    					0.0064,
    					0.0091,
    					0.0128,
    					0.0177,
    					0.0242,
    					0.0324,
    					0.0429,
    					0.056,
    					0.0721,
    					0.0914,
    					0.1144,
    					0.1412,
    					0.172,
    					0.2067,
    					0.2453,
    					0.2874,
    					0.3327,
    					0.3806,
    					0.4304,
    					0.4813,
    					0.5326,
    					0.5833,
    					0.6326,
    					0.6799,
    					0.7244,
    					0.7656,
    					0.8031,
    					0.8368,
    					0.8665,
    					0.8922,
    					0.9142,
    					0.9326,
    					0.9478,
    					0.9602,
    					0.97,
    					0.9778,
    					0.9837,
    					0.9883,
    					0.9917,
    					0.9942,
    					0.996,
    					0.9973,
    					0.9982,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -2.1861,
    				"std.error": 0.5921,
    				statistic: -3.6921,
    				"p.value": 0.0003,
    				"conf.low": -3.3537,
    				"conf.high": -1.0186,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.1702e-17,
    					1.444e-16,
    					6.3689e-16,
    					2.7199e-15,
    					1.1248e-14,
    					4.5039e-14,
    					1.7465e-13,
    					6.5579e-13,
    					2.3847e-12,
    					8.3978e-12,
    					2.864e-11,
    					9.4599e-11,
    					3.0263e-10,
    					9.3767e-10,
    					2.8141e-9,
    					8.1806e-9,
    					2.3036e-8,
    					6.2841e-8,
    					1.6607e-7,
    					4.2522e-7,
    					0.0000010549,
    					0.0000025357,
    					0.0000059066,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0017,
    					0.0029,
    					0.005,
    					0.0084,
    					0.0135,
    					0.0212,
    					0.0322,
    					0.0476,
    					0.0684,
    					0.0956,
    					0.13,
    					0.1721,
    					0.2222,
    					0.2796,
    					0.3434,
    					0.412,
    					0.4834,
    					0.5553,
    					0.6255,
    					0.6917,
    					0.7522,
    					0.8057,
    					0.8516,
    					0.8895,
    					0.92,
    					0.9436,
    					0.9613,
    					0.9742,
    					0.9833,
    					0.9895,
    					0.9936,
    					0.9962,
    					0.9978,
    					0.9988,
    					0.9993,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.0591,
    				"std.error": 0.8454,
    				statistic: 2.4357,
    				"p.value": 0.0157,
    				"conf.low": 0.3922,
    				"conf.high": 3.7261,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.4638e-17,
    					1.6827e-16,
    					6.1876e-16,
    					2.2194e-15,
    					7.7653e-15,
    					2.6504e-14,
    					8.8242e-14,
    					2.866e-13,
    					9.0807e-13,
    					2.8068e-12,
    					8.4635e-12,
    					2.4898e-11,
    					7.1456e-11,
    					2.0008e-10,
    					5.4659e-10,
    					1.4569e-9,
    					3.7888e-9,
    					9.6142e-9,
    					2.3805e-8,
    					5.7515e-8,
    					1.356e-7,
    					3.1199e-7,
    					7.0054e-7,
    					0.0000015352,
    					0.0000032834,
    					0.0000068543,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0018,
    					0.0029,
    					0.0046,
    					0.0073,
    					0.0112,
    					0.0168,
    					0.0246,
    					0.0353,
    					0.0496,
    					0.0681,
    					0.0915,
    					0.1205,
    					0.1553,
    					0.1963,
    					0.2431,
    					0.2955,
    					0.3525,
    					0.413,
    					0.4756,
    					0.5389,
    					0.6012,
    					0.661,
    					0.717,
    					0.7682,
    					0.8137,
    					0.8532,
    					0.8867,
    					0.9143,
    					0.9366,
    					0.9541,
    					0.9674,
    					0.9774,
    					0.9847,
    					0.9898,
    					0.9934,
    					0.9958,
    					0.9974,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 185,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option2",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.056,
    				"std.error": 0.3498,
    				statistic: 17.3127,
    				"p.value": 1.0491e-41,
    				"conf.low": 5.3663,
    				"conf.high": 6.7458,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.1993e-15,
    					8.9131e-15,
    					3.5018e-14,
    					1.3337e-13,
    					4.9248e-13,
    					1.763e-12,
    					6.1188e-12,
    					2.0589e-11,
    					6.7174e-11,
    					2.125e-10,
    					6.5179e-10,
    					1.9386e-9,
    					5.5912e-9,
    					1.5638e-8,
    					4.2417e-8,
    					1.1158e-7,
    					2.847e-7,
    					7.0455e-7,
    					0.0000016913,
    					0.0000039385,
    					0.0000088977,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0012,
    					0.0021,
    					0.0035,
    					0.006,
    					0.0097,
    					0.0154,
    					0.0237,
    					0.0356,
    					0.0519,
    					0.0736,
    					0.1018,
    					0.137,
    					0.1797,
    					0.23,
    					0.2873,
    					0.3507,
    					0.4184,
    					0.4887,
    					0.5593,
    					0.6281,
    					0.693,
    					0.7524,
    					0.805,
    					0.8502,
    					0.8878,
    					0.9181,
    					0.9418,
    					0.9597,
    					0.9729,
    					0.9823,
    					0.9887,
    					0.993,
    					0.9958,
    					0.9975,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.5201,
    				"std.error": 0.5013,
    				statistic: -1.0374,
    				"p.value": 0.3008,
    				"conf.low": -1.5086,
    				"conf.high": 0.4685,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					7.1562e-19,
    					2.8653e-18,
    					1.1196e-17,
    					4.2694e-17,
    					1.5889e-16,
    					5.7709e-16,
    					2.0456e-15,
    					7.0768e-15,
    					2.3894e-14,
    					7.8739e-14,
    					2.5325e-13,
    					7.95e-13,
    					2.4359e-12,
    					7.2848e-12,
    					2.1265e-11,
    					6.0591e-11,
    					1.6852e-10,
    					4.5752e-10,
    					1.2125e-9,
    					3.137e-9,
    					7.9228e-9,
    					1.9535e-8,
    					4.7023e-8,
    					1.1051e-7,
    					2.5358e-7,
    					5.6811e-7,
    					0.0000012428,
    					0.0000026548,
    					0.0000055379,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0024,
    					0.0038,
    					0.006,
    					0.0093,
    					0.0141,
    					0.0208,
    					0.03,
    					0.0424,
    					0.0586,
    					0.0794,
    					0.1052,
    					0.1367,
    					0.1741,
    					0.2175,
    					0.2664,
    					0.3204,
    					0.3785,
    					0.4395,
    					0.5019,
    					0.5644,
    					0.6252,
    					0.6831,
    					0.7368,
    					0.7854,
    					0.8284,
    					0.8654,
    					0.8965,
    					0.9221,
    					0.9425,
    					0.9585,
    					0.9707,
    					0.9797,
    					0.9863,
    					0.9909,
    					0.9941,
    					0.9963,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.3271,
    				"std.error": 0.6898,
    				statistic: -1.9239,
    				"p.value": 0.0558,
    				"conf.low": -2.6873,
    				"conf.high": 0.0331,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.882e-17,
    					6.9948e-17,
    					2.5386e-16,
    					8.9973e-16,
    					3.114e-15,
    					1.0525e-14,
    					3.4739e-14,
    					1.1198e-13,
    					3.525e-13,
    					1.0837e-12,
    					3.2538e-12,
    					9.5414e-12,
    					2.7326e-11,
    					7.6435e-11,
    					2.0882e-10,
    					5.5722e-10,
    					1.4523e-9,
    					3.6974e-9,
    					9.1948e-9,
    					2.2336e-8,
    					5.3003e-8,
    					1.2287e-7,
    					2.7826e-7,
    					6.1566e-7,
    					0.0000013309,
    					0.0000028109,
    					0.0000058008,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0014,
    					0.0023,
    					0.0037,
    					0.0058,
    					0.009,
    					0.0135,
    					0.0198,
    					0.0286,
    					0.0404,
    					0.0558,
    					0.0755,
    					0.1001,
    					0.1301,
    					0.1659,
    					0.2074,
    					0.2545,
    					0.3068,
    					0.3632,
    					0.4228,
    					0.4843,
    					0.5461,
    					0.6068,
    					0.665,
    					0.7195,
    					0.7693,
    					0.8137,
    					0.8524,
    					0.8853,
    					0.9127,
    					0.9348,
    					0.9523,
    					0.9658,
    					0.976,
    					0.9835,
    					0.9889,
    					0.9927,
    					0.9953,
    					0.9971,
    					0.9982,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.2016,
    				"std.error": 0.9859,
    				statistic: 1.2188,
    				"p.value": 0.2243,
    				"conf.low": -0.7424,
    				"conf.high": 3.1455,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.8859e-10,
    					4.477e-10,
    					1.0437e-9,
    					2.3895e-9,
    					5.3727e-9,
    					1.1864e-8,
    					2.573e-8,
    					5.4805e-8,
    					1.1465e-7,
    					2.3559e-7,
    					4.7547e-7,
    					9.4257e-7,
    					0.0000018354,
    					0.0000035108,
    					0.0000065969,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.0032,
    					0.0048,
    					0.0071,
    					0.0103,
    					0.0147,
    					0.0206,
    					0.0283,
    					0.0384,
    					0.0512,
    					0.0671,
    					0.0867,
    					0.1103,
    					0.1381,
    					0.1704,
    					0.2071,
    					0.2481,
    					0.2931,
    					0.3416,
    					0.3929,
    					0.446,
    					0.5002,
    					0.5543,
    					0.6075,
    					0.6587,
    					0.7072,
    					0.7522,
    					0.7932,
    					0.8299,
    					0.8621,
    					0.8899,
    					0.9134,
    					0.933,
    					0.9489,
    					0.9617,
    					0.9717,
    					0.9795,
    					0.9853,
    					0.9897,
    					0.9929,
    					0.9952,
    					0.9968,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 186,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option2",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.9223,
    				"std.error": 0.4403,
    				statistic: 15.7204,
    				"p.value": 3.2709e-33,
    				"conf.low": 6.0521,
    				"conf.high": 7.7926,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.2244e-16,
    					3.9197e-16,
    					1.2304e-15,
    					3.7872e-15,
    					1.1431e-14,
    					3.3831e-14,
    					9.8188e-14,
    					2.7945e-13,
    					7.7991e-13,
    					2.1345e-12,
    					5.7289e-12,
    					1.5079e-11,
    					3.8921e-11,
    					9.8524e-11,
    					2.4459e-10,
    					5.9551e-10,
    					1.422e-9,
    					3.3302e-9,
    					7.6492e-9,
    					1.7232e-8,
    					3.8078e-8,
    					8.2529e-8,
    					1.7545e-7,
    					3.6587e-7,
    					7.4843e-7,
    					0.0000015019,
    					0.0000029565,
    					0.0000057096,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0035,
    					0.0053,
    					0.0079,
    					0.0115,
    					0.0165,
    					0.0233,
    					0.0322,
    					0.0438,
    					0.0586,
    					0.077,
    					0.0995,
    					0.1264,
    					0.1581,
    					0.1946,
    					0.2357,
    					0.2813,
    					0.3307,
    					0.3833,
    					0.4381,
    					0.4942,
    					0.5503,
    					0.6055,
    					0.6586,
    					0.7087,
    					0.7551,
    					0.7973,
    					0.8347,
    					0.8674,
    					0.8953,
    					0.9187,
    					0.9379,
    					0.9534,
    					0.9656,
    					0.975,
    					0.9822,
    					0.9875,
    					0.9914,
    					0.9942,
    					0.9962,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.3555,
    				"std.error": 0.6133,
    				statistic: -2.2102,
    				"p.value": 0.0287,
    				"conf.low": -2.5677,
    				"conf.high": -0.1434,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.8241e-9,
    					6.0466e-9,
    					1.274e-8,
    					2.6415e-8,
    					5.3898e-8,
    					1.0823e-7,
    					2.1388e-7,
    					4.1596e-7,
    					7.9619e-7,
    					0.0000014999,
    					0.0000027811,
    					0.0000050753,
    					0.0000091168,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.002,
    					0.003,
    					0.0045,
    					0.0064,
    					0.0092,
    					0.0129,
    					0.0178,
    					0.0242,
    					0.0325,
    					0.043,
    					0.0561,
    					0.0722,
    					0.0916,
    					0.1145,
    					0.1413,
    					0.1721,
    					0.2068,
    					0.2454,
    					0.2876,
    					0.3328,
    					0.3807,
    					0.4305,
    					0.4814,
    					0.5326,
    					0.5832,
    					0.6325,
    					0.6798,
    					0.7242,
    					0.7654,
    					0.803,
    					0.8367,
    					0.8663,
    					0.8921,
    					0.9141,
    					0.9325,
    					0.9477,
    					0.9601,
    					0.9699,
    					0.9777,
    					0.9837,
    					0.9883,
    					0.9917,
    					0.9942,
    					0.996,
    					0.9973,
    					0.9982,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -2.1935,
    				"std.error": 0.729,
    				statistic: -3.0089,
    				"p.value": 0.0031,
    				"conf.low": -3.6342,
    				"conf.high": -0.7527,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.0429e-12,
    					1.6522e-11,
    					4.4228e-11,
    					1.1592e-10,
    					2.9748e-10,
    					7.475e-10,
    					1.8391e-9,
    					4.4308e-9,
    					1.0453e-8,
    					2.4147e-8,
    					5.4625e-8,
    					1.2101e-7,
    					2.6254e-7,
    					5.5783e-7,
    					0.0000011608,
    					0.0000023658,
    					0.0000047228,
    					0.0000092346,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0024,
    					0.0038,
    					0.0059,
    					0.0088,
    					0.013,
    					0.0188,
    					0.0266,
    					0.037,
    					0.0506,
    					0.0678,
    					0.0892,
    					0.1153,
    					0.1464,
    					0.1827,
    					0.2242,
    					0.2705,
    					0.3212,
    					0.3754,
    					0.4322,
    					0.4905,
    					0.549,
    					0.6064,
    					0.6616,
    					0.7135,
    					0.7613,
    					0.8044,
    					0.8424,
    					0.8751,
    					0.9028,
    					0.9257,
    					0.9443,
    					0.9589,
    					0.9703,
    					0.9789,
    					0.9853,
    					0.99,
    					0.9933,
    					0.9956,
    					0.9972,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.037,
    				"std.error": 1.0316,
    				statistic: 1.9746,
    				"p.value": 0.0502,
    				"conf.low": -0.0018,
    				"conf.high": 4.0758,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.4049e-12,
    					1.3219e-11,
    					3.1798e-11,
    					7.5232e-11,
    					1.7507e-10,
    					4.007e-10,
    					9.0208e-10,
    					1.9975e-9,
    					4.3509e-9,
    					9.3216e-9,
    					1.9645e-8,
    					4.0725e-8,
    					8.3048e-8,
    					1.666e-7,
    					3.2876e-7,
    					6.3825e-7,
    					0.000001219,
    					0.0000022904,
    					0.000004234,
    					0.0000077006,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0019,
    					0.0029,
    					0.0043,
    					0.0062,
    					0.0089,
    					0.0125,
    					0.0174,
    					0.0238,
    					0.0321,
    					0.0427,
    					0.0559,
    					0.0721,
    					0.0918,
    					0.1151,
    					0.1424,
    					0.1737,
    					0.2091,
    					0.2485,
    					0.2914,
    					0.3376,
    					0.3863,
    					0.4369,
    					0.4886,
    					0.5404,
    					0.5916,
    					0.6412,
    					0.6886,
    					0.733,
    					0.774,
    					0.8112,
    					0.8443,
    					0.8734,
    					0.8984,
    					0.9197,
    					0.9373,
    					0.9518,
    					0.9635,
    					0.9728,
    					0.98,
    					0.9855,
    					0.9897,
    					0.9927,
    					0.995,
    					0.9966,
    					0.9977,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 187,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option3",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.7305,
    				"std.error": 0.4757,
    				statistic: 14.1477,
    				"p.value": 3.2602e-30,
    				"conf.low": 5.7911,
    				"conf.high": 7.6698,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.369e-13,
    					8.6887e-13,
    					2.2037e-12,
    					5.4962e-12,
    					1.3481e-11,
    					3.2517e-11,
    					7.7134e-11,
    					1.7995e-10,
    					4.1285e-10,
    					9.3155e-10,
    					2.0672e-9,
    					4.5118e-9,
    					9.685e-9,
    					2.0447e-8,
    					4.246e-8,
    					8.6722e-8,
    					1.7422e-7,
    					3.4427e-7,
    					6.6916e-7,
    					0.0000012794,
    					0.0000024063,
    					0.0000044522,
    					0.0000081036,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0013,
    					0.002,
    					0.003,
    					0.0045,
    					0.0065,
    					0.0093,
    					0.0131,
    					0.0182,
    					0.0249,
    					0.0336,
    					0.0446,
    					0.0583,
    					0.0751,
    					0.0954,
    					0.1195,
    					0.1476,
    					0.1798,
    					0.2161,
    					0.2562,
    					0.3,
    					0.3469,
    					0.3962,
    					0.4472,
    					0.4992,
    					0.5511,
    					0.6022,
    					0.6516,
    					0.6986,
    					0.7425,
    					0.7828,
    					0.8191,
    					0.8515,
    					0.8797,
    					0.9039,
    					0.9243,
    					0.9412,
    					0.955,
    					0.9661,
    					0.9748,
    					0.9816,
    					0.9867,
    					0.9906,
    					0.9934,
    					0.9955,
    					0.9969,
    					0.998,
    					0.9987,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.272,
    				"std.error": 0.6811,
    				statistic: -1.8674,
    				"p.value": 0.0636,
    				"conf.low": -2.6169,
    				"conf.high": 0.073,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.9501e-8,
    					7.4522e-8,
    					1.3878e-7,
    					2.5512e-7,
    					4.6296e-7,
    					8.2934e-7,
    					0.0000014666,
    					0.0000025603,
    					0.0000044125,
    					0.0000075075,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0011,
    					0.0016,
    					0.0024,
    					0.0034,
    					0.0047,
    					0.0066,
    					0.0091,
    					0.0123,
    					0.0165,
    					0.0219,
    					0.0287,
    					0.0372,
    					0.0476,
    					0.0603,
    					0.0754,
    					0.0932,
    					0.114,
    					0.1378,
    					0.1649,
    					0.1952,
    					0.2287,
    					0.2652,
    					0.3044,
    					0.346,
    					0.3896,
    					0.4346,
    					0.4804,
    					0.5265,
    					0.5723,
    					0.6171,
    					0.6604,
    					0.7017,
    					0.7405,
    					0.7765,
    					0.8095,
    					0.8394,
    					0.866,
    					0.8894,
    					0.9097,
    					0.9271,
    					0.9418,
    					0.9541,
    					0.9642,
    					0.9724,
    					0.979,
    					0.9842,
    					0.9882,
    					0.9913,
    					0.9937,
    					0.9955,
    					0.9968,
    					0.9978,
    					0.9985,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.5127,
    				"std.error": 0.6483,
    				statistic: -2.3333,
    				"p.value": 0.0208,
    				"conf.low": -2.7928,
    				"conf.high": -0.2326,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.107e-18,
    					8.8687e-18,
    					3.6338e-17,
    					1.4494e-16,
    					5.6276e-16,
    					2.1271e-15,
    					7.827e-15,
    					2.8037e-14,
    					9.7774e-14,
    					3.3194e-13,
    					1.0972e-12,
    					3.5306e-12,
    					1.1062e-11,
    					3.3742e-11,
    					1.0021e-10,
    					2.898e-10,
    					8.16e-10,
    					2.2373e-9,
    					5.9733e-9,
    					1.553e-8,
    					3.932e-8,
    					9.6951e-8,
    					2.3282e-7,
    					5.4452e-7,
    					0.0000012404,
    					0.0000027525,
    					0.0000059495,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0019,
    					0.0032,
    					0.0052,
    					0.0082,
    					0.0128,
    					0.0193,
    					0.0286,
    					0.0412,
    					0.058,
    					0.0797,
    					0.1071,
    					0.1408,
    					0.181,
    					0.2277,
    					0.2805,
    					0.3386,
    					0.4009,
    					0.4657,
    					0.5315,
    					0.5965,
    					0.6589,
    					0.7172,
    					0.7702,
    					0.8172,
    					0.8577,
    					0.8916,
    					0.9193,
    					0.9412,
    					0.9582,
    					0.971,
    					0.9803,
    					0.987,
    					0.9916,
    					0.9947,
    					0.9967,
    					0.9981,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3245,
    				"std.error": 0.9565,
    				statistic: 1.3848,
    				"p.value": 0.168,
    				"conf.low": -0.5641,
    				"conf.high": 3.2131,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.2885e-11,
    					5.8284e-11,
    					1.4561e-10,
    					3.5681e-10,
    					8.5771e-10,
    					2.0225e-9,
    					4.6784e-9,
    					1.0616e-8,
    					2.3634e-8,
    					5.1614e-8,
    					1.1059e-7,
    					2.3246e-7,
    					4.7942e-7,
    					9.7011e-7,
    					0.0000019261,
    					0.0000037522,
    					0.0000071727,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0026,
    					0.004,
    					0.006,
    					0.0088,
    					0.0128,
    					0.0182,
    					0.0254,
    					0.035,
    					0.0473,
    					0.0628,
    					0.0821,
    					0.1055,
    					0.1334,
    					0.166,
    					0.2033,
    					0.2453,
    					0.2915,
    					0.3414,
    					0.3942,
    					0.4491,
    					0.5049,
    					0.5607,
    					0.6152,
    					0.6676,
    					0.7169,
    					0.7624,
    					0.8036,
    					0.8401,
    					0.8718,
    					0.8989,
    					0.9216,
    					0.9402,
    					0.9551,
    					0.9669,
    					0.976,
    					0.9829,
    					0.988,
    					0.9918,
    					0.9944,
    					0.9963,
    					0.9976,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 188,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option3",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.1215,
    				"std.error": 0.3845,
    				statistic: 15.9214,
    				"p.value": 4.2144e-35,
    				"conf.low": 5.3623,
    				"conf.high": 6.8807,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.3774e-13,
    					4.5232e-13,
    					1.4478e-12,
    					4.5167e-12,
    					1.3735e-11,
    					4.0712e-11,
    					1.1763e-10,
    					3.3128e-10,
    					9.0953e-10,
    					2.4342e-9,
    					6.3512e-9,
    					1.6155e-8,
    					4.0062e-8,
    					9.686e-8,
    					2.2833e-7,
    					5.2482e-7,
    					0.0000011763,
    					0.0000025708,
    					0.0000054793,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0016,
    					0.0027,
    					0.0044,
    					0.007,
    					0.0108,
    					0.0164,
    					0.0242,
    					0.035,
    					0.0494,
    					0.0683,
    					0.0922,
    					0.1219,
    					0.1577,
    					0.1998,
    					0.248,
    					0.3018,
    					0.3603,
    					0.4223,
    					0.4862,
    					0.5505,
    					0.6136,
    					0.6737,
    					0.7297,
    					0.7804,
    					0.8251,
    					0.8636,
    					0.8958,
    					0.9222,
    					0.9431,
    					0.9593,
    					0.9716,
    					0.9806,
    					0.987,
    					0.9916,
    					0.9946,
    					0.9967,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.6812,
    				"std.error": 0.5675,
    				statistic: -1.2003,
    				"p.value": 0.2318,
    				"conf.low": -1.8017,
    				"conf.high": 0.4394,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.5576e-14,
    					1.0142e-13,
    					2.8371e-13,
    					7.7875e-13,
    					2.0975e-12,
    					5.5436e-12,
    					1.4377e-11,
    					3.6589e-11,
    					9.1377e-11,
    					2.2394e-10,
    					5.3858e-10,
    					1.2711e-9,
    					2.9442e-9,
    					6.6924e-9,
    					1.493e-8,
    					3.2688e-8,
    					7.024e-8,
    					1.4814e-7,
    					3.0665e-7,
    					6.2305e-7,
    					0.0000012426,
    					0.0000024325,
    					0.0000046746,
    					0.0000088183,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0018,
    					0.0028,
    					0.0043,
    					0.0064,
    					0.0094,
    					0.0135,
    					0.0191,
    					0.0266,
    					0.0364,
    					0.0489,
    					0.0647,
    					0.0842,
    					0.1077,
    					0.1357,
    					0.1682,
    					0.2054,
    					0.2471,
    					0.293,
    					0.3424,
    					0.3947,
    					0.449,
    					0.5042,
    					0.5594,
    					0.6134,
    					0.6653,
    					0.7142,
    					0.7595,
    					0.8005,
    					0.837,
    					0.8689,
    					0.8961,
    					0.919,
    					0.9379,
    					0.9532,
    					0.9653,
    					0.9746,
    					0.9818,
    					0.9872,
    					0.9911,
    					0.994,
    					0.996,
    					0.9973,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.7483,
    				"std.error": 0.7335,
    				statistic: -1.0201,
    				"p.value": 0.3092,
    				"conf.low": -2.1967,
    				"conf.high": 0.7001,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.5582e-18,
    					5.5851e-18,
    					1.9602e-17,
    					6.7368e-17,
    					2.2671e-16,
    					7.471e-16,
    					2.4108e-15,
    					7.6179e-15,
    					2.3572e-14,
    					7.1427e-14,
    					2.1195e-13,
    					6.1589e-13,
    					1.7526e-12,
    					4.8842e-12,
    					1.333e-11,
    					3.5629e-11,
    					9.3263e-11,
    					2.391e-10,
    					6.0033e-10,
    					1.4763e-9,
    					3.5558e-9,
    					8.3885e-9,
    					1.9383e-8,
    					4.3871e-8,
    					9.7263e-8,
    					2.1123e-7,
    					4.4937e-7,
    					9.3651e-7,
    					0.0000019121,
    					0.0000038246,
    					0.0000074951,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0032,
    					0.005,
    					0.0075,
    					0.0111,
    					0.0162,
    					0.0231,
    					0.0323,
    					0.0444,
    					0.0599,
    					0.0793,
    					0.1031,
    					0.1318,
    					0.1655,
    					0.2043,
    					0.2482,
    					0.2966,
    					0.3489,
    					0.4042,
    					0.4616,
    					0.5197,
    					0.5775,
    					0.6336,
    					0.687,
    					0.7367,
    					0.7821,
    					0.8226,
    					0.8579,
    					0.8882,
    					0.9136,
    					0.9343,
    					0.951,
    					0.9641,
    					0.9742,
    					0.9818,
    					0.9874,
    					0.9915,
    					0.9943,
    					0.9963,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.4832,
    				"std.error": 1.0849,
    				statistic: 0.4454,
    				"p.value": 0.6566,
    				"conf.low": -1.6589,
    				"conf.high": 2.6253,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.4599e-7,
    					4.6553e-7,
    					8.6806e-7,
    					0.0000015949,
    					0.0000028876,
    					0.0000051514,
    					0.0000090559,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0011,
    					0.0017,
    					0.0025,
    					0.0037,
    					0.0053,
    					0.0075,
    					0.0105,
    					0.0145,
    					0.0197,
    					0.0264,
    					0.035,
    					0.0457,
    					0.0588,
    					0.0748,
    					0.0939,
    					0.1163,
    					0.1424,
    					0.1721,
    					0.2055,
    					0.2424,
    					0.2827,
    					0.326,
    					0.3717,
    					0.4193,
    					0.4682,
    					0.5175,
    					0.5666,
    					0.6146,
    					0.661,
    					0.705,
    					0.7462,
    					0.7842,
    					0.8186,
    					0.8494,
    					0.8765,
    					0.9,
    					0.92,
    					0.9368,
    					0.9508,
    					0.9622,
    					0.9713,
    					0.9785,
    					0.9841,
    					0.9884,
    					0.9917,
    					0.9941,
    					0.9959,
    					0.9972,
    					0.9981,
    					0.9987,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 189,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option3",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.7305,
    				"std.error": 0.4824,
    				statistic: 13.951,
    				"p.value": 3.5291e-27,
    				"conf.low": 5.7756,
    				"conf.high": 7.6854,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					6.9649e-13,
    					1.7507e-12,
    					4.3296e-12,
    					1.0534e-11,
    					2.5218e-11,
    					5.9398e-11,
    					1.3765e-10,
    					3.1386e-10,
    					7.0413e-10,
    					1.5543e-9,
    					3.376e-9,
    					7.2152e-9,
    					1.5173e-8,
    					3.1399e-8,
    					6.3936e-8,
    					1.2811e-7,
    					2.5261e-7,
    					4.9018e-7,
    					9.3605e-7,
    					0.0000017591,
    					0.0000032535,
    					0.0000059222,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0023,
    					0.0034,
    					0.005,
    					0.0072,
    					0.0102,
    					0.0142,
    					0.0196,
    					0.0266,
    					0.0355,
    					0.0469,
    					0.0609,
    					0.078,
    					0.0986,
    					0.1228,
    					0.151,
    					0.1831,
    					0.2193,
    					0.2592,
    					0.3025,
    					0.3489,
    					0.3976,
    					0.448,
    					0.4992,
    					0.5504,
    					0.6008,
    					0.6496,
    					0.6961,
    					0.7395,
    					0.7795,
    					0.8158,
    					0.8481,
    					0.8764,
    					0.9007,
    					0.9214,
    					0.9386,
    					0.9527,
    					0.9641,
    					0.9732,
    					0.9802,
    					0.9856,
    					0.9897,
    					0.9928,
    					0.995,
    					0.9966,
    					0.9977,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -1.272,
    				"std.error": 0.6907,
    				statistic: -1.8415,
    				"p.value": 0.0679,
    				"conf.low": -2.6392,
    				"conf.high": 0.0952,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.9595e-8,
    					1.1054e-7,
    					2.0246e-7,
    					3.6617e-7,
    					6.5401e-7,
    					0.0000011535,
    					0.0000020092,
    					0.000003456,
    					0.0000058708,
    					0.0000098492,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.0019,
    					0.0027,
    					0.0038,
    					0.0053,
    					0.0073,
    					0.0099,
    					0.0134,
    					0.0178,
    					0.0234,
    					0.0305,
    					0.0393,
    					0.05,
    					0.0629,
    					0.0782,
    					0.0963,
    					0.1172,
    					0.1412,
    					0.1683,
    					0.1986,
    					0.2319,
    					0.2681,
    					0.3069,
    					0.3481,
    					0.3911,
    					0.4355,
    					0.4807,
    					0.5262,
    					0.5713,
    					0.6155,
    					0.6583,
    					0.6991,
    					0.7376,
    					0.7733,
    					0.8062,
    					0.836,
    					0.8626,
    					0.8861,
    					0.9066,
    					0.9242,
    					0.9392,
    					0.9518,
    					0.9622,
    					0.9706,
    					0.9775,
    					0.9829,
    					0.9872,
    					0.9905,
    					0.9931,
    					0.995,
    					0.9964,
    					0.9975,
    					0.9982,
    					0.9988,
    					0.9992,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.3573,
    				"std.error": 0.7898,
    				statistic: -1.7185,
    				"p.value": 0.0882,
    				"conf.low": -2.9205,
    				"conf.high": 0.2059,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.2764e-13,
    					3.4715e-13,
    					9.273e-13,
    					2.4327e-12,
    					6.2679e-12,
    					1.5861e-11,
    					3.9421e-11,
    					9.6228e-11,
    					2.3071e-10,
    					5.433e-10,
    					1.2567e-9,
    					2.855e-9,
    					6.3712e-9,
    					1.3966e-8,
    					3.0071e-8,
    					6.3602e-8,
    					1.3215e-7,
    					2.6972e-7,
    					5.4082e-7,
    					0.0000010653,
    					0.0000020616,
    					0.0000039198,
    					0.0000073223,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0022,
    					0.0034,
    					0.0051,
    					0.0074,
    					0.0107,
    					0.0152,
    					0.0212,
    					0.0291,
    					0.0393,
    					0.0523,
    					0.0685,
    					0.0882,
    					0.1119,
    					0.1399,
    					0.1723,
    					0.2091,
    					0.2501,
    					0.2951,
    					0.3435,
    					0.3946,
    					0.4475,
    					0.5015,
    					0.5554,
    					0.6083,
    					0.6592,
    					0.7074,
    					0.7522,
    					0.793,
    					0.8296,
    					0.8617,
    					0.8895,
    					0.913,
    					0.9325,
    					0.9485,
    					0.9613,
    					0.9714,
    					0.9792,
    					0.9851,
    					0.9895,
    					0.9927,
    					0.995,
    					0.9967,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.074,
    				"std.error": 1.1548,
    				statistic: 0.93,
    				"p.value": 0.3542,
    				"conf.low": -1.2117,
    				"conf.high": 3.3598,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					8.192e-8,
    					1.5273e-7,
    					2.8105e-7,
    					5.1046e-7,
    					9.1512e-7,
    					0.0000016193,
    					0.0000028283,
    					0.0000048762,
    					0.0000082985,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0026,
    					0.0037,
    					0.0052,
    					0.0072,
    					0.0099,
    					0.0134,
    					0.018,
    					0.0238,
    					0.0311,
    					0.0401,
    					0.0513,
    					0.0647,
    					0.0807,
    					0.0996,
    					0.1214,
    					0.1465,
    					0.1748,
    					0.2064,
    					0.2411,
    					0.2787,
    					0.319,
    					0.3616,
    					0.406,
    					0.4516,
    					0.4978,
    					0.5441,
    					0.5898,
    					0.6343,
    					0.6771,
    					0.7176,
    					0.7555,
    					0.7905,
    					0.8224,
    					0.851,
    					0.8764,
    					0.8985,
    					0.9177,
    					0.9339,
    					0.9476,
    					0.9589,
    					0.9682,
    					0.9756,
    					0.9816,
    					0.9862,
    					0.9898,
    					0.9926,
    					0.9946,
    					0.9962,
    					0.9973,
    					0.9981,
    					0.9987,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 190,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option4",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.9318,
    				"std.error": 0.5187,
    				statistic: 13.364,
    				"p.value": 8.0398e-32,
    				"conf.low": 5.9107,
    				"conf.high": 7.9528,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.5008e-12,
    					3.4946e-12,
    					8.0237e-12,
    					1.8165e-11,
    					4.055e-11,
    					8.9259e-11,
    					1.9374e-10,
    					4.1465e-10,
    					8.7512e-10,
    					1.8212e-9,
    					3.7376e-9,
    					7.5639e-9,
    					1.5095e-8,
    					2.9707e-8,
    					5.7655e-8,
    					1.1035e-7,
    					2.0828e-7,
    					3.8772e-7,
    					7.118e-7,
    					0.0000012888,
    					0.0000023014,
    					0.0000040534,
    					0.0000070414,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0027,
    					0.0038,
    					0.0054,
    					0.0076,
    					0.0105,
    					0.0144,
    					0.0194,
    					0.0258,
    					0.0338,
    					0.0439,
    					0.0562,
    					0.0711,
    					0.0888,
    					0.1097,
    					0.1338,
    					0.1614,
    					0.1924,
    					0.2268,
    					0.2645,
    					0.3051,
    					0.3483,
    					0.3935,
    					0.4402,
    					0.4878,
    					0.5355,
    					0.5828,
    					0.6288,
    					0.6731,
    					0.7151,
    					0.7543,
    					0.7904,
    					0.8232,
    					0.8525,
    					0.8784,
    					0.9009,
    					0.9202,
    					0.9366,
    					0.9501,
    					0.9613,
    					0.9703,
    					0.9775,
    					0.9832,
    					0.9876,
    					0.991,
    					0.9935,
    					0.9954,
    					0.9968,
    					0.9978,
    					0.9985,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.9416,
    				"std.error": 0.6004,
    				statistic: -1.5682,
    				"p.value": 0.118,
    				"conf.low": -2.1235,
    				"conf.high": 0.2404,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.5527e-11,
    					3.7507e-11,
    					8.9084e-11,
    					2.0805e-10,
    					4.778e-10,
    					1.079e-9,
    					2.3959e-9,
    					5.2318e-9,
    					1.1234e-8,
    					2.3723e-8,
    					4.9263e-8,
    					1.0061e-7,
    					2.0206e-7,
    					3.9911e-7,
    					7.7532e-7,
    					0.0000014813,
    					0.0000027837,
    					0.0000051452,
    					0.0000093542,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0023,
    					0.0034,
    					0.005,
    					0.0073,
    					0.0104,
    					0.0146,
    					0.0202,
    					0.0276,
    					0.037,
    					0.0489,
    					0.0637,
    					0.0818,
    					0.1035,
    					0.1291,
    					0.1587,
    					0.1926,
    					0.2305,
    					0.2723,
    					0.3175,
    					0.3656,
    					0.4159,
    					0.4676,
    					0.5199,
    					0.5719,
    					0.6226,
    					0.6713,
    					0.7173,
    					0.7599,
    					0.7988,
    					0.8336,
    					0.8643,
    					0.8908,
    					0.9134,
    					0.9323,
    					0.9479,
    					0.9604,
    					0.9704,
    					0.9782,
    					0.9842,
    					0.9887,
    					0.9921,
    					0.9945,
    					0.9963,
    					0.9975,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -2.3542,
    				"std.error": 0.7015,
    				statistic: -3.3558,
    				"p.value": 0.0009,
    				"conf.low": -3.7352,
    				"conf.high": -0.9732,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.6997e-12,
    					1.3432e-11,
    					3.7525e-11,
    					1.0247e-10,
    					2.7349e-10,
    					7.1356e-10,
    					1.8199e-9,
    					4.5372e-9,
    					1.1058e-8,
    					2.6347e-8,
    					6.137e-8,
    					1.3976e-7,
    					3.1116e-7,
    					6.7735e-7,
    					0.0000014417,
    					0.0000030006,
    					0.0000061067,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0022,
    					0.0035,
    					0.0055,
    					0.0084,
    					0.0126,
    					0.0185,
    					0.0267,
    					0.0376,
    					0.0519,
    					0.0702,
    					0.0931,
    					0.1212,
    					0.1547,
    					0.1938,
    					0.2385,
    					0.2882,
    					0.3424,
    					0.4,
    					0.4598,
    					0.5207,
    					0.581,
    					0.6395,
    					0.6948,
    					0.7461,
    					0.7924,
    					0.8333,
    					0.8686,
    					0.8984,
    					0.923,
    					0.9427,
    					0.9582,
    					0.9702,
    					0.9791,
    					0.9857,
    					0.9904,
    					0.9937,
    					0.9959,
    					0.9974,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.9103,
    				"std.error": 0.8175,
    				statistic: 2.3367,
    				"p.value": 0.0202,
    				"conf.low": 0.301,
    				"conf.high": 3.5196,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.8842e-17,
    					7.5517e-17,
    					2.9472e-16,
    					1.1201e-15,
    					4.145e-15,
    					1.4938e-14,
    					5.2422e-14,
    					1.7915e-13,
    					5.9624e-13,
    					1.9325e-12,
    					6.0998e-12,
    					1.8752e-11,
    					5.6142e-11,
    					1.6371e-10,
    					4.6494e-10,
    					1.2862e-9,
    					3.4655e-9,
    					9.0954e-9,
    					2.3253e-8,
    					5.7911e-8,
    					1.405e-7,
    					3.3209e-7,
    					7.6472e-7,
    					0.0000017157,
    					0.0000037508,
    					0.0000079899,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0023,
    					0.0038,
    					0.0061,
    					0.0095,
    					0.0146,
    					0.0219,
    					0.032,
    					0.0458,
    					0.0639,
    					0.0871,
    					0.1161,
    					0.1514,
    					0.1931,
    					0.2413,
    					0.2953,
    					0.3543,
    					0.417,
    					0.4819,
    					0.5473,
    					0.6114,
    					0.6727,
    					0.7296,
    					0.781,
    					0.8264,
    					0.8652,
    					0.8977,
    					0.924,
    					0.9448,
    					0.9609,
    					0.9729,
    					0.9817,
    					0.9879,
    					0.9922,
    					0.9951,
    					0.997,
    					0.9982,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 191,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option4",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.97,
    				"std.error": 0.4149,
    				statistic: 14.3898,
    				"p.value": 1.6978e-35,
    				"conf.low": 5.1533,
    				"conf.high": 6.7867,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					7.4969e-11,
    					1.9788e-10,
    					5.1097e-10,
    					1.2909e-9,
    					3.1906e-9,
    					7.7155e-9,
    					1.8255e-8,
    					4.2259e-8,
    					9.5722e-8,
    					2.1216e-7,
    					4.6013e-7,
    					9.7655e-7,
    					0.0000020282,
    					0.0000041225,
    					0.0000082006,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0025,
    					0.0039,
    					0.006,
    					0.0091,
    					0.0135,
    					0.0196,
    					0.0279,
    					0.0389,
    					0.0533,
    					0.0716,
    					0.0944,
    					0.1222,
    					0.1552,
    					0.1936,
    					0.2373,
    					0.2859,
    					0.3389,
    					0.3952,
    					0.4538,
    					0.5134,
    					0.5728,
    					0.6305,
    					0.6854,
    					0.7365,
    					0.783,
    					0.8244,
    					0.8604,
    					0.891,
    					0.9164,
    					0.9371,
    					0.9536,
    					0.9664,
    					0.9762,
    					0.9834,
    					0.9887,
    					0.9924,
    					0.9951,
    					0.9968,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.1503,
    				"std.error": 0.4821,
    				statistic: -0.3118,
    				"p.value": 0.7554,
    				"conf.low": -1.0993,
    				"conf.high": 0.7987,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.8313e-23,
    					9.2796e-23,
    					4.5794e-22,
    					2.201e-21,
    					1.0303e-20,
    					4.6969e-20,
    					2.0855e-19,
    					9.0185e-19,
    					3.7985e-18,
    					1.5583e-17,
    					6.2261e-17,
    					2.423e-16,
    					9.1846e-16,
    					3.3911e-15,
    					1.2195e-14,
    					4.2719e-14,
    					1.4577e-13,
    					4.8449e-13,
    					1.5686e-12,
    					4.9474e-12,
    					1.52e-11,
    					4.5496e-11,
    					1.3266e-10,
    					3.7684e-10,
    					1.0429e-9,
    					2.812e-9,
    					7.3872e-9,
    					1.8908e-8,
    					4.7158e-8,
    					1.1461e-7,
    					2.714e-7,
    					6.2633e-7,
    					0.0000014086,
    					0.0000030876,
    					0.0000065961,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0019,
    					0.0032,
    					0.0052,
    					0.0083,
    					0.0128,
    					0.0193,
    					0.0283,
    					0.0407,
    					0.0572,
    					0.0785,
    					0.1053,
    					0.1381,
    					0.1774,
    					0.2231,
    					0.2748,
    					0.3318,
    					0.3929,
    					0.4569,
    					0.522,
    					0.5865,
    					0.6488,
    					0.7073,
    					0.7608,
    					0.8084,
    					0.8498,
    					0.8847,
    					0.9135,
    					0.9365,
    					0.9544,
    					0.968,
    					0.9781,
    					0.9854,
    					0.9904,
    					0.9939,
    					0.9962,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.2195,
    				"std.error": 0.8034,
    				statistic: -1.5179,
    				"p.value": 0.1302,
    				"conf.low": -2.801,
    				"conf.high": 0.362,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					8.9548e-14,
    					2.4099e-13,
    					6.3732e-13,
    					1.6563e-12,
    					4.2302e-12,
    					1.0617e-11,
    					2.6188e-11,
    					6.3481e-11,
    					1.5123e-10,
    					3.5407e-10,
    					8.147e-10,
    					1.8424e-9,
    					4.095e-9,
    					8.9455e-9,
    					1.9207e-8,
    					4.0533e-8,
    					8.4076e-8,
    					1.7142e-7,
    					3.4354e-7,
    					6.7677e-7,
    					0.0000013106,
    					0.0000024948,
    					0.0000046688,
    					0.0000085896,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0023,
    					0.0035,
    					0.0051,
    					0.0075,
    					0.0107,
    					0.0151,
    					0.021,
    					0.0287,
    					0.0386,
    					0.0512,
    					0.0668,
    					0.0858,
    					0.1086,
    					0.1355,
    					0.1667,
    					0.2021,
    					0.2417,
    					0.2851,
    					0.332,
    					0.3817,
    					0.4333,
    					0.4862,
    					0.5393,
    					0.5917,
    					0.6425,
    					0.6909,
    					0.7362,
    					0.7778,
    					0.8155,
    					0.8488,
    					0.8779,
    					0.9028,
    					0.9238,
    					0.9411,
    					0.9552,
    					0.9664,
    					0.9752,
    					0.982,
    					0.9871,
    					0.991,
    					0.9937,
    					0.9957,
    					0.9971,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.9749,
    				"std.error": 0.9441,
    				statistic: 1.0326,
    				"p.value": 0.3027,
    				"conf.low": -0.8836,
    				"conf.high": 2.8334,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.4893e-10,
    					3.6902e-10,
    					8.9651e-10,
    					2.1355e-9,
    					4.9873e-9,
    					1.1421e-8,
    					2.5643e-8,
    					5.6457e-8,
    					1.2188e-7,
    					2.5803e-7,
    					5.3567e-7,
    					0.0000010905,
    					0.0000021773,
    					0.0000042634,
    					0.0000081876,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0019,
    					0.003,
    					0.0046,
    					0.0069,
    					0.0102,
    					0.0148,
    					0.021,
    					0.0292,
    					0.0401,
    					0.0539,
    					0.0714,
    					0.0928,
    					0.1187,
    					0.1494,
    					0.1849,
    					0.2252,
    					0.2701,
    					0.319,
    					0.3714,
    					0.4262,
    					0.4825,
    					0.5392,
    					0.595,
    					0.649,
    					0.7002,
    					0.7476,
    					0.7908,
    					0.8293,
    					0.8629,
    					0.8917,
    					0.9159,
    					0.9358,
    					0.9518,
    					0.9644,
    					0.9742,
    					0.9816,
    					0.9872,
    					0.9912,
    					0.9941,
    					0.9961,
    					0.9974,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 192,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option4",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.9318,
    				"std.error": 0.5108,
    				statistic: 13.5699,
    				"p.value": 3.3427e-30,
    				"conf.low": 5.9245,
    				"conf.high": 7.939,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					6.9442e-13,
    					1.6592e-12,
    					3.907e-12,
    					9.0679e-12,
    					2.0743e-11,
    					4.6766e-11,
    					1.0392e-10,
    					2.2762e-10,
    					4.9138e-10,
    					1.0456e-9,
    					2.1929e-9,
    					4.5335e-9,
    					9.2381e-9,
    					1.8556e-8,
    					3.6739e-8,
    					7.1703e-8,
    					1.3795e-7,
    					2.6162e-7,
    					4.8912e-7,
    					9.0148e-7,
    					0.0000016379,
    					0.0000029339,
    					0.000005181,
    					0.0000090204,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0011,
    					0.0016,
    					0.0023,
    					0.0034,
    					0.0049,
    					0.0069,
    					0.0096,
    					0.0132,
    					0.0179,
    					0.024,
    					0.0318,
    					0.0415,
    					0.0535,
    					0.068,
    					0.0855,
    					0.1061,
    					0.1301,
    					0.1577,
    					0.1888,
    					0.2234,
    					0.2613,
    					0.3024,
    					0.3461,
    					0.3919,
    					0.4393,
    					0.4876,
    					0.5361,
    					0.584,
    					0.6307,
    					0.6756,
    					0.718,
    					0.7576,
    					0.794,
    					0.8269,
    					0.8562,
    					0.882,
    					0.9044,
    					0.9234,
    					0.9394,
    					0.9527,
    					0.9635,
    					0.9722,
    					0.9791,
    					0.9845,
    					0.9887,
    					0.9918,
    					0.9942,
    					0.9959,
    					0.9972,
    					0.9981,
    					0.9987,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.9416,
    				"std.error": 0.5913,
    				statistic: -1.5923,
    				"p.value": 0.1129,
    				"conf.low": -2.1075,
    				"conf.high": 0.2244,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					7.7143e-12,
    					1.914e-11,
    					4.6672e-11,
    					1.1184e-10,
    					2.6341e-10,
    					6.097e-10,
    					1.387e-9,
    					3.101e-9,
    					6.8143e-9,
    					1.4718e-8,
    					3.1243e-8,
    					6.5191e-8,
    					1.337e-7,
    					2.6954e-7,
    					5.3414e-7,
    					0.0000010405,
    					0.0000019924,
    					0.0000037507,
    					0.0000069411,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.002,
    					0.003,
    					0.0045,
    					0.0066,
    					0.0095,
    					0.0134,
    					0.0187,
    					0.0257,
    					0.0348,
    					0.0464,
    					0.0608,
    					0.0786,
    					0.1,
    					0.1254,
    					0.155,
    					0.1889,
    					0.2271,
    					0.2692,
    					0.3149,
    					0.3636,
    					0.4146,
    					0.4672,
    					0.5203,
    					0.573,
    					0.6245,
    					0.6738,
    					0.7203,
    					0.7633,
    					0.8024,
    					0.8373,
    					0.8679,
    					0.8943,
    					0.9167,
    					0.9353,
    					0.9505,
    					0.9627,
    					0.9723,
    					0.9798,
    					0.9855,
    					0.9897,
    					0.9928,
    					0.9951,
    					0.9967,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -2.1813,
    				"std.error": 0.8394,
    				statistic: -2.5987,
    				"p.value": 0.0101,
    				"conf.low": -3.8364,
    				"conf.high": -0.5262,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.7924e-9,
    					3.8535e-9,
    					8.1541e-9,
    					1.6983e-8,
    					3.4818e-8,
    					7.0261e-8,
    					1.3957e-7,
    					2.7289e-7,
    					5.2527e-7,
    					9.9526e-7,
    					0.0000018565,
    					0.000003409,
    					0.0000061628,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0022,
    					0.0033,
    					0.0049,
    					0.007,
    					0.0099,
    					0.0138,
    					0.019,
    					0.0257,
    					0.0343,
    					0.0452,
    					0.0587,
    					0.0752,
    					0.095,
    					0.1184,
    					0.1456,
    					0.1767,
    					0.2117,
    					0.2505,
    					0.2927,
    					0.338,
    					0.3858,
    					0.4354,
    					0.486,
    					0.5368,
    					0.587,
    					0.6359,
    					0.6826,
    					0.7266,
    					0.7673,
    					0.8044,
    					0.8377,
    					0.8671,
    					0.8926,
    					0.9143,
    					0.9326,
    					0.9477,
    					0.96,
    					0.9698,
    					0.9775,
    					0.9835,
    					0.9881,
    					0.9915,
    					0.9941,
    					0.9959,
    					0.9972,
    					0.9981,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.7662,
    				"std.error": 0.9835,
    				statistic: 1.7959,
    				"p.value": 0.074,
    				"conf.low": -0.1731,
    				"conf.high": 3.7054,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.6291e-12,
    					9.3404e-12,
    					2.3604e-11,
    					5.8573e-11,
    					1.4272e-10,
    					3.4146e-10,
    					8.0225e-10,
    					1.8509e-9,
    					4.1932e-9,
    					9.3289e-9,
    					2.0382e-8,
    					4.3732e-8,
    					9.2148e-8,
    					1.9069e-7,
    					3.8757e-7,
    					7.7365e-7,
    					0.0000015168,
    					0.0000029209,
    					0.000005525,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0019,
    					0.0029,
    					0.0044,
    					0.0065,
    					0.0094,
    					0.0135,
    					0.019,
    					0.0263,
    					0.0358,
    					0.0479,
    					0.0631,
    					0.0819,
    					0.1045,
    					0.1314,
    					0.1628,
    					0.1986,
    					0.2388,
    					0.2831,
    					0.331,
    					0.3818,
    					0.4348,
    					0.489,
    					0.5433,
    					0.5969,
    					0.6487,
    					0.6979,
    					0.7437,
    					0.7856,
    					0.8233,
    					0.8564,
    					0.8851,
    					0.9094,
    					0.9297,
    					0.9463,
    					0.9597,
    					0.9702,
    					0.9783,
    					0.9845,
    					0.9891,
    					0.9924,
    					0.9949,
    					0.9966,
    					0.9977,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 193,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option5",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.8585,
    				"std.error": 0.443,
    				statistic: 15.4834,
    				"p.value": 1.8681e-39,
    				"conf.low": 5.9865,
    				"conf.high": 7.7305,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					5.9623e-16,
    					1.8459e-15,
    					5.6051e-15,
    					1.6693e-14,
    					4.8763e-14,
    					1.3971e-13,
    					3.9264e-13,
    					1.0823e-12,
    					2.9263e-12,
    					7.7608e-12,
    					2.0189e-11,
    					5.1518e-11,
    					1.2895e-10,
    					3.1663e-10,
    					7.6266e-10,
    					1.802e-9,
    					4.177e-9,
    					9.4981e-9,
    					2.1189e-8,
    					4.6372e-8,
    					9.957e-8,
    					2.0975e-7,
    					4.3354e-7,
    					8.792e-7,
    					0.0000017495,
    					0.0000034158,
    					0.0000065445,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0024,
    					0.0037,
    					0.0056,
    					0.0083,
    					0.0121,
    					0.0172,
    					0.0242,
    					0.0333,
    					0.0452,
    					0.0601,
    					0.0788,
    					0.1015,
    					0.1287,
    					0.1605,
    					0.197,
    					0.2382,
    					0.2837,
    					0.3331,
    					0.3854,
    					0.44,
    					0.4957,
    					0.5515,
    					0.6063,
    					0.6591,
    					0.7089,
    					0.7551,
    					0.797,
    					0.8342,
    					0.8668,
    					0.8946,
    					0.918,
    					0.9372,
    					0.9528,
    					0.9651,
    					0.9746,
    					0.9818,
    					0.9872,
    					0.9912,
    					0.994,
    					0.996,
    					0.9974,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.9694,
    				"std.error": 0.5497,
    				statistic: -1.7634,
    				"p.value": 0.0789,
    				"conf.low": -2.0516,
    				"conf.high": 0.1127,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.9413e-13,
    					8.3329e-13,
    					2.3136e-12,
    					6.2955e-12,
    					1.6789e-11,
    					4.3882e-11,
    					1.1241e-10,
    					2.8223e-10,
    					6.9453e-10,
    					1.6752e-9,
    					3.9604e-9,
    					9.1775e-9,
    					2.0846e-8,
    					4.6416e-8,
    					1.0131e-7,
    					2.1676e-7,
    					4.5466e-7,
    					9.3491e-7,
    					0.0000018847,
    					0.0000037252,
    					0.0000072189,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0018,
    					0.0029,
    					0.0044,
    					0.0067,
    					0.0099,
    					0.0144,
    					0.0205,
    					0.0287,
    					0.0394,
    					0.0532,
    					0.0706,
    					0.0921,
    					0.1181,
    					0.1489,
    					0.1846,
    					0.2253,
    					0.2705,
    					0.3199,
    					0.3727,
    					0.4281,
    					0.4849,
    					0.5419,
    					0.5982,
    					0.6524,
    					0.7038,
    					0.7513,
    					0.7944,
    					0.8328,
    					0.8662,
    					0.8947,
    					0.9185,
    					0.938,
    					0.9537,
    					0.966,
    					0.9755,
    					0.9826,
    					0.9879,
    					0.9918,
    					0.9945,
    					0.9964,
    					0.9977,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.6823,
    				"std.error": 0.6085,
    				statistic: -2.7649,
    				"p.value": 0.0061,
    				"conf.low": -2.88,
    				"conf.high": -0.4845,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.5893e-19,
    					7.7222e-19,
    					3.639e-18,
    					1.6632e-17,
    					7.3732e-17,
    					3.1703e-16,
    					1.3221e-15,
    					5.3482e-15,
    					2.0985e-14,
    					7.9866e-14,
    					2.9485e-13,
    					1.0559e-12,
    					3.6682e-12,
    					1.2362e-11,
    					4.0416e-11,
    					1.2819e-10,
    					3.9445e-10,
    					1.1776e-9,
    					3.4111e-9,
    					9.5869e-9,
    					2.6145e-8,
    					6.9186e-8,
    					1.7767e-7,
    					4.4279e-7,
    					0.000001071,
    					0.0000025142,
    					0.0000057292,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0008,
    					0.0014,
    					0.0025,
    					0.0043,
    					0.0071,
    					0.0114,
    					0.0179,
    					0.0272,
    					0.0402,
    					0.0579,
    					0.0813,
    					0.1111,
    					0.1481,
    					0.1925,
    					0.2442,
    					0.3027,
    					0.3666,
    					0.4345,
    					0.5044,
    					0.5742,
    					0.6417,
    					0.705,
    					0.7627,
    					0.8135,
    					0.857,
    					0.893,
    					0.922,
    					0.9446,
    					0.9617,
    					0.9742,
    					0.9831,
    					0.9892,
    					0.9933,
    					0.996,
    					0.9976,
    					0.9987,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.1301,
    				"std.error": 0.7565,
    				statistic: 1.4938,
    				"p.value": 0.1363,
    				"conf.low": -0.3591,
    				"conf.high": 2.6192,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					3.5827e-16,
    					1.5083e-15,
    					6.1561e-15,
    					2.4358e-14,
    					9.344e-14,
    					3.4751e-13,
    					1.2531e-12,
    					4.3807e-12,
    					1.4849e-11,
    					4.8806e-11,
    					1.5554e-10,
    					4.8066e-10,
    					1.4404e-9,
    					4.1858e-9,
    					1.1797e-8,
    					3.2242e-8,
    					8.547e-8,
    					2.1976e-7,
    					5.4807e-7,
    					0.0000013259,
    					0.0000031119,
    					0.0000070857,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0005,
    					0.001,
    					0.0017,
    					0.003,
    					0.0051,
    					0.0084,
    					0.0135,
    					0.021,
    					0.0317,
    					0.0465,
    					0.0666,
    					0.0927,
    					0.1257,
    					0.1661,
    					0.2141,
    					0.2694,
    					0.331,
    					0.3975,
    					0.4672,
    					0.5379,
    					0.6074,
    					0.6736,
    					0.7348,
    					0.7896,
    					0.837,
    					0.8769,
    					0.9094,
    					0.9351,
    					0.9547,
    					0.9692,
    					0.9797,
    					0.9869,
    					0.9918,
    					0.9951,
    					0.9971,
    					0.9983,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 194,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option5",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.1601,
    				"std.error": 0.3601,
    				statistic: 17.1057,
    				"p.value": 2.3428e-45,
    				"conf.low": 5.4512,
    				"conf.high": 6.869,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.3147e-15,
    					5.1771e-15,
    					1.9798e-14,
    					7.3527e-14,
    					2.6519e-13,
    					9.2888e-13,
    					3.1599e-12,
    					1.044e-11,
    					3.3502e-11,
    					1.0442e-10,
    					3.161e-10,
    					9.2952e-10,
    					2.655e-9,
    					7.3669e-9,
    					1.9857e-8,
    					5.1997e-8,
    					1.3228e-7,
    					3.2696e-7,
    					7.8523e-7,
    					0.0000018324,
    					0.0000041553,
    					0.0000091572,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0018,
    					0.0031,
    					0.0052,
    					0.0085,
    					0.0134,
    					0.0206,
    					0.0308,
    					0.0449,
    					0.0637,
    					0.0882,
    					0.1192,
    					0.157,
    					0.2021,
    					0.2541,
    					0.3124,
    					0.3758,
    					0.4427,
    					0.5113,
    					0.5796,
    					0.6456,
    					0.7074,
    					0.7638,
    					0.8135,
    					0.8562,
    					0.8918,
    					0.9205,
    					0.9431,
    					0.9602,
    					0.973,
    					0.9821,
    					0.9884,
    					0.9927,
    					0.9956,
    					0.9974,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.4598,
    				"std.error": 0.4447,
    				statistic: -1.0338,
    				"p.value": 0.3021,
    				"conf.low": -1.3353,
    				"conf.high": 0.4157,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.6113e-24,
    					2.7396e-23,
    					1.5778e-22,
    					8.8091e-22,
    					4.7679e-21,
    					2.5017e-20,
    					1.2726e-19,
    					6.2754e-19,
    					3.0002e-18,
    					1.3906e-17,
    					6.2488e-17,
    					2.7224e-16,
    					1.1499e-15,
    					4.7093e-15,
    					1.8699e-14,
    					7.1993e-14,
    					2.6875e-13,
    					9.7279e-13,
    					3.4143e-12,
    					1.162e-11,
    					3.8352e-11,
    					1.2275e-10,
    					3.8098e-10,
    					1.1468e-9,
    					3.3478e-9,
    					9.4788e-9,
    					2.6031e-8,
    					6.9341e-8,
    					1.7917e-7,
    					4.4912e-7,
    					0.0000010921,
    					0.0000025767,
    					0.0000058983,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0005,
    					0.0008,
    					0.0015,
    					0.0027,
    					0.0045,
    					0.0075,
    					0.012,
    					0.0188,
    					0.0286,
    					0.0423,
    					0.0609,
    					0.0853,
    					0.1165,
    					0.1549,
    					0.2008,
    					0.2541,
    					0.3141,
    					0.3793,
    					0.4482,
    					0.5188,
    					0.5887,
    					0.6559,
    					0.7185,
    					0.7751,
    					0.8245,
    					0.8665,
    					0.901,
    					0.9284,
    					0.9496,
    					0.9655,
    					0.977,
    					0.9851,
    					0.9906,
    					0.9942,
    					0.9966,
    					0.998,
    					0.9989,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.7157,
    				"std.error": 0.6931,
    				statistic: -1.0327,
    				"p.value": 0.3027,
    				"conf.low": -2.08,
    				"conf.high": 0.6486,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					9.9445e-21,
    					4.1779e-20,
    					1.7143e-19,
    					6.87e-19,
    					2.689e-18,
    					1.028e-17,
    					3.8387e-17,
    					1.4e-16,
    					4.9873e-16,
    					1.7353e-15,
    					5.8979e-15,
    					1.9579e-14,
    					6.349e-14,
    					2.011e-13,
    					6.2222e-13,
    					1.8806e-12,
    					5.5523e-12,
    					1.6014e-11,
    					4.5118e-11,
    					1.2418e-10,
    					3.3392e-10,
    					8.772e-10,
    					2.2513e-9,
    					5.6451e-9,
    					1.383e-8,
    					3.3104e-8,
    					7.7423e-8,
    					1.7694e-7,
    					3.9512e-7,
    					8.6225e-7,
    					0.0000018388,
    					0.0000038322,
    					0.0000078058,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0028,
    					0.0044,
    					0.0068,
    					0.0104,
    					0.0155,
    					0.0226,
    					0.0323,
    					0.0451,
    					0.0619,
    					0.083,
    					0.1093,
    					0.141,
    					0.1784,
    					0.2215,
    					0.2701,
    					0.3234,
    					0.3807,
    					0.4407,
    					0.5021,
    					0.5635,
    					0.6233,
    					0.6804,
    					0.7334,
    					0.7816,
    					0.8244,
    					0.8614,
    					0.8927,
    					0.9186,
    					0.9394,
    					0.9559,
    					0.9685,
    					0.978,
    					0.9849,
    					0.9899,
    					0.9934,
    					0.9957,
    					0.9973,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.2958,
    				"std.error": 0.8738,
    				statistic: 0.3385,
    				"p.value": 0.7352,
    				"conf.low": -1.4244,
    				"conf.high": 2.016,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					8.2251e-10,
    					2.1034e-9,
    					5.2569e-9,
    					1.2839e-8,
    					3.0647e-8,
    					7.1495e-8,
    					1.6301e-7,
    					3.6328e-7,
    					7.9133e-7,
    					0.0000016849,
    					0.000003507,
    					0.0000071357,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0009,
    					0.0016,
    					0.0025,
    					0.004,
    					0.0063,
    					0.0096,
    					0.0143,
    					0.0209,
    					0.0299,
    					0.042,
    					0.0577,
    					0.0777,
    					0.1025,
    					0.1327,
    					0.1685,
    					0.21,
    					0.257,
    					0.3088,
    					0.3649,
    					0.4239,
    					0.4847,
    					0.5459,
    					0.606,
    					0.6637,
    					0.7178,
    					0.7672,
    					0.8115,
    					0.8501,
    					0.8831,
    					0.9106,
    					0.9329,
    					0.9507,
    					0.9645,
    					0.9749,
    					0.9827,
    					0.9883,
    					0.9922,
    					0.995,
    					0.9968,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 195,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option2",
    		fertile: "fer_option5",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option2"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.8585,
    				"std.error": 0.4349,
    				statistic: 15.7721,
    				"p.value": 5.2889e-37,
    				"conf.low": 6.0011,
    				"conf.high": 7.716,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.7531e-16,
    					5.6599e-16,
    					1.7909e-15,
    					5.5537e-15,
    					1.688e-14,
    					5.0285e-14,
    					1.4682e-13,
    					4.2016e-13,
    					1.1785e-12,
    					3.2401e-12,
    					8.7313e-12,
    					2.3063e-11,
    					5.9712e-11,
    					1.5154e-10,
    					3.7699e-10,
    					9.1933e-10,
    					2.1977e-9,
    					5.1499e-9,
    					1.1831e-8,
    					2.6644e-8,
    					5.8826e-8,
    					1.2733e-7,
    					2.7022e-7,
    					5.6225e-7,
    					0.000001147,
    					0.0000022944,
    					0.0000045003,
    					0.0000086555,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0032,
    					0.0049,
    					0.0073,
    					0.0108,
    					0.0156,
    					0.0222,
    					0.0309,
    					0.0422,
    					0.0568,
    					0.075,
    					0.0974,
    					0.1243,
    					0.156,
    					0.1927,
    					0.2341,
    					0.2801,
    					0.3301,
    					0.3834,
    					0.4389,
    					0.4956,
    					0.5525,
    					0.6083,
    					0.6619,
    					0.7124,
    					0.7591,
    					0.8013,
    					0.8387,
    					0.8712,
    					0.8988,
    					0.9219,
    					0.9407,
    					0.9558,
    					0.9676,
    					0.9767,
    					0.9835,
    					0.9885,
    					0.9922,
    					0.9948,
    					0.9966,
    					0.9978,
    					0.9986,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.9694,
    				"std.error": 0.5397,
    				statistic: -1.7963,
    				"p.value": 0.0739,
    				"conf.low": -2.0336,
    				"conf.high": 0.0947,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.0882e-13,
    					3.2038e-13,
    					9.2372e-13,
    					2.6081e-12,
    					7.2117e-12,
    					1.9529e-11,
    					5.1789e-11,
    					1.3451e-10,
    					3.4214e-10,
    					8.5233e-10,
    					2.0796e-9,
    					4.9698e-9,
    					1.1633e-8,
    					2.667e-8,
    					5.9891e-8,
    					1.3174e-7,
    					2.8388e-7,
    					5.9921e-7,
    					0.0000012391,
    					0.00000251,
    					0.0000049816,
    					0.0000096866,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0025,
    					0.0038,
    					0.0059,
    					0.0088,
    					0.0129,
    					0.0187,
    					0.0264,
    					0.0367,
    					0.05,
    					0.067,
    					0.0881,
    					0.1138,
    					0.1445,
    					0.1802,
    					0.2211,
    					0.2668,
    					0.3168,
    					0.3705,
    					0.4267,
    					0.4846,
    					0.5427,
    					0.6,
    					0.6551,
    					0.7072,
    					0.7553,
    					0.7988,
    					0.8372,
    					0.8706,
    					0.8989,
    					0.9224,
    					0.9414,
    					0.9566,
    					0.9685,
    					0.9775,
    					0.9843,
    					0.9892,
    					0.9927,
    					0.9952,
    					0.9969,
    					0.998,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.4141,
    				"std.error": 0.7199,
    				statistic: -1.9642,
    				"p.value": 0.0509,
    				"conf.low": -2.8336,
    				"conf.high": 0.0055,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					9.5225e-16,
    					3.1274e-15,
    					1.005e-14,
    					3.1599e-14,
    					9.7216e-14,
    					2.9266e-13,
    					8.6207e-13,
    					2.4848e-12,
    					7.0085e-12,
    					1.9344e-11,
    					5.2244e-11,
    					1.3808e-10,
    					3.5715e-10,
    					9.04e-10,
    					2.2393e-9,
    					5.4287e-9,
    					1.288e-8,
    					2.991e-8,
    					6.7978e-8,
    					1.5122e-7,
    					3.2927e-7,
    					7.0178e-7,
    					0.0000014641,
    					0.0000029902,
    					0.0000059785,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.003,
    					0.0047,
    					0.0072,
    					0.0108,
    					0.0159,
    					0.0228,
    					0.0321,
    					0.0444,
    					0.0602,
    					0.0801,
    					0.1047,
    					0.1342,
    					0.169,
    					0.2092,
    					0.2544,
    					0.3044,
    					0.3582,
    					0.4151,
    					0.4738,
    					0.533,
    					0.5916,
    					0.6482,
    					0.7016,
    					0.751,
    					0.7957,
    					0.8353,
    					0.8695,
    					0.8984,
    					0.9224,
    					0.9418,
    					0.9572,
    					0.9691,
    					0.9781,
    					0.9848,
    					0.9897,
    					0.9931,
    					0.9955,
    					0.9971,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.8054,
    				"std.error": 0.9069,
    				statistic: 0.8882,
    				"p.value": 0.3755,
    				"conf.low": -0.9827,
    				"conf.high": 2.5936,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					9.3342e-11,
    					2.4249e-10,
    					6.1662e-10,
    					1.5348e-9,
    					3.7393e-9,
    					8.9178e-9,
    					2.0819e-8,
    					4.7581e-8,
    					1.0645e-7,
    					2.3316e-7,
    					4.9997e-7,
    					0.0000010496,
    					0.0000021576,
    					0.0000043423,
    					0.0000085575,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0024,
    					0.0038,
    					0.0058,
    					0.0088,
    					0.013,
    					0.0188,
    					0.0267,
    					0.0373,
    					0.051,
    					0.0685,
    					0.0903,
    					0.1168,
    					0.1485,
    					0.1854,
    					0.2276,
    					0.2746,
    					0.326,
    					0.381,
    					0.4385,
    					0.4973,
    					0.5562,
    					0.6138,
    					0.6691,
    					0.7208,
    					0.7683,
    					0.8109,
    					0.8484,
    					0.8805,
    					0.9075,
    					0.9297,
    					0.9475,
    					0.9616,
    					0.9724,
    					0.9806,
    					0.9866,
    					0.9909,
    					0.994,
    					0.9961,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 196,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.6214,
    				"std.error": 0.5728,
    				statistic: 11.5599,
    				"p.value": 1.9848e-22,
    				"conf.low": 5.4895,
    				"conf.high": 7.7533,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.8075e-9,
    					7.211e-9,
    					1.3501e-8,
    					2.4991e-8,
    					4.5733e-8,
    					8.2741e-8,
    					1.48e-7,
    					2.6172e-7,
    					4.5759e-7,
    					7.91e-7,
    					0.0000013519,
    					0.0000022845,
    					0.0000038171,
    					0.000006306,
    					0,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0011,
    					0.0016,
    					0.0022,
    					0.0031,
    					0.0043,
    					0.0058,
    					0.0079,
    					0.0106,
    					0.014,
    					0.0184,
    					0.0238,
    					0.0306,
    					0.0389,
    					0.0489,
    					0.061,
    					0.0752,
    					0.0918,
    					0.111,
    					0.1329,
    					0.1576,
    					0.1852,
    					0.2155,
    					0.2486,
    					0.2842,
    					0.322,
    					0.3618,
    					0.4032,
    					0.4457,
    					0.4888,
    					0.532,
    					0.5749,
    					0.6169,
    					0.6575,
    					0.6964,
    					0.7332,
    					0.7676,
    					0.7994,
    					0.8284,
    					0.8546,
    					0.878,
    					0.8986,
    					0.9165,
    					0.9319,
    					0.9451,
    					0.9561,
    					0.9653,
    					0.9728,
    					0.979,
    					0.9839,
    					0.9878,
    					0.9908,
    					0.9932,
    					0.995,
    					0.9964,
    					0.9974,
    					0.9981,
    					0.9987,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.947,
    				"std.error": 0.7412,
    				statistic: -1.2776,
    				"p.value": 0.2034,
    				"conf.low": -2.4116,
    				"conf.high": 0.5177,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.873e-8,
    					6.9465e-8,
    					1.2323e-7,
    					2.1624e-7,
    					3.7531e-7,
    					6.4431e-7,
    					0.0000010941,
    					0.0000018379,
    					0.0000030538,
    					0.0000050192,
    					0.0000081607,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0008,
    					0.0012,
    					0.0017,
    					0.0024,
    					0.0033,
    					0.0045,
    					0.0062,
    					0.0083,
    					0.011,
    					0.0145,
    					0.0189,
    					0.0243,
    					0.0311,
    					0.0393,
    					0.0492,
    					0.061,
    					0.0749,
    					0.0911,
    					0.1098,
    					0.1311,
    					0.155,
    					0.1817,
    					0.2111,
    					0.2431,
    					0.2776,
    					0.3143,
    					0.353,
    					0.3932,
    					0.4346,
    					0.4767,
    					0.5191,
    					0.5612,
    					0.6027,
    					0.6431,
    					0.6819,
    					0.7188,
    					0.7535,
    					0.7858,
    					0.8154,
    					0.8424,
    					0.8667,
    					0.8882,
    					0.9071,
    					0.9236,
    					0.9377,
    					0.9497,
    					0.9598,
    					0.9682,
    					0.9751,
    					0.9806,
    					0.9851,
    					0.9887,
    					0.9915,
    					0.9937,
    					0.9953,
    					0.9966,
    					0.9975,
    					0.9982,
    					0.9988,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -2.0991,
    				"std.error": 0.7563,
    				statistic: -2.7753,
    				"p.value": 0.0062,
    				"conf.low": -3.5937,
    				"conf.high": -0.6045,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.3796e-11,
    					3.5784e-11,
    					9.1012e-11,
    					2.2699e-10,
    					5.5512e-10,
    					1.3313e-9,
    					3.1311e-9,
    					7.2213e-9,
    					1.6333e-8,
    					3.623e-8,
    					7.8815e-8,
    					1.6816e-7,
    					3.5188e-7,
    					7.222e-7,
    					0.0000014539,
    					0.0000028708,
    					0.0000055606,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0023,
    					0.0035,
    					0.0053,
    					0.0079,
    					0.0116,
    					0.0166,
    					0.0234,
    					0.0324,
    					0.0441,
    					0.059,
    					0.0776,
    					0.1003,
    					0.1274,
    					0.1594,
    					0.1961,
    					0.2376,
    					0.2835,
    					0.3333,
    					0.3862,
    					0.4413,
    					0.4975,
    					0.5538,
    					0.6091,
    					0.6622,
    					0.7123,
    					0.7585,
    					0.8004,
    					0.8376,
    					0.87,
    					0.8976,
    					0.9206,
    					0.9395,
    					0.9547,
    					0.9667,
    					0.9759,
    					0.9829,
    					0.988,
    					0.9918,
    					0.9945,
    					0.9964,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.8147,
    				"std.error": 1.0126,
    				statistic: 1.7921,
    				"p.value": 0.0752,
    				"conf.low": -0.1864,
    				"conf.high": 3.8157,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.0197e-11,
    					2.5056e-11,
    					6.0516e-11,
    					1.4367e-10,
    					3.3526e-10,
    					7.6902e-10,
    					1.734e-9,
    					3.8434e-9,
    					8.3741e-9,
    					1.7936e-8,
    					3.7767e-8,
    					7.8178e-8,
    					1.5909e-7,
    					3.1829e-7,
    					6.2606e-7,
    					0.0000012107,
    					0.000002302,
    					0.0000043035,
    					0.0000079106,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.0032,
    					0.0047,
    					0.0069,
    					0.0099,
    					0.0141,
    					0.0195,
    					0.0268,
    					0.0361,
    					0.0479,
    					0.0626,
    					0.0807,
    					0.1024,
    					0.1281,
    					0.158,
    					0.1921,
    					0.2304,
    					0.2726,
    					0.3183,
    					0.367,
    					0.4179,
    					0.4702,
    					0.5231,
    					0.5755,
    					0.6266,
    					0.6756,
    					0.7218,
    					0.7644,
    					0.8032,
    					0.8379,
    					0.8683,
    					0.8945,
    					0.9167,
    					0.9353,
    					0.9504,
    					0.9626,
    					0.9722,
    					0.9796,
    					0.9853,
    					0.9896,
    					0.9927,
    					0.995,
    					0.9966,
    					0.9978,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 197,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.7274,
    				"std.error": 0.4446,
    				statistic: 12.8831,
    				"p.value": 6.0421e-26,
    				"conf.low": 4.8489,
    				"conf.high": 6.6059,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.7867e-8,
    					6.0418e-8,
    					1.2853e-7,
    					2.6831e-7,
    					5.4962e-7,
    					0.0000011048,
    					0.0000021794,
    					0.0000042193,
    					0.0000080164,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0027,
    					0.0042,
    					0.0063,
    					0.0092,
    					0.0133,
    					0.0189,
    					0.0263,
    					0.036,
    					0.0486,
    					0.0644,
    					0.0839,
    					0.1076,
    					0.1357,
    					0.1685,
    					0.206,
    					0.2481,
    					0.2943,
    					0.3442,
    					0.3969,
    					0.4516,
    					0.5072,
    					0.5627,
    					0.617,
    					0.6691,
    					0.7181,
    					0.7633,
    					0.8042,
    					0.8405,
    					0.8721,
    					0.899,
    					0.9216,
    					0.9401,
    					0.955,
    					0.9667,
    					0.9758,
    					0.9828,
    					0.9879,
    					0.9917,
    					0.9944,
    					0.9962,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.2997,
    				"std.error": 0.6019,
    				statistic: -0.4979,
    				"p.value": 0.6193,
    				"conf.low": -1.4893,
    				"conf.high": 0.8898,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					7.3006e-15,
    					2.0137e-14,
    					5.4615e-14,
    					1.4565e-13,
    					3.8195e-13,
    					9.8489e-13,
    					2.4973e-12,
    					6.2265e-12,
    					1.5266e-11,
    					3.6806e-11,
    					8.7262e-11,
    					2.0345e-10,
    					4.6646e-10,
    					1.0517e-9,
    					2.3321e-9,
    					5.0853e-9,
    					1.0906e-8,
    					2.3001e-8,
    					4.7711e-8,
    					9.7334e-8,
    					1.953e-7,
    					3.8542e-7,
    					7.4813e-7,
    					0.0000014284,
    					0.0000026825,
    					0.0000049554,
    					0.0000090049,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0022,
    					0.0033,
    					0.0048,
    					0.007,
    					0.01,
    					0.0141,
    					0.0195,
    					0.0266,
    					0.0358,
    					0.0474,
    					0.0618,
    					0.0794,
    					0.1006,
    					0.1256,
    					0.1547,
    					0.1879,
    					0.2252,
    					0.2664,
    					0.3111,
    					0.3587,
    					0.4086,
    					0.4601,
    					0.5122,
    					0.5642,
    					0.615,
    					0.6639,
    					0.7103,
    					0.7533,
    					0.7927,
    					0.8281,
    					0.8594,
    					0.8866,
    					0.9098,
    					0.9293,
    					0.9453,
    					0.9584,
    					0.9688,
    					0.9769,
    					0.9832,
    					0.9879,
    					0.9915,
    					0.9941,
    					0.996,
    					0.9973,
    					0.9982,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.1707,
    				"std.error": 0.8641,
    				statistic: -1.3549,
    				"p.value": 0.1775,
    				"conf.low": -2.8783,
    				"conf.high": 0.5368,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.5472e-12,
    					6.0496e-12,
    					1.4153e-11,
    					3.2616e-11,
    					7.4043e-11,
    					1.6558e-10,
    					3.6478e-10,
    					7.9165e-10,
    					1.6925e-9,
    					3.5646e-9,
    					7.3962e-9,
    					1.5119e-8,
    					3.0446e-8,
    					6.0405e-8,
    					1.1807e-7,
    					2.2739e-7,
    					4.3145e-7,
    					8.0658e-7,
    					0.0000014857,
    					0.0000026965,
    					0.0000048223,
    					0.0000084978,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0024,
    					0.0036,
    					0.0051,
    					0.0073,
    					0.0102,
    					0.0141,
    					0.0192,
    					0.0258,
    					0.0341,
    					0.0446,
    					0.0576,
    					0.0733,
    					0.0922,
    					0.1144,
    					0.1401,
    					0.1696,
    					0.2027,
    					0.2394,
    					0.2795,
    					0.3226,
    					0.3683,
    					0.4159,
    					0.4647,
    					0.5141,
    					0.5632,
    					0.6114,
    					0.658,
    					0.7022,
    					0.7437,
    					0.7819,
    					0.8166,
    					0.8477,
    					0.875,
    					0.8987,
    					0.919,
    					0.936,
    					0.9501,
    					0.9616,
    					0.9709,
    					0.9782,
    					0.9839,
    					0.9883,
    					0.9916,
    					0.994,
    					0.9958,
    					0.9971,
    					0.998,
    					0.9987,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.5485,
    				"std.error": 1.1503,
    				statistic: 1.3462,
    				"p.value": 0.1803,
    				"conf.low": -0.7246,
    				"conf.high": 3.8215,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					7.1562e-9,
    					1.4048e-8,
    					2.7214e-8,
    					5.2028e-8,
    					9.8158e-8,
    					1.8276e-7,
    					3.3583e-7,
    					6.0902e-7,
    					0.00000109,
    					0.0000019255,
    					0.0000033569,
    					0.0000057764,
    					0.0000098106,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0014,
    					0.0021,
    					0.003,
    					0.0042,
    					0.0059,
    					0.0082,
    					0.0112,
    					0.0151,
    					0.0201,
    					0.0265,
    					0.0345,
    					0.0444,
    					0.0565,
    					0.071,
    					0.0883,
    					0.1084,
    					0.1318,
    					0.1583,
    					0.1882,
    					0.2212,
    					0.2574,
    					0.2965,
    					0.338,
    					0.3816,
    					0.4268,
    					0.473,
    					0.5195,
    					0.5658,
    					0.6111,
    					0.6551,
    					0.697,
    					0.7364,
    					0.7731,
    					0.8067,
    					0.8371,
    					0.8642,
    					0.888,
    					0.9087,
    					0.9264,
    					0.9413,
    					0.9538,
    					0.964,
    					0.9723,
    					0.979,
    					0.9842,
    					0.9883,
    					0.9914,
    					0.9938,
    					0.9956,
    					0.9969,
    					0.9978,
    					0.9985,
    					0.999,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 198,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option1",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option1"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.6214,
    				"std.error": 0.5661,
    				statistic: 11.6974,
    				"p.value": 5.0129e-21,
    				"conf.low": 5.4996,
    				"conf.high": 7.7432,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.5258e-9,
    					4.8553e-9,
    					9.2242e-9,
    					1.732e-8,
    					3.2144e-8,
    					5.896e-8,
    					1.0689e-7,
    					1.9153e-7,
    					3.3923e-7,
    					5.9386e-7,
    					0.0000010276,
    					0.0000017576,
    					0.0000029714,
    					0.0000049658,
    					0.0000082032,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.001,
    					0.0014,
    					0.002,
    					0.0028,
    					0.0039,
    					0.0053,
    					0.0073,
    					0.0098,
    					0.0131,
    					0.0173,
    					0.0225,
    					0.0291,
    					0.0372,
    					0.047,
    					0.0588,
    					0.0728,
    					0.0892,
    					0.1083,
    					0.1301,
    					0.1547,
    					0.1823,
    					0.2128,
    					0.246,
    					0.2819,
    					0.3201,
    					0.3603,
    					0.4021,
    					0.445,
    					0.4886,
    					0.5324,
    					0.5757,
    					0.6182,
    					0.6593,
    					0.6986,
    					0.7357,
    					0.7703,
    					0.8022,
    					0.8313,
    					0.8575,
    					0.8808,
    					0.9012,
    					0.919,
    					0.9342,
    					0.9471,
    					0.958,
    					0.9669,
    					0.9742,
    					0.9801,
    					0.9849,
    					0.9886,
    					0.9915,
    					0.9937,
    					0.9954,
    					0.9967,
    					0.9976,
    					0.9983,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.947,
    				"std.error": 0.7325,
    				statistic: -1.2928,
    				"p.value": 0.1988,
    				"conf.low": -2.3985,
    				"conf.high": 0.5046,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.7117e-8,
    					4.9299e-8,
    					8.8628e-8,
    					1.5755e-7,
    					2.7696e-7,
    					4.8145e-7,
    					8.2761e-7,
    					0.0000014069,
    					0.0000023651,
    					0.0000039318,
    					0.0000064643,
    					0,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0011,
    					0.0015,
    					0.0021,
    					0.003,
    					0.0041,
    					0.0057,
    					0.0076,
    					0.0102,
    					0.0135,
    					0.0177,
    					0.023,
    					0.0295,
    					0.0375,
    					0.0472,
    					0.0588,
    					0.0725,
    					0.0885,
    					0.1071,
    					0.1282,
    					0.1522,
    					0.1789,
    					0.2084,
    					0.2406,
    					0.2753,
    					0.3123,
    					0.3513,
    					0.3919,
    					0.4338,
    					0.4764,
    					0.5193,
    					0.562,
    					0.6039,
    					0.6447,
    					0.6839,
    					0.7211,
    					0.7561,
    					0.7885,
    					0.8183,
    					0.8453,
    					0.8695,
    					0.8909,
    					0.9097,
    					0.926,
    					0.9399,
    					0.9517,
    					0.9616,
    					0.9697,
    					0.9764,
    					0.9818,
    					0.9861,
    					0.9895,
    					0.9921,
    					0.9942,
    					0.9957,
    					0.9969,
    					0.9978,
    					0.9984,
    					0.9989,
    					0.9992,
    					0.9995,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -2.0647,
    				"std.error": 0.9147,
    				statistic: -2.2573,
    				"p.value": 0.026,
    				"conf.low": -3.8774,
    				"conf.high": -0.252,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.481e-8,
    					2.8714e-8,
    					5.4936e-8,
    					1.0372e-7,
    					1.9323e-7,
    					3.5527e-7,
    					6.4457e-7,
    					0.0000011541,
    					0.0000020393,
    					0.0000035562,
    					0.0000061205,
    					0,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.001,
    					0.0015,
    					0.0022,
    					0.0031,
    					0.0044,
    					0.0062,
    					0.0086,
    					0.0117,
    					0.0158,
    					0.0211,
    					0.0277,
    					0.0361,
    					0.0464,
    					0.0589,
    					0.0739,
    					0.0917,
    					0.1125,
    					0.1365,
    					0.1638,
    					0.1943,
    					0.2282,
    					0.265,
    					0.3047,
    					0.3469,
    					0.391,
    					0.4365,
    					0.483,
    					0.5296,
    					0.5759,
    					0.6211,
    					0.6648,
    					0.7063,
    					0.7452,
    					0.7813,
    					0.8142,
    					0.8439,
    					0.8703,
    					0.8934,
    					0.9134,
    					0.9304,
    					0.9447,
    					0.9566,
    					0.9664,
    					0.9742,
    					0.9805,
    					0.9854,
    					0.9892,
    					0.9921,
    					0.9943,
    					0.996,
    					0.9972,
    					0.998,
    					0.9987,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.1957,
    				"std.error": 1.2,
    				statistic: 1.8298,
    				"p.value": 0.07,
    				"conf.low": -0.1823,
    				"conf.high": 4.5738,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.1567e-9,
    					2.2833e-9,
    					4.4524e-9,
    					8.5768e-9,
    					1.6322e-8,
    					3.0685e-8,
    					5.6991e-8,
    					1.0457e-7,
    					1.8956e-7,
    					3.3949e-7,
    					6.0068e-7,
    					0.0000010501,
    					0.0000018136,
    					0.0000030948,
    					0.000005218,
    					0.0000086928,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0011,
    					0.0016,
    					0.0022,
    					0.0032,
    					0.0044,
    					0.0061,
    					0.0083,
    					0.0112,
    					0.015,
    					0.0198,
    					0.0258,
    					0.0333,
    					0.0424,
    					0.0536,
    					0.0669,
    					0.0827,
    					0.1011,
    					0.1223,
    					0.1464,
    					0.1736,
    					0.2038,
    					0.2369,
    					0.2728,
    					0.3112,
    					0.3517,
    					0.3941,
    					0.4377,
    					0.482,
    					0.5267,
    					0.5709,
    					0.6143,
    					0.6563,
    					0.6965,
    					0.7344,
    					0.7698,
    					0.8023,
    					0.8319,
    					0.8585,
    					0.8821,
    					0.9028,
    					0.9206,
    					0.9359,
    					0.9488,
    					0.9595,
    					0.9683,
    					0.9755,
    					0.9813,
    					0.9858,
    					0.9894,
    					0.9922,
    					0.9943,
    					0.9959,
    					0.997,
    					0.9979,
    					0.9985,
    					0.999,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 199,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5797,
    				"std.error": 0.495,
    				statistic: 13.2925,
    				"p.value": 4.198e-28,
    				"conf.low": 5.6026,
    				"conf.high": 7.5569,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.0489e-11,
    					4.7409e-11,
    					1.0802e-10,
    					2.4237e-10,
    					5.3548e-10,
    					1.165e-9,
    					2.496e-9,
    					5.2661e-9,
    					1.0941e-8,
    					2.2387e-8,
    					4.5109e-8,
    					8.9516e-8,
    					1.7494e-7,
    					3.3673e-7,
    					6.3832e-7,
    					0.0000011918,
    					0.0000021916,
    					0.0000039694,
    					0.0000070816,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.001,
    					0.0015,
    					0.0023,
    					0.0034,
    					0.0049,
    					0.007,
    					0.0098,
    					0.0136,
    					0.0187,
    					0.0252,
    					0.0335,
    					0.044,
    					0.057,
    					0.0729,
    					0.0919,
    					0.1144,
    					0.1405,
    					0.1704,
    					0.2041,
    					0.2415,
    					0.2823,
    					0.3262,
    					0.3726,
    					0.4209,
    					0.4705,
    					0.5206,
    					0.5703,
    					0.6189,
    					0.6657,
    					0.7101,
    					0.7515,
    					0.7895,
    					0.8238,
    					0.8544,
    					0.8812,
    					0.9043,
    					0.924,
    					0.9403,
    					0.9538,
    					0.9648,
    					0.9735,
    					0.9803,
    					0.9856,
    					0.9896,
    					0.9926,
    					0.9948,
    					0.9964,
    					0.9975,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.9756,
    				"std.error": 0.6626,
    				statistic: -1.4724,
    				"p.value": 0.1428,
    				"conf.low": -2.2835,
    				"conf.high": 0.3323,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.2061e-9,
    					2.4818e-9,
    					5.0368e-9,
    					1.0082e-8,
    					1.9906e-8,
    					3.8765e-8,
    					7.4463e-8,
    					1.4109e-7,
    					2.6368e-7,
    					4.8611e-7,
    					8.8401e-7,
    					0.0000015858,
    					0.0000028063,
    					0.0000048992,
    					0.0000084374,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.002,
    					0.0029,
    					0.0042,
    					0.0059,
    					0.0082,
    					0.0113,
    					0.0153,
    					0.0205,
    					0.0271,
    					0.0355,
    					0.0458,
    					0.0584,
    					0.0737,
    					0.0917,
    					0.1129,
    					0.1373,
    					0.1652,
    					0.1964,
    					0.231,
    					0.2687,
    					0.3093,
    					0.3524,
    					0.3974,
    					0.4439,
    					0.4911,
    					0.5385,
    					0.5853,
    					0.631,
    					0.6749,
    					0.7164,
    					0.7553,
    					0.791,
    					0.8235,
    					0.8526,
    					0.8783,
    					0.9007,
    					0.9199,
    					0.9362,
    					0.9497,
    					0.9609,
    					0.97,
    					0.9772,
    					0.9829,
    					0.9874,
    					0.9908,
    					0.9933,
    					0.9953,
    					0.9967,
    					0.9977,
    					0.9984,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -2.0424,
    				"std.error": 0.6871,
    				statistic: -2.9725,
    				"p.value": 0.0034,
    				"conf.low": -3.3988,
    				"conf.high": -0.6861,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.2071e-14,
    					1.9865e-13,
    					6.2078e-13,
    					1.8942e-12,
    					5.6437e-12,
    					1.642e-11,
    					4.6648e-11,
    					1.2941e-10,
    					3.506e-10,
    					9.2758e-10,
    					2.3966e-9,
    					6.0472e-9,
    					1.4902e-8,
    					3.5867e-8,
    					8.4315e-8,
    					1.9359e-7,
    					4.3417e-7,
    					9.5114e-7,
    					0.0000020355,
    					0.0000042553,
    					0.000008691,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0019,
    					0.0031,
    					0.0049,
    					0.0076,
    					0.0116,
    					0.0172,
    					0.0251,
    					0.0357,
    					0.0497,
    					0.0679,
    					0.0908,
    					0.119,
    					0.1529,
    					0.1926,
    					0.2381,
    					0.2889,
    					0.3442,
    					0.4032,
    					0.4644,
    					0.5265,
    					0.588,
    					0.6473,
    					0.7033,
    					0.7548,
    					0.8011,
    					0.8417,
    					0.8764,
    					0.9054,
    					0.9291,
    					0.9479,
    					0.9625,
    					0.9736,
    					0.9818,
    					0.9877,
    					0.9919,
    					0.9948,
    					0.9967,
    					0.998,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.9061,
    				"std.error": 0.9296,
    				statistic: 2.0504,
    				"p.value": 0.0419,
    				"conf.low": 0.071,
    				"conf.high": 3.7412,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					6.8102e-14,
    					1.9998e-13,
    					5.753e-13,
    					1.6215e-12,
    					4.4776e-12,
    					1.2114e-11,
    					3.2112e-11,
    					8.3401e-11,
    					2.1223e-10,
    					5.2918e-10,
    					1.2929e-9,
    					3.095e-9,
    					7.2601e-9,
    					1.6688e-8,
    					3.7589e-8,
    					8.2972e-8,
    					1.7948e-7,
    					3.8048e-7,
    					7.9049e-7,
    					0.0000016096,
    					0.0000032123,
    					0.0000062836,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0027,
    					0.0042,
    					0.0064,
    					0.0095,
    					0.0139,
    					0.0198,
    					0.0279,
    					0.0385,
    					0.0522,
    					0.0695,
    					0.0909,
    					0.1169,
    					0.1477,
    					0.1836,
    					0.2244,
    					0.2699,
    					0.3197,
    					0.3729,
    					0.4287,
    					0.4859,
    					0.5434,
    					0.6,
    					0.6546,
    					0.7062,
    					0.7538,
    					0.797,
    					0.8353,
    					0.8686,
    					0.8969,
    					0.9205,
    					0.9398,
    					0.9552,
    					0.9673,
    					0.9765,
    					0.9834,
    					0.9885,
    					0.9922,
    					0.9948,
    					0.9966,
    					0.9978,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 200,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.8369,
    				"std.error": 0.4045,
    				statistic: 14.4288,
    				"p.value": 2.4915e-31,
    				"conf.low": 5.0384,
    				"conf.high": 6.6355,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.1834e-10,
    					5.7615e-10,
    					1.4857e-9,
    					3.7441e-9,
    					9.221e-9,
    					2.2194e-8,
    					5.2209e-8,
    					1.2004e-7,
    					2.6974e-7,
    					5.9248e-7,
    					0.0000012721,
    					0.0000026698,
    					0.0000054776,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0003,
    					0.0004,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0034,
    					0.0053,
    					0.0082,
    					0.0123,
    					0.0181,
    					0.0262,
    					0.037,
    					0.0512,
    					0.0695,
    					0.0924,
    					0.1205,
    					0.1542,
    					0.1935,
    					0.2384,
    					0.2884,
    					0.343,
    					0.401,
    					0.4613,
    					0.5225,
    					0.5831,
    					0.6419,
    					0.6974,
    					0.7488,
    					0.7951,
    					0.8359,
    					0.871,
    					0.9006,
    					0.9249,
    					0.9443,
    					0.9596,
    					0.9712,
    					0.98,
    					0.9863,
    					0.9909,
    					0.994,
    					0.9962,
    					0.9976,
    					0.9985,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3514,
    				"std.error": 0.5492,
    				statistic: -0.6398,
    				"p.value": 0.5231,
    				"conf.low": -1.4354,
    				"conf.high": 0.7327,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.837e-17,
    					1.277e-16,
    					4.165e-16,
    					1.3311e-15,
    					4.1686e-15,
    					1.2793e-14,
    					3.8473e-14,
    					1.1338e-13,
    					3.2746e-13,
    					9.2679e-13,
    					2.5706e-12,
    					6.9873e-12,
    					1.8613e-11,
    					4.8594e-11,
    					1.2433e-10,
    					3.1179e-10,
    					7.6629e-10,
    					1.8459e-9,
    					4.358e-9,
    					1.0085e-8,
    					2.2875e-8,
    					5.0858e-8,
    					1.1084e-7,
    					2.3679e-7,
    					4.9588e-7,
    					0.000001018,
    					0.0000020489,
    					0.0000040428,
    					0.0000078209,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.002,
    					0.0031,
    					0.0047,
    					0.0071,
    					0.0104,
    					0.0151,
    					0.0215,
    					0.03,
    					0.0412,
    					0.0555,
    					0.0735,
    					0.0956,
    					0.1223,
    					0.1539,
    					0.1904,
    					0.2317,
    					0.2777,
    					0.3277,
    					0.381,
    					0.4367,
    					0.4937,
    					0.5508,
    					0.6068,
    					0.6608,
    					0.7116,
    					0.7585,
    					0.8009,
    					0.8385,
    					0.8711,
    					0.8989,
    					0.922,
    					0.9409,
    					0.956,
    					0.9678,
    					0.9768,
    					0.9837,
    					0.9887,
    					0.9923,
    					0.9949,
    					0.9966,
    					0.9978,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.2529,
    				"std.error": 0.804,
    				statistic: -1.5584,
    				"p.value": 0.121,
    				"conf.low": -2.8401,
    				"conf.high": 0.3342,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.2722e-13,
    					3.4002e-13,
    					8.9308e-13,
    					2.3053e-12,
    					5.8478e-12,
    					1.4578e-11,
    					3.5718e-11,
    					8.6004e-11,
    					2.0352e-10,
    					4.7335e-10,
    					1.082e-9,
    					2.4309e-9,
    					5.3678e-9,
    					1.165e-8,
    					2.4852e-8,
    					5.2109e-8,
    					1.074e-7,
    					2.1758e-7,
    					4.3329e-7,
    					8.482e-7,
    					0.0000016323,
    					0.000003088,
    					0.0000057431,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0017,
    					0.0026,
    					0.004,
    					0.0058,
    					0.0084,
    					0.012,
    					0.0169,
    					0.0233,
    					0.0316,
    					0.0424,
    					0.0558,
    					0.0725,
    					0.0927,
    					0.1168,
    					0.145,
    					0.1775,
    					0.2142,
    					0.255,
    					0.2996,
    					0.3474,
    					0.3977,
    					0.4498,
    					0.5028,
    					0.5557,
    					0.6077,
    					0.6578,
    					0.7053,
    					0.7495,
    					0.7899,
    					0.8262,
    					0.8582,
    					0.886,
    					0.9096,
    					0.9295,
    					0.9457,
    					0.9589,
    					0.9693,
    					0.9775,
    					0.9837,
    					0.9884,
    					0.9919,
    					0.9944,
    					0.9962,
    					0.9975,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.4474,
    				"std.error": 1.0819,
    				statistic: 1.3378,
    				"p.value": 0.1828,
    				"conf.low": -0.6884,
    				"conf.high": 3.5831,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.4759e-9,
    					3.1203e-9,
    					6.4984e-9,
    					1.3333e-8,
    					2.6948e-8,
    					5.3658e-8,
    					1.0526e-7,
    					2.0342e-7,
    					3.8731e-7,
    					7.2656e-7,
    					0.0000013428,
    					0.0000024453,
    					0.0000043874,
    					0.0000077565,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.001,
    					0.0016,
    					0.0023,
    					0.0034,
    					0.0049,
    					0.0069,
    					0.0097,
    					0.0135,
    					0.0184,
    					0.0248,
    					0.0329,
    					0.0431,
    					0.0557,
    					0.0711,
    					0.0896,
    					0.1113,
    					0.1367,
    					0.1657,
    					0.1985,
    					0.2348,
    					0.2746,
    					0.3174,
    					0.3628,
    					0.4103,
    					0.4591,
    					0.5085,
    					0.5578,
    					0.6062,
    					0.6531,
    					0.6977,
    					0.7395,
    					0.7781,
    					0.8132,
    					0.8447,
    					0.8724,
    					0.8965,
    					0.9172,
    					0.9345,
    					0.9489,
    					0.9607,
    					0.9701,
    					0.9776,
    					0.9834,
    					0.9879,
    					0.9913,
    					0.9938,
    					0.9957,
    					0.997,
    					0.998,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 201,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option2",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option2"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5797,
    				"std.error": 0.4916,
    				statistic: 13.3831,
    				"p.value": 5.0318e-26,
    				"conf.low": 5.6069,
    				"conf.high": 7.5526,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.5111e-11,
    					3.5362e-11,
    					8.1465e-11,
    					1.8476e-10,
    					4.1256e-10,
    					9.0694e-10,
    					1.9629e-9,
    					4.1828e-9,
    					8.7755e-9,
    					1.8127e-8,
    					3.6867e-8,
    					7.3828e-8,
    					1.4557e-7,
    					2.8262e-7,
    					5.403e-7,
    					0.0000010171,
    					0.0000018854,
    					0.0000034417,
    					0.0000061868,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0022,
    					0.0032,
    					0.0046,
    					0.0067,
    					0.0094,
    					0.0131,
    					0.018,
    					0.0244,
    					0.0326,
    					0.043,
    					0.0558,
    					0.0715,
    					0.0904,
    					0.1128,
    					0.1389,
    					0.1688,
    					0.2025,
    					0.24,
    					0.281,
    					0.3251,
    					0.3718,
    					0.4204,
    					0.4703,
    					0.5207,
    					0.5707,
    					0.6197,
    					0.6668,
    					0.7114,
    					0.7529,
    					0.7911,
    					0.8255,
    					0.8561,
    					0.8828,
    					0.9058,
    					0.9253,
    					0.9416,
    					0.9549,
    					0.9657,
    					0.9743,
    					0.9809,
    					0.9861,
    					0.99,
    					0.9929,
    					0.995,
    					0.9966,
    					0.9977,
    					0.9985,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.9756,
    				"std.error": 0.6581,
    				statistic: -1.4824,
    				"p.value": 0.1407,
    				"conf.low": -2.2778,
    				"conf.high": 0.3267,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					9.394e-10,
    					1.9516e-9,
    					3.9983e-9,
    					8.0777e-9,
    					1.6093e-8,
    					3.1619e-8,
    					6.1263e-8,
    					1.1706e-7,
    					2.206e-7,
    					4.0999e-7,
    					7.5148e-7,
    					0.0000013585,
    					0.0000024222,
    					0.0000042595,
    					0.0000073881,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.0019,
    					0.0028,
    					0.004,
    					0.0056,
    					0.0078,
    					0.0108,
    					0.0147,
    					0.0198,
    					0.0263,
    					0.0345,
    					0.0447,
    					0.0572,
    					0.0723,
    					0.0902,
    					0.1113,
    					0.1357,
    					0.1635,
    					0.1948,
    					0.2294,
    					0.2673,
    					0.3081,
    					0.3514,
    					0.3967,
    					0.4435,
    					0.4911,
    					0.5388,
    					0.5859,
    					0.6318,
    					0.676,
    					0.7177,
    					0.7567,
    					0.7926,
    					0.8252,
    					0.8543,
    					0.8799,
    					0.9022,
    					0.9213,
    					0.9375,
    					0.9509,
    					0.9619,
    					0.9708,
    					0.9779,
    					0.9835,
    					0.9878,
    					0.9911,
    					0.9936,
    					0.9955,
    					0.9968,
    					0.9978,
    					0.9985,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.9957,
    				"std.error": 0.8372,
    				statistic: -2.3837,
    				"p.value": 0.0186,
    				"conf.low": -3.6525,
    				"conf.high": -0.339,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.1561e-10,
    					9.2202e-10,
    					2.0131e-9,
    					4.3259e-9,
    					9.1487e-9,
    					1.9043e-8,
    					3.9013e-8,
    					7.8665e-8,
    					1.5612e-7,
    					3.0499e-7,
    					5.8645e-7,
    					0.00000111,
    					0.000002068,
    					0.0000037928,
    					0.0000068477,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0016,
    					0.0024,
    					0.0036,
    					0.0053,
    					0.0075,
    					0.0106,
    					0.0148,
    					0.0203,
    					0.0275,
    					0.0366,
    					0.0481,
    					0.0623,
    					0.0796,
    					0.1003,
    					0.1247,
    					0.1529,
    					0.1851,
    					0.2211,
    					0.2609,
    					0.3041,
    					0.3502,
    					0.3986,
    					0.4487,
    					0.4995,
    					0.5504,
    					0.6005,
    					0.6489,
    					0.6951,
    					0.7383,
    					0.7782,
    					0.8143,
    					0.8466,
    					0.8749,
    					0.8993,
    					0.92,
    					0.9374,
    					0.9517,
    					0.9632,
    					0.9724,
    					0.9796,
    					0.9851,
    					0.9893,
    					0.9924,
    					0.9947,
    					0.9964,
    					0.9975,
    					0.9984,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.0716,
    				"std.error": 1.1224,
    				statistic: 1.8457,
    				"p.value": 0.0673,
    				"conf.low": -0.1494,
    				"conf.high": 4.2926,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.7316e-10,
    					3.7097e-10,
    					7.8369e-10,
    					1.6327e-9,
    					3.3541e-9,
    					6.7954e-9,
    					1.3577e-8,
    					2.6751e-8,
    					5.1982e-8,
    					9.9615e-8,
    					1.8827e-7,
    					3.5093e-7,
    					6.4514e-7,
    					0.0000011697,
    					0.0000020919,
    					0.0000036898,
    					0.0000064194,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0017,
    					0.0025,
    					0.0036,
    					0.0051,
    					0.0072,
    					0.0099,
    					0.0136,
    					0.0183,
    					0.0244,
    					0.0321,
    					0.0417,
    					0.0535,
    					0.0678,
    					0.0849,
    					0.1051,
    					0.1285,
    					0.1553,
    					0.1856,
    					0.2192,
    					0.2562,
    					0.2961,
    					0.3387,
    					0.3835,
    					0.4299,
    					0.4772,
    					0.5249,
    					0.5722,
    					0.6186,
    					0.6632,
    					0.7057,
    					0.7455,
    					0.7823,
    					0.8159,
    					0.846,
    					0.8726,
    					0.8959,
    					0.9159,
    					0.9329,
    					0.9471,
    					0.9588,
    					0.9683,
    					0.9759,
    					0.9819,
    					0.9866,
    					0.9902,
    					0.9929,
    					0.995,
    					0.9965,
    					0.9975,
    					0.9983,
    					0.9989,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 202,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5375,
    				"std.error": 0.5118,
    				statistic: 12.7743,
    				"p.value": 1.3135e-25,
    				"conf.low": 5.5261,
    				"conf.high": 7.5489,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.4729e-10,
    					3.2009e-10,
    					6.8566e-10,
    					1.4478e-9,
    					3.0133e-9,
    					6.1823e-9,
    					1.2503e-8,
    					2.4927e-8,
    					4.8989e-8,
    					9.4911e-8,
    					1.8127e-7,
    					3.4131e-7,
    					6.3354e-7,
    					0.0000011594,
    					0.0000020917,
    					0.0000037206,
    					0.000006525,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0019,
    					0.0027,
    					0.0039,
    					0.0056,
    					0.0078,
    					0.0109,
    					0.0148,
    					0.02,
    					0.0267,
    					0.0352,
    					0.0457,
    					0.0585,
    					0.0741,
    					0.0927,
    					0.1145,
    					0.1397,
    					0.1685,
    					0.2008,
    					0.2366,
    					0.2756,
    					0.3175,
    					0.362,
    					0.4083,
    					0.456,
    					0.5044,
    					0.5527,
    					0.6002,
    					0.6462,
    					0.6903,
    					0.7317,
    					0.7702,
    					0.8053,
    					0.837,
    					0.8651,
    					0.8897,
    					0.9109,
    					0.9289,
    					0.944,
    					0.9564,
    					0.9665,
    					0.9746,
    					0.981,
    					0.986,
    					0.9898,
    					0.9926,
    					0.9948,
    					0.9963,
    					0.9975,
    					0.9983,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.8007,
    				"std.error": 0.7142,
    				statistic: -1.1211,
    				"p.value": 0.2641,
    				"conf.low": -2.212,
    				"conf.high": 0.6107,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.7117e-9,
    					7.109e-9,
    					1.3455e-8,
    					2.5168e-8,
    					4.6521e-8,
    					8.4983e-8,
    					1.5342e-7,
    					2.7373e-7,
    					4.8268e-7,
    					8.4115e-7,
    					0.0000014488,
    					0.0000024662,
    					0.0000041493,
    					0.0000068999,
    					0,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.0018,
    					0.0025,
    					0.0035,
    					0.0049,
    					0.0067,
    					0.0091,
    					0.0122,
    					0.0161,
    					0.0212,
    					0.0274,
    					0.0352,
    					0.0446,
    					0.056,
    					0.0696,
    					0.0856,
    					0.1041,
    					0.1255,
    					0.1497,
    					0.1769,
    					0.2069,
    					0.2398,
    					0.2754,
    					0.3134,
    					0.3535,
    					0.3953,
    					0.4383,
    					0.4821,
    					0.5261,
    					0.5697,
    					0.6126,
    					0.6541,
    					0.6938,
    					0.7314,
    					0.7665,
    					0.7989,
    					0.8284,
    					0.855,
    					0.8787,
    					0.8995,
    					0.9176,
    					0.9331,
    					0.9463,
    					0.9573,
    					0.9664,
    					0.9738,
    					0.9799,
    					0.9847,
    					0.9884,
    					0.9914,
    					0.9937,
    					0.9954,
    					0.9967,
    					0.9976,
    					0.9983,
    					0.9988,
    					0.9992,
    					0.9995,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.4721,
    				"std.error": 0.7013,
    				statistic: -2.099,
    				"p.value": 0.0375,
    				"conf.low": -2.8581,
    				"conf.high": -0.0861,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.3751e-16,
    					1.1657e-15,
    					3.9348e-15,
    					1.298e-14,
    					4.1849e-14,
    					1.3187e-13,
    					4.061e-13,
    					1.2223e-12,
    					3.596e-12,
    					1.034e-11,
    					2.906e-11,
    					7.9828e-11,
    					2.1435e-10,
    					5.6259e-10,
    					1.4434e-9,
    					3.6199e-9,
    					8.8746e-9,
    					2.1269e-8,
    					4.9834e-8,
    					1.1415e-7,
    					2.5563e-7,
    					5.5971e-7,
    					0.0000011982,
    					0.0000025082,
    					0.0000051339,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0031,
    					0.0049,
    					0.0076,
    					0.0115,
    					0.0169,
    					0.0245,
    					0.0346,
    					0.0481,
    					0.0654,
    					0.0871,
    					0.1139,
    					0.1461,
    					0.1839,
    					0.2272,
    					0.2758,
    					0.329,
    					0.3859,
    					0.4454,
    					0.5061,
    					0.5667,
    					0.6257,
    					0.682,
    					0.7343,
    					0.7819,
    					0.8241,
    					0.8608,
    					0.8919,
    					0.9176,
    					0.9384,
    					0.9549,
    					0.9676,
    					0.9772,
    					0.9843,
    					0.9894,
    					0.993,
    					0.9955,
    					0.9971,
    					0.9982,
    					0.9989,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.8925,
    				"std.error": 1.001,
    				statistic: 0.8917,
    				"p.value": 0.374,
    				"conf.low": -1.0856,
    				"conf.high": 2.8706,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.3153e-9,
    					5.1468e-9,
    					1.1242e-8,
    					2.4131e-8,
    					5.0899e-8,
    					1.055e-7,
    					2.149e-7,
    					4.3019e-7,
    					8.463e-7,
    					0.0000016363,
    					0.0000031093,
    					0.0000058072,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0012,
    					0.0018,
    					0.0028,
    					0.0041,
    					0.0061,
    					0.0088,
    					0.0126,
    					0.0177,
    					0.0244,
    					0.0331,
    					0.0443,
    					0.0584,
    					0.0758,
    					0.0968,
    					0.1218,
    					0.1511,
    					0.1846,
    					0.2225,
    					0.2645,
    					0.3101,
    					0.3589,
    					0.4101,
    					0.4629,
    					0.5163,
    					0.5695,
    					0.6214,
    					0.6712,
    					0.7182,
    					0.7616,
    					0.8011,
    					0.8364,
    					0.8673,
    					0.894,
    					0.9165,
    					0.9353,
    					0.9506,
    					0.9628,
    					0.9725,
    					0.9799,
    					0.9856,
    					0.9899,
    					0.993,
    					0.9952,
    					0.9968,
    					0.9979,
    					0.9986,
    					0.9991,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 203,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.91,
    				"std.error": 0.4057,
    				statistic: 14.5682,
    				"p.value": 2.5555e-30,
    				"conf.low": 5.1083,
    				"conf.high": 6.7117,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					7.6268e-11,
    					2.0566e-10,
    					5.4198e-10,
    					1.396e-9,
    					3.5142e-9,
    					8.6469e-9,
    					2.0796e-8,
    					4.8888e-8,
    					1.1234e-7,
    					2.5234e-7,
    					5.5411e-7,
    					0.0000011895,
    					0.0000024964,
    					0.0000051222,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.002,
    					0.0032,
    					0.005,
    					0.0077,
    					0.0117,
    					0.0172,
    					0.0249,
    					0.0353,
    					0.0489,
    					0.0665,
    					0.0887,
    					0.1159,
    					0.1485,
    					0.1868,
    					0.2307,
    					0.2798,
    					0.3335,
    					0.3909,
    					0.4507,
    					0.5117,
    					0.5724,
    					0.6314,
    					0.6875,
    					0.7395,
    					0.7867,
    					0.8285,
    					0.8646,
    					0.8951,
    					0.9204,
    					0.9407,
    					0.9567,
    					0.969,
    					0.9783,
    					0.9851,
    					0.99,
    					0.9934,
    					0.9958,
    					0.9973,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.4935,
    				"std.error": 0.5927,
    				statistic: -0.8326,
    				"p.value": 0.4064,
    				"conf.low": -1.6648,
    				"conf.high": 0.6779,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.6043e-14,
    					9.8291e-14,
    					2.6343e-13,
    					6.9386e-13,
    					1.7962e-12,
    					4.5698e-12,
    					1.1427e-11,
    					2.8081e-11,
    					6.7826e-11,
    					1.6102e-10,
    					3.757e-10,
    					8.6163e-10,
    					1.9423e-9,
    					4.3034e-9,
    					9.3723e-9,
    					2.0064e-8,
    					4.2219e-8,
    					8.7331e-8,
    					1.7758e-7,
    					3.5496e-7,
    					6.975e-7,
    					0.0000013474,
    					0.0000025591,
    					0.0000047783,
    					0.0000087719,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0023,
    					0.0035,
    					0.0051,
    					0.0075,
    					0.0107,
    					0.0151,
    					0.021,
    					0.0286,
    					0.0385,
    					0.0509,
    					0.0664,
    					0.0854,
    					0.108,
    					0.1348,
    					0.1657,
    					0.2009,
    					0.2403,
    					0.2835,
    					0.3301,
    					0.3796,
    					0.4311,
    					0.4837,
    					0.5367,
    					0.589,
    					0.6398,
    					0.6882,
    					0.7336,
    					0.7754,
    					0.8132,
    					0.8467,
    					0.876,
    					0.9012,
    					0.9224,
    					0.9399,
    					0.9542,
    					0.9656,
    					0.9746,
    					0.9815,
    					0.9867,
    					0.9907,
    					0.9935,
    					0.9956,
    					0.997,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.6689,
    				"std.error": 0.8391,
    				statistic: -0.7972,
    				"p.value": 0.4266,
    				"conf.low": -2.3271,
    				"conf.high": 0.9893,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					6.4433e-15,
    					1.7364e-14,
    					4.6052e-14,
    					1.2019e-13,
    					3.0872e-13,
    					7.8037e-13,
    					1.9413e-12,
    					4.7527e-12,
    					1.1452e-11,
    					2.7155e-11,
    					6.3375e-11,
    					1.4557e-10,
    					3.2907e-10,
    					7.3216e-10,
    					1.6033e-9,
    					3.4558e-9,
    					7.3312e-9,
    					1.5308e-8,
    					3.1463e-8,
    					6.365e-8,
    					1.2675e-7,
    					2.4845e-7,
    					4.7939e-7,
    					9.1057e-7,
    					0.0000017026,
    					0.0000031341,
    					0.0000056794,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.0032,
    					0.0046,
    					0.0066,
    					0.0094,
    					0.0132,
    					0.0182,
    					0.0247,
    					0.0331,
    					0.0436,
    					0.0568,
    					0.0728,
    					0.0922,
    					0.1151,
    					0.1418,
    					0.1724,
    					0.207,
    					0.2453,
    					0.2871,
    					0.3321,
    					0.3796,
    					0.429,
    					0.4795,
    					0.5304,
    					0.5807,
    					0.6298,
    					0.6769,
    					0.7212,
    					0.7624,
    					0.8,
    					0.8338,
    					0.8637,
    					0.8896,
    					0.9118,
    					0.9305,
    					0.946,
    					0.9586,
    					0.9687,
    					0.9767,
    					0.9829,
    					0.9876,
    					0.9912,
    					0.9938,
    					0.9957,
    					0.9971,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.7978,
    				"std.error": 1.1542,
    				statistic: 0.6912,
    				"p.value": 0.4905,
    				"conf.low": -1.4831,
    				"conf.high": 3.0787,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.8665e-7,
    					5.2059e-7,
    					9.3318e-7,
    					0.0000016511,
    					0.0000028834,
    					0.0000049705,
    					0.0000084576,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0008,
    					0.0013,
    					0.0018,
    					0.0026,
    					0.0037,
    					0.0053,
    					0.0073,
    					0.01,
    					0.0136,
    					0.0182,
    					0.0241,
    					0.0315,
    					0.0406,
    					0.0519,
    					0.0654,
    					0.0816,
    					0.1006,
    					0.1227,
    					0.1479,
    					0.1764,
    					0.2081,
    					0.243,
    					0.2809,
    					0.3213,
    					0.3641,
    					0.4085,
    					0.4542,
    					0.5005,
    					0.5468,
    					0.5925,
    					0.6369,
    					0.6796,
    					0.72,
    					0.7578,
    					0.7926,
    					0.8243,
    					0.8527,
    					0.8779,
    					0.8998,
    					0.9188,
    					0.9349,
    					0.9484,
    					0.9596,
    					0.9687,
    					0.9761,
    					0.9819,
    					0.9865,
    					0.99,
    					0.9927,
    					0.9948,
    					0.9963,
    					0.9974,
    					0.9982,
    					0.9988,
    					0.9992,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 204,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option3",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option3"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.5375,
    				"std.error": 0.5076,
    				statistic: 12.8788,
    				"p.value": 1.0633e-23,
    				"conf.low": 5.5315,
    				"conf.high": 7.5435,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.0547e-10,
    					2.3207e-10,
    					5.0323e-10,
    					1.0754e-9,
    					2.2646e-9,
    					4.7e-9,
    					9.613e-9,
    					1.9377e-8,
    					3.8494e-8,
    					7.5368e-8,
    					1.4544e-7,
    					2.766e-7,
    					5.1848e-7,
    					9.5794e-7,
    					0.0000017445,
    					0.0000031313,
    					0.0000055403,
    					0.0000096628,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0011,
    					0.0017,
    					0.0025,
    					0.0037,
    					0.0052,
    					0.0074,
    					0.0103,
    					0.0142,
    					0.0192,
    					0.0258,
    					0.034,
    					0.0443,
    					0.0571,
    					0.0725,
    					0.0909,
    					0.1126,
    					0.1378,
    					0.1665,
    					0.1989,
    					0.2348,
    					0.274,
    					0.3162,
    					0.3609,
    					0.4076,
    					0.4557,
    					0.5044,
    					0.5531,
    					0.601,
    					0.6474,
    					0.6917,
    					0.7334,
    					0.772,
    					0.8072,
    					0.839,
    					0.8671,
    					0.8916,
    					0.9127,
    					0.9305,
    					0.9454,
    					0.9577,
    					0.9676,
    					0.9755,
    					0.9818,
    					0.9866,
    					0.9903,
    					0.993,
    					0.9951,
    					0.9966,
    					0.9976,
    					0.9984,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.8007,
    				"std.error": 0.7084,
    				statistic: -1.1303,
    				"p.value": 0.2608,
    				"conf.low": -2.2045,
    				"conf.high": 0.6032,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.7989e-9,
    					5.4166e-9,
    					1.0357e-8,
    					1.9567e-8,
    					3.6525e-8,
    					6.7366e-8,
    					1.2277e-7,
    					2.2106e-7,
    					3.9332e-7,
    					6.915e-7,
    					0.0000012013,
    					0.0000020622,
    					0.0000034981,
    					0.0000058638,
    					0.0000097135,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0002,
    					0.0004,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0017,
    					0.0024,
    					0.0033,
    					0.0046,
    					0.0064,
    					0.0086,
    					0.0116,
    					0.0155,
    					0.0203,
    					0.0264,
    					0.034,
    					0.0433,
    					0.0545,
    					0.068,
    					0.0838,
    					0.1023,
    					0.1235,
    					0.1477,
    					0.1749,
    					0.205,
    					0.2381,
    					0.2738,
    					0.312,
    					0.3524,
    					0.3945,
    					0.4378,
    					0.4819,
    					0.5263,
    					0.5703,
    					0.6135,
    					0.6553,
    					0.6952,
    					0.733,
    					0.7683,
    					0.8008,
    					0.8304,
    					0.857,
    					0.8806,
    					0.9013,
    					0.9193,
    					0.9347,
    					0.9477,
    					0.9585,
    					0.9675,
    					0.9748,
    					0.9807,
    					0.9853,
    					0.989,
    					0.9918,
    					0.994,
    					0.9957,
    					0.9969,
    					0.9978,
    					0.9984,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.2964,
    				"std.error": 0.8792,
    				statistic: -1.4745,
    				"p.value": 0.1432,
    				"conf.low": -3.0388,
    				"conf.high": 0.446,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.5561e-11,
    					3.5295e-11,
    					7.8901e-11,
    					1.7384e-10,
    					3.7751e-10,
    					8.0799e-10,
    					1.7045e-9,
    					3.5442e-9,
    					7.2637e-9,
    					1.4673e-8,
    					2.9217e-8,
    					5.7344e-8,
    					1.1094e-7,
    					2.1157e-7,
    					3.9774e-7,
    					7.3707e-7,
    					0.0000013465,
    					0.0000024249,
    					0.0000043051,
    					0.0000075352,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.003,
    					0.0044,
    					0.0062,
    					0.0087,
    					0.012,
    					0.0163,
    					0.022,
    					0.0292,
    					0.0383,
    					0.0496,
    					0.0634,
    					0.08,
    					0.0996,
    					0.1227,
    					0.1492,
    					0.1792,
    					0.2129,
    					0.2499,
    					0.2901,
    					0.3332,
    					0.3785,
    					0.4256,
    					0.4737,
    					0.5223,
    					0.5705,
    					0.6177,
    					0.6632,
    					0.7064,
    					0.7469,
    					0.7842,
    					0.8181,
    					0.8485,
    					0.8753,
    					0.8986,
    					0.9185,
    					0.9354,
    					0.9494,
    					0.9608,
    					0.9701,
    					0.9775,
    					0.9832,
    					0.9877,
    					0.9911,
    					0.9936,
    					0.9955,
    					0.9969,
    					0.9979,
    					0.9986,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.105,
    				"std.error": 1.1995,
    				statistic: 0.9212,
    				"p.value": 0.359,
    				"conf.low": -1.2721,
    				"conf.high": 3.4821,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					2.0192e-7,
    					3.6123e-7,
    					6.3845e-7,
    					0.0000011149,
    					0.0000019234,
    					0.0000032786,
    					0.0000055218,
    					0.0000091885,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0002,
    					0.0004,
    					0.0005,
    					0.0008,
    					0.0011,
    					0.0016,
    					0.0023,
    					0.0033,
    					0.0046,
    					0.0063,
    					0.0086,
    					0.0116,
    					0.0155,
    					0.0204,
    					0.0266,
    					0.0343,
    					0.0437,
    					0.055,
    					0.0687,
    					0.0847,
    					0.1035,
    					0.125,
    					0.1496,
    					0.1771,
    					0.2077,
    					0.2412,
    					0.2774,
    					0.3161,
    					0.3569,
    					0.3994,
    					0.4432,
    					0.4876,
    					0.5322,
    					0.5764,
    					0.6197,
    					0.6615,
    					0.7014,
    					0.7391,
    					0.7741,
    					0.8063,
    					0.8355,
    					0.8617,
    					0.8849,
    					0.9052,
    					0.9228,
    					0.9377,
    					0.9503,
    					0.9608,
    					0.9694,
    					0.9763,
    					0.9819,
    					0.9864,
    					0.9898,
    					0.9925,
    					0.9945,
    					0.996,
    					0.9972,
    					0.998,
    					0.9986,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 205,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4696,
    				"std.error": 0.577,
    				statistic: 11.2119,
    				"p.value": 4.6466e-24,
    				"conf.low": 5.3334,
    				"conf.high": 7.6059,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					2.2338e-8,
    					4.0783e-8,
    					7.3626e-8,
    					1.3143e-7,
    					2.32e-7,
    					4.0496e-7,
    					6.9898e-7,
    					0.000001193,
    					0.0000020137,
    					0.0000033612,
    					0.0000055481,
    					0.0000090566,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.001,
    					0.0014,
    					0.0019,
    					0.0027,
    					0.0038,
    					0.0052,
    					0.007,
    					0.0094,
    					0.0125,
    					0.0164,
    					0.0214,
    					0.0275,
    					0.0351,
    					0.0443,
    					0.0553,
    					0.0684,
    					0.0838,
    					0.1016,
    					0.1221,
    					0.1453,
    					0.1712,
    					0.2,
    					0.2315,
    					0.2656,
    					0.302,
    					0.3405,
    					0.3808,
    					0.4224,
    					0.465,
    					0.5079,
    					0.5507,
    					0.5929,
    					0.6341,
    					0.6738,
    					0.7116,
    					0.7472,
    					0.7803,
    					0.8108,
    					0.8386,
    					0.8635,
    					0.8857,
    					0.9052,
    					0.9221,
    					0.9366,
    					0.9489,
    					0.9593,
    					0.9678,
    					0.9749,
    					0.9806,
    					0.9851,
    					0.9887,
    					0.9915,
    					0.9937,
    					0.9954,
    					0.9966,
    					0.9976,
    					0.9983,
    					0.9988,
    					0.9992,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3027,
    				"std.error": 0.6503,
    				statistic: -0.4655,
    				"p.value": 0.6419,
    				"conf.low": -1.5832,
    				"conf.high": 0.9778,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					5.6071e-13,
    					1.3399e-12,
    					3.156e-12,
    					7.3275e-12,
    					1.677e-11,
    					3.7831e-11,
    					8.4126e-11,
    					1.8441e-10,
    					3.9846e-10,
    					8.4873e-10,
    					1.7821e-9,
    					3.6887e-9,
    					7.5268e-9,
    					1.5141e-8,
    					3.0024e-8,
    					5.8696e-8,
    					1.1313e-7,
    					2.1495e-7,
    					4.0267e-7,
    					7.437e-7,
    					0.0000013542,
    					0.0000024313,
    					0.0000043039,
    					0.0000075121,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.002,
    					0.0029,
    					0.0042,
    					0.006,
    					0.0084,
    					0.0116,
    					0.0159,
    					0.0214,
    					0.0284,
    					0.0372,
    					0.0481,
    					0.0615,
    					0.0777,
    					0.0969,
    					0.1193,
    					0.1452,
    					0.1746,
    					0.2075,
    					0.2439,
    					0.2834,
    					0.3258,
    					0.3705,
    					0.4171,
    					0.4649,
    					0.5131,
    					0.5612,
    					0.6084,
    					0.6541,
    					0.6976,
    					0.7385,
    					0.7763,
    					0.8108,
    					0.8419,
    					0.8693,
    					0.8933,
    					0.914,
    					0.9315,
    					0.9461,
    					0.9581,
    					0.9679,
    					0.9757,
    					0.9818,
    					0.9866,
    					0.9902,
    					0.993,
    					0.995,
    					0.9965,
    					0.9976,
    					0.9984,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -2.2308,
    				"std.error": 0.768,
    				statistic: -2.9047,
    				"p.value": 0.004,
    				"conf.low": -3.7431,
    				"conf.high": -0.7185,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					8.4987e-11,
    					2.0937e-10,
    					5.0608e-10,
    					1.2003e-9,
    					2.7932e-9,
    					6.3784e-9,
    					1.4292e-8,
    					3.1425e-8,
    					6.7804e-8,
    					1.4357e-7,
    					2.9831e-7,
    					6.0832e-7,
    					0.0000012174,
    					0.0000023912,
    					0.0000046096,
    					0.000008722,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.0012,
    					0.0019,
    					0.0029,
    					0.0044,
    					0.0065,
    					0.0095,
    					0.0137,
    					0.0195,
    					0.0271,
    					0.037,
    					0.0498,
    					0.0659,
    					0.0857,
    					0.1096,
    					0.138,
    					0.1711,
    					0.2089,
    					0.2511,
    					0.2975,
    					0.3475,
    					0.4002,
    					0.4549,
    					0.5104,
    					0.5657,
    					0.6197,
    					0.6715,
    					0.7202,
    					0.7652,
    					0.8058,
    					0.8418,
    					0.8731,
    					0.8998,
    					0.9222,
    					0.9405,
    					0.9553,
    					0.967,
    					0.976,
    					0.9829,
    					0.988,
    					0.9917,
    					0.9944,
    					0.9963,
    					0.9976,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.7795,
    				"std.error": 0.8763,
    				statistic: 2.0307,
    				"p.value": 0.0433,
    				"conf.low": 0.054,
    				"conf.high": 3.505,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					6.4975e-15,
    					2.1319e-14,
    					6.8356e-14,
    					2.1416e-13,
    					6.557e-13,
    					1.9618e-12,
    					5.7358e-12,
    					1.6389e-11,
    					4.5762e-11,
    					1.2488e-10,
    					3.3304e-10,
    					8.6807e-10,
    					2.2114e-9,
    					5.5059e-9,
    					1.3399e-8,
    					3.1871e-8,
    					7.4101e-8,
    					1.6841e-7,
    					3.7414e-7,
    					8.1257e-7,
    					0.0000017252,
    					0.0000035811,
    					0.0000072675,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0016,
    					0.0025,
    					0.004,
    					0.0063,
    					0.0095,
    					0.0142,
    					0.0208,
    					0.0297,
    					0.0417,
    					0.0573,
    					0.0771,
    					0.1017,
    					0.1317,
    					0.1672,
    					0.2083,
    					0.255,
    					0.3065,
    					0.3622,
    					0.421,
    					0.4816,
    					0.5426,
    					0.6026,
    					0.6603,
    					0.7145,
    					0.7642,
    					0.8087,
    					0.8476,
    					0.8809,
    					0.9087,
    					0.9313,
    					0.9494,
    					0.9634,
    					0.9741,
    					0.9821,
    					0.9878,
    					0.9919,
    					0.9947,
    					0.9966,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9996,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 206,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.5609,
    				"std.error": 0.4431,
    				statistic: 12.55,
    				"p.value": 1.4582e-28,
    				"conf.low": 4.6883,
    				"conf.high": 6.4334,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.9462e-7,
    					4.0294e-7,
    					8.1857e-7,
    					0.0000016316,
    					0.0000031913,
    					0.000006125,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0036,
    					0.0054,
    					0.008,
    					0.0116,
    					0.0166,
    					0.0233,
    					0.0322,
    					0.0437,
    					0.0583,
    					0.0766,
    					0.0988,
    					0.1254,
    					0.1567,
    					0.1928,
    					0.2334,
    					0.2785,
    					0.3274,
    					0.3794,
    					0.4338,
    					0.4894,
    					0.5453,
    					0.6002,
    					0.6532,
    					0.7034,
    					0.75,
    					0.7924,
    					0.8302,
    					0.8633,
    					0.8917,
    					0.9155,
    					0.9352,
    					0.9511,
    					0.9638,
    					0.9736,
    					0.9811,
    					0.9867,
    					0.9908,
    					0.9937,
    					0.9958,
    					0.9973,
    					0.9982,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: 0.4063,
    				"std.error": 0.507,
    				statistic: 0.8014,
    				"p.value": 0.4236,
    				"conf.low": -0.592,
    				"conf.high": 1.4047,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.3466e-26,
    					1.7215e-25,
    					8.6461e-25,
    					4.2397e-24,
    					2.0299e-23,
    					9.4888e-23,
    					4.3309e-22,
    					1.93e-21,
    					8.3979e-21,
    					3.5679e-20,
    					1.48e-19,
    					5.9949e-19,
    					2.371e-18,
    					9.1561e-18,
    					3.4526e-17,
    					1.2713e-16,
    					4.5707e-16,
    					1.6047e-15,
    					5.5013e-15,
    					1.8417e-14,
    					6.0208e-14,
    					1.9221e-13,
    					5.9921e-13,
    					1.8243e-12,
    					5.4239e-12,
    					1.5749e-11,
    					4.4659e-11,
    					1.2368e-10,
    					3.3454e-10,
    					8.8376e-10,
    					2.2803e-9,
    					5.7467e-9,
    					1.4146e-8,
    					3.4014e-8,
    					7.9891e-8,
    					1.833e-7,
    					4.1085e-7,
    					8.9962e-7,
    					0.0000019245,
    					0.0000040225,
    					0.0000082146,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0011,
    					0.0018,
    					0.0029,
    					0.0047,
    					0.0073,
    					0.0111,
    					0.0165,
    					0.024,
    					0.0342,
    					0.0478,
    					0.0653,
    					0.0875,
    					0.1149,
    					0.1479,
    					0.1867,
    					0.2313,
    					0.2812,
    					0.3358,
    					0.3941,
    					0.4549,
    					0.5168,
    					0.5783,
    					0.638,
    					0.6944,
    					0.7466,
    					0.7936,
    					0.8351,
    					0.8707,
    					0.9007,
    					0.9252,
    					0.9448,
    					0.9601,
    					0.9717,
    					0.9804,
    					0.9867,
    					0.9912,
    					0.9943,
    					0.9964,
    					0.9977,
    					0.9986,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.4489,
    				"std.error": 0.9008,
    				statistic: -1.6083,
    				"p.value": 0.109,
    				"conf.low": -3.2227,
    				"conf.high": 0.325,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					1.3725e-10,
    					2.9384e-10,
    					6.2049e-10,
    					1.2923e-9,
    					2.6547e-9,
    					5.3787e-9,
    					1.0749e-8,
    					2.1188e-8,
    					4.1196e-8,
    					7.9007e-8,
    					1.4946e-7,
    					2.789e-7,
    					5.1337e-7,
    					9.3215e-7,
    					0.0000016697,
    					0.0000029503,
    					0.0000051428,
    					0.0000088441,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0014,
    					0.0021,
    					0.003,
    					0.0043,
    					0.006,
    					0.0084,
    					0.0115,
    					0.0157,
    					0.021,
    					0.0277,
    					0.0362,
    					0.0467,
    					0.0595,
    					0.0749,
    					0.0932,
    					0.1146,
    					0.1393,
    					0.1674,
    					0.1988,
    					0.2336,
    					0.2715,
    					0.3123,
    					0.3555,
    					0.4007,
    					0.4472,
    					0.4944,
    					0.5418,
    					0.5885,
    					0.634,
    					0.6777,
    					0.7191,
    					0.7578,
    					0.7933,
    					0.8256,
    					0.8544,
    					0.8799,
    					0.902,
    					0.921,
    					0.9371,
    					0.9505,
    					0.9615,
    					0.9705,
    					0.9776,
    					0.9832,
    					0.9876,
    					0.9909,
    					0.9935,
    					0.9953,
    					0.9967,
    					0.9977,
    					0.9984,
    					0.999,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 1.3351,
    				"std.error": 1.028,
    				statistic: 1.2987,
    				"p.value": 0.1952,
    				"conf.low": -0.6892,
    				"conf.high": 3.3593,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.2227e-10,
    					9.5232e-10,
    					2.1123e-9,
    					4.6078e-9,
    					9.886e-9,
    					2.0861e-8,
    					4.3298e-8,
    					8.839e-8,
    					1.7748e-7,
    					3.5054e-7,
    					6.8103e-7,
    					0.0000013015,
    					0.0000024467,
    					0.0000045247,
    					0.0000082316,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.002,
    					0.0031,
    					0.0045,
    					0.0066,
    					0.0094,
    					0.0133,
    					0.0184,
    					0.0251,
    					0.0338,
    					0.0449,
    					0.0587,
    					0.0756,
    					0.096,
    					0.1202,
    					0.1484,
    					0.1806,
    					0.217,
    					0.2573,
    					0.3011,
    					0.348,
    					0.3974,
    					0.4485,
    					0.5005,
    					0.5524,
    					0.6035,
    					0.6528,
    					0.6997,
    					0.7435,
    					0.7837,
    					0.82,
    					0.8522,
    					0.8803,
    					0.9044,
    					0.9247,
    					0.9416,
    					0.9553,
    					0.9663,
    					0.975,
    					0.9817,
    					0.9868,
    					0.9907,
    					0.9935,
    					0.9955,
    					0.997,
    					0.998,
    					0.9987,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 207,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option4",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option4"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4696,
    				"std.error": 0.5711,
    				statistic: 11.3292,
    				"p.value": 5.1494e-23,
    				"conf.low": 5.3431,
    				"conf.high": 7.5961,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.6145e-8,
    					2.9842e-8,
    					5.4527e-8,
    					9.8493e-8,
    					1.7588e-7,
    					3.1049e-7,
    					5.419e-7,
    					9.35e-7,
    					0.000001595,
    					0.0000026899,
    					0.0000044852,
    					0.0000073942,
    					0,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0012,
    					0.0018,
    					0.0025,
    					0.0035,
    					0.0048,
    					0.0065,
    					0.0088,
    					0.0118,
    					0.0155,
    					0.0203,
    					0.0263,
    					0.0337,
    					0.0426,
    					0.0535,
    					0.0664,
    					0.0816,
    					0.0993,
    					0.1196,
    					0.1428,
    					0.1687,
    					0.1975,
    					0.2292,
    					0.2634,
    					0.3001,
    					0.339,
    					0.3796,
    					0.4216,
    					0.4646,
    					0.5079,
    					0.5512,
    					0.5939,
    					0.6354,
    					0.6755,
    					0.7136,
    					0.7494,
    					0.7827,
    					0.8133,
    					0.8411,
    					0.866,
    					0.8881,
    					0.9075,
    					0.9242,
    					0.9386,
    					0.9507,
    					0.9608,
    					0.9692,
    					0.976,
    					0.9816,
    					0.9859,
    					0.9894,
    					0.9921,
    					0.9942,
    					0.9957,
    					0.9969,
    					0.9978,
    					0.9984,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.3027,
    				"std.error": 0.6435,
    				statistic: -0.4704,
    				"p.value": 0.6386,
    				"conf.low": -1.5722,
    				"conf.high": 0.9668,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					3.2597e-13,
    					7.9308e-13,
    					1.9014e-12,
    					4.4919e-12,
    					1.0457e-11,
    					2.3989e-11,
    					5.4229e-11,
    					1.208e-10,
    					2.652e-10,
    					5.7371e-10,
    					1.2231e-9,
    					2.5697e-9,
    					5.3206e-9,
    					1.0857e-8,
    					2.1832e-8,
    					4.327e-8,
    					8.4517e-8,
    					1.627e-7,
    					3.087e-7,
    					5.7729e-7,
    					0.0000010641,
    					0.0000019331,
    					0.0000034617,
    					0.0000061102,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0018,
    					0.0027,
    					0.0039,
    					0.0056,
    					0.0079,
    					0.0109,
    					0.015,
    					0.0203,
    					0.0271,
    					0.0357,
    					0.0464,
    					0.0596,
    					0.0755,
    					0.0945,
    					0.1169,
    					0.1427,
    					0.1721,
    					0.2051,
    					0.2416,
    					0.2814,
    					0.3241,
    					0.3692,
    					0.4162,
    					0.4645,
    					0.5133,
    					0.5619,
    					0.6095,
    					0.6556,
    					0.6995,
    					0.7407,
    					0.7787,
    					0.8133,
    					0.8444,
    					0.8718,
    					0.8957,
    					0.9162,
    					0.9335,
    					0.9479,
    					0.9597,
    					0.9692,
    					0.9768,
    					0.9828,
    					0.9873,
    					0.9908,
    					0.9935,
    					0.9954,
    					0.9968,
    					0.9978,
    					0.9985,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -2.3576,
    				"std.error": 0.9556,
    				statistic: -2.4673,
    				"p.value": 0.0145,
    				"conf.low": -4.2426,
    				"conf.high": -0.4726,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					2.8665e-7,
    					5.0942e-7,
    					8.944e-7,
    					0.0000015514,
    					0.0000026587,
    					0.0000045017,
    					0.0000075308,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0007,
    					0.001,
    					0.0014,
    					0.002,
    					0.0029,
    					0.0041,
    					0.0056,
    					0.0077,
    					0.0104,
    					0.0139,
    					0.0184,
    					0.0241,
    					0.0312,
    					0.04,
    					0.0506,
    					0.0634,
    					0.0786,
    					0.0963,
    					0.1169,
    					0.1403,
    					0.1668,
    					0.1964,
    					0.2288,
    					0.2641,
    					0.302,
    					0.3422,
    					0.3842,
    					0.4276,
    					0.4719,
    					0.5166,
    					0.5611,
    					0.6048,
    					0.6472,
    					0.6878,
    					0.7263,
    					0.7623,
    					0.7956,
    					0.8258,
    					0.8531,
    					0.8774,
    					0.8987,
    					0.9171,
    					0.9329,
    					0.9463,
    					0.9575,
    					0.9667,
    					0.9742,
    					0.9802,
    					0.985,
    					0.9888,
    					0.9917,
    					0.9939,
    					0.9956,
    					0.9968,
    					0.9978,
    					0.9984,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 2.0441,
    				"std.error": 1.085,
    				statistic: 1.884,
    				"p.value": 0.0611,
    				"conf.low": -0.0962,
    				"conf.high": 4.1845,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					4.9859e-11,
    					1.1219e-10,
    					2.4868e-10,
    					5.4306e-10,
    					1.1683e-9,
    					2.4762e-9,
    					5.1704e-9,
    					1.0636e-8,
    					2.1557e-8,
    					4.3045e-8,
    					8.4686e-8,
    					1.6415e-7,
    					3.1351e-7,
    					5.8995e-7,
    					0.0000010939,
    					0.0000019985,
    					0.0000035979,
    					0.0000063826,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0013,
    					0.002,
    					0.0029,
    					0.0042,
    					0.0061,
    					0.0086,
    					0.0119,
    					0.0163,
    					0.022,
    					0.0294,
    					0.0387,
    					0.0503,
    					0.0644,
    					0.0815,
    					0.1019,
    					0.1256,
    					0.153,
    					0.1841,
    					0.2188,
    					0.2571,
    					0.2985,
    					0.3427,
    					0.3893,
    					0.4374,
    					0.4865,
    					0.5358,
    					0.5846,
    					0.6321,
    					0.6776,
    					0.7207,
    					0.7607,
    					0.7974,
    					0.8305,
    					0.8599,
    					0.8856,
    					0.9078,
    					0.9266,
    					0.9423,
    					0.9553,
    					0.9658,
    					0.9742,
    					0.9807,
    					0.9859,
    					0.9897,
    					0.9927,
    					0.9948,
    					0.9964,
    					0.9975,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 208,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option1",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option1"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4068,
    				"std.error": 0.4729,
    				statistic: 13.5466,
    				"p.value": 5.4014e-32,
    				"conf.low": 5.4755,
    				"conf.high": 7.3381,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					3.0232e-11,
    					7.2178e-11,
    					1.6944e-10,
    					3.9109e-10,
    					8.8762e-10,
    					1.9809e-9,
    					4.347e-9,
    					9.3803e-9,
    					1.9904e-8,
    					4.1533e-8,
    					8.5226e-8,
    					1.7198e-7,
    					3.4129e-7,
    					6.6608e-7,
    					0.0000012785,
    					0.0000024135,
    					0.000004481,
    					0.000008183,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0021,
    					0.0031,
    					0.0046,
    					0.0067,
    					0.0097,
    					0.0136,
    					0.0189,
    					0.0259,
    					0.0349,
    					0.0463,
    					0.0605,
    					0.0779,
    					0.0988,
    					0.1237,
    					0.1526,
    					0.1856,
    					0.2228,
    					0.2639,
    					0.3085,
    					0.3562,
    					0.4062,
    					0.4578,
    					0.5102,
    					0.5623,
    					0.6134,
    					0.6626,
    					0.7091,
    					0.7525,
    					0.7921,
    					0.8277,
    					0.8591,
    					0.8864,
    					0.9097,
    					0.9293,
    					0.9454,
    					0.9585,
    					0.9689,
    					0.977,
    					0.9833,
    					0.988,
    					0.9916,
    					0.9942,
    					0.996,
    					0.9973,
    					0.9982,
    					0.9988,
    					0.9993,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.2593,
    				"std.error": 0.5747,
    				statistic: -0.4511,
    				"p.value": 0.6523,
    				"conf.low": -1.391,
    				"conf.high": 0.8725,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					2.2268e-16,
    					6.8311e-16,
    					2.0571e-15,
    					6.081e-15,
    					1.7647e-14,
    					5.0272e-14,
    					1.4059e-13,
    					3.8599e-13,
    					1.0403e-12,
    					2.7526e-12,
    					7.1503e-12,
    					1.8235e-11,
    					4.5654e-11,
    					1.1222e-10,
    					2.7082e-10,
    					6.4167e-10,
    					1.4927e-9,
    					3.4094e-9,
    					7.646e-9,
    					1.6836e-8,
    					3.6402e-8,
    					7.7282e-8,
    					1.6111e-7,
    					3.298e-7,
    					6.6298e-7,
    					0.0000013088,
    					0.0000025373,
    					0.0000048309,
    					0.0000090332,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0004,
    					0.0007,
    					0.0011,
    					0.0018,
    					0.0027,
    					0.0041,
    					0.0061,
    					0.0089,
    					0.0128,
    					0.0181,
    					0.0252,
    					0.0344,
    					0.0462,
    					0.061,
    					0.0794,
    					0.1017,
    					0.1282,
    					0.1592,
    					0.1947,
    					0.2346,
    					0.2787,
    					0.3265,
    					0.3773,
    					0.4304,
    					0.4847,
    					0.5393,
    					0.5932,
    					0.6454,
    					0.695,
    					0.7412,
    					0.7835,
    					0.8215,
    					0.855,
    					0.884,
    					0.9086,
    					0.9291,
    					0.9459,
    					0.9594,
    					0.97,
    					0.9782,
    					0.9844,
    					0.989,
    					0.9924,
    					0.9949,
    					0.9966,
    					0.9977,
    					0.9985,
    					0.9991,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.4343,
    				"std.error": 0.644,
    				statistic: -2.2272,
    				"p.value": 0.0268,
    				"conf.low": -2.7025,
    				"conf.high": -0.1662,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					4.2756e-19,
    					1.8713e-18,
    					7.9696e-18,
    					3.3028e-17,
    					1.3319e-16,
    					5.227e-16,
    					1.9961e-15,
    					7.4182e-15,
    					2.6828e-14,
    					9.4424e-14,
    					3.2342e-13,
    					1.0781e-12,
    					3.4976e-12,
    					1.1043e-11,
    					3.3937e-11,
    					1.0151e-10,
    					2.9551e-10,
    					8.3737e-10,
    					2.3097e-9,
    					6.2012e-9,
    					1.6208e-8,
    					4.1238e-8,
    					1.0214e-7,
    					2.4632e-7,
    					5.7834e-7,
    					0.0000013221,
    					0.000002943,
    					0.0000063792,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0021,
    					0.0034,
    					0.0056,
    					0.0089,
    					0.0138,
    					0.0208,
    					0.0307,
    					0.0442,
    					0.062,
    					0.085,
    					0.114,
    					0.1493,
    					0.1913,
    					0.2398,
    					0.2943,
    					0.354,
    					0.4175,
    					0.4832,
    					0.5494,
    					0.6142,
    					0.676,
    					0.7333,
    					0.785,
    					0.8303,
    					0.869,
    					0.9011,
    					0.927,
    					0.9474,
    					0.963,
    					0.9746,
    					0.983,
    					0.9889,
    					0.9929,
    					0.9956,
    					0.9973,
    					0.9984,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.8224,
    				"std.error": 0.7902,
    				statistic: 1.0407,
    				"p.value": 0.299,
    				"conf.low": -0.7336,
    				"conf.high": 2.3784,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.1164e-13,
    					3.9125e-13,
    					1.3329e-12,
    					4.4139e-12,
    					1.4209e-11,
    					4.4465e-11,
    					1.3527e-10,
    					4.0006e-10,
    					1.1503e-9,
    					3.2155e-9,
    					8.7395e-9,
    					2.3095e-8,
    					5.9344e-8,
    					1.4828e-7,
    					3.6027e-7,
    					8.5126e-7,
    					0.0000019562,
    					0.0000043721,
    					0.0000095044,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0018,
    					0.003,
    					0.005,
    					0.008,
    					0.0126,
    					0.0193,
    					0.0289,
    					0.042,
    					0.0596,
    					0.0825,
    					0.1115,
    					0.1472,
    					0.1898,
    					0.2392,
    					0.295,
    					0.3561,
    					0.4211,
    					0.4883,
    					0.5559,
    					0.6219,
    					0.6845,
    					0.7422,
    					0.7939,
    					0.8389,
    					0.877,
    					0.9082,
    					0.9332,
    					0.9525,
    					0.9671,
    					0.9777,
    					0.9853,
    					0.9906,
    					0.9941,
    					0.9964,
    					0.9979,
    					0.9988,
    					0.9993,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 209,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option2",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option2"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 5.765,
    				"std.error": 0.3713,
    				statistic: 15.5276,
    				"p.value": 6.4069e-39,
    				"conf.low": 5.0339,
    				"conf.high": 6.4961,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.9798e-11,
    					6.043e-11,
    					1.7947e-10,
    					5.186e-10,
    					1.4581e-9,
    					3.9893e-9,
    					1.0621e-8,
    					2.7515e-8,
    					6.9372e-8,
    					1.7021e-7,
    					4.0647e-7,
    					9.4474e-7,
    					0.0000021373,
    					0.0000047066,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0017,
    					0.0029,
    					0.0048,
    					0.0077,
    					0.0121,
    					0.0184,
    					0.0274,
    					0.0398,
    					0.0564,
    					0.0781,
    					0.1055,
    					0.1393,
    					0.1798,
    					0.227,
    					0.2804,
    					0.3394,
    					0.4025,
    					0.4683,
    					0.535,
    					0.6007,
    					0.6637,
    					0.7223,
    					0.7755,
    					0.8224,
    					0.8625,
    					0.896,
    					0.9231,
    					0.9445,
    					0.9609,
    					0.9731,
    					0.982,
    					0.9882,
    					0.9925,
    					0.9953,
    					0.9972,
    					0.9983,
    					0.999,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: 0.1613,
    				"std.error": 0.4576,
    				statistic: 0.3526,
    				"p.value": 0.7247,
    				"conf.low": -0.7397,
    				"conf.high": 1.0624,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					4.7584e-29,
    					3.2319e-28,
    					2.1315e-27,
    					1.365e-26,
    					8.4886e-26,
    					5.126e-25,
    					3.0058e-24,
    					1.7115e-23,
    					9.4637e-23,
    					5.0816e-22,
    					2.6497e-21,
    					1.3417e-20,
    					6.5975e-20,
    					3.1505e-19,
    					1.4611e-18,
    					6.5802e-18,
    					2.878e-17,
    					1.2225e-16,
    					5.0433e-16,
    					2.0207e-15,
    					7.8629e-15,
    					2.9717e-14,
    					1.0908e-13,
    					3.8892e-13,
    					1.3468e-12,
    					4.5303e-12,
    					1.4802e-11,
    					4.6978e-11,
    					1.4483e-10,
    					4.3376e-10,
    					1.262e-9,
    					3.5671e-9,
    					9.7955e-9,
    					2.6134e-8,
    					6.7746e-8,
    					1.7064e-7,
    					4.1764e-7,
    					9.9331e-7,
    					0.0000022959,
    					0.0000051575,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0007,
    					0.0012,
    					0.0021,
    					0.0036,
    					0.0059,
    					0.0095,
    					0.0149,
    					0.0227,
    					0.0338,
    					0.0489,
    					0.0689,
    					0.0948,
    					0.1273,
    					0.1667,
    					0.2133,
    					0.2667,
    					0.3261,
    					0.3903,
    					0.4576,
    					0.5262,
    					0.594,
    					0.6591,
    					0.7198,
    					0.7747,
    					0.8229,
    					0.864,
    					0.8981,
    					0.9255,
    					0.9469,
    					0.9631,
    					0.975,
    					0.9835,
    					0.9894,
    					0.9934,
    					0.996,
    					0.9976,
    					0.9986,
    					0.9992,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -0.5583,
    				"std.error": 0.7643,
    				statistic: -0.7305,
    				"p.value": 0.4657,
    				"conf.low": -2.0634,
    				"conf.high": 0.9467,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					3.8132e-18,
    					1.2806e-17,
    					4.2183e-17,
    					1.3629e-16,
    					4.3188e-16,
    					1.3424e-15,
    					4.0926e-15,
    					1.2238e-14,
    					3.5897e-14,
    					1.0328e-13,
    					2.9147e-13,
    					8.0687e-13,
    					2.191e-12,
    					5.8361e-12,
    					1.5249e-11,
    					3.9085e-11,
    					9.8275e-11,
    					2.424e-10,
    					5.8654e-10,
    					1.3923e-9,
    					3.2425e-9,
    					7.4081e-9,
    					1.6605e-8,
    					3.6516e-8,
    					7.8788e-8,
    					1.6679e-7,
    					3.4645e-7,
    					7.0609e-7,
    					0.0000014121,
    					0.000002771,
    					0.0000053363,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0013,
    					0.0021,
    					0.0032,
    					0.0049,
    					0.0073,
    					0.0107,
    					0.0153,
    					0.0216,
    					0.0299,
    					0.0408,
    					0.0546,
    					0.0719,
    					0.0931,
    					0.1187,
    					0.1488,
    					0.1837,
    					0.2232,
    					0.2672,
    					0.3152,
    					0.3665,
    					0.4203,
    					0.4757,
    					0.5315,
    					0.5867,
    					0.6403,
    					0.6912,
    					0.7387,
    					0.7821,
    					0.8211,
    					0.8553,
    					0.8849,
    					0.9098,
    					0.9305,
    					0.9474,
    					0.9608,
    					0.9713,
    					0.9793,
    					0.9854,
    					0.9898,
    					0.9931,
    					0.9953,
    					0.9969,
    					0.998,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.2004,
    				"std.error": 0.9321,
    				statistic: 0.215,
    				"p.value": 0.8299,
    				"conf.low": -1.635,
    				"conf.high": 2.0358,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					1.4252e-8,
    					3.2158e-8,
    					7.1114e-8,
    					1.5413e-7,
    					3.2741e-7,
    					6.817e-7,
    					0.0000013912,
    					0.000002783,
    					0.0000054572,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0006,
    					0.001,
    					0.0015,
    					0.0024,
    					0.0038,
    					0.0058,
    					0.0086,
    					0.0126,
    					0.0181,
    					0.0256,
    					0.0355,
    					0.0483,
    					0.0645,
    					0.0848,
    					0.1094,
    					0.1388,
    					0.1732,
    					0.2125,
    					0.2567,
    					0.3052,
    					0.3573,
    					0.4123,
    					0.4691,
    					0.5265,
    					0.5833,
    					0.6385,
    					0.6909,
    					0.7397,
    					0.7842,
    					0.824,
    					0.8587,
    					0.8885,
    					0.9135,
    					0.9341,
    					0.9506,
    					0.9636,
    					0.9737,
    					0.9814,
    					0.987,
    					0.9911,
    					0.994,
    					0.9961,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9994,
    					0.9996,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	},
    	{
    		".universe": 210,
    		cycle_length: "cl_option3",
    		certainty: "cer_option2",
    		menstrual_calculation: "mc_option3",
    		fertile: "fer_option5",
    		relationship_status: "rs_option3",
    		".parameter_assignment": {
    			cycle_length: [
    				"cl_option3"
    			],
    			certainty: [
    				"cer_option2"
    			],
    			menstrual_calculation: [
    				"mc_option3"
    			],
    			fertile: [
    				"fer_option5"
    			],
    			relationship_status: [
    				"rs_option3"
    			]
    		},
    		results: [
    			{
    				term: "Intercept",
    				estimate: 6.4068,
    				"std.error": 0.468,
    				statistic: 13.6886,
    				"p.value": 4.8256e-30,
    				"conf.low": 5.4835,
    				"conf.high": 7.3301,
    				min: 3.3125,
    				max: 9.5252,
    				"cdf.x": [
    					3.3125,
    					3.3746,
    					3.4368,
    					3.4989,
    					3.561,
    					3.6232,
    					3.6853,
    					3.7474,
    					3.8095,
    					3.8717,
    					3.9338,
    					3.9959,
    					4.058,
    					4.1202,
    					4.1823,
    					4.2444,
    					4.3066,
    					4.3687,
    					4.4308,
    					4.4929,
    					4.5551,
    					4.6172,
    					4.6793,
    					4.7414,
    					4.8036,
    					4.8657,
    					4.9278,
    					4.99,
    					5.0521,
    					5.1142,
    					5.1763,
    					5.2385,
    					5.3006,
    					5.3627,
    					5.4248,
    					5.487,
    					5.5491,
    					5.6112,
    					5.6733,
    					5.7355,
    					5.7976,
    					5.8597,
    					5.9219,
    					5.984,
    					6.0461,
    					6.1082,
    					6.1704,
    					6.2325,
    					6.2946,
    					6.3567,
    					6.4189,
    					6.481,
    					6.5431,
    					6.6053,
    					6.6674,
    					6.7295,
    					6.7916,
    					6.8538,
    					6.9159,
    					6.978,
    					7.0401,
    					7.1023,
    					7.1644,
    					7.2265,
    					7.2886,
    					7.3508,
    					7.4129,
    					7.475,
    					7.5372,
    					7.5993,
    					7.6614,
    					7.7235,
    					7.7857,
    					7.8478,
    					7.9099,
    					7.972,
    					8.0342,
    					8.0963,
    					8.1584,
    					8.2206,
    					8.2827,
    					8.3448,
    					8.4069,
    					8.4691,
    					8.5312,
    					8.5933,
    					8.6554,
    					8.7176,
    					8.7797,
    					8.8418,
    					8.9039,
    					8.9661,
    					9.0282,
    					9.0903,
    					9.1525,
    					9.2146,
    					9.2767,
    					9.3388,
    					9.401,
    					9.4631,
    					9.5252
    				],
    				"cdf.y": [
    					1.906e-11,
    					4.6329e-11,
    					1.1069e-10,
    					2.5993e-10,
    					5.9997e-10,
    					1.3612e-9,
    					3.0358e-9,
    					6.655e-9,
    					1.4341e-8,
    					3.0378e-8,
    					6.3259e-8,
    					1.2949e-7,
    					2.6059e-7,
    					5.1556e-7,
    					0.0000010028,
    					0.0000019175,
    					0.0000036051,
    					0.000006664,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0003,
    					0.0005,
    					0.0008,
    					0.0012,
    					0.0019,
    					0.0029,
    					0.0043,
    					0.0063,
    					0.009,
    					0.0128,
    					0.0179,
    					0.0247,
    					0.0334,
    					0.0446,
    					0.0585,
    					0.0757,
    					0.0965,
    					0.1212,
    					0.1501,
    					0.1831,
    					0.2204,
    					0.2617,
    					0.3067,
    					0.3548,
    					0.4053,
    					0.4574,
    					0.5103,
    					0.563,
    					0.6146,
    					0.6642,
    					0.7111,
    					0.7547,
    					0.7945,
    					0.8302,
    					0.8616,
    					0.8888,
    					0.912,
    					0.9313,
    					0.9472,
    					0.9601,
    					0.9702,
    					0.9781,
    					0.9842,
    					0.9888,
    					0.9921,
    					0.9946,
    					0.9963,
    					0.9975,
    					0.9984,
    					0.999,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow",
    				estimate: -0.2593,
    				"std.error": 0.5688,
    				statistic: -0.4558,
    				"p.value": 0.649,
    				"conf.low": -1.3813,
    				"conf.high": 0.8627,
    				min: -4.9293,
    				max: 2.9487,
    				"cdf.x": [
    					-4.9293,
    					-4.8505,
    					-4.7717,
    					-4.693,
    					-4.6142,
    					-4.5354,
    					-4.4566,
    					-4.3778,
    					-4.2991,
    					-4.2203,
    					-4.1415,
    					-4.0627,
    					-3.9839,
    					-3.9052,
    					-3.8264,
    					-3.7476,
    					-3.6688,
    					-3.59,
    					-3.5113,
    					-3.4325,
    					-3.3537,
    					-3.2749,
    					-3.1961,
    					-3.1174,
    					-3.0386,
    					-2.9598,
    					-2.881,
    					-2.8022,
    					-2.7235,
    					-2.6447,
    					-2.5659,
    					-2.4871,
    					-2.4083,
    					-2.3296,
    					-2.2508,
    					-2.172,
    					-2.0932,
    					-2.0144,
    					-1.9357,
    					-1.8569,
    					-1.7781,
    					-1.6993,
    					-1.6205,
    					-1.5418,
    					-1.463,
    					-1.3842,
    					-1.3054,
    					-1.2266,
    					-1.1479,
    					-1.0691,
    					-0.9903,
    					-0.9115,
    					-0.8328,
    					-0.754,
    					-0.6752,
    					-0.5964,
    					-0.5176,
    					-0.4389,
    					-0.3601,
    					-0.2813,
    					-0.2025,
    					-0.1237,
    					-0.045,
    					0.0338,
    					0.1126,
    					0.1914,
    					0.2702,
    					0.3489,
    					0.4277,
    					0.5065,
    					0.5853,
    					0.6641,
    					0.7428,
    					0.8216,
    					0.9004,
    					0.9792,
    					1.058,
    					1.1367,
    					1.2155,
    					1.2943,
    					1.3731,
    					1.4519,
    					1.5306,
    					1.6094,
    					1.6882,
    					1.767,
    					1.8458,
    					1.9245,
    					2.0033,
    					2.0821,
    					2.1609,
    					2.2397,
    					2.3184,
    					2.3972,
    					2.476,
    					2.5548,
    					2.6336,
    					2.7123,
    					2.7911,
    					2.8699,
    					2.9487
    				],
    				"cdf.y": [
    					1.0989e-16,
    					3.4505e-16,
    					1.0631e-15,
    					3.2143e-15,
    					9.5363e-15,
    					2.7763e-14,
    					7.9316e-14,
    					2.2236e-13,
    					6.1174e-13,
    					1.6516e-12,
    					4.3756e-12,
    					1.1377e-11,
    					2.9028e-11,
    					7.269e-11,
    					1.7863e-10,
    					4.3084e-10,
    					1.0198e-9,
    					2.3692e-9,
    					5.4019e-9,
    					1.2089e-8,
    					2.6553e-8,
    					5.7248e-8,
    					1.2115e-7,
    					2.5165e-7,
    					5.1311e-7,
    					0.000001027,
    					0.0000020179,
    					0.0000038924,
    					0.000007371,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.001,
    					0.0016,
    					0.0025,
    					0.0038,
    					0.0057,
    					0.0083,
    					0.0121,
    					0.0172,
    					0.024,
    					0.0329,
    					0.0445,
    					0.0591,
    					0.0773,
    					0.0993,
    					0.1257,
    					0.1567,
    					0.1922,
    					0.2323,
    					0.2767,
    					0.3248,
    					0.3761,
    					0.4297,
    					0.4846,
    					0.5397,
    					0.5942,
    					0.6468,
    					0.6968,
    					0.7434,
    					0.7859,
    					0.824,
    					0.8575,
    					0.8865,
    					0.9109,
    					0.9312,
    					0.9477,
    					0.961,
    					0.9713,
    					0.9793,
    					0.9853,
    					0.9897,
    					0.9929,
    					0.9952,
    					0.9968,
    					0.9979,
    					0.9987,
    					0.9992,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "RelationshipStatusSingle",
    				estimate: -1.2002,
    				"std.error": 0.8042,
    				statistic: -1.4924,
    				"p.value": 0.1373,
    				"conf.low": -2.7866,
    				"conf.high": 0.3863,
    				min: -7.1354,
    				max: 3.5702,
    				"cdf.x": [
    					-7.1354,
    					-7.0284,
    					-6.9213,
    					-6.8143,
    					-6.7072,
    					-6.6001,
    					-6.4931,
    					-6.386,
    					-6.279,
    					-6.1719,
    					-6.0649,
    					-5.9578,
    					-5.8507,
    					-5.7437,
    					-5.6366,
    					-5.5296,
    					-5.4225,
    					-5.3155,
    					-5.2084,
    					-5.1014,
    					-4.9943,
    					-4.8872,
    					-4.7802,
    					-4.6731,
    					-4.5661,
    					-4.459,
    					-4.352,
    					-4.2449,
    					-4.1378,
    					-4.0308,
    					-3.9237,
    					-3.8167,
    					-3.7096,
    					-3.6026,
    					-3.4955,
    					-3.3884,
    					-3.2814,
    					-3.1743,
    					-3.0673,
    					-2.9602,
    					-2.8532,
    					-2.7461,
    					-2.639,
    					-2.532,
    					-2.4249,
    					-2.3179,
    					-2.2108,
    					-2.1038,
    					-1.9967,
    					-1.8896,
    					-1.7826,
    					-1.6755,
    					-1.5685,
    					-1.4614,
    					-1.3544,
    					-1.2473,
    					-1.1402,
    					-1.0332,
    					-0.9261,
    					-0.8191,
    					-0.712,
    					-0.605,
    					-0.4979,
    					-0.3909,
    					-0.2838,
    					-0.1767,
    					-0.0697,
    					0.0374,
    					0.1444,
    					0.2515,
    					0.3585,
    					0.4656,
    					0.5727,
    					0.6797,
    					0.7868,
    					0.8938,
    					1.0009,
    					1.1079,
    					1.215,
    					1.3221,
    					1.4291,
    					1.5362,
    					1.6432,
    					1.7503,
    					1.8573,
    					1.9644,
    					2.0715,
    					2.1785,
    					2.2856,
    					2.3926,
    					2.4997,
    					2.6067,
    					2.7138,
    					2.8209,
    					2.9279,
    					3.035,
    					3.142,
    					3.2491,
    					3.3561,
    					3.4632,
    					3.5702
    				],
    				"cdf.y": [
    					7.8992e-14,
    					2.1284e-13,
    					5.6357e-13,
    					1.4665e-12,
    					3.7504e-12,
    					9.4257e-12,
    					2.3281e-11,
    					5.6514e-11,
    					1.3483e-10,
    					3.1613e-10,
    					7.2851e-10,
    					1.65e-9,
    					3.6732e-9,
    					8.0369e-9,
    					1.7284e-8,
    					3.6536e-8,
    					7.5915e-8,
    					1.5505e-7,
    					3.1128e-7,
    					6.1431e-7,
    					0.0000011918,
    					0.0000022729,
    					0.0000042616,
    					0.0000078553,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0014,
    					0.0022,
    					0.0033,
    					0.0048,
    					0.007,
    					0.0101,
    					0.0143,
    					0.0199,
    					0.0273,
    					0.0368,
    					0.0489,
    					0.0639,
    					0.0823,
    					0.1044,
    					0.1306,
    					0.161,
    					0.1956,
    					0.2345,
    					0.2772,
    					0.3235,
    					0.3726,
    					0.424,
    					0.4766,
    					0.5297,
    					0.5822,
    					0.6334,
    					0.6822,
    					0.7281,
    					0.7704,
    					0.8087,
    					0.8429,
    					0.8727,
    					0.8984,
    					0.9201,
    					0.9381,
    					0.9527,
    					0.9645,
    					0.9737,
    					0.9808,
    					0.9863,
    					0.9903,
    					0.9933,
    					0.9954,
    					0.9969,
    					0.9979,
    					0.9987,
    					0.9991,
    					0.9995,
    					0.9997,
    					0.9998,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			},
    			{
    				term: "Fertilitylow:RelationshipStatusSingle",
    				estimate: 0.621,
    				"std.error": 0.9774,
    				statistic: 0.6354,
    				"p.value": 0.526,
    				"conf.low": -1.3071,
    				"conf.high": 2.5491,
    				min: -4.973,
    				max: 8.451,
    				"cdf.x": [
    					-4.973,
    					-4.8388,
    					-4.7045,
    					-4.5703,
    					-4.4361,
    					-4.3018,
    					-4.1676,
    					-4.0333,
    					-3.8991,
    					-3.7649,
    					-3.6306,
    					-3.4964,
    					-3.3621,
    					-3.2279,
    					-3.0937,
    					-2.9594,
    					-2.8252,
    					-2.6909,
    					-2.5567,
    					-2.4225,
    					-2.2882,
    					-2.154,
    					-2.0197,
    					-1.8855,
    					-1.7513,
    					-1.617,
    					-1.4828,
    					-1.3485,
    					-1.2143,
    					-1.0801,
    					-0.9458,
    					-0.8116,
    					-0.6773,
    					-0.5431,
    					-0.4089,
    					-0.2746,
    					-0.1404,
    					-0.0061,
    					0.1281,
    					0.2623,
    					0.3966,
    					0.5308,
    					0.6651,
    					0.7993,
    					0.9335,
    					1.0678,
    					1.202,
    					1.3363,
    					1.4705,
    					1.6047,
    					1.739,
    					1.8732,
    					2.0075,
    					2.1417,
    					2.2759,
    					2.4102,
    					2.5444,
    					2.6787,
    					2.8129,
    					2.9471,
    					3.0814,
    					3.2156,
    					3.3499,
    					3.4841,
    					3.6183,
    					3.7526,
    					3.8868,
    					4.0211,
    					4.1553,
    					4.2895,
    					4.4238,
    					4.558,
    					4.6923,
    					4.8265,
    					4.9607,
    					5.095,
    					5.2292,
    					5.3635,
    					5.4977,
    					5.6319,
    					5.7662,
    					5.9004,
    					6.0347,
    					6.1689,
    					6.3031,
    					6.4374,
    					6.5716,
    					6.7059,
    					6.8401,
    					6.9743,
    					7.1086,
    					7.2428,
    					7.377,
    					7.5113,
    					7.6455,
    					7.7798,
    					7.914,
    					8.0482,
    					8.1825,
    					8.3167,
    					8.451
    				],
    				"cdf.y": [
    					5.2214e-9,
    					1.1616e-8,
    					2.5371e-8,
    					5.441e-8,
    					1.1457e-7,
    					2.3687e-7,
    					4.8086e-7,
    					9.5856e-7,
    					0.0000018764,
    					0.0000036069,
    					0.0000068088,
    					0,
    					0,
    					0,
    					0.0001,
    					0.0001,
    					0.0002,
    					0.0004,
    					0.0006,
    					0.0009,
    					0.0015,
    					0.0023,
    					0.0034,
    					0.0052,
    					0.0076,
    					0.011,
    					0.0157,
    					0.0219,
    					0.0302,
    					0.0409,
    					0.0545,
    					0.0714,
    					0.092,
    					0.1168,
    					0.146,
    					0.1797,
    					0.218,
    					0.2605,
    					0.307,
    					0.3568,
    					0.4092,
    					0.4632,
    					0.518,
    					0.5724,
    					0.6254,
    					0.6762,
    					0.7239,
    					0.7678,
    					0.8076,
    					0.8429,
    					0.8736,
    					0.8999,
    					0.922,
    					0.9401,
    					0.9548,
    					0.9664,
    					0.9755,
    					0.9824,
    					0.9875,
    					0.9913,
    					0.9941,
    					0.996,
    					0.9974,
    					0.9983,
    					0.9989,
    					0.9993,
    					0.9996,
    					0.9997,
    					0.9999,
    					0.9999,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1,
    					1
    				]
    			}
    		]
    	}
    ];

    var data$1 = /*#__PURE__*/Object.freeze({
        __proto__: null,
        'default': data
    });

    function _combineJoinOptionsHelper(input) {
    	let dict = {};                                              // (key:value) => (option:index in combined)
    	let combined = [];                                          // holds the arrays of options to be joined (including disregarded ones)
    	for (let [opt1, opt2] of input) {
    		let ind1 = dict[opt1], ind2 = dict[opt2];               // the indices of where the join array is in combined
    		if (opt1 in dict && opt2 in dict) {
    			combined[dict[opt1]].push(...combined[dict[opt2]]); // combine the two arrays (puts all elements of opt2's array into opt1's)
    			for (let opt of combined[dict[opt2]])               // change the index of the elements opt2's array to be the new combined array
    				dict[opt] = dict[opt1];
    		} else if (opt1 in dict) {                              // aka (opt1 in dict && !(opt2 in dict))
    			combined[ind1].push(opt2);                          // put opt2 in the array that opt1 is in
    			dict[opt2] = dict[opt1];                            // add opt2 to the dictionary, set index of opt2 to the index of opt1
    		} else if (opt2 in dict) {                              // aka (opt2 in dict && !(opt1 in dict))
    			combined[ind2].push(opt1);                          // put opt1 in the array that opt2 is in
    			dict[opt1] = dict[opt2];                            // add opt1 to the dictionary, set index of opt1 to the index of opt2
    		} else {
    			combined.push([opt1, opt2]);                        // create a new array with opt1 and opt2
    			dict[opt1] = combined.length-1;                     // set index of opt1 to the new array
    			dict[opt2] = combined.length-1;                     // set index of opt2 to the new array
    		}
    	}
    	let indices = [...new Set(Object.values(dict))];            // to get a unique array of indices
    	let ret = [];                                               // holds the arrays of options to be joined (not including disregarded ones)
    	for (let i of indices) {                                    // places the relevant arrays into ret
    		ret.push(combined[i]);
    	}
    	return ret;
    }

    function combineJoinOptions(input_array) {
    	let arr = structuredClone(input_array);
    	let params = arr.map(d => d['parameter']).filter((v, i, a) => a.indexOf(v) === i);
    	let new_arr = {};
    	
    	for (let i in params) {
    		let input = arr.filter(d => (d['parameter'] == params[i]))
    						.map(d => d['options']);
    		let output = _combineJoinOptionsHelper(input); // recurseCombine(input);
    		new_arr[params[i]] = output;
    	}

    	return Object.entries(new_arr);
    }

    const arrayEqual = (x, y) => x.map((d, i) => (d === y[i])).reduce((a, b) => (a && b));

    const whichDiff = (x, y) => {
    	return x.map((d, i) => (d === y[i]))
    			.map((d, i) => { 
    				if (!d) { return i } else { return false } 
    			})
    			.filter( i => !(i === false)) };

    const mean = (...x) => x.reduce((a, b) => a + b) / x.length;

    const any = (...x) => {
    		// console.log(x, x.every((x)=> typeof x === 'boolean'))
    		if (x.every((x)=> typeof x === 'boolean')) {
    			return x.some((x)=> (x == true))
    		} //throw "expected array of booleans"
    	};

    const is2dArray = (array) =>  array.every(item => Array.isArray(item));

    /**
     * 
     * @param {array} gridData Multiverse grid data
     * @param {array} outcomeData Multiverse outcome data
     * @param {array} estimateData Multiverse estimate data
     * @param {boolean} ascending Boolean for ascending or descending
     * @param {boolean} outcomeIndex Index of the outcome we are sorting on
     * 
     * 
     * @return {object} Object containg sorted gridData, outcomeData, and estimateData 
     */
     function sortByOutcome(gridData, outcomeData, estimateData, ascending = false, outcomeIndex = 0) {
    	//  CHECK AS THE Outcome Data IS INITIALLY AN EMPTY ARRAY
    	if (!outcomeData.length){
    		return {gridData, outcomeData, estimateData}
    	}

    	// Add the sorting factor (the outcome that we are sorting on) to the gridData
    	let gridDataSortingList = [];
    	for (let i =0; i< outcomeData[outcomeIndex].length; i++){
    		let e;
    		if (Array.isArray(estimateData[outcomeIndex][i])) e = mean(...estimateData[outcomeIndex][i]);
    			else e = estimateData[outcomeIndex][i];
    		gridDataSortingList.push({'gridData': gridData[i], 'sortingFactor': e});
    	}

    	// Add the sorting factor (the outcome that we are sorting on) to each outcome 
    	let outcomeDataSortingList = [];
    	for (let i =0; i< outcomeData.length; i++){
    		var list = [];
    		for (let j=0; j< outcomeData[outcomeIndex].length; j++) {
    			let e;
    				if (estimateData[outcomeIndex][j].length === undefined) e = estimateData[outcomeIndex][j];
    					else e = mean(...estimateData[outcomeIndex][j]);
    			list.push({'outcomeData': outcomeData[i][j], 'estimateData':estimateData[i][j], 'sortingFactor': e});
    		}
    		outcomeDataSortingList.push(list);
    	}

    	// sort each of the outcomes according to the sorting factor
    	for (let i=0; i<outcomeDataSortingList.length; i++){
    		if (ascending) {
    			outcomeDataSortingList[i].sort(function(a, b) {
    				return ((a.sortingFactor < b.sortingFactor) ? -1 : ((a.sortingFactor == b.sortingFactor) ? 0 : 1));
    			});
    		}
    		else {
    			outcomeDataSortingList[i].sort(function(a, b) {
    				return ((a.sortingFactor > b.sortingFactor) ? -1 : ((a.sortingFactor == b.sortingFactor) ? 0 : 1));
    			});
    		}
    		
    	}

    	// Sort the grid data according to its sorting factor
    	if (ascending) {
    		gridDataSortingList.sort(function(a, b) {
    			return ((a.sortingFactor < b.sortingFactor) ? -1 : ((a.sortingFactor == b.sortingFactor) ? 0 : 1));
    		});
    	}
    	else {
    		gridDataSortingList.sort(function(a, b) {
    			return ((a.sortingFactor > b.sortingFactor) ? -1 : ((a.sortingFactor == b.sortingFactor) ? 0 : 1));
    		});
    	}

    	// Reassign g_data to contain sorted values
    	let g_data = gridDataSortingList.map(k => k.gridData);

    	// Reassign o_data to contain sorted values
    	let o_data = outcomeDataSortingList.map(k => k.map(j => j.outcomeData));

    	// store e_data to contain sorting factors
    	let e_data = outcomeDataSortingList.map(k => k.map(j => j.estimateData));

    	return {g_data, o_data, e_data}
    }

    /* {groups, grid_data, outcome_data, estimate_data} -> {grid_data, outcome_data, estimate_data} */

    /** 
     * 
     * @param {array} parameters the list of parameters
     * @param {array} gridData Multiverse grid data
     * @param {array} outcomeData Multiverse outcome data
     * @param {array} estimateData Multiverse estimate data
     * @param {boolean} ascending Boolean for ascending or descending
     * @param {boolean} outcomeIndex Index of the outcome we are sorting on
     * 
     * 
     * @return {gridData, outcomeData, estimateData}
     */
    function sortByGroup(sortByGroupParams, gridData, outcomeData, estimateData, ascending = false, outcomeIndex = 0) {
    	var groups = [...sortByGroupParams];
    	if (groups.length == 0) {
    		// base (non-recursive) case
    		// when there are no groups: groups == []
    		// return the output of sort by Outcomes
    		let {g_data, o_data, e_data} = sortByOutcome(gridData, outcomeData, estimateData, ascending, outcomeIndex);
    		return {g_data, o_data, e_data}
    	} else {
    		// Step 1:
    		// for each parameter in group, if the parameter contains N options
    		// partition gridData, outcomeData, estimateData into N data structures
    		// and sort each partition

    		// determine partition parameter at current recursion level
    		let partition_parameter = groups[0];

    		// figure out how many partitions to make
    		// by getting unique options for that parameter
    		// based on the current state of the visualisation (considering joins and exclusions)
    		let options = gridData.map(d => JSON.stringify(d[partition_parameter])).filter((v, i, a) => a.indexOf(v) === i);
    		let partitions = Array.apply(null, Array(options.length)).map(function () {});

    		// make the partitions;
    		let [partitioned_g_data, partitioned_o_data, partitioned_e_data] = makePartitions(groups, gridData, outcomeData, estimateData);
    		// Step 2: On each partition, we will call SortByGroup, and pass as first argument G = groups / {partition_parameter}

    		// update groups to remove partition parameter
    		groups = groups.slice(1, groups.length);

    		// call sortByGroups on each partition
    		let groupedSortResult = partitions.map((d, i) => {
    			let {g_data, o_data, e_data} = sortByGroup(groups, partitioned_g_data[i], partitioned_o_data[i], partitioned_e_data[i], ascending, outcomeIndex);
    			return {g_data, o_data, e_data}
    		}).map(d => {
    			if (is2dArray(d.e_data[outcomeIndex])) {
    				d.sortingFactor = mean(...d.e_data[outcomeIndex].map(x => mean(...x)));
    			} else {
    				d.sortingFactor = mean(...d.e_data[outcomeIndex]);
    			}
    			
    			return d
    		});

    		// Step 3:
    		// We will then concatenate the N partitioned data structures into a single data structure
    		// when concatenating the data structures, we will need to ensure the right order...
    		if (ascending) {
    			groupedSortResult.sort(function(a, b) {
    				return ((a.sortingFactor < b.sortingFactor) ? -1 : ((a.sortingFactor == b.sortingFactor) ? 0 : 1));
    			});
    		}
    		else {
    			groupedSortResult.sort(function(a, b) {
    				return ((a.sortingFactor > b.sortingFactor) ? -1 : ((a.sortingFactor == b.sortingFactor) ? 0 : 1));
    			});
    		}

    		// Step 4:
    		// We will transform the groupedSortResult data structure into 
    		// {grid_data, outcome_data, estimate_data} as per our contract
    		let g_data = groupedSortResult.map(d => d.g_data).flat(1);

    		// outcome data
    		// the structure of groupedSortResult.map(d => d.o_data) is:
    		// [ [ [ ... (m/p elements)], [], ... (k elements) ], [], ... (p elements) ] 
    		// where,
    		// 		p is the # of partitions
    		//		k is the # of outcomes (# of plots)
    		// 		m is the # of universes
    		// 
    		// desired output: [ [... (m elements)], [], [], ... (k elements) ]
    		// 
    		// to get this we first need to transpose to get:
    		// [ [ [ ... (m/p elements)], [], ... (p elements) ], [], ... (k elements) ]
    		// then we can flatten each of [ [ ... (m/p elements)], [], ... (p elements) ] to get what we want
    		let o_data = transpose( 
    							groupedSortResult.map(d => d.o_data) 
    						)
    						.map(d => d.flat(1));

    		// estimate data
    		// the structure is similar to that of o_data, so we follow the same steps
    		let e_data = transpose( 
    							groupedSortResult.map(d => d.e_data) 
    						)
    						.map(d => d.flat(1));

    		return {g_data, o_data, e_data}
    	}
    }


    function makePartitions(groups, g_data, o_data, e_data) {
    	// determine partition parameter at current recursion level
    	let partition_parameter = groups[0];

    	// figure out how many partitions to make
    	// by getting unique options for that parameter
    	// based on the current state of the visualisation (considering joins and exclusions)
    	let options = g_data.map(d => JSON.stringify(d[partition_parameter])).filter((v, i, a) => a.indexOf(v) === i);

    	// make the partitions;
    	let partition_indices = options.map(d => 
    		g_data.map((x, n) => {
    			if (JSON.stringify(x[partition_parameter]) == d) return n
    		}).filter(x => x !== undefined)
    	);
    	
    	let partitioned_g_data = partition_indices.map(x =>
    		x.map(k => {
    			return g_data.map((d, i) => {
    				if (k == i) return d
    			}).filter(x => x !== undefined)[0]
    		})
    	);

    	// need to take a slightly different approach when it comes to o_data and e_data
    	// let o = [outcomes_var1], [outcomes_var2]
    	// [o] -> [o | g == g1, o | g == g2, o | g == g3, ...]
    	let partitioned_o_data = partition_indices.map(x =>
    		o_data.map(y => {
    			return x.map(k => {
    				return y.map((d, i) => {
    					if (k == i) return d
    				}).filter(x => x !== undefined)[0]
    			})
    		})			
    	);

    	let partitioned_e_data = partition_indices.map(x =>
    		e_data.map(y => {
    			return x.map(k => {
    				return y.map((d, i) => {
    					if (k == i) return d
    				}).filter(x => x !== undefined)[0]
    			})
    		})
    	);

    	return [partitioned_g_data, partitioned_o_data, partitioned_e_data]
    }

    function which_option_index(option_list, curr_options) {
    	return option_list.map((d, i) => {
    		if (curr_options.includes(d)) {
    			return i;
    		} else {
    			return null;
    		}
    	}).filter(i => (i != null))
    }

    function calculate_mirror_CDF(d1, d2) {
    	if (d1 > 0.5 & d2 > 0.5) { d1 = (1 - d1); d2 = (1 - d2);}
    	else {
    		if (d2 > 0.5 & (1 - d2) > d1) { d2 = 0.5; }
    		else if (d2 > 0.5 & (1 - d2) < d1) { d2 = (1 - d2); d1 = 0.5;}
    	}

    	if (d1 < d2) { return [d1, d2] }
    	else { return [d2, d1] }
    }


    /**
     * function which processes the result of exclusion and combinations of options on outcomes (CDF and estimate); returns the processed outcomeData (CDF) and estimateData (point estimate) objects
     * 
     * @param {object} g_data Multiverse grid data
     * @param {object} o_data Multiverse outcome data
     * @param {array} option_list 2D array of parameters and their options
     * @param {object} combine 2D array containing [paramter, [options_to_join]]
     * @param {array} exclude List of objects containing {parameter, option} to exclude
     * @param {object} e_data Estimate data for each of the outcomes
     * 
     * 
     * @return {object} an object containing processed outcome and estimate data arrays: {o_data, e_data}
     **/
    function excludeAndCombineOutcomes (g_data, o_data, option_list, exclude, combine, e_data) {
    	let size = g_data.length;
    	let o_data_processed = o_data;
    	let e_data_processed = e_data;
    	
    	combine.map(d => d[1].map(x => ([d[0], x])))
    							.flat()
    							.map((d, i) => (Object.assign({}, {id: i}, {parameter: d[0]}, {group: d[1].flat()})));
    	
    	// if there are any options to exclude
    	if (exclude.length > 0) {
    		let toFilter = g_data.map(j => exclude.map(i => j[i['parameter']] != i['option']).reduce((a, b) => (a && b)));

    		g_data = g_data.filter( (i, n) => toFilter[n] );
    		o_data_processed = o_data.filter( (i, n) => toFilter[n] );
    		e_data_processed = e_data.filter( (i, n) => toFilter[n] );
    	}

    	if (combine.length > 0) {
    		let groups$1 = combine.map(d => d[1].map(x => ([d[0], x])))
    							.flat()
    							.map((d, i) => (Object.assign({}, {id: i}, {parameter: d[0]}, {group: d[1].flat()})));
    		// 
    		let grouping_vector = g_data.map((d, i) => {
    			let options = Object.values(d).flat();
    			let idx = option_list.map(x => which_option_index(x, options)).flat();
    			let g = groups$1
    				.map(x => {
    					let includes = options.map(d => x['group'].includes(d)); // .reduce((a, b) => (a || b));
    					return [includes.indexOf(true), x['id']];
    				});

    			g.forEach(x => {
    				if (x[0] > -1) {
    					idx[x[0]] = size + x[1];
    				}
    			});

    			return JSON.stringify(idx);
    		});
    		
    		o_data_processed = groups(
    			o_data_processed.map((d, i) => ({group: grouping_vector[i], data: d})),
    				d => d.group
    			).map(d => d[1].map(x => {
    				delete x.group;
    				return Object.values(x).flat();
    			})).map(x => {
    				let mod = rollups(x.flat(), v => {
    					return calculate_mirror_CDF(...[min$2(v, d => d[1]), max$3(v, d => d[1])]);
    					// return [d3.min(v, d => d[1]), d3.max(v, d => d[1])]
    				}, d => d[0]);
    				return mod
    			})
    			.map(x => x.map(p => p.flat()));

    		// console.log(o_data_processed);

    		e_data_processed = groups(
    			e_data_processed.map((d, i) => ({group: grouping_vector[i], data: d})),
    				d => d.group
    			).map(d => d[1].map(x => {
    				delete x.group;
    				return Object.values(x).flat();
    			}).flat());
    	} else {
    		o_data_processed = o_data_processed.map( d => d.map( x => {
    			if (x[1] > 0.5) { x[1] = (1 - x[1]); }
    			if (x[2] > 0.5) { x[2] = (1 - x[2]); }	
    			return x
    		}) );
    	}

    	return {e_data_processed, o_data_processed};
    }

    const subscriber_queue = [];
    /**
     * Create a `Writable` store that allows both updating and reading by subscription.
     * @param {*=}value initial value
     * @param {StartStopNotifier=}start start and stop notifications for subscriptions
     */
    function writable(value, start = noop$4) {
        let stop;
        const subscribers = new Set();
        function set(new_value) {
            if (safe_not_equal(value, new_value)) {
                value = new_value;
                if (stop) { // store is ready
                    const run_queue = !subscriber_queue.length;
                    for (const subscriber of subscribers) {
                        subscriber[1]();
                        subscriber_queue.push(subscriber, value);
                    }
                    if (run_queue) {
                        for (let i = 0; i < subscriber_queue.length; i += 2) {
                            subscriber_queue[i][0](subscriber_queue[i + 1]);
                        }
                        subscriber_queue.length = 0;
                    }
                }
            }
        }
        function update(fn) {
            set(fn(value));
        }
        function subscribe(run, invalidate = noop$4) {
            const subscriber = [run, invalidate];
            subscribers.add(subscriber);
            if (subscribers.size === 1) {
                stop = start(set) || noop$4;
            }
            run(value);
            return () => {
                subscribers.delete(subscriber);
                if (subscribers.size === 0) {
                    stop();
                    stop = null;
                }
            };
        }
        return { set, update, subscribe };
    }

    const gridCollapse = writable(0);
    const exclude_options = writable([]);
    const join_options = writable([]);
    const group_params = writable([]);
    const parameter_scale = writable({});
    const option_scale = writable({});

    // Stores
    let options_to_exclude;
    // let options_to_join;

    exclude_options.subscribe(value => options_to_exclude=value);
    // const j_unsub =  join_options.subscribe(value => options_to_join=value);

    class multiverseMatrix {
    	constructor (dat) {		
    		// data for the plot constructor
    		this.data = dat;

    		// meta data for the multiverse object
    		this.universes = [...new Set(dat.map(d => d['.universe']))];
    		this.size = this.universes.length;
    		this.allOutcomeVars = dat[0]["results"].map(i => i["term"]);
    		this.outcomes = []; //[this.allOutcomeVars[0]];
    		this.gridData = null;
    		this.gridDataAll = null;

    		// sorting index, initialized to -1 to indicate no default sort
    		this.sortByIndex = -1;
    		this.sortAscending = true; 
    	}

    	parameters = () => {

    		// get the parameters from the first row as this is a rectangular dataset
    		// is there a better way to do this?
    		let param_names = Object.keys(this.data[0]['.parameter_assignment']);


    		let dat = this.data.map(d => Object.assign( {}, ...param_names.map((i) => ({[i]: d[i]})) ));

    		return Object.assign( {}, ...param_names.map( (x) => ({[x]: groups(dat, d => d[x]).map( i => i[0] )}) ) );
    	}

    	// creates the data structure for the grid matrix
    	// we will draw this plot as a bar chart
    	// input: JSON multiverse object (this.data), parameters (this.parameters)
    	// output: rectangular data structure with columns corresponding to each parameter, 
    	// 		   estimate, conf.low (if applicable), conf.high (if applicable)
    	initializeData = (vis = "CDF") => {
    		let parameters = [...Object.keys(this.parameters())];
    		options_to_exclude = Object.assign({}, ...parameters.map((i) => ({[i]: []})));
    		exclude_options.update(arr => options_to_exclude);

    		this.initializeGridData();
    		this.initializeOutcomeData();
    	}

    	initializeGridData = () => {
    		// creating a shallow copy which is fine for here
    		let parameters = [...Object.keys(this.parameters())];
    		let g_data = this.data.map( d => Object.assign({}, ...parameters.map((i) => ({[i]: [d[i]]}))) );
    		this.gridData = g_data;
    		this.gridDataAll = g_data;
    	}

    	initializeOutcomeData = () => { // change i here
    		let i = this.outcomes.length;
    		let term = this.allOutcomeVars[0];
    		let e_data, o_data;
    		let combine = [], exclude = [];

    		let option_list = Object.entries(this.parameters()).map(d => d[1]);

    		this.outcomes.push({
    			var: term,
    			density: null,
    			id: this.outcomes.length === 0 ? 0 : this.outcomes[this.outcomes.length-1].id + 1
    		});

    		let formattedCDFOutcomeData = formatCDFOutcomeData(this.data, term);
    		o_data = formattedCDFOutcomeData.map((d, n) => zip(d['cdf.x'], d['cdf.y'], d['cdf.y']));
    		e_data = formattedCDFOutcomeData.map((d,n)=>d['estimate']);
    		// We only support mirrored CDFs at this point, but in the future we may consider supporting other chart types
    		// if (graph == CI) {
    		// 	this.outcomes[i].data = this.data.map(function(d) { 
    		// 		return Object.assign({}, ...d["results"].filter(i => i.term == term).map(
    		// 			i => Object.assign({}, ...["estimate", "conf.low", "conf.high"].map((j) => ({[j]: i[j]})))
    		// 		))
    		// 	});
    		// } else {
    		// 	let formattedCDFOutcomeData = formatCDFOutcomeData(this.data, term)
    		// 	o_data = formattedCDFOutcomeData.map((d, n) => d3.zip(d['cdf.x'], d['cdf.y'], d['cdf.y']))
    		// 	e_data = formattedCDFOutcomeData.map((d,n)=>d['estimate'])
    		// }

    		const {e_data_processed, o_data_processed} = excludeAndCombineOutcomes(
    			this.gridData, 
    			o_data, 
    			option_list, 
    			exclude,
    			combine,
    			e_data
    		);

    		this.outcomes[i].density = o_data_processed;
    		this.outcomes[i].estimate = e_data_processed;
    	}
    	
    	updateGridData = (join_data = [], exclude_data = []) => {
    		let toJoin = structuredClone(join_data);
    		let toExclude = structuredClone(exclude_data);
    		let combine = combineJoinOptions(toJoin);

    		// deep copy data structures
    		let g_data = structuredClone(this.gridDataAll);
    	
    		combine
    					.map( d => d[1].map( j => [d[0], j]) )
    					.flat(1)
    					.map( i => ({"parameter": i[0], "option": i[1], "replace": i[1][0]}) );
    	
    		let exclude = Object.entries(toExclude).filter(d => (d[1].length != 0))
    					.map( d => d[1].map( j => [d[0], j]) )
    					.flat(1)
    					.map( i => ({"parameter": i[0], "option": i[1]}) );
    	
    		if (exclude.length > 0) {
    			let toFilter = g_data.map(j => exclude.map(i => j[i['parameter']] != i['option']).reduce((a, b) => (a && b)));
    			g_data = g_data.filter( (i, n) => toFilter[n] );
    		}
    	
    		if (combine.length > 0) {
    			let groups = combine.map(d => d[1].map(x => ([d[0], x])))
    							.flat()
    							.map((d, i) => (Object.assign({}, {id: i}, {parameter: d[0]}, {group: d[1].flat()})));
    	
    			let vec = g_data.map((d, i) => {
    				let options = Object.values(d).flat();
    				groups.forEach(x => {
    						let includes = options.map(d => x['group'].includes(d)).reduce((a, b) => (a || b));
    						if (includes) {
    							d[x['parameter']] = x['group'];
    						}
    					});
    				return d
    			});
    	
    			let duplicates_data = vec.map(d => JSON.stringify(Object.values(d).flat()));
    	
    			let non_duplicates = duplicates_data.map((d, i) => {
    				return duplicates_data.indexOf(d) == i;
    			});
    	
    			g_data = vec.filter((d, i) => non_duplicates[i]);
    		}

    		this.gridData = g_data;
    	}
    	
    	updateOutcomeData = (index, term, join_data = [], exclude_data = []) => {		
    		// gets a re-intitialzied version of gridData
    		let parameters = [...Object.keys(this.parameters())];
    		let gridData = this.data.map( d => Object.assign({}, ...parameters.map((i) => ({[i]: [d[i]]}))) );

    		let g_data = structuredClone(gridData);
    		let o_data = structuredClone(this.outcomes[index].density);
    		let e_data;
    		let toJoin = structuredClone(join_data);
    		let toExclude = structuredClone(exclude_data);

    		let exclude = Object.entries(toExclude).filter(d => (d[1].length != 0))
    					.map( d => d[1].map( j => [d[0], j]) )
    					.flat(1)
    					.map( i => ({"parameter": i[0], "option": i[1]}) );
    		let combine = combineJoinOptions(toJoin);


    		g_data.length;

    		let formattedCDFOutcomeData  = formatCDFOutcomeData(this.data, term);
    		o_data = formattedCDFOutcomeData.map((d, n) => zip(d['cdf.x'], d['cdf.y'], d['cdf.y']));
    		e_data = formattedCDFOutcomeData.map((d,n)=>d['estimate']);

    		// we need to update the term and the associated data for creating CDFs
    		// if (graph == CI) {
    		// 	o_data = this.data.map(function(d) { 
    		// 		return Object.assign({}, ...d["results"].filter(i => i.term == term).map(
    		// 			i => Object.assign({}, ...["estimate", "conf.low", "conf.high"].map((j) => ({[j]: i[j]})))
    		// 		))
    		// 	});
    		// } else {
    		// 	let formattedCDFOutcomeData  = formatCDFOutcomeData(this.data, term);
    		// 	o_data = formattedCDFOutcomeData.map((d, n) => d3.zip(d['cdf.x'], d['cdf.y'], d['cdf.y']));
    		// 	e_data = formattedCDFOutcomeData.map((d,n)=>d['estimate']);
    		// }

    		let option_list = Object.entries(this.parameters()).map(d => d[1]);

    		const {o_data_processed, e_data_processed} = excludeAndCombineOutcomes(g_data, o_data, option_list, exclude, combine, e_data);
    		this.outcomes[index].density = o_data_processed;
    		this.outcomes[index].estimate = e_data_processed;
    	}

    	updateHandler(join, exclude, sortByGroupParams = []) {
    		console.log("calling update handler");
    		
    		// call update grid data
    		this.updateGridData(join, exclude);
    	
    		// call update otucomes
    		for (let i in this.outcomes) {
    			this.updateOutcomeData(i, this.outcomes[i].var, join, exclude);
    		}

    		let outcomeData = this.outcomes.map(d => d.density);
    		let estimateData;

    		if (this.sortByIndex != -1) {
    			estimateData = this.outcomes.map(d => d.estimate);

    			// console.log("Calling sort by groups with:", sortByGroupParams)
    			const {g_data, o_data, e_data} = sortByGroup(sortByGroupParams, this.gridData, outcomeData, estimateData, this.sortAscending,this.sortByIndex);

    			this.gridData = g_data;

    			// if we want estimates for only the vector which is being sorted by: e_data[this.sortIndex]
    			let temp = this.outcomes.map((d, i) => {
    				d.density = o_data[i];
    				d.estimate = e_data[i];
    				return d;
    			});
    			this.outcomes = temp;
    		}
    	}
    }


    /**
     * function for processing array containing CDF information 
     * 
     * @param {object} data Multiverse data containing information about each universe and CDF for each term
     * @param {string} term Coefficient name
     * 
     * @return {array} array of objects in the following format
     * [
     *     {cdf.x: [...], cdf.y: [...], estimate: ...}, // corresponds to each universe (or group of universes when joined)
     *     ...
     * ]
     **/
    function formatCDFOutcomeData(data, term){
    	let temp = data.map(function(d) { 
    		return Object.assign({}, ...d["results"].filter(i => i.term == term).map(
    			i => Object.assign({}, ...["cdf.x", "cdf.y", "estimate"].map((j) => ({[j]: i[j]})))
    		))
    	});
    	return temp
    }

    const cell = { width: 32, height: 24, heightCollapsed: 2, padding: 4 };
    const nameContainer = { width: 32, height: 80, padding: 4 };
    const groupPadding = 20;
    const header = {size: 14, top: 30, right: 0, bottom: 0, left: 0};
    const text = 12;
    const outcomeVisWidth = 240;
    const margin = {top: 40, right: 20, bottom: 15, left: 40};
    const iconSize = 24;
    const namingDim = (iconSize + cell.padding) + nameContainer.height;
    const windowHeight = (window.innerHeight - 170);
    const scrollbarWidth = 12;
    const gridNamesHeight = margin.top + 4 * cell.padding + iconSize + namingDim; // yscale(0)

    const colors = {
    	active : "#ff3e00",
    	inactive : "#abb7c4",
    	secondary : "#8ecae6",
    	primary : "#084C61",
    	background : "#f7f7f7",
    	white : "#ffffff",
    	gray: '#777777',
    	hover: '#ff3e00'
    };

    const file$8 = "src/components/Vis.svelte";

    function get_each_context$4(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[27] = list[i];
    	child_ctx[5] = i;
    	return child_ctx;
    }

    function get_each_context_1$2(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[29] = list[i];
    	return child_ctx;
    }

    function get_each_context_2$1(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[29] = list[i];
    	return child_ctx;
    }

    function get_each_context_3$1(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[34] = list[i];
    	return child_ctx;
    }

    // (67:4) {#each allOutcomeVars as t}
    function create_each_block_3$1(ctx) {
    	let option;
    	let t0_value = /*t*/ ctx[34] + "";
    	let t0;
    	let t1;
    	let option_value_value;

    	const block = {
    		c: function create() {
    			option = element("option");
    			t0 = text$2(t0_value);
    			t1 = space();
    			option.__value = option_value_value = /*t*/ ctx[34];
    			option.value = option.__value;
    			add_location(option, file$8, 67, 5, 2078);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, option, anchor);
    			append_dev(option, t0);
    			append_dev(option, t1);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty[0] & /*allOutcomeVars*/ 4 && t0_value !== (t0_value = /*t*/ ctx[34] + "")) set_data_dev(t0, t0_value);

    			if (dirty[0] & /*allOutcomeVars*/ 4 && option_value_value !== (option_value_value = /*t*/ ctx[34])) {
    				prop_dev(option, "__value", option_value_value);
    				option.value = option.__value;
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(option);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_3$1.name,
    		type: "each",
    		source: "(67:4) {#each allOutcomeVars as t}",
    		ctx
    	});

    	return block;
    }

    // (81:3) {:else}
    function create_else_block_2(ctx) {
    	let button;
    	let svg_1;
    	let path0;
    	let path1;
    	let button_id_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			svg_1 = svg_element("svg");
    			path0 = svg_element("path");
    			path1 = svg_element("path");
    			attr_dev(path0, "d", "M0 0h24v24H0z");
    			attr_dev(path0, "fill", "none");
    			add_location(path0, file$8, 82, 107, 3163);
    			attr_dev(path1, "d", "M16 17.01V10h-2v7.01h-3L15 21l4-3.99h-3zM9 3L5 6.99h3V14h2V6.99h3L9 3z");
    			add_location(path1, file$8, 82, 144, 3200);
    			attr_dev(svg_1, "xmlns", "http://www.w3.org/2000/svg");
    			attr_dev(svg_1, "height", "24px");
    			attr_dev(svg_1, "viewBox", "0 0 24 24");
    			attr_dev(svg_1, "width", "24px");
    			attr_dev(svg_1, "fill", "#000000");
    			attr_dev(svg_1, "class", "svelte-1p9zk5w");
    			add_location(svg_1, file$8, 82, 5, 3061);
    			attr_dev(button, "class", "vis-button svelte-1p9zk5w");
    			attr_dev(button, "id", button_id_value = "vis-" + /*i*/ ctx[5]);
    			add_location(button, file$8, 81, 4, 2970);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, svg_1);
    			append_dev(svg_1, path0);
    			append_dev(svg_1, path1);

    			if (!mounted) {
    				dispose = listen_dev(button, "click", /*click_handler_2*/ ctx[23], false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (dirty[0] & /*i*/ 32 && button_id_value !== (button_id_value = "vis-" + /*i*/ ctx[5])) {
    				attr_dev(button, "id", button_id_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_else_block_2.name,
    		type: "else",
    		source: "(81:3) {:else}",
    		ctx
    	});

    	return block;
    }

    // (71:3) {#if sortByIndex == i}
    function create_if_block_2(ctx) {
    	let if_block_anchor;

    	function select_block_type_1(ctx, dirty) {
    		if (/*sortAscending*/ ctx[3]) return create_if_block_3;
    		return create_else_block_1;
    	}

    	let current_block_type = select_block_type_1(ctx);
    	let if_block = current_block_type(ctx);

    	const block = {
    		c: function create() {
    			if_block.c();
    			if_block_anchor = empty$3();
    		},
    		m: function mount(target, anchor) {
    			if_block.m(target, anchor);
    			insert_dev(target, if_block_anchor, anchor);
    		},
    		p: function update(ctx, dirty) {
    			if (current_block_type === (current_block_type = select_block_type_1(ctx)) && if_block) {
    				if_block.p(ctx, dirty);
    			} else {
    				if_block.d(1);
    				if_block = current_block_type(ctx);

    				if (if_block) {
    					if_block.c();
    					if_block.m(if_block_anchor.parentNode, if_block_anchor);
    				}
    			}
    		},
    		d: function destroy(detaching) {
    			if_block.d(detaching);
    			if (detaching) detach_dev(if_block_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_2.name,
    		type: "if",
    		source: "(71:3) {#if sortByIndex == i}",
    		ctx
    	});

    	return block;
    }

    // (76:4) {:else}
    function create_else_block_1(ctx) {
    	let button;
    	let svg_1;
    	let path0;
    	let path1;
    	let button_id_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			svg_1 = svg_element("svg");
    			path0 = svg_element("path");
    			path1 = svg_element("path");
    			attr_dev(path0, "d", "M0 0h24v24H0V0z");
    			attr_dev(path0, "fill", "none");
    			add_location(path0, file$8, 77, 127, 2807);
    			attr_dev(path1, "d", "M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z");
    			add_location(path1, file$8, 77, 166, 2846);
    			attr_dev(svg_1, "class", "active_svg svelte-1p9zk5w");
    			attr_dev(svg_1, "xmlns", "http://www.w3.org/2000/svg");
    			attr_dev(svg_1, "height", "24px");
    			attr_dev(svg_1, "viewBox", "0 0 24 24");
    			attr_dev(svg_1, "width", "24px");
    			attr_dev(svg_1, "fill", "#000000");
    			add_location(svg_1, file$8, 77, 6, 2686);
    			attr_dev(button, "class", "vis-button svelte-1p9zk5w");
    			attr_dev(button, "id", button_id_value = "vis-" + /*i*/ ctx[5]);
    			add_location(button, file$8, 76, 5, 2559);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, svg_1);
    			append_dev(svg_1, path0);
    			append_dev(svg_1, path1);

    			if (!mounted) {
    				dispose = listen_dev(button, "click", /*click_handler_1*/ ctx[22], false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (dirty[0] & /*i*/ 32 && button_id_value !== (button_id_value = "vis-" + /*i*/ ctx[5])) {
    				attr_dev(button, "id", button_id_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_else_block_1.name,
    		type: "else",
    		source: "(76:4) {:else}",
    		ctx
    	});

    	return block;
    }

    // (72:4) {#if sortAscending}
    function create_if_block_3(ctx) {
    	let button;
    	let svg_1;
    	let path0;
    	let path1;
    	let button_id_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			svg_1 = svg_element("svg");
    			path0 = svg_element("path");
    			path1 = svg_element("path");
    			attr_dev(path0, "d", "M0 0h24v24H0V0z");
    			attr_dev(path0, "fill", "none");
    			add_location(path0, file$8, 73, 127, 2407);
    			attr_dev(path1, "d", "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z");
    			add_location(path1, file$8, 73, 166, 2446);
    			attr_dev(svg_1, "class", "active_svg svelte-1p9zk5w");
    			attr_dev(svg_1, "xmlns", "http://www.w3.org/2000/svg");
    			attr_dev(svg_1, "height", "24px");
    			attr_dev(svg_1, "viewBox", "0 0 24 24");
    			attr_dev(svg_1, "width", "24px");
    			attr_dev(svg_1, "fill", "#000000");
    			add_location(svg_1, file$8, 73, 6, 2286);
    			attr_dev(button, "class", "vis-button svelte-1p9zk5w");
    			attr_dev(button, "id", button_id_value = "vis-" + /*i*/ ctx[5]);
    			add_location(button, file$8, 72, 5, 2191);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, svg_1);
    			append_dev(svg_1, path0);
    			append_dev(svg_1, path1);

    			if (!mounted) {
    				dispose = listen_dev(button, "click", /*click_handler*/ ctx[21], false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (dirty[0] & /*i*/ 32 && button_id_value !== (button_id_value = "vis-" + /*i*/ ctx[5])) {
    				attr_dev(button, "id", button_id_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_3.name,
    		type: "if",
    		source: "(72:4) {#if sortAscending}",
    		ctx
    	});

    	return block;
    }

    // (95:3) {#each xscale.ticks(5) as tick}
    function create_each_block_2$1(ctx) {
    	let g;
    	let line_1;
    	let text_1;
    	let t_value = /*tick*/ ctx[29] + "";
    	let t;
    	let g_transform_value;

    	const block = {
    		c: function create() {
    			g = svg_element("g");
    			line_1 = svg_element("line");
    			text_1 = svg_element("text");
    			t = text$2(t_value);
    			attr_dev(line_1, "class", "tick");
    			attr_dev(line_1, "y2", "-6");
    			attr_dev(line_1, "stroke", "black");
    			add_location(line_1, file$8, 96, 5, 4039);
    			attr_dev(text_1, "text-anchor", "middle");
    			attr_dev(text_1, "dy", "0em");
    			attr_dev(text_1, "y", -text);
    			set_style(text_1, "font-size", text);
    			add_location(text_1, file$8, 97, 5, 4088);
    			attr_dev(g, "class", "tick");
    			attr_dev(g, "transform", g_transform_value = "translate(" + /*xscale*/ ctx[8](/*tick*/ ctx[29]) + ", 0)");
    			add_location(g, file$8, 95, 4, 3976);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, g, anchor);
    			append_dev(g, line_1);
    			append_dev(g, text_1);
    			append_dev(text_1, t);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty[0] & /*xscale*/ 256 && t_value !== (t_value = /*tick*/ ctx[29] + "")) set_data_dev(t, t_value);

    			if (dirty[0] & /*xscale*/ 256 && g_transform_value !== (g_transform_value = "translate(" + /*xscale*/ ctx[8](/*tick*/ ctx[29]) + ", 0)")) {
    				attr_dev(g, "transform", g_transform_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(g);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_2$1.name,
    		type: "each",
    		source: "(95:3) {#each xscale.ticks(5) as tick}",
    		ctx
    	});

    	return block;
    }

    // (111:3) {#each xscale.ticks(5) as tick}
    function create_each_block_1$2(ctx) {
    	let g;
    	let line_1;
    	let line_1_y__value;
    	let g_transform_value;

    	const block = {
    		c: function create() {
    			g = svg_element("g");
    			line_1 = svg_element("line");
    			attr_dev(line_1, "class", "grid");
    			attr_dev(line_1, "y2", line_1_y__value = /*h*/ ctx[10] - (margin.bottom + gridNamesHeight + cell.padding));
    			attr_dev(line_1, "stroke", "black");
    			attr_dev(line_1, "stroke-opacity", "0.2");
    			add_location(line_1, file$8, 113, 5, 4778);
    			attr_dev(g, "class", "tick");
    			attr_dev(g, "transform", g_transform_value = "translate(" + /*xscale*/ ctx[8](/*tick*/ ctx[29]) + ", 0)");
    			add_location(g, file$8, 111, 4, 4657);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, g, anchor);
    			append_dev(g, line_1);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty[0] & /*h*/ 1024 && line_1_y__value !== (line_1_y__value = /*h*/ ctx[10] - (margin.bottom + gridNamesHeight + cell.padding))) {
    				attr_dev(line_1, "y2", line_1_y__value);
    			}

    			if (dirty[0] & /*xscale*/ 256 && g_transform_value !== (g_transform_value = "translate(" + /*xscale*/ ctx[8](/*tick*/ ctx[29]) + ", 0)")) {
    				attr_dev(g, "transform", g_transform_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(g);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_1$2.name,
    		type: "each",
    		source: "(111:3) {#each xscale.ticks(5) as tick}",
    		ctx
    	});

    	return block;
    }

    // (122:4) {#if !$gridCollapse}
    function create_if_block_1(ctx) {
    	let path;
    	let path_d_value;

    	const block = {
    		c: function create() {
    			path = svg_element("path");
    			attr_dev(path, "class", "cdf svelte-1p9zk5w");
    			attr_dev(path, "d", path_d_value = /*area*/ ctx[15](/*universe*/ ctx[27]));
    			attr_dev(path, "stroke", colors.secondary);
    			attr_dev(path, "stroke-width", "1.5");
    			attr_dev(path, "opacity", "0.8");
    			add_location(path, file$8, 122, 5, 5181);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, path, anchor);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty[0] & /*area, data*/ 32770 && path_d_value !== (path_d_value = /*area*/ ctx[15](/*universe*/ ctx[27]))) {
    				attr_dev(path, "d", path_d_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(path);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1.name,
    		type: "if",
    		source: "(122:4) {#if !$gridCollapse}",
    		ctx
    	});

    	return block;
    }

    // (130:4) {:else}
    function create_else_block$3(ctx) {
    	let path;
    	let path_d_value;
    	let circle;
    	let circle_cx_value;
    	let circle_cy_value;

    	const block = {
    		c: function create() {
    			path = svg_element("path");
    			circle = svg_element("circle");
    			attr_dev(path, "class", "median");

    			attr_dev(path, "d", path_d_value = /*line*/ ctx[14]([
    				[Math.min(.../*data*/ ctx[1].estimate[/*i*/ ctx[5]]), 0.5],
    				[Math.max(.../*data*/ ctx[1].estimate[/*i*/ ctx[5]]), 0.5]
    			]));

    			attr_dev(path, "stroke", colors.primary);
    			attr_dev(path, "stroke-width", "2");
    			add_location(path, file$8, 130, 5, 5651);
    			attr_dev(circle, "fill", colors.primary);
    			attr_dev(circle, "stroke", colors.primary);
    			attr_dev(circle, "cx", circle_cx_value = /*xscale*/ ctx[8](mean(.../*data*/ ctx[1].estimate[/*i*/ ctx[5]])));
    			attr_dev(circle, "cy", circle_cy_value = /*yscale*/ ctx[7](0.5));
    			attr_dev(circle, "r", "0.5");
    			add_location(circle, file$8, 133, 5, 5821);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, path, anchor);
    			insert_dev(target, circle, anchor);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty[0] & /*line, data*/ 16386 && path_d_value !== (path_d_value = /*line*/ ctx[14]([
    				[Math.min(.../*data*/ ctx[1].estimate[/*i*/ ctx[5]]), 0.5],
    				[Math.max(.../*data*/ ctx[1].estimate[/*i*/ ctx[5]]), 0.5]
    			]))) {
    				attr_dev(path, "d", path_d_value);
    			}

    			if (dirty[0] & /*xscale, data*/ 258 && circle_cx_value !== (circle_cx_value = /*xscale*/ ctx[8](mean(.../*data*/ ctx[1].estimate[/*i*/ ctx[5]])))) {
    				attr_dev(circle, "cx", circle_cx_value);
    			}

    			if (dirty[0] & /*yscale*/ 128 && circle_cy_value !== (circle_cy_value = /*yscale*/ ctx[7](0.5))) {
    				attr_dev(circle, "cy", circle_cy_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(path);
    			if (detaching) detach_dev(circle);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_else_block$3.name,
    		type: "else",
    		source: "(130:4) {:else}",
    		ctx
    	});

    	return block;
    }

    // (125:4) {#if (data.estimate[i].length === undefined)}
    function create_if_block$3(ctx) {
    	let path;
    	let path_d_value;
    	let circle;
    	let circle_cx_value;
    	let circle_cy_value;

    	const block = {
    		c: function create() {
    			path = svg_element("path");
    			circle = svg_element("circle");
    			attr_dev(path, "class", "median");

    			attr_dev(path, "d", path_d_value = /*line*/ ctx[14]([
    				[Math.min(/*data*/ ctx[1].estimate[/*i*/ ctx[5]]), 0.5],
    				[Math.max(/*data*/ ctx[1].estimate[/*i*/ ctx[5]]), 0.5]
    			]));

    			attr_dev(path, "stroke", colors.primary);
    			attr_dev(path, "stroke-width", "2");
    			add_location(path, file$8, 125, 5, 5343);
    			attr_dev(circle, "fill", colors.primary);
    			attr_dev(circle, "stroke", colors.primary);
    			attr_dev(circle, "cx", circle_cx_value = /*xscale*/ ctx[8](/*data*/ ctx[1].estimate[/*i*/ ctx[5]]));
    			attr_dev(circle, "cy", circle_cy_value = /*yscale*/ ctx[7](0.5));
    			attr_dev(circle, "r", "0.5");
    			add_location(circle, file$8, 128, 5, 5507);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, path, anchor);
    			insert_dev(target, circle, anchor);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty[0] & /*line, data*/ 16386 && path_d_value !== (path_d_value = /*line*/ ctx[14]([
    				[Math.min(/*data*/ ctx[1].estimate[/*i*/ ctx[5]]), 0.5],
    				[Math.max(/*data*/ ctx[1].estimate[/*i*/ ctx[5]]), 0.5]
    			]))) {
    				attr_dev(path, "d", path_d_value);
    			}

    			if (dirty[0] & /*xscale, data*/ 258 && circle_cx_value !== (circle_cx_value = /*xscale*/ ctx[8](/*data*/ ctx[1].estimate[/*i*/ ctx[5]]))) {
    				attr_dev(circle, "cx", circle_cx_value);
    			}

    			if (dirty[0] & /*yscale*/ 128 && circle_cy_value !== (circle_cy_value = /*yscale*/ ctx[7](0.5))) {
    				attr_dev(circle, "cy", circle_cy_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(path);
    			if (detaching) detach_dev(circle);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$3.name,
    		type: "if",
    		source: "(125:4) {#if (data.estimate[i].length === undefined)}",
    		ctx
    	});

    	return block;
    }

    // (120:2) {#each data.density as universe, i}
    function create_each_block$4(ctx) {
    	let g;
    	let if_block0_anchor;
    	let g_transform_value;
    	let if_block0 = !/*$gridCollapse*/ ctx[11] && create_if_block_1(ctx);

    	function select_block_type_2(ctx, dirty) {
    		if (/*data*/ ctx[1].estimate[/*i*/ ctx[5]].length === undefined) return create_if_block$3;
    		return create_else_block$3;
    	}

    	let current_block_type = select_block_type_2(ctx);
    	let if_block1 = current_block_type(ctx);

    	const block = {
    		c: function create() {
    			g = svg_element("g");
    			if (if_block0) if_block0.c();
    			if_block0_anchor = empty$3();
    			if_block1.c();
    			attr_dev(g, "class", "universe universe-" + /*i*/ ctx[5] + " svelte-1p9zk5w");
    			attr_dev(g, "transform", g_transform_value = "translate(0, " + (gridNamesHeight + /*y*/ ctx[9](/*i*/ ctx[5])) + ")");
    			add_location(g, file$8, 120, 3, 5066);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, g, anchor);
    			if (if_block0) if_block0.m(g, null);
    			append_dev(g, if_block0_anchor);
    			if_block1.m(g, null);
    		},
    		p: function update(ctx, dirty) {
    			if (!/*$gridCollapse*/ ctx[11]) {
    				if (if_block0) {
    					if_block0.p(ctx, dirty);
    				} else {
    					if_block0 = create_if_block_1(ctx);
    					if_block0.c();
    					if_block0.m(g, if_block0_anchor);
    				}
    			} else if (if_block0) {
    				if_block0.d(1);
    				if_block0 = null;
    			}

    			if (current_block_type === (current_block_type = select_block_type_2(ctx)) && if_block1) {
    				if_block1.p(ctx, dirty);
    			} else {
    				if_block1.d(1);
    				if_block1 = current_block_type(ctx);

    				if (if_block1) {
    					if_block1.c();
    					if_block1.m(g, null);
    				}
    			}

    			if (dirty[0] & /*y*/ 512 && g_transform_value !== (g_transform_value = "translate(0, " + (gridNamesHeight + /*y*/ ctx[9](/*i*/ ctx[5])) + ")")) {
    				attr_dev(g, "transform", g_transform_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(g);
    			if (if_block0) if_block0.d();
    			if_block1.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block$4.name,
    		type: "each",
    		source: "(120:2) {#each data.density as universe, i}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$8(ctx) {
    	let div2;
    	let div1;
    	let div0;
    	let select;
    	let select_id_value;
    	let t0;
    	let t1;
    	let button;
    	let svg0;
    	let path0;
    	let path1;
    	let button_id_value;
    	let div1_class_value;
    	let t2;
    	let svg1;
    	let g0;
    	let path2;
    	let svg1_width_value;
    	let t3;
    	let svg2;
    	let g1;
    	let line_1;
    	let line_1_x__value;
    	let line_1_x__value_1;
    	let line_1_y__value;
    	let svg2_class_value;
    	let div2_id_value;
    	let mounted;
    	let dispose;
    	let each_value_3 = /*allOutcomeVars*/ ctx[2];
    	validate_each_argument(each_value_3);
    	let each_blocks_3 = [];

    	for (let i = 0; i < each_value_3.length; i += 1) {
    		each_blocks_3[i] = create_each_block_3$1(get_each_context_3$1(ctx, each_value_3, i));
    	}

    	function select_block_type(ctx, dirty) {
    		if (/*sortByIndex*/ ctx[4] == /*i*/ ctx[5]) return create_if_block_2;
    		return create_else_block_2;
    	}

    	let current_block_type = select_block_type(ctx);
    	let if_block = current_block_type(ctx);
    	let each_value_2 = /*xscale*/ ctx[8].ticks(5);
    	validate_each_argument(each_value_2);
    	let each_blocks_2 = [];

    	for (let i = 0; i < each_value_2.length; i += 1) {
    		each_blocks_2[i] = create_each_block_2$1(get_each_context_2$1(ctx, each_value_2, i));
    	}

    	let each_value_1 = /*xscale*/ ctx[8].ticks(5);
    	validate_each_argument(each_value_1);
    	let each_blocks_1 = [];

    	for (let i = 0; i < each_value_1.length; i += 1) {
    		each_blocks_1[i] = create_each_block_1$2(get_each_context_1$2(ctx, each_value_1, i));
    	}

    	let each_value = /*data*/ ctx[1].density;
    	validate_each_argument(each_value);
    	let each_blocks = [];

    	for (let i = 0; i < each_value.length; i += 1) {
    		each_blocks[i] = create_each_block$4(get_each_context$4(ctx, each_value, i));
    	}

    	const block = {
    		c: function create() {
    			div2 = element("div");
    			div1 = element("div");
    			div0 = element("div");
    			select = element("select");

    			for (let i = 0; i < each_blocks_3.length; i += 1) {
    				each_blocks_3[i].c();
    			}

    			t0 = space();
    			if_block.c();
    			t1 = space();
    			button = element("button");
    			svg0 = svg_element("svg");
    			path0 = svg_element("path");
    			path1 = svg_element("path");
    			t2 = space();
    			svg1 = svg_element("svg");
    			g0 = svg_element("g");
    			path2 = svg_element("path");

    			for (let i = 0; i < each_blocks_2.length; i += 1) {
    				each_blocks_2[i].c();
    			}

    			t3 = space();
    			svg2 = svg_element("svg");
    			g1 = svg_element("g");
    			line_1 = svg_element("line");

    			for (let i = 0; i < each_blocks_1.length; i += 1) {
    				each_blocks_1[i].c();
    			}

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			attr_dev(select, "class", "vis-dropdown svelte-1p9zk5w");
    			attr_dev(select, "id", select_id_value = "vis-" + /*i*/ ctx[5]);
    			set_style(select, "width", /*w*/ ctx[6] - 76 - scrollbarWidth + "px");
    			if (/*term*/ ctx[0] === void 0) add_render_callback(() => /*select_change_handler*/ ctx[19].call(select));
    			add_location(select, file$8, 65, 3, 1891);
    			attr_dev(path0, "d", "M0 0h24v24H0V0z");
    			attr_dev(path0, "fill", "none");
    			add_location(path0, file$8, 86, 106, 3498);
    			attr_dev(path1, "d", "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z");
    			add_location(path1, file$8, 86, 145, 3537);
    			attr_dev(svg0, "xmlns", "http://www.w3.org/2000/svg");
    			attr_dev(svg0, "height", "24px");
    			attr_dev(svg0, "viewBox", "0 0 24 24");
    			attr_dev(svg0, "width", "24px");
    			attr_dev(svg0, "fill", "#000000");
    			attr_dev(svg0, "class", "svelte-1p9zk5w");
    			add_location(svg0, file$8, 86, 4, 3396);
    			attr_dev(button, "class", "vis-button svelte-1p9zk5w");
    			attr_dev(button, "id", button_id_value = "vis-" + /*i*/ ctx[5]);
    			add_location(button, file$8, 85, 3, 3315);
    			attr_dev(div0, "class", "vis-button-group svelte-1p9zk5w");
    			add_location(div0, file$8, 64, 2, 1857);
    			attr_dev(div1, "class", div1_class_value = "" + (null_to_empty(/*container*/ ctx[16]) + " svelte-1p9zk5w"));
    			add_location(div1, file$8, 63, 1, 1831);
    			attr_dev(path2, "class", "domain");
    			attr_dev(path2, "stroke", "currentColor");
    			attr_dev(path2, "d", /*xPath*/ ctx[13]);
    			attr_dev(path2, "fill", "none");
    			add_location(path2, file$8, 93, 3, 3866);
    			attr_dev(g0, "transform", "translate(0, " + gridNamesHeight + ")");
    			add_location(g0, file$8, 91, 2, 3796);
    			attr_dev(svg1, "class", "outcome-axis vis-" + 0 + " svelte-1p9zk5w");
    			attr_dev(svg1, "height", windowHeight);
    			attr_dev(svg1, "width", svg1_width_value = /*w*/ ctx[6] - scrollbarWidth);
    			add_location(svg1, file$8, 90, 1, 3696);
    			attr_dev(line_1, "class", "intercept");
    			attr_dev(line_1, "x1", line_1_x__value = /*xscale*/ ctx[8](0));
    			attr_dev(line_1, "x2", line_1_x__value_1 = /*xscale*/ ctx[8](0));
    			attr_dev(line_1, "y1", "0");
    			attr_dev(line_1, "y2", line_1_y__value = /*h*/ ctx[10] - (margin.bottom + gridNamesHeight + cell.padding));
    			attr_dev(line_1, "stroke", colors.gray);
    			attr_dev(line_1, "stroke-width", "2");
    			add_location(line_1, file$8, 104, 3, 4340);
    			attr_dev(g1, "transform", "translate(0, " + gridNamesHeight + ")");
    			add_location(g1, file$8, 103, 2, 4289);
    			attr_dev(svg2, "class", svg2_class_value = "outcome-results vis-" + /*i*/ ctx[5] + " svelte-1p9zk5w");
    			attr_dev(svg2, "height", /*h*/ ctx[10]);
    			attr_dev(svg2, "width", /*w*/ ctx[6]);
    			add_location(svg2, file$8, 102, 1, 4212);
    			attr_dev(div2, "class", "vis svelte-1p9zk5w");
    			attr_dev(div2, "id", div2_id_value = "vis-" + /*i*/ ctx[5]);
    			add_location(div2, file$8, 62, 0, 1799);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div2, anchor);
    			append_dev(div2, div1);
    			append_dev(div1, div0);
    			append_dev(div0, select);

    			for (let i = 0; i < each_blocks_3.length; i += 1) {
    				each_blocks_3[i].m(select, null);
    			}

    			select_option(select, /*term*/ ctx[0]);
    			append_dev(div0, t0);
    			if_block.m(div0, null);
    			append_dev(div0, t1);
    			append_dev(div0, button);
    			append_dev(button, svg0);
    			append_dev(svg0, path0);
    			append_dev(svg0, path1);
    			append_dev(div2, t2);
    			append_dev(div2, svg1);
    			append_dev(svg1, g0);
    			append_dev(g0, path2);

    			for (let i = 0; i < each_blocks_2.length; i += 1) {
    				each_blocks_2[i].m(g0, null);
    			}

    			/*svg1_binding*/ ctx[25](svg1);
    			append_dev(div2, t3);
    			append_dev(div2, svg2);
    			append_dev(svg2, g1);
    			append_dev(g1, line_1);

    			for (let i = 0; i < each_blocks_1.length; i += 1) {
    				each_blocks_1[i].m(g1, null);
    			}

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(svg2, null);
    			}

    			/*svg2_binding*/ ctx[26](svg2);

    			if (!mounted) {
    				dispose = [
    					listen_dev(select, "change", /*select_change_handler*/ ctx[19]),
    					listen_dev(select, "change", /*change_handler*/ ctx[20], false, false, false),
    					listen_dev(button, "click", /*click_handler_3*/ ctx[24], false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (dirty[0] & /*allOutcomeVars*/ 4) {
    				each_value_3 = /*allOutcomeVars*/ ctx[2];
    				validate_each_argument(each_value_3);
    				let i;

    				for (i = 0; i < each_value_3.length; i += 1) {
    					const child_ctx = get_each_context_3$1(ctx, each_value_3, i);

    					if (each_blocks_3[i]) {
    						each_blocks_3[i].p(child_ctx, dirty);
    					} else {
    						each_blocks_3[i] = create_each_block_3$1(child_ctx);
    						each_blocks_3[i].c();
    						each_blocks_3[i].m(select, null);
    					}
    				}

    				for (; i < each_blocks_3.length; i += 1) {
    					each_blocks_3[i].d(1);
    				}

    				each_blocks_3.length = each_value_3.length;
    			}

    			if (dirty[0] & /*i*/ 32 && select_id_value !== (select_id_value = "vis-" + /*i*/ ctx[5])) {
    				attr_dev(select, "id", select_id_value);
    			}

    			if (dirty[0] & /*w*/ 64) {
    				set_style(select, "width", /*w*/ ctx[6] - 76 - scrollbarWidth + "px");
    			}

    			if (dirty[0] & /*term, allOutcomeVars*/ 5) {
    				select_option(select, /*term*/ ctx[0]);
    			}

    			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
    				if_block.p(ctx, dirty);
    			} else {
    				if_block.d(1);
    				if_block = current_block_type(ctx);

    				if (if_block) {
    					if_block.c();
    					if_block.m(div0, t1);
    				}
    			}

    			if (dirty[0] & /*i*/ 32 && button_id_value !== (button_id_value = "vis-" + /*i*/ ctx[5])) {
    				attr_dev(button, "id", button_id_value);
    			}

    			if (dirty[0] & /*container*/ 65536 && div1_class_value !== (div1_class_value = "" + (null_to_empty(/*container*/ ctx[16]) + " svelte-1p9zk5w"))) {
    				attr_dev(div1, "class", div1_class_value);
    			}

    			if (dirty[0] & /*xPath*/ 8192) {
    				attr_dev(path2, "d", /*xPath*/ ctx[13]);
    			}

    			if (dirty[0] & /*xscale*/ 256) {
    				each_value_2 = /*xscale*/ ctx[8].ticks(5);
    				validate_each_argument(each_value_2);
    				let i;

    				for (i = 0; i < each_value_2.length; i += 1) {
    					const child_ctx = get_each_context_2$1(ctx, each_value_2, i);

    					if (each_blocks_2[i]) {
    						each_blocks_2[i].p(child_ctx, dirty);
    					} else {
    						each_blocks_2[i] = create_each_block_2$1(child_ctx);
    						each_blocks_2[i].c();
    						each_blocks_2[i].m(g0, null);
    					}
    				}

    				for (; i < each_blocks_2.length; i += 1) {
    					each_blocks_2[i].d(1);
    				}

    				each_blocks_2.length = each_value_2.length;
    			}

    			if (dirty[0] & /*w*/ 64 && svg1_width_value !== (svg1_width_value = /*w*/ ctx[6] - scrollbarWidth)) {
    				attr_dev(svg1, "width", svg1_width_value);
    			}

    			if (dirty[0] & /*xscale*/ 256 && line_1_x__value !== (line_1_x__value = /*xscale*/ ctx[8](0))) {
    				attr_dev(line_1, "x1", line_1_x__value);
    			}

    			if (dirty[0] & /*xscale*/ 256 && line_1_x__value_1 !== (line_1_x__value_1 = /*xscale*/ ctx[8](0))) {
    				attr_dev(line_1, "x2", line_1_x__value_1);
    			}

    			if (dirty[0] & /*h*/ 1024 && line_1_y__value !== (line_1_y__value = /*h*/ ctx[10] - (margin.bottom + gridNamesHeight + cell.padding))) {
    				attr_dev(line_1, "y2", line_1_y__value);
    			}

    			if (dirty[0] & /*xscale, h*/ 1280) {
    				each_value_1 = /*xscale*/ ctx[8].ticks(5);
    				validate_each_argument(each_value_1);
    				let i;

    				for (i = 0; i < each_value_1.length; i += 1) {
    					const child_ctx = get_each_context_1$2(ctx, each_value_1, i);

    					if (each_blocks_1[i]) {
    						each_blocks_1[i].p(child_ctx, dirty);
    					} else {
    						each_blocks_1[i] = create_each_block_1$2(child_ctx);
    						each_blocks_1[i].c();
    						each_blocks_1[i].m(g1, null);
    					}
    				}

    				for (; i < each_blocks_1.length; i += 1) {
    					each_blocks_1[i].d(1);
    				}

    				each_blocks_1.length = each_value_1.length;
    			}

    			if (dirty[0] & /*y, xscale, data, yscale, line, area, $gridCollapse*/ 52098) {
    				each_value = /*data*/ ctx[1].density;
    				validate_each_argument(each_value);
    				let i;

    				for (i = 0; i < each_value.length; i += 1) {
    					const child_ctx = get_each_context$4(ctx, each_value, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    					} else {
    						each_blocks[i] = create_each_block$4(child_ctx);
    						each_blocks[i].c();
    						each_blocks[i].m(svg2, null);
    					}
    				}

    				for (; i < each_blocks.length; i += 1) {
    					each_blocks[i].d(1);
    				}

    				each_blocks.length = each_value.length;
    			}

    			if (dirty[0] & /*i*/ 32 && svg2_class_value !== (svg2_class_value = "outcome-results vis-" + /*i*/ ctx[5] + " svelte-1p9zk5w")) {
    				attr_dev(svg2, "class", svg2_class_value);
    			}

    			if (dirty[0] & /*h*/ 1024) {
    				attr_dev(svg2, "height", /*h*/ ctx[10]);
    			}

    			if (dirty[0] & /*w*/ 64) {
    				attr_dev(svg2, "width", /*w*/ ctx[6]);
    			}

    			if (dirty[0] & /*i*/ 32 && div2_id_value !== (div2_id_value = "vis-" + /*i*/ ctx[5])) {
    				attr_dev(div2, "id", div2_id_value);
    			}
    		},
    		i: noop$4,
    		o: noop$4,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div2);
    			destroy_each(each_blocks_3, detaching);
    			if_block.d();
    			destroy_each(each_blocks_2, detaching);
    			/*svg1_binding*/ ctx[25](null);
    			destroy_each(each_blocks_1, detaching);
    			destroy_each(each_blocks, detaching);
    			/*svg2_binding*/ ctx[26](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$8.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$8($$self, $$props, $$invalidate) {
    	let container;
    	let w;
    	let h;
    	let xscale;
    	let y;
    	let yscale;
    	let area$1;
    	let line$1;
    	let xPath;
    	let $gridCollapse;
    	validate_store(gridCollapse, 'gridCollapse');
    	component_subscribe($$self, gridCollapse, $$value => $$invalidate(11, $gridCollapse = $$value));
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Vis', slots, []);
    	let svg, cellHeight;
    	const dispatch = createEventDispatcher();
    	let { i } = $$props;
    	let { data } = $$props;
    	let { allOutcomeVars } = $$props;
    	let { sortAscending } = $$props;
    	let { sortByIndex } = $$props;
    	let { term = allOutcomeVars[0] } = $$props;
    	const writable_props = ['i', 'data', 'allOutcomeVars', 'sortAscending', 'sortByIndex', 'term'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Vis> was created with unknown prop '${key}'`);
    	});

    	function select_change_handler() {
    		term = select_value(this);
    		$$invalidate(0, term);
    		$$invalidate(2, allOutcomeVars);
    	}

    	const change_handler = () => dispatch("changeOutcomeVar");
    	const click_handler = () => dispatch("changeSortDirection");

    	const click_handler_1 = () => {
    		dispatch("changeSortDirection");
    		dispatch("setSortIndex", -1);
    	};

    	const click_handler_2 = () => dispatch("setSortIndex", i);
    	const click_handler_3 = () => dispatch("remove");

    	function svg1_binding($$value) {
    		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
    			svg = $$value;
    			$$invalidate(12, svg);
    		});
    	}

    	function svg2_binding($$value) {
    		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
    			svg = $$value;
    			$$invalidate(12, svg);
    		});
    	}

    	$$self.$$set = $$props => {
    		if ('i' in $$props) $$invalidate(5, i = $$props.i);
    		if ('data' in $$props) $$invalidate(1, data = $$props.data);
    		if ('allOutcomeVars' in $$props) $$invalidate(2, allOutcomeVars = $$props.allOutcomeVars);
    		if ('sortAscending' in $$props) $$invalidate(3, sortAscending = $$props.sortAscending);
    		if ('sortByIndex' in $$props) $$invalidate(4, sortByIndex = $$props.sortByIndex);
    		if ('term' in $$props) $$invalidate(0, term = $$props.term);
    	};

    	$$self.$capture_state = () => ({
    		css,
    		cx,
    		d3,
    		onMount,
    		createEventDispatcher,
    		windowHeight,
    		margin,
    		cell,
    		text,
    		gridNamesHeight,
    		scrollbarWidth,
    		outcomeVisWidth,
    		namingDim,
    		colors,
    		mean,
    		gridCollapse,
    		svg,
    		cellHeight,
    		dispatch,
    		i,
    		data,
    		allOutcomeVars,
    		sortAscending,
    		sortByIndex,
    		term,
    		w,
    		xPath,
    		yscale,
    		xscale,
    		line: line$1,
    		area: area$1,
    		y,
    		h,
    		container,
    		$gridCollapse
    	});

    	$$self.$inject_state = $$props => {
    		if ('svg' in $$props) $$invalidate(12, svg = $$props.svg);
    		if ('cellHeight' in $$props) $$invalidate(18, cellHeight = $$props.cellHeight);
    		if ('i' in $$props) $$invalidate(5, i = $$props.i);
    		if ('data' in $$props) $$invalidate(1, data = $$props.data);
    		if ('allOutcomeVars' in $$props) $$invalidate(2, allOutcomeVars = $$props.allOutcomeVars);
    		if ('sortAscending' in $$props) $$invalidate(3, sortAscending = $$props.sortAscending);
    		if ('sortByIndex' in $$props) $$invalidate(4, sortByIndex = $$props.sortByIndex);
    		if ('term' in $$props) $$invalidate(0, term = $$props.term);
    		if ('w' in $$props) $$invalidate(6, w = $$props.w);
    		if ('xPath' in $$props) $$invalidate(13, xPath = $$props.xPath);
    		if ('yscale' in $$props) $$invalidate(7, yscale = $$props.yscale);
    		if ('xscale' in $$props) $$invalidate(8, xscale = $$props.xscale);
    		if ('line' in $$props) $$invalidate(14, line$1 = $$props.line);
    		if ('area' in $$props) $$invalidate(15, area$1 = $$props.area);
    		if ('y' in $$props) $$invalidate(9, y = $$props.y);
    		if ('h' in $$props) $$invalidate(10, h = $$props.h);
    		if ('container' in $$props) $$invalidate(16, container = $$props.container);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$self.$$.update = () => {
    		if ($$self.$$.dirty[0] & /*w*/ 64) {
    			// CSS Styles
    			$$invalidate(16, container = css`
		background-color: ${colors.background};
		height: ${gridNamesHeight}px;
		width: ${w - scrollbarWidth}px;
		position: absolute;
	`);
    		}

    		if ($$self.$$.dirty[0] & /*$gridCollapse*/ 2048) {
    			$$invalidate(18, cellHeight = $gridCollapse ? 2 : cell.height);
    		}

    		if ($$self.$$.dirty[0] & /*data, cellHeight*/ 262146) {
    			$$invalidate(10, h = gridNamesHeight + cell.padding + data.density.length * cellHeight + margin.bottom);
    		}

    		if ($$self.$$.dirty[0] & /*data*/ 2) {
    			// scales
    			$$invalidate(8, xscale = linear().domain(extent$1(data.density[0].map(d => d[0]))).range([margin.left, outcomeVisWidth]));
    		}

    		if ($$self.$$.dirty[0] & /*data, h*/ 1026) {
    			// scale for position of g corresponding to each universe
    			$$invalidate(9, y = band().domain(sequence(data.density.length)).range([0, h - (margin.bottom + gridNamesHeight + cell.padding)]).padding(0.1));
    		}

    		if ($$self.$$.dirty[0] & /*y*/ 512) {
    			// scale for CDF of each universe
    			$$invalidate(7, yscale = linear().domain([0, 0.5]).range([y.step() - cell.padding, 0]));
    		}

    		if ($$self.$$.dirty[0] & /*xscale, yscale*/ 384) {
    			$$invalidate(15, area$1 = area().x(d => xscale(d[0])).y0(d => yscale(d[1])).y1(d => yscale(d[2])));
    		}

    		if ($$self.$$.dirty[0] & /*xscale, yscale*/ 384) {
    			$$invalidate(14, line$1 = line().x(d => xscale(d[0])).y(d => yscale(d[1])));
    		}

    		if ($$self.$$.dirty[0] & /*w*/ 64) {
    			// d's for axis paths
    			$$invalidate(13, xPath = `M${margin.left}, -6V0H${w - margin.right}V-6`);
    		}
    	};

    	$$invalidate(6, w = outcomeVisWidth + margin.left);

    	return [
    		term,
    		data,
    		allOutcomeVars,
    		sortAscending,
    		sortByIndex,
    		i,
    		w,
    		yscale,
    		xscale,
    		y,
    		h,
    		$gridCollapse,
    		svg,
    		xPath,
    		line$1,
    		area$1,
    		container,
    		dispatch,
    		cellHeight,
    		select_change_handler,
    		change_handler,
    		click_handler,
    		click_handler_1,
    		click_handler_2,
    		click_handler_3,
    		svg1_binding,
    		svg2_binding
    	];
    }

    class Vis extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init$1(
    			this,
    			options,
    			instance$8,
    			create_fragment$8,
    			safe_not_equal,
    			{
    				i: 5,
    				data: 1,
    				allOutcomeVars: 2,
    				sortAscending: 3,
    				sortByIndex: 4,
    				term: 0
    			},
    			null,
    			[-1, -1]
    		);

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Vis",
    			options,
    			id: create_fragment$8.name
    		});

    		const { ctx } = this.$$;
    		const props = options.props || {};

    		if (/*i*/ ctx[5] === undefined && !('i' in props)) {
    			console.warn("<Vis> was created without expected prop 'i'");
    		}

    		if (/*data*/ ctx[1] === undefined && !('data' in props)) {
    			console.warn("<Vis> was created without expected prop 'data'");
    		}

    		if (/*allOutcomeVars*/ ctx[2] === undefined && !('allOutcomeVars' in props)) {
    			console.warn("<Vis> was created without expected prop 'allOutcomeVars'");
    		}

    		if (/*sortAscending*/ ctx[3] === undefined && !('sortAscending' in props)) {
    			console.warn("<Vis> was created without expected prop 'sortAscending'");
    		}

    		if (/*sortByIndex*/ ctx[4] === undefined && !('sortByIndex' in props)) {
    			console.warn("<Vis> was created without expected prop 'sortByIndex'");
    		}
    	}

    	get i() {
    		throw new Error("<Vis>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set i(value) {
    		throw new Error("<Vis>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get data() {
    		throw new Error("<Vis>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set data(value) {
    		throw new Error("<Vis>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get allOutcomeVars() {
    		throw new Error("<Vis>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set allOutcomeVars(value) {
    		throw new Error("<Vis>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get sortAscending() {
    		throw new Error("<Vis>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set sortAscending(value) {
    		throw new Error("<Vis>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get sortByIndex() {
    		throw new Error("<Vis>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set sortByIndex(value) {
    		throw new Error("<Vis>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get term() {
    		throw new Error("<Vis>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set term(value) {
    		throw new Error("<Vis>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    const file$7 = "src/components/sortByGroupDivider.svelte";

    function create_fragment$7(ctx) {
    	let g1;
    	let line;
    	let g0;
    	let path0;
    	let path1;
    	let path2;
    	let path3;
    	let g0_transform_value;
    	let g1_class_value;
    	let g1_transform_value;

    	const block = {
    		c: function create() {
    			g1 = svg_element("g");
    			line = svg_element("line");
    			g0 = svg_element("g");
    			path0 = svg_element("path");
    			path1 = svg_element("path");
    			path2 = svg_element("path");
    			path3 = svg_element("path");
    			attr_dev(line, "x1", "0");
    			attr_dev(line, "y1", "0");
    			attr_dev(line, "x2", "0");
    			attr_dev(line, "y2", /*h*/ ctx[0]);
    			set_style(line, "stroke", "#666");
    			set_style(line, "stroke-width", dividerWidth);
    			add_location(line, file$7, 15, 1, 504);
    			attr_dev(path0, "d", "M16,32L16,32c-5.3,0-9.6-4.3-9.6-9.6V9.6C6.4,4.3,10.7,0,16,0h0c5.3,0,9.6,4.3,9.6,9.6v12.8C25.6,27.7,21.3,32,16,32z");
    			attr_dev(path0, "transform", "translate(" + -iconSize * 4 / 6 + ", 0)");
    			attr_dev(path0, "fill", "#666");
    			add_location(path0, file$7, 18, 2, 707);
    			attr_dev(path1, "d", "M20.92,11.67H10.91c-0.55,0-1-0.45-1-1v-0.01c0-0.55,0.45-1,1-1h10.01c0.55,0,1,0.45,1,1v0.01C21.91,11.22,21.47,11.67,20.92,11.67z");
    			attr_dev(path1, "transform", "translate(" + -iconSize * 4 / 6 + ", 0)");
    			attr_dev(path1, "fill", "#fff");
    			add_location(path1, file$7, 20, 2, 898);
    			attr_dev(path2, "d", "M21,17H11c-0.55,0-1-0.45-1-1V16c0-0.55,0.45-1,1-1H21c0.55,0,1,0.45,1,1V16C22,16.55,21.55,17,21,17z");
    			attr_dev(path2, "transform", "translate(" + -iconSize * 4 / 6 + ", 0)");
    			attr_dev(path2, "fill", "#fff");
    			add_location(path2, file$7, 22, 2, 1103);
    			attr_dev(path3, "d", "M21.09,22.33H11.08c-0.55,0-1-0.45-1-1v-0.01c0-0.55,0.45-1,1-1h10.01c0.55,0,1,0.45,1,1v0.01C22.09,21.89,21.64,22.33,21.09,22.33z");
    			attr_dev(path3, "transform", "translate(" + -iconSize * 4 / 6 + ", 0)");
    			attr_dev(path3, "fill", "#fff");
    			add_location(path3, file$7, 24, 2, 1279);
    			attr_dev(g0, "class", "grouped-sort-divider-icon");
    			attr_dev(g0, "transform", g0_transform_value = "translate(0, " + (/*ch*/ ctx[2] - gridNamesHeight - iconSize * 4 / 3) / 2 + ")");
    			add_location(g0, file$7, 16, 1, 592);
    			attr_dev(g1, "class", g1_class_value = "grouped-sort-divider " + (/*boundaries*/ ctx[1].length - 1));
    			attr_dev(g1, "transform", g1_transform_value = "translate(" + /*boundaries*/ ctx[1][/*boundaries*/ ctx[1].length - 1] + ", 0)");
    			set_style(g1, "cursor", "pointer");
    			add_location(g1, file$7, 12, 0, 357);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, g1, anchor);
    			append_dev(g1, line);
    			append_dev(g1, g0);
    			append_dev(g0, path0);
    			append_dev(g0, path1);
    			append_dev(g0, path2);
    			append_dev(g0, path3);
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*h*/ 1) {
    				attr_dev(line, "y2", /*h*/ ctx[0]);
    			}

    			if (dirty & /*ch*/ 4 && g0_transform_value !== (g0_transform_value = "translate(0, " + (/*ch*/ ctx[2] - gridNamesHeight - iconSize * 4 / 3) / 2 + ")")) {
    				attr_dev(g0, "transform", g0_transform_value);
    			}

    			if (dirty & /*boundaries*/ 2 && g1_class_value !== (g1_class_value = "grouped-sort-divider " + (/*boundaries*/ ctx[1].length - 1))) {
    				attr_dev(g1, "class", g1_class_value);
    			}

    			if (dirty & /*boundaries*/ 2 && g1_transform_value !== (g1_transform_value = "translate(" + /*boundaries*/ ctx[1][/*boundaries*/ ctx[1].length - 1] + ", 0)")) {
    				attr_dev(g1, "transform", g1_transform_value);
    			}
    		},
    		i: noop$4,
    		o: noop$4,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(g1);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$7.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    const dividerWidth = 3;

    function instance$7($$self, $$props, $$invalidate) {
    	let ch;
    	let boundaries;
    	let $parameter_scale;
    	validate_store(parameter_scale, 'parameter_scale');
    	component_subscribe($$self, parameter_scale, $$value => $$invalidate(4, $parameter_scale = $$value));
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('SortByGroupDivider', slots, []);
    	let { parameters } = $$props;
    	let { h } = $$props;
    	const writable_props = ['parameters', 'h'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<SortByGroupDivider> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ('parameters' in $$props) $$invalidate(3, parameters = $$props.parameters);
    		if ('h' in $$props) $$invalidate(0, h = $$props.h);
    	};

    	$$self.$capture_state = () => ({
    		windowHeight,
    		iconSize,
    		groupPadding,
    		gridNamesHeight,
    		parameter_scale,
    		parameters,
    		h,
    		dividerWidth,
    		boundaries,
    		ch,
    		$parameter_scale
    	});

    	$$self.$inject_state = $$props => {
    		if ('parameters' in $$props) $$invalidate(3, parameters = $$props.parameters);
    		if ('h' in $$props) $$invalidate(0, h = $$props.h);
    		if ('boundaries' in $$props) $$invalidate(1, boundaries = $$props.boundaries);
    		if ('ch' in $$props) $$invalidate(2, ch = $$props.ch);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$self.$$.update = () => {
    		if ($$self.$$.dirty & /*h*/ 1) {
    			$$invalidate(2, ch = h > windowHeight ? windowHeight : h);
    		}

    		if ($$self.$$.dirty & /*$parameter_scale*/ 16) {
    			$$invalidate(1, boundaries = $parameter_scale.range().map(d => d - groupPadding / 2));
    		}
    	};

    	return [h, boundaries, ch, parameters, $parameter_scale];
    }

    class SortByGroupDivider extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init$1(this, options, instance$7, create_fragment$7, safe_not_equal, { parameters: 3, h: 0 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "SortByGroupDivider",
    			options,
    			id: create_fragment$7.name
    		});

    		const { ctx } = this.$$;
    		const props = options.props || {};

    		if (/*parameters*/ ctx[3] === undefined && !('parameters' in props)) {
    			console.warn("<SortByGroupDivider> was created without expected prop 'parameters'");
    		}

    		if (/*h*/ ctx[0] === undefined && !('h' in props)) {
    			console.warn("<SortByGroupDivider> was created without expected prop 'h'");
    		}
    	}

    	get parameters() {
    		throw new Error("<SortByGroupDivider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set parameters(value) {
    		throw new Error("<SortByGroupDivider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get h() {
    		throw new Error("<SortByGroupDivider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set h(value) {
    		throw new Error("<SortByGroupDivider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    const file$6 = "src/components/toggle-hide-option.svelte";

    // (46:0) {:else}
    function create_else_block$2(ctx) {
    	let svg;
    	let path0;
    	let path1;
    	let svg_class_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			svg = svg_element("svg");
    			path0 = svg_element("path");
    			path1 = svg_element("path");
    			attr_dev(path0, "d", "M0 0h24v24H0V0z");
    			attr_dev(path0, "fill", "none");
    			add_location(path0, file$6, 47, 172, 1432);
    			attr_dev(path1, "d", "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z");
    			add_location(path1, file$6, 47, 211, 1471);
    			attr_dev(svg, "class", svg_class_value = "icon include-icon " + /*option*/ ctx[0] + " " + /*iconStyle*/ ctx[1] + " svelte-8jc5b3");
    			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
    			attr_dev(svg, "height", "24px");
    			attr_dev(svg, "viewBox", "0 0 24 24");
    			attr_dev(svg, "width", "24px");
    			attr_dev(svg, "fill", "#000000");
    			add_location(svg, file$6, 47, 1, 1261);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, svg, anchor);
    			append_dev(svg, path0);
    			append_dev(svg, path1);

    			if (!mounted) {
    				dispose = listen_dev(svg, "click", /*hideOption*/ ctx[3], false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*option*/ 1 && svg_class_value !== (svg_class_value = "icon include-icon " + /*option*/ ctx[0] + " " + /*iconStyle*/ ctx[1] + " svelte-8jc5b3")) {
    				attr_dev(svg, "class", svg_class_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(svg);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_else_block$2.name,
    		type: "else",
    		source: "(46:0) {:else}",
    		ctx
    	});

    	return block;
    }

    // (43:0) {#if selected}
    function create_if_block$2(ctx) {
    	let svg;
    	let path0;
    	let path1;
    	let svg_class_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			svg = svg_element("svg");
    			path0 = svg_element("path");
    			path1 = svg_element("path");
    			attr_dev(path0, "d", "M0 0h24v24H0V0z");
    			attr_dev(path0, "fill", "none");
    			add_location(path0, file$6, 44, 172, 1034);
    			attr_dev(path1, "d", "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z");
    			add_location(path1, file$6, 44, 211, 1073);
    			attr_dev(svg, "class", svg_class_value = "icon exclude-icon " + /*option*/ ctx[0] + " " + /*iconStyle*/ ctx[1] + " svelte-8jc5b3");
    			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
    			attr_dev(svg, "height", "24px");
    			attr_dev(svg, "viewBox", "0 0 24 24");
    			attr_dev(svg, "width", "24px");
    			attr_dev(svg, "fill", "#000000");
    			add_location(svg, file$6, 44, 1, 863);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, svg, anchor);
    			append_dev(svg, path0);
    			append_dev(svg, path1);

    			if (!mounted) {
    				dispose = listen_dev(svg, "click", /*hideOption*/ ctx[3], false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*option*/ 1 && svg_class_value !== (svg_class_value = "icon exclude-icon " + /*option*/ ctx[0] + " " + /*iconStyle*/ ctx[1] + " svelte-8jc5b3")) {
    				attr_dev(svg, "class", svg_class_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(svg);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$2.name,
    		type: "if",
    		source: "(43:0) {#if selected}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$6(ctx) {
    	let if_block_anchor;

    	function select_block_type(ctx, dirty) {
    		if (/*selected*/ ctx[2]) return create_if_block$2;
    		return create_else_block$2;
    	}

    	let current_block_type = select_block_type(ctx);
    	let if_block = current_block_type(ctx);

    	const block = {
    		c: function create() {
    			if_block.c();
    			if_block_anchor = empty$3();
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			if_block.m(target, anchor);
    			insert_dev(target, if_block_anchor, anchor);
    		},
    		p: function update(ctx, [dirty]) {
    			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
    				if_block.p(ctx, dirty);
    			} else {
    				if_block.d(1);
    				if_block = current_block_type(ctx);

    				if (if_block) {
    					if_block.c();
    					if_block.m(if_block_anchor.parentNode, if_block_anchor);
    				}
    			}
    		},
    		i: noop$4,
    		o: noop$4,
    		d: function destroy(detaching) {
    			if_block.d(detaching);
    			if (detaching) detach_dev(if_block_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$6.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$6($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Toggle_hide_option', slots, []);
    	let { option } = $$props;
    	let { parameter } = $$props;
    	let selected = true;
    	const dispatch = createEventDispatcher();

    	function hideOption() {
    		$$invalidate(2, selected = !selected);

    		if (selected) {
    			select(`div.option-label.${option}`).style("opacity", "1");
    		} else {
    			select(`div.option-label.${option}`).style("opacity", "0.2");
    		}

    		dispatch('hide', { state: selected, option, parameter });
    	}

    	const iconStyle = css`
		fill: #979797;
		cursor: pointer;
		height: ${iconSize}px;
		width: ${iconSize}px;
	`;

    	const writable_props = ['option', 'parameter'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Toggle_hide_option> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ('option' in $$props) $$invalidate(0, option = $$props.option);
    		if ('parameter' in $$props) $$invalidate(4, parameter = $$props.parameter);
    	};

    	$$self.$capture_state = () => ({
    		css,
    		cx,
    		createEventDispatcher,
    		d3,
    		text,
    		iconSize,
    		option,
    		parameter,
    		selected,
    		dispatch,
    		hideOption,
    		iconStyle
    	});

    	$$self.$inject_state = $$props => {
    		if ('option' in $$props) $$invalidate(0, option = $$props.option);
    		if ('parameter' in $$props) $$invalidate(4, parameter = $$props.parameter);
    		if ('selected' in $$props) $$invalidate(2, selected = $$props.selected);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [option, iconStyle, selected, hideOption, parameter];
    }

    class Toggle_hide_option extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init$1(this, options, instance$6, create_fragment$6, safe_not_equal, { option: 0, parameter: 4, iconStyle: 1 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Toggle_hide_option",
    			options,
    			id: create_fragment$6.name
    		});

    		const { ctx } = this.$$;
    		const props = options.props || {};

    		if (/*option*/ ctx[0] === undefined && !('option' in props)) {
    			console.warn("<Toggle_hide_option> was created without expected prop 'option'");
    		}

    		if (/*parameter*/ ctx[4] === undefined && !('parameter' in props)) {
    			console.warn("<Toggle_hide_option> was created without expected prop 'parameter'");
    		}
    	}

    	get option() {
    		throw new Error("<Toggle_hide_option>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set option(value) {
    		throw new Error("<Toggle_hide_option>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get parameter() {
    		throw new Error("<Toggle_hide_option>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set parameter(value) {
    		throw new Error("<Toggle_hide_option>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get iconStyle() {
    		return this.$$.ctx[1];
    	}

    	set iconStyle(value) {
    		throw new Error("<Toggle_hide_option>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    const file$5 = "src/components/toggle-join-option.svelte";

    // (60:0) {:else}
    function create_else_block$1(ctx) {
    	let button;
    	let svg;
    	let path0;
    	let path1;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			svg = svg_element("svg");
    			path0 = svg_element("path");
    			path1 = svg_element("path");
    			attr_dev(path0, "d", "M0 0h24v24H0V0z");
    			attr_dev(path0, "fill", "none");
    			add_location(path0, file$5, 62, 141, 2142);
    			attr_dev(path1, "d", "M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5zm-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-2zm-3-4h8v2H8z");
    			add_location(path1, file$5, 62, 180, 2181);
    			attr_dev(svg, "class", "icon unlink-icon " + /*iconStyle*/ ctx[0] + " svelte-vp1pj6");
    			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
    			attr_dev(svg, "height", "24px");
    			attr_dev(svg, "viewBox", "0 0 24 24");
    			attr_dev(svg, "width", "24px");
    			attr_dev(svg, "fill", "#000000");
    			add_location(svg, file$5, 62, 2, 2003);
    			attr_dev(button, "class", "join unlink-button " + /*buttonStyle*/ ctx[1] + " svelte-vp1pj6");
    			add_location(button, file$5, 61, 1, 1926);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, svg);
    			append_dev(svg, path0);
    			append_dev(svg, path1);

    			if (!mounted) {
    				dispose = listen_dev(button, "click", /*joinOptions*/ ctx[3], false, false, false);
    				mounted = true;
    			}
    		},
    		p: noop$4,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_else_block$1.name,
    		type: "else",
    		source: "(60:0) {:else}",
    		ctx
    	});

    	return block;
    }

    // (56:0) {#if !selected}
    function create_if_block$1(ctx) {
    	let button;
    	let svg;
    	let path0;
    	let path1;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			svg = svg_element("svg");
    			path0 = svg_element("path");
    			path1 = svg_element("path");
    			attr_dev(path0, "d", "M0 0h24v24H0V0z");
    			attr_dev(path0, "fill", "none");
    			add_location(path0, file$5, 57, 139, 1459);
    			attr_dev(path1, "d", "M14.39 11L16 12.61V11zM17 7h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1 0 1.27-.77 2.37-1.87 2.84l1.4 1.4C21.05 15.36 22 13.79 22 12c0-2.76-2.24-5-5-5zM2 4.27l3.11 3.11C3.29 8.12 2 9.91 2 12c0 2.76 2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1 0-1.59 1.21-2.9 2.76-3.07L8.73 11H8v2h2.73L13 15.27V17h1.73l4.01 4.01 1.41-1.41L3.41 2.86 2 4.27z");
    			add_location(path1, file$5, 57, 178, 1498);
    			attr_dev(svg, "class", "icon link-icon " + /*iconStyle*/ ctx[0] + " svelte-vp1pj6");
    			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
    			attr_dev(svg, "height", "24px");
    			attr_dev(svg, "viewBox", "0 0 24 24");
    			attr_dev(svg, "width", "24px");
    			attr_dev(svg, "fill", "#000000");
    			add_location(svg, file$5, 57, 2, 1322);
    			attr_dev(button, "class", "join unlink-button " + /*buttonStyle*/ ctx[1] + " svelte-vp1pj6");
    			add_location(button, file$5, 56, 1, 1247);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, svg);
    			append_dev(svg, path0);
    			append_dev(svg, path1);

    			if (!mounted) {
    				dispose = listen_dev(button, "click", /*joinOptions*/ ctx[3], false, false, false);
    				mounted = true;
    			}
    		},
    		p: noop$4,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$1.name,
    		type: "if",
    		source: "(56:0) {#if !selected}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$5(ctx) {
    	let if_block_anchor;

    	function select_block_type(ctx, dirty) {
    		if (!/*selected*/ ctx[2]) return create_if_block$1;
    		return create_else_block$1;
    	}

    	let current_block_type = select_block_type(ctx);
    	let if_block = current_block_type(ctx);

    	const block = {
    		c: function create() {
    			if_block.c();
    			if_block_anchor = empty$3();
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			if_block.m(target, anchor);
    			insert_dev(target, if_block_anchor, anchor);
    		},
    		p: function update(ctx, [dirty]) {
    			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
    				if_block.p(ctx, dirty);
    			} else {
    				if_block.d(1);
    				if_block = current_block_type(ctx);

    				if (if_block) {
    					if_block.c();
    					if_block.m(if_block_anchor.parentNode, if_block_anchor);
    				}
    			}
    		},
    		i: noop$4,
    		o: noop$4,
    		d: function destroy(detaching) {
    			if_block.d(detaching);
    			if (detaching) detach_dev(if_block_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$5.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$5($$self, $$props, $$invalidate) {
    	let option_order;
    	let option_pair;
    	let selected;
    	let $join_options;
    	let $option_scale;
    	validate_store(join_options, 'join_options');
    	component_subscribe($$self, join_options, $$value => $$invalidate(9, $join_options = $$value));
    	validate_store(option_scale, 'option_scale');
    	component_subscribe($$self, option_scale, $$value => $$invalidate(10, $option_scale = $$value));
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Toggle_join_option', slots, []);
    	let { parameter } = $$props;
    	let { options } = $$props;
    	let { index } = $$props;
    	const dispatch = createEventDispatcher();

    	function joinOptions() {
    		$$invalidate(2, selected = !selected);

    		dispatch('join', {
    			state: selected,
    			option_pair,
    			parameter,
    			indices: [index, index + 1]
    		});
    	}

    	const iconStyle = css`
		fill: #777777;
		cursor: pointer;
		height: ${iconSize}px;
		width: ${iconSize}px;
	`;

    	const buttonStyle = css`
	  width: ${iconSize}px;
	  height: ${iconSize}px;
	  padding: 0px;
	  margin: 0px;
	  border: none;
	`;

    	const writable_props = ['parameter', 'options', 'index'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Toggle_join_option> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ('parameter' in $$props) $$invalidate(4, parameter = $$props.parameter);
    		if ('options' in $$props) $$invalidate(5, options = $$props.options);
    		if ('index' in $$props) $$invalidate(6, index = $$props.index);
    	};

    	$$self.$capture_state = () => ({
    		css,
    		cx,
    		createEventDispatcher,
    		d3,
    		text,
    		iconSize,
    		header,
    		namingDim,
    		cell,
    		join_options,
    		option_scale,
    		arrayEqual,
    		any,
    		parameter,
    		options,
    		index,
    		dispatch,
    		joinOptions,
    		iconStyle,
    		buttonStyle,
    		option_pair,
    		selected,
    		option_order,
    		$join_options,
    		$option_scale
    	});

    	$$self.$inject_state = $$props => {
    		if ('parameter' in $$props) $$invalidate(4, parameter = $$props.parameter);
    		if ('options' in $$props) $$invalidate(5, options = $$props.options);
    		if ('index' in $$props) $$invalidate(6, index = $$props.index);
    		if ('option_pair' in $$props) $$invalidate(7, option_pair = $$props.option_pair);
    		if ('selected' in $$props) $$invalidate(2, selected = $$props.selected);
    		if ('option_order' in $$props) $$invalidate(8, option_order = $$props.option_order);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$self.$$.update = () => {
    		if ($$self.$$.dirty & /*$option_scale, parameter*/ 1040) {
    			$$invalidate(8, option_order = $option_scale[parameter].domain());
    		}

    		if ($$self.$$.dirty & /*options, option_order, index*/ 352) {
    			$$invalidate(7, option_pair = [options[option_order[index]], options[option_order[index + 1]]]);
    		}

    		if ($$self.$$.dirty & /*$join_options, option_pair*/ 640) {
    			$$invalidate(2, selected = any(...$join_options.map(d => arrayEqual(d.options, option_pair))));
    		}
    	};

    	return [
    		iconStyle,
    		buttonStyle,
    		selected,
    		joinOptions,
    		parameter,
    		options,
    		index,
    		option_pair,
    		option_order,
    		$join_options,
    		$option_scale
    	];
    }

    class Toggle_join_option extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init$1(this, options, instance$5, create_fragment$5, safe_not_equal, {
    			parameter: 4,
    			options: 5,
    			index: 6,
    			iconStyle: 0,
    			buttonStyle: 1
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Toggle_join_option",
    			options,
    			id: create_fragment$5.name
    		});

    		const { ctx } = this.$$;
    		const props = options.props || {};

    		if (/*parameter*/ ctx[4] === undefined && !('parameter' in props)) {
    			console.warn("<Toggle_join_option> was created without expected prop 'parameter'");
    		}

    		if (/*options*/ ctx[5] === undefined && !('options' in props)) {
    			console.warn("<Toggle_join_option> was created without expected prop 'options'");
    		}

    		if (/*index*/ ctx[6] === undefined && !('index' in props)) {
    			console.warn("<Toggle_join_option> was created without expected prop 'index'");
    		}
    	}

    	get parameter() {
    		throw new Error("<Toggle_join_option>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set parameter(value) {
    		throw new Error("<Toggle_join_option>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get options() {
    		throw new Error("<Toggle_join_option>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set options(value) {
    		throw new Error("<Toggle_join_option>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get index() {
    		throw new Error("<Toggle_join_option>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set index(value) {
    		throw new Error("<Toggle_join_option>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get iconStyle() {
    		return this.$$.ctx[0];
    	}

    	set iconStyle(value) {
    		throw new Error("<Toggle_join_option>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get buttonStyle() {
    		return this.$$.ctx[1];
    	}

    	set buttonStyle(value) {
    		throw new Error("<Toggle_join_option>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    let options_to_join;
    let x_scale_params;
    let x_scale_options;
    let sortByGroupParams;

    join_options.subscribe(value => options_to_join=value);
    parameter_scale.subscribe(value => x_scale_params = value);
    option_scale.subscribe(value => x_scale_options = value);
    group_params.subscribe(value => sortByGroupParams=value);

    let option_dragging = {}, previous_option_order = {}, parameter_dragging = {};
    let target, trigger;

    selection.prototype.moveToFront = function() {
    	return this.each(function(){
    		this.parentNode.appendChild(this);
    	});
    };

    function transition(g) {
    	return g.transition().duration(500);
    }

    /**
    // defines drag interaction to re-order 
    //  options within each parameter
    **/
    let drag_options = (order) => drag()
    	.subject(function(event) {
    		let parameter = this.className.baseVal.split(' ')[1];
    		let index = this.className.baseVal.split(' ')[3].split('-')[1];

    		return {x: x_scale_params(parameter) + x_scale_options[parameter](index)}
    	})
    	.on("start", function(event) {
    		let parameter = this.className.baseVal.split(' ')[1];
    		let index = this.className.baseVal.split(' ')[3].split('-')[1];

    		target = event.sourceEvent.target.tagName;
    		previous_option_order[index] = x_scale_options[parameter].domain();

    		if (target == "DIV") {
    			trigger = event.sourceEvent.target.className.split(" ")[0];
    			if (trigger == "option-label") {
    				option_dragging[index] = x_scale_options[parameter](index);

    				// Move the column that is moving on the front
    				select(this).moveToFront();
    				select(`g.option-value.${parameter}.option-${index}`).moveToFront();
    			}
    		}
    	})
    	.on("drag", function(event) {
    		let parameter = this.className.baseVal.split(' ')[1];
    		let index = this.className.baseVal.split(' ')[3].split('-')[1];


    		if (trigger == "option-label" & target == "DIV") {
    			option_dragging[index] = Math.min(
    				x_scale_options[parameter].range()[1],
    				Math.max(-x_scale_options[parameter].bandwidth(), (event.x - x_scale_params(parameter)))
    			);

    			order[parameter].name.sort(function(a, b) { return cPosition(parameter, a, x_scale_options) - cPosition(parameter, b, x_scale_options); });
    			x_scale_options[parameter].domain(order[parameter].name);
    			option_scale.update(v => x_scale_options);
    			
    			selectAll(`g.option-value.${parameter}, g.option-headers.${parameter}`).attr("transform", function(d) { 
    				let p = this.className.baseVal.split(' ')[1];
    				let i = this.className.baseVal.split(' ')[3].split('-')[1];
    				return `translate(${cPosition(p, i, x_scale_options)}, 0)`; 
    			});
    		}
    	})
    	.on("end", function(event) {
    		let parameter = this.className.baseVal.split(' ')[1];
    		let option = this.className.baseVal.split(' ')[2];
    		let index = this.className.baseVal.split(' ')[3].split('-')[1];

    		// step 1: check if the order of the options (within the current parameter) has changed at all
    		// if (!arrayEqual(previous_option_order[d[0].index], order[d[0].parameter].name)) { 
    		options_to_join
    									.filter(x => (x.parameter == parameter))
    									.map(d => d.indices).flat();

    		// step 1: which option indices have changed?
    		let diff_indices = whichDiff(previous_option_order[index], order[parameter].name);

    		// step 2: un-join...by updating options_to_join and the store
    		options_to_join = options_to_join.filter(x => 
    			!((x.parameter == parameter) && // step 2.1 check if indices are correspond to the parameter being interacted with
    				any(...diff_indices.map(v => x.indices.includes(v)))) // step 2.2 if yes, remove the indices which differ in position
    		);
    		join_options.update(arr => options_to_join);
    		
    		delete option_dragging[index];
    		transition(select(this)).attr("transform", "translate(" + x_scale_options[parameter](index) + ")");
    		transition(select(`g.option-value.${parameter}.${option}`)).attr("transform", "translate(" + x_scale_options[parameter](index) + ")");
    	});


    // option positions
    function cPosition(p, d, x_scale_options) {
    	var v = option_dragging[d];
    	return v == null ? x_scale_options[p](d) : v;
    }

    /**
    // defines drag interaction to re-order 
    // parameters (while keeping options in the same order)
    **/
    let drag_parameters = (param_n_options, y) => drag()
    	.subject(function(event) {
    		let d = this.className.baseVal.split(' ')[1];
    		return {x: x_scale_params(d)}
    	})
    	.on("start", function(event) {
    		let d = this.className.baseVal.split(' ')[1];
    		target = event.sourceEvent.target.tagName;

    		if (target == "DIV") {
    			trigger = event.sourceEvent.target.className.split(" ")[0];

    			if (trigger == "parameter-name") {
    				parameter_dragging[d] = x_scale_params(d);

    				// Move the column that is moving on the front
    				select(this).moveToFront();
    				selectAll(`g.parameter-col.${d}`).moveToFront();
    			}
    		}
    	})
    	.on("drag", function(event) {
    		let d = this.className.baseVal.split(' ')[1];

    		if (trigger == "parameter-name" & target == "DIV") {
    			parameter_dragging[d] = Math.max(
    				x_scale_params.range()[0] - 24,
    				Math.min(event.x, x_scale_params.range()[x_scale_params.range().length - 2] + 24)
    			);

    			let parameter_order = Object.entries(param_n_options).sort(function(a, b) { 
    				return pPosition(a[0], x_scale_params) - pPosition(b[0], x_scale_params); 
    			});
    			let param_order_range = parameter_order.map(d => d[1])
    				.reduce( (acc, val, index) => {
    					if (index == 0) {
    						acc.push(0);
    						acc.push(val); // acc.push([val[0], val[1]]);
    					} else {
    						acc.push(val + acc[acc.length - 1]); // acc.push([val[0], val[1] + acc[acc.length - 1][1]]);
    					}
    					return acc; 
    				}, [] )
    				.reduce((a, v, i, arr) => {
    					if (i > 0) {
    						let opts = (arr[i] - arr[i - 1]);
    						a.push(opts * cell.width + (opts - 1) * cell.padding + groupPadding + a[i - 1]);
    					} else {
    						a.push(groupPadding);
    					}
    					return a;
    				}, []);

    			x_scale_params.domain(parameter_order.map(d => d[0]));
    			x_scale_params.range(param_order_range);
    			parameter_scale.update(v => x_scale_params);
    			
    			select('svg.grid-header').selectAll('g.parameter').select('foreignObject')
    				.attr("x", function(d) {
    					let p = this.parentNode.className.baseVal.split(' ')[1];
    					return pPosition(p, x_scale_params)
    				});
    			select('svg.grid-header').selectAll(`g.parameter-col`)
    				.attr("transform", function(d) {
    					let p = this.className.baseVal.split(' ')[1];
    					return `translate(${pPosition(p, x_scale_params)}, ${margin.top})`
    				});
    			select('svg.grid-body').selectAll(`g.parameter-col`)
    				.attr("transform", function(d) {
    					let p = this.className.baseVal.split(' ')[1];
    					return `translate(${pPosition(p, x_scale_params)}, ${gridNamesHeight})`
    				});
    		}
    	})
    	.on("end", function(event) {
    		let d = this.className.baseVal.split(' ')[1];

    		delete parameter_dragging[d];

    		let boundaries = x_scale_params.range().map(d => (d - (groupPadding/2)));
    		let dividerPositionIndex = select("g.grouped-sort-divider").attr("class").split(" ")[1];

    		select("g.grouped-sort-divider")
    			 .transition()
    			 .attr("transform", `translate(${boundaries[dividerPositionIndex]}, 0)`);
    			 // .attr("transform", boundaries[dividerPositionIndex])

    		sortByGroupParams = x_scale_params.domain().slice(dividerPositionIndex).reverse();
    		group_params.update(arr => sortByGroupParams);

    		transition(select('svg.grid-header').select(`g.parameter-col.${d}`).attr("transform", `translate(${x_scale_params(d)}, ${margin.top})`));
    		transition(select('svg.grid-body').select(`g.parameter-col.${d}`).attr("transform", `translate(${x_scale_params(d)}, ${gridNamesHeight})`));
    		transition(select(this).select('foreignObject').attr("x", x_scale_params(d)));
    	});

    // parameter positions
    function pPosition(d, x_scale_params) {
    	var v = parameter_dragging[d];
    	return v == null ? x_scale_params(d) : v;
    }

    /**
    // defines drag interaction for the grouped-sort-divider
    // which defines input to the groupedSortFunction
    **/
    let dragSortDivider = () => drag()
    	// .subject(function(event, d) {} )
    	.on("start", function(event) { 
    		return null 
    	})
    	.on("drag", function(event) { 
    		let boundaries = x_scale_params.range().map(d => (d - (groupPadding/2)));
    		let minBarPosition = boundaries[0];
    		let maxBarPosition = boundaries[boundaries.length - 1];

    		if (event.x > minBarPosition && event.x < maxBarPosition) {
    			select(this).raise().attr("transform", `translate(${event.x}, 0)`);
    			select(this).raise().attr("transform", `translate(${event.x}, 0)`);
    		}
    	})
    	.on("end", function(event) { 
    		let boundaries = x_scale_params.range().map(d => (d - (groupPadding/2)));
    		let nearestDivision = findClosestDivision(event.x);
    		let dividerPositionIndex = boundaries.indexOf(nearestDivision);

    		select(this)
    			.attr("class", `grouped-sort-divider ${dividerPositionIndex}`)
    			.transition()
    			.attr("transform", `translate(${nearestDivision}, 0)` )
    			.attr("transform", `translate(${nearestDivision}, 0)` );

    		sortByGroupParams = x_scale_params.domain().slice(dividerPositionIndex).reverse();
    		group_params.update(arr => sortByGroupParams);
    	});


    function findClosestDivision(x_value) {
    	let boundaries = x_scale_params.range().map(d => (d - (groupPadding/2)));
    	var nearest = boundaries.reduce(function(prev, curr) {
    		return (Math.abs(curr - x_value) < Math.abs(prev - x_value) ? curr : prev);
      });
      return nearest
    }

    const { Object: Object_1$1 } = globals;
    const file$4 = "src/components/Grid.svelte";

    function get_each_context$3(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[29] = list[i];
    	return child_ctx;
    }

    function get_each_context_1$1(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[32] = list[i];
    	child_ctx[34] = i;
    	return child_ctx;
    }

    function get_each_context_2(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[35] = list[i];
    	child_ctx[37] = i;
    	return child_ctx;
    }

    function get_each_context_3(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[29] = list[i];
    	return child_ctx;
    }

    function get_each_context_4(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[32] = list[i];
    	child_ctx[34] = i;
    	return child_ctx;
    }

    function get_each_context_5(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[41] = list[i];
    	child_ctx[34] = i;
    	return child_ctx;
    }

    // (146:4) {#each d3.range(parameters[parameter].length - 1) as d, i}
    function create_each_block_5(ctx) {
    	let foreignObject;
    	let optionjoin;
    	let foreignObject_class_value;
    	let current;

    	optionjoin = new Toggle_join_option({
    			props: {
    				parameter: /*parameter*/ ctx[29],
    				options: /*parameters*/ ctx[1][/*parameter*/ ctx[29]],
    				index: /*i*/ ctx[34]
    			},
    			$$inline: true
    		});

    	optionjoin.$on("join", /*join_handler*/ ctx[18]);

    	const block = {
    		c: function create() {
    			foreignObject = svg_element("foreignObject");
    			create_component(optionjoin.$$.fragment);
    			attr_dev(foreignObject, "class", foreignObject_class_value = "option-join " + /*d*/ ctx[41]);
    			attr_dev(foreignObject, "x", (/*x2*/ ctx[13](/*i*/ ctx[34]) + /*x2*/ ctx[13](/*i*/ ctx[34] + 1)) / 2);
    			attr_dev(foreignObject, "width", iconSize);
    			attr_dev(foreignObject, "height", iconSize);
    			add_location(foreignObject, file$4, 146, 5, 4738);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, foreignObject, anchor);
    			mount_component(optionjoin, foreignObject, null);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const optionjoin_changes = {};
    			if (dirty[0] & /*parameters*/ 2) optionjoin_changes.parameter = /*parameter*/ ctx[29];
    			if (dirty[0] & /*parameters*/ 2) optionjoin_changes.options = /*parameters*/ ctx[1][/*parameter*/ ctx[29]];
    			optionjoin.$set(optionjoin_changes);

    			if (!current || dirty[0] & /*parameters*/ 2 && foreignObject_class_value !== (foreignObject_class_value = "option-join " + /*d*/ ctx[41])) {
    				attr_dev(foreignObject, "class", foreignObject_class_value);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(optionjoin.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(optionjoin.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(foreignObject);
    			destroy_component(optionjoin);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_5.name,
    		type: "each",
    		source: "(146:4) {#each d3.range(parameters[parameter].length - 1) as d, i}",
    		ctx
    	});

    	return block;
    }

    // (155:4) {#each parameters[parameter] as option, i}
    function create_each_block_4(ctx) {
    	let g;
    	let foreignObject;
    	let optiontoggle;
    	let div;
    	let t_value = /*option*/ ctx[32] + "";
    	let t;
    	let div_class_value;
    	let foreignObject_class_value;
    	let g_class_value;
    	let g_transform_value;
    	let current;

    	optiontoggle = new Toggle_hide_option({
    			props: {
    				parameter: /*parameter*/ ctx[29],
    				option: /*option*/ ctx[32]
    			},
    			$$inline: true
    		});

    	optiontoggle.$on("hide", /*hide_handler*/ ctx[19]);

    	const block = {
    		c: function create() {
    			g = svg_element("g");
    			foreignObject = svg_element("foreignObject");
    			create_component(optiontoggle.$$.fragment);
    			div = element("div");
    			t = text$2(t_value);
    			attr_dev(div, "class", div_class_value = "option-label " + /*option_names*/ ctx[3] + " " + /*option*/ ctx[32]);
    			add_location(div, file$4, 163, 8, 5405);
    			attr_dev(foreignObject, "x", "0");
    			attr_dev(foreignObject, "y", iconSize + cell.padding);
    			attr_dev(foreignObject, "width", cell.width + cell.padding);
    			attr_dev(foreignObject, "height", namingDim);
    			attr_dev(foreignObject, "class", foreignObject_class_value = "option-name " + /*option*/ ctx[32]);
    			add_location(foreignObject, file$4, 156, 6, 5166);
    			attr_dev(g, "class", g_class_value = "option-headers " + /*parameter*/ ctx[29] + " " + /*option*/ ctx[32] + " option-" + /*i*/ ctx[34]);
    			attr_dev(g, "transform", g_transform_value = "translate(" + /*$option_scale*/ ctx[12][/*parameter*/ ctx[29]](/*i*/ ctx[34]) + ", 0)");
    			add_location(g, file$4, 155, 5, 5045);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, g, anchor);
    			append_dev(g, foreignObject);
    			mount_component(optiontoggle, foreignObject, null);
    			append_dev(foreignObject, div);
    			append_dev(div, t);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const optiontoggle_changes = {};
    			if (dirty[0] & /*parameters*/ 2) optiontoggle_changes.parameter = /*parameter*/ ctx[29];
    			if (dirty[0] & /*parameters*/ 2) optiontoggle_changes.option = /*option*/ ctx[32];
    			optiontoggle.$set(optiontoggle_changes);
    			if ((!current || dirty[0] & /*parameters*/ 2) && t_value !== (t_value = /*option*/ ctx[32] + "")) set_data_dev(t, t_value);

    			if (!current || dirty[0] & /*parameters*/ 2 && div_class_value !== (div_class_value = "option-label " + /*option_names*/ ctx[3] + " " + /*option*/ ctx[32])) {
    				attr_dev(div, "class", div_class_value);
    			}

    			if (!current || dirty[0] & /*parameters*/ 2 && foreignObject_class_value !== (foreignObject_class_value = "option-name " + /*option*/ ctx[32])) {
    				attr_dev(foreignObject, "class", foreignObject_class_value);
    			}

    			if (!current || dirty[0] & /*parameters*/ 2 && g_class_value !== (g_class_value = "option-headers " + /*parameter*/ ctx[29] + " " + /*option*/ ctx[32] + " option-" + /*i*/ ctx[34])) {
    				attr_dev(g, "class", g_class_value);
    			}

    			if (!current || dirty[0] & /*$option_scale, parameters*/ 4098 && g_transform_value !== (g_transform_value = "translate(" + /*$option_scale*/ ctx[12][/*parameter*/ ctx[29]](/*i*/ ctx[34]) + ", 0)")) {
    				attr_dev(g, "transform", g_transform_value);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(optiontoggle.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(optiontoggle.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(g);
    			destroy_component(optiontoggle);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_4.name,
    		type: "each",
    		source: "(155:4) {#each parameters[parameter] as option, i}",
    		ctx
    	});

    	return block;
    }

    // (135:2) {#each Object.keys(parameters) as parameter}
    function create_each_block_3(ctx) {
    	let g0;
    	let foreignObject;
    	let div;
    	let t_value = /*parameter*/ ctx[29] + "";
    	let t;
    	let div_class_value;
    	let foreignObject_x_value;
    	let foreignObject_width_value;
    	let g0_class_value;
    	let g1;
    	let each0_anchor;
    	let g1_class_value;
    	let g1_transform_value;
    	let current;
    	let each_value_5 = sequence(/*parameters*/ ctx[1][/*parameter*/ ctx[29]].length - 1);
    	validate_each_argument(each_value_5);
    	let each_blocks_1 = [];

    	for (let i = 0; i < each_value_5.length; i += 1) {
    		each_blocks_1[i] = create_each_block_5(get_each_context_5(ctx, each_value_5, i));
    	}

    	const out = i => transition_out(each_blocks_1[i], 1, 1, () => {
    		each_blocks_1[i] = null;
    	});

    	let each_value_4 = /*parameters*/ ctx[1][/*parameter*/ ctx[29]];
    	validate_each_argument(each_value_4);
    	let each_blocks = [];

    	for (let i = 0; i < each_value_4.length; i += 1) {
    		each_blocks[i] = create_each_block_4(get_each_context_4(ctx, each_value_4, i));
    	}

    	const out_1 = i => transition_out(each_blocks[i], 1, 1, () => {
    		each_blocks[i] = null;
    	});

    	const block = {
    		c: function create() {
    			g0 = svg_element("g");
    			foreignObject = svg_element("foreignObject");
    			div = element("div");
    			t = text$2(t_value);
    			g1 = svg_element("g");

    			for (let i = 0; i < each_blocks_1.length; i += 1) {
    				each_blocks_1[i].c();
    			}

    			each0_anchor = empty$3();

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			attr_dev(div, "class", div_class_value = "parameter-name " + /*parameter_name*/ ctx[2] + " " + /*parameter*/ ctx[29]);
    			set_style(div, "cursor", "move");
    			add_location(div, file$4, 141, 5, 4437);
    			attr_dev(foreignObject, "x", foreignObject_x_value = /*$parameter_scale*/ ctx[11](/*parameter*/ ctx[29]));
    			attr_dev(foreignObject, "y", cell.padding);
    			attr_dev(foreignObject, "width", foreignObject_width_value = (cell.width + cell.padding / 2) * /*parameters*/ ctx[1][/*parameter*/ ctx[29]].length);
    			attr_dev(foreignObject, "height", cell.height);
    			add_location(foreignObject, file$4, 136, 4, 4245);
    			attr_dev(g0, "class", g0_class_value = "parameter " + /*parameter*/ ctx[29]);
    			add_location(g0, file$4, 135, 3, 4207);
    			attr_dev(g1, "class", g1_class_value = "parameter-col " + /*parameter*/ ctx[29]);
    			attr_dev(g1, "transform", g1_transform_value = "translate(" + /*$parameter_scale*/ ctx[11](/*parameter*/ ctx[29]) + ", " + margin.top + ")");
    			add_location(g1, file$4, 144, 3, 4565);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, g0, anchor);
    			append_dev(g0, foreignObject);
    			append_dev(foreignObject, div);
    			append_dev(div, t);
    			insert_dev(target, g1, anchor);

    			for (let i = 0; i < each_blocks_1.length; i += 1) {
    				each_blocks_1[i].m(g1, null);
    			}

    			append_dev(g1, each0_anchor);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(g1, null);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if ((!current || dirty[0] & /*parameters*/ 2) && t_value !== (t_value = /*parameter*/ ctx[29] + "")) set_data_dev(t, t_value);

    			if (!current || dirty[0] & /*parameters*/ 2 && div_class_value !== (div_class_value = "parameter-name " + /*parameter_name*/ ctx[2] + " " + /*parameter*/ ctx[29])) {
    				attr_dev(div, "class", div_class_value);
    			}

    			if (!current || dirty[0] & /*$parameter_scale, parameters*/ 2050 && foreignObject_x_value !== (foreignObject_x_value = /*$parameter_scale*/ ctx[11](/*parameter*/ ctx[29]))) {
    				attr_dev(foreignObject, "x", foreignObject_x_value);
    			}

    			if (!current || dirty[0] & /*parameters*/ 2 && foreignObject_width_value !== (foreignObject_width_value = (cell.width + cell.padding / 2) * /*parameters*/ ctx[1][/*parameter*/ ctx[29]].length)) {
    				attr_dev(foreignObject, "width", foreignObject_width_value);
    			}

    			if (!current || dirty[0] & /*parameters*/ 2 && g0_class_value !== (g0_class_value = "parameter " + /*parameter*/ ctx[29])) {
    				attr_dev(g0, "class", g0_class_value);
    			}

    			if (dirty[0] & /*parameters, x2*/ 8194) {
    				each_value_5 = sequence(/*parameters*/ ctx[1][/*parameter*/ ctx[29]].length - 1);
    				validate_each_argument(each_value_5);
    				let i;

    				for (i = 0; i < each_value_5.length; i += 1) {
    					const child_ctx = get_each_context_5(ctx, each_value_5, i);

    					if (each_blocks_1[i]) {
    						each_blocks_1[i].p(child_ctx, dirty);
    						transition_in(each_blocks_1[i], 1);
    					} else {
    						each_blocks_1[i] = create_each_block_5(child_ctx);
    						each_blocks_1[i].c();
    						transition_in(each_blocks_1[i], 1);
    						each_blocks_1[i].m(g1, each0_anchor);
    					}
    				}

    				group_outros();

    				for (i = each_value_5.length; i < each_blocks_1.length; i += 1) {
    					out(i);
    				}

    				check_outros();
    			}

    			if (dirty[0] & /*parameters, $option_scale, option_names*/ 4106) {
    				each_value_4 = /*parameters*/ ctx[1][/*parameter*/ ctx[29]];
    				validate_each_argument(each_value_4);
    				let i;

    				for (i = 0; i < each_value_4.length; i += 1) {
    					const child_ctx = get_each_context_4(ctx, each_value_4, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    						transition_in(each_blocks[i], 1);
    					} else {
    						each_blocks[i] = create_each_block_4(child_ctx);
    						each_blocks[i].c();
    						transition_in(each_blocks[i], 1);
    						each_blocks[i].m(g1, null);
    					}
    				}

    				group_outros();

    				for (i = each_value_4.length; i < each_blocks.length; i += 1) {
    					out_1(i);
    				}

    				check_outros();
    			}

    			if (!current || dirty[0] & /*parameters*/ 2 && g1_class_value !== (g1_class_value = "parameter-col " + /*parameter*/ ctx[29])) {
    				attr_dev(g1, "class", g1_class_value);
    			}

    			if (!current || dirty[0] & /*$parameter_scale, parameters*/ 2050 && g1_transform_value !== (g1_transform_value = "translate(" + /*$parameter_scale*/ ctx[11](/*parameter*/ ctx[29]) + ", " + margin.top + ")")) {
    				attr_dev(g1, "transform", g1_transform_value);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;

    			for (let i = 0; i < each_value_5.length; i += 1) {
    				transition_in(each_blocks_1[i]);
    			}

    			for (let i = 0; i < each_value_4.length; i += 1) {
    				transition_in(each_blocks[i]);
    			}

    			current = true;
    		},
    		o: function outro(local) {
    			each_blocks_1 = each_blocks_1.filter(Boolean);

    			for (let i = 0; i < each_blocks_1.length; i += 1) {
    				transition_out(each_blocks_1[i]);
    			}

    			each_blocks = each_blocks.filter(Boolean);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				transition_out(each_blocks[i]);
    			}

    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(g0);
    			if (detaching) detach_dev(g1);
    			destroy_each(each_blocks_1, detaching);
    			destroy_each(each_blocks, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_3.name,
    		type: "each",
    		source: "(135:2) {#each Object.keys(parameters) as parameter}",
    		ctx
    	});

    	return block;
    }

    // (196:7) {:else}
    function create_else_block(ctx) {
    	let rect;
    	let rect_x_value;
    	let rect_y_value;
    	let rect_height_value;
    	let rect_class_value;
    	let mounted;
    	let dispose;

    	function mouseover_handler_1() {
    		return /*mouseover_handler_1*/ ctx[21](/*j*/ ctx[37]);
    	}

    	const block = {
    		c: function create() {
    			rect = svg_element("rect");
    			attr_dev(rect, "x", rect_x_value = (cell.width - /*cellWidth*/ ctx[8]) / 2);
    			attr_dev(rect, "y", rect_y_value = /*y*/ ctx[9](/*j*/ ctx[37]));
    			attr_dev(rect, "width", /*cellWidth*/ ctx[8]);
    			attr_dev(rect, "height", rect_height_value = /*y*/ ctx[9].bandwidth());
    			attr_dev(rect, "class", rect_class_value = "" + (/*options_container*/ ctx[4] + " " + /*option*/ ctx[32] + " option-cell" + " svelte-1to1klr"));
    			attr_dev(rect, "row", /*j*/ ctx[37]);
    			add_location(rect, file$4, 196, 8, 6472);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, rect, anchor);

    			if (!mounted) {
    				dispose = [
    					listen_dev(rect, "click", /*openFile*/ ctx[14], false, false, false),
    					listen_dev(rect, "mouseover", mouseover_handler_1, false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;

    			if (dirty[0] & /*cellWidth*/ 256 && rect_x_value !== (rect_x_value = (cell.width - /*cellWidth*/ ctx[8]) / 2)) {
    				attr_dev(rect, "x", rect_x_value);
    			}

    			if (dirty[0] & /*y*/ 512 && rect_y_value !== (rect_y_value = /*y*/ ctx[9](/*j*/ ctx[37]))) {
    				attr_dev(rect, "y", rect_y_value);
    			}

    			if (dirty[0] & /*cellWidth*/ 256) {
    				attr_dev(rect, "width", /*cellWidth*/ ctx[8]);
    			}

    			if (dirty[0] & /*y*/ 512 && rect_height_value !== (rect_height_value = /*y*/ ctx[9].bandwidth())) {
    				attr_dev(rect, "height", rect_height_value);
    			}

    			if (dirty[0] & /*parameters*/ 2 && rect_class_value !== (rect_class_value = "" + (/*options_container*/ ctx[4] + " " + /*option*/ ctx[32] + " option-cell" + " svelte-1to1klr"))) {
    				attr_dev(rect, "class", rect_class_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(rect);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_else_block.name,
    		type: "else",
    		source: "(196:7) {:else}",
    		ctx
    	});

    	return block;
    }

    // (185:7) {#if universe[parameter].includes(option)}
    function create_if_block(ctx) {
    	let rect;
    	let rect_x_value;
    	let rect_y_value;
    	let rect_height_value;
    	let rect_class_value;
    	let mounted;
    	let dispose;

    	function mouseover_handler() {
    		return /*mouseover_handler*/ ctx[20](/*j*/ ctx[37]);
    	}

    	const block = {
    		c: function create() {
    			rect = svg_element("rect");
    			attr_dev(rect, "x", rect_x_value = (cell.width - /*cellWidth*/ ctx[8]) / 2);
    			attr_dev(rect, "y", rect_y_value = /*y*/ ctx[9](/*j*/ ctx[37]));
    			attr_dev(rect, "width", /*cellWidth*/ ctx[8]);
    			attr_dev(rect, "height", rect_height_value = /*y*/ ctx[9].bandwidth());
    			attr_dev(rect, "class", rect_class_value = "" + (/*options_container*/ ctx[4] + " " + /*option*/ ctx[32] + " option-cell " + /*selected_option*/ ctx[5] + " svelte-1to1klr"));
    			attr_dev(rect, "row", /*j*/ ctx[37]);
    			add_location(rect, file$4, 185, 8, 6134);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, rect, anchor);

    			if (!mounted) {
    				dispose = [
    					listen_dev(rect, "click", /*openFile*/ ctx[14], false, false, false),
    					listen_dev(rect, "mouseover", mouseover_handler, false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;

    			if (dirty[0] & /*cellWidth*/ 256 && rect_x_value !== (rect_x_value = (cell.width - /*cellWidth*/ ctx[8]) / 2)) {
    				attr_dev(rect, "x", rect_x_value);
    			}

    			if (dirty[0] & /*y*/ 512 && rect_y_value !== (rect_y_value = /*y*/ ctx[9](/*j*/ ctx[37]))) {
    				attr_dev(rect, "y", rect_y_value);
    			}

    			if (dirty[0] & /*cellWidth*/ 256) {
    				attr_dev(rect, "width", /*cellWidth*/ ctx[8]);
    			}

    			if (dirty[0] & /*y*/ 512 && rect_height_value !== (rect_height_value = /*y*/ ctx[9].bandwidth())) {
    				attr_dev(rect, "height", rect_height_value);
    			}

    			if (dirty[0] & /*parameters*/ 2 && rect_class_value !== (rect_class_value = "" + (/*options_container*/ ctx[4] + " " + /*option*/ ctx[32] + " option-cell " + /*selected_option*/ ctx[5] + " svelte-1to1klr"))) {
    				attr_dev(rect, "class", rect_class_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(rect);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block.name,
    		type: "if",
    		source: "(185:7) {#if universe[parameter].includes(option)}",
    		ctx
    	});

    	return block;
    }

    // (184:6) {#each data as universe, j}
    function create_each_block_2(ctx) {
    	let show_if;
    	let if_block_anchor;

    	function select_block_type(ctx, dirty) {
    		if (dirty[0] & /*data, parameters*/ 3) show_if = null;
    		if (show_if == null) show_if = !!/*universe*/ ctx[35][/*parameter*/ ctx[29]].includes(/*option*/ ctx[32]);
    		if (show_if) return create_if_block;
    		return create_else_block;
    	}

    	let current_block_type = select_block_type(ctx, [-1, -1]);
    	let if_block = current_block_type(ctx);

    	const block = {
    		c: function create() {
    			if_block.c();
    			if_block_anchor = empty$3();
    		},
    		m: function mount(target, anchor) {
    			if_block.m(target, anchor);
    			insert_dev(target, if_block_anchor, anchor);
    		},
    		p: function update(ctx, dirty) {
    			if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block) {
    				if_block.p(ctx, dirty);
    			} else {
    				if_block.d(1);
    				if_block = current_block_type(ctx);

    				if (if_block) {
    					if_block.c();
    					if_block.m(if_block_anchor.parentNode, if_block_anchor);
    				}
    			}
    		},
    		d: function destroy(detaching) {
    			if_block.d(detaching);
    			if (detaching) detach_dev(if_block_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_2.name,
    		type: "each",
    		source: "(184:6) {#each data as universe, j}",
    		ctx
    	});

    	return block;
    }

    // (182:4) {#each parameters[parameter] as option, i}
    function create_each_block_1$1(ctx) {
    	let g;
    	let g_class_value;
    	let g_transform_value;
    	let each_value_2 = /*data*/ ctx[0];
    	validate_each_argument(each_value_2);
    	let each_blocks = [];

    	for (let i = 0; i < each_value_2.length; i += 1) {
    		each_blocks[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));
    	}

    	const block = {
    		c: function create() {
    			g = svg_element("g");

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			attr_dev(g, "class", g_class_value = "option-value " + /*parameter*/ ctx[29] + " " + /*option*/ ctx[32] + " option-" + /*i*/ ctx[34]);
    			attr_dev(g, "transform", g_transform_value = "translate(" + /*$option_scale*/ ctx[12][/*parameter*/ ctx[29]](/*i*/ ctx[34]) + ", 0)");
    			add_location(g, file$4, 182, 5, 5929);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, g, anchor);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(g, null);
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (dirty[0] & /*cellWidth, y, options_container, parameters, selected_option, openFile, moveBgRect, data*/ 49971) {
    				each_value_2 = /*data*/ ctx[0];
    				validate_each_argument(each_value_2);
    				let i;

    				for (i = 0; i < each_value_2.length; i += 1) {
    					const child_ctx = get_each_context_2(ctx, each_value_2, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    					} else {
    						each_blocks[i] = create_each_block_2(child_ctx);
    						each_blocks[i].c();
    						each_blocks[i].m(g, null);
    					}
    				}

    				for (; i < each_blocks.length; i += 1) {
    					each_blocks[i].d(1);
    				}

    				each_blocks.length = each_value_2.length;
    			}

    			if (dirty[0] & /*parameters*/ 2 && g_class_value !== (g_class_value = "option-value " + /*parameter*/ ctx[29] + " " + /*option*/ ctx[32] + " option-" + /*i*/ ctx[34])) {
    				attr_dev(g, "class", g_class_value);
    			}

    			if (dirty[0] & /*$option_scale, parameters*/ 4098 && g_transform_value !== (g_transform_value = "translate(" + /*$option_scale*/ ctx[12][/*parameter*/ ctx[29]](/*i*/ ctx[34]) + ", 0)")) {
    				attr_dev(g, "transform", g_transform_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(g);
    			destroy_each(each_blocks, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_1$1.name,
    		type: "each",
    		source: "(182:4) {#each parameters[parameter] as option, i}",
    		ctx
    	});

    	return block;
    }

    // (180:2) {#each Object.keys(parameters) as parameter}
    function create_each_block$3(ctx) {
    	let g;
    	let g_class_value;
    	let g_transform_value;
    	let each_value_1 = /*parameters*/ ctx[1][/*parameter*/ ctx[29]];
    	validate_each_argument(each_value_1);
    	let each_blocks = [];

    	for (let i = 0; i < each_value_1.length; i += 1) {
    		each_blocks[i] = create_each_block_1$1(get_each_context_1$1(ctx, each_value_1, i));
    	}

    	const block = {
    		c: function create() {
    			g = svg_element("g");

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			attr_dev(g, "class", g_class_value = "parameter-col " + /*parameter*/ ctx[29]);
    			attr_dev(g, "transform", g_transform_value = "translate(" + /*$parameter_scale*/ ctx[11](/*parameter*/ ctx[29]) + ", 0)");
    			add_location(g, file$4, 180, 3, 5783);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, g, anchor);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(g, null);
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (dirty[0] & /*parameters, $option_scale, data, cellWidth, y, options_container, selected_option, openFile, moveBgRect*/ 54067) {
    				each_value_1 = /*parameters*/ ctx[1][/*parameter*/ ctx[29]];
    				validate_each_argument(each_value_1);
    				let i;

    				for (i = 0; i < each_value_1.length; i += 1) {
    					const child_ctx = get_each_context_1$1(ctx, each_value_1, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    					} else {
    						each_blocks[i] = create_each_block_1$1(child_ctx);
    						each_blocks[i].c();
    						each_blocks[i].m(g, null);
    					}
    				}

    				for (; i < each_blocks.length; i += 1) {
    					each_blocks[i].d(1);
    				}

    				each_blocks.length = each_value_1.length;
    			}

    			if (dirty[0] & /*parameters*/ 2 && g_class_value !== (g_class_value = "parameter-col " + /*parameter*/ ctx[29])) {
    				attr_dev(g, "class", g_class_value);
    			}

    			if (dirty[0] & /*$parameter_scale, parameters*/ 2050 && g_transform_value !== (g_transform_value = "translate(" + /*$parameter_scale*/ ctx[11](/*parameter*/ ctx[29]) + ", 0)")) {
    				attr_dev(g, "transform", g_transform_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(g);
    			destroy_each(each_blocks, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block$3.name,
    		type: "each",
    		source: "(180:2) {#each Object.keys(parameters) as parameter}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$4(ctx) {
    	let div;
    	let svg0;
    	let t;
    	let svg1;
    	let rect;
    	let rect_y_value;
    	let rect_height_value;
    	let each1_anchor;
    	let sortbygroupdivider;
    	let current;
    	let each_value_3 = Object.keys(/*parameters*/ ctx[1]);
    	validate_each_argument(each_value_3);
    	let each_blocks_1 = [];

    	for (let i = 0; i < each_value_3.length; i += 1) {
    		each_blocks_1[i] = create_each_block_3(get_each_context_3(ctx, each_value_3, i));
    	}

    	const out = i => transition_out(each_blocks_1[i], 1, 1, () => {
    		each_blocks_1[i] = null;
    	});

    	let each_value = Object.keys(/*parameters*/ ctx[1]);
    	validate_each_argument(each_value);
    	let each_blocks = [];

    	for (let i = 0; i < each_value.length; i += 1) {
    		each_blocks[i] = create_each_block$3(get_each_context$3(ctx, each_value, i));
    	}

    	sortbygroupdivider = new SortByGroupDivider({
    			props: {
    				parameters: /*parameters*/ ctx[1],
    				h: /*h*/ ctx[7]
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			div = element("div");
    			svg0 = svg_element("svg");

    			for (let i = 0; i < each_blocks_1.length; i += 1) {
    				each_blocks_1[i].c();
    			}

    			t = space();
    			svg1 = svg_element("svg");
    			rect = svg_element("rect");

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			each1_anchor = empty$3();
    			create_component(sortbygroupdivider.$$.fragment);
    			attr_dev(svg0, "class", "grid-header svelte-1to1klr");
    			attr_dev(svg0, "height", gridNamesHeight);
    			attr_dev(svg0, "width", /*w*/ ctx[10]);
    			add_location(svg0, file$4, 133, 1, 4096);
    			attr_dev(rect, "x", "0");
    			attr_dev(rect, "y", rect_y_value = "-" + (/*y*/ ctx[9].bandwidth() + cell.padding));
    			attr_dev(rect, "width", "100%");
    			attr_dev(rect, "height", rect_height_value = /*y*/ ctx[9].bandwidth() + cell.padding);
    			attr_dev(rect, "class", "" + (null_to_empty(/*bg_rect*/ ctx[6]) + " svelte-1to1klr"));
    			attr_dev(rect, "id", "bg-rect");
    			add_location(rect, file$4, 171, 2, 5589);
    			attr_dev(svg1, "class", "grid-body svelte-1to1klr");
    			attr_dev(svg1, "height", /*h*/ ctx[7]);
    			attr_dev(svg1, "width", /*w*/ ctx[10]);
    			add_location(svg1, file$4, 170, 1, 5542);
    			attr_dev(div, "class", "grid");
    			set_style(div, "height", /*h*/ ctx[7] + "px");
    			add_location(div, file$4, 132, 0, 4054);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			append_dev(div, svg0);

    			for (let i = 0; i < each_blocks_1.length; i += 1) {
    				each_blocks_1[i].m(svg0, null);
    			}

    			append_dev(div, t);
    			append_dev(div, svg1);
    			append_dev(svg1, rect);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(svg1, null);
    			}

    			append_dev(svg1, each1_anchor);
    			mount_component(sortbygroupdivider, svg1, null);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (dirty[0] & /*parameters, $parameter_scale, $option_scale, option_names, x2, parameter_name*/ 14350) {
    				each_value_3 = Object.keys(/*parameters*/ ctx[1]);
    				validate_each_argument(each_value_3);
    				let i;

    				for (i = 0; i < each_value_3.length; i += 1) {
    					const child_ctx = get_each_context_3(ctx, each_value_3, i);

    					if (each_blocks_1[i]) {
    						each_blocks_1[i].p(child_ctx, dirty);
    						transition_in(each_blocks_1[i], 1);
    					} else {
    						each_blocks_1[i] = create_each_block_3(child_ctx);
    						each_blocks_1[i].c();
    						transition_in(each_blocks_1[i], 1);
    						each_blocks_1[i].m(svg0, null);
    					}
    				}

    				group_outros();

    				for (i = each_value_3.length; i < each_blocks_1.length; i += 1) {
    					out(i);
    				}

    				check_outros();
    			}

    			if (!current || dirty[0] & /*w*/ 1024) {
    				attr_dev(svg0, "width", /*w*/ ctx[10]);
    			}

    			if (!current || dirty[0] & /*y*/ 512 && rect_y_value !== (rect_y_value = "-" + (/*y*/ ctx[9].bandwidth() + cell.padding))) {
    				attr_dev(rect, "y", rect_y_value);
    			}

    			if (!current || dirty[0] & /*y*/ 512 && rect_height_value !== (rect_height_value = /*y*/ ctx[9].bandwidth() + cell.padding)) {
    				attr_dev(rect, "height", rect_height_value);
    			}

    			if (dirty[0] & /*parameters, $parameter_scale, $option_scale, data, cellWidth, y, options_container, selected_option, openFile, moveBgRect*/ 56115) {
    				each_value = Object.keys(/*parameters*/ ctx[1]);
    				validate_each_argument(each_value);
    				let i;

    				for (i = 0; i < each_value.length; i += 1) {
    					const child_ctx = get_each_context$3(ctx, each_value, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    					} else {
    						each_blocks[i] = create_each_block$3(child_ctx);
    						each_blocks[i].c();
    						each_blocks[i].m(svg1, each1_anchor);
    					}
    				}

    				for (; i < each_blocks.length; i += 1) {
    					each_blocks[i].d(1);
    				}

    				each_blocks.length = each_value.length;
    			}

    			const sortbygroupdivider_changes = {};
    			if (dirty[0] & /*parameters*/ 2) sortbygroupdivider_changes.parameters = /*parameters*/ ctx[1];
    			if (dirty[0] & /*h*/ 128) sortbygroupdivider_changes.h = /*h*/ ctx[7];
    			sortbygroupdivider.$set(sortbygroupdivider_changes);

    			if (!current || dirty[0] & /*h*/ 128) {
    				attr_dev(svg1, "height", /*h*/ ctx[7]);
    			}

    			if (!current || dirty[0] & /*w*/ 1024) {
    				attr_dev(svg1, "width", /*w*/ ctx[10]);
    			}

    			if (!current || dirty[0] & /*h*/ 128) {
    				set_style(div, "height", /*h*/ ctx[7] + "px");
    			}
    		},
    		i: function intro(local) {
    			if (current) return;

    			for (let i = 0; i < each_value_3.length; i += 1) {
    				transition_in(each_blocks_1[i]);
    			}

    			transition_in(sortbygroupdivider.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			each_blocks_1 = each_blocks_1.filter(Boolean);

    			for (let i = 0; i < each_blocks_1.length; i += 1) {
    				transition_out(each_blocks_1[i]);
    			}

    			transition_out(sortbygroupdivider.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			destroy_each(each_blocks_1, detaching);
    			destroy_each(each_blocks, detaching);
    			destroy_component(sortbygroupdivider);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$4.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$4($$self, $$props, $$invalidate) {
    	let w;
    	let h;
    	let y;
    	let $gridCollapse;
    	let $parameter_scale;
    	let $option_scale;
    	validate_store(gridCollapse, 'gridCollapse');
    	component_subscribe($$self, gridCollapse, $$value => $$invalidate(17, $gridCollapse = $$value));
    	validate_store(parameter_scale, 'parameter_scale');
    	component_subscribe($$self, parameter_scale, $$value => $$invalidate(11, $parameter_scale = $$value));
    	validate_store(option_scale, 'option_scale');
    	component_subscribe($$self, option_scale, $$value => $$invalidate(12, $option_scale = $$value));
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Grid', slots, []);
    	let { data } = $$props;
    	let { parameters } = $$props;

    	const parameter_name = css`
		font-size: ${header.size + "px"};
		font-family: 'Avenir Next';
		text-transform: uppercase;
		padding: 0px ${cell.padding / 2 + "px"};
		background-color: ${colors.background};
		cursor: default;
		overflow: hidden;
		text-overflow: ellipsis;
		text-align: center;
		width: 100%;
		user-select: none;
	`;

    	const option_names = css`
		font-size: ${header.size + "px"};
		font-family: 'Avenir Next';
		line-height: ${cell.width}px;
		overflow: hidden;
		text-overflow: ellipsis;
		cursor: default;
		height: ${nameContainer.height}px;
		width: ${nameContainer.width}px;
		writing-mode: tb-rl; 
		transform: rotate(-180deg);
	`;

    	const options_container = css`
		fill: ${colors.inactive};
	`;

    	const selected_option = css`
		fill: ${colors.active};
	`;

    	const bg_rect = css`
		fill: #d6d6d6;
	`;

    	let cellHeight, cellWidth;
    	const param_n_options = Object.fromEntries(Object.entries(parameters).map(d => [d[0], d[1].length]));
    	const n_options = Object.values(param_n_options).reduce((a, b) => a + b, 0);
    	const cols = [...Object.keys(parameters)].length;
    	const x2 = band().domain(sequence(max$3(Object.values(param_n_options)))).range([0, max$3(Object.values(param_n_options)) * (cell.width + cell.padding)]);
    	document.documentElement.style.setProperty('--bgColor', colors.background);
    	let order = {};

    	Object.keys(parameters).forEach(function (d, i) {
    		let n = Object.values(parameters)[i].length;

    		order[d] = {
    			name: sequence(n).sort(function (a, b) {
    				return a - b;
    			})
    		};
    	});

    	let bgRect;

    	onMount(() => {
    		selectAll(".option-headers").call(drag_options(order));
    		selectAll(".parameter").call(drag_parameters(param_n_options));
    		select("g.grouped-sort-divider").call(dragSortDivider());
    		bgRect = document.querySelector("#bg-rect");
    	});

    	let mvWindow;
    	const bc = new BroadcastChannel('mv');

    	function openFile() {
    		let spec = structuredClone(data[this.getAttribute("row")]);
    		Object.keys(spec).forEach(param => spec[param] = spec[param][0]);

    		if (!mvWindow || mvWindow.closed) {
    			mvWindow = open("example-analysis-4.html", "example-analysis-4.html", `top=0,
							 left=${screen.width}-960,
							 width=960,
							 height=${screen.height}
							`);

    			let script = document.createElement('script');

    			let scriptContent = `
				const bc = new BroadcastChannel('mv');
				bc.onmessage = e => setActiveSpecification(e.data);
				let poll = setInterval(()=>{
					if (typeof setActiveSpecification !== 'undefined') {
						setActiveSpecification(${JSON.stringify(spec)});
						clearInterval(poll);
					}
				},100);
			`;

    			script.innerHTML = scriptContent;
    			mvWindow.document.body.appendChild(script);
    		} else {
    			bc.postMessage(spec);
    		}
    	}

    	function moveBgRect(yPos) {
    		bgRect.setAttribute('y', yPos - cell.padding / 2);
    	}

    	const writable_props = ['data', 'parameters'];

    	Object_1$1.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Grid> was created with unknown prop '${key}'`);
    	});

    	function join_handler(event) {
    		bubble.call(this, $$self, event);
    	}

    	function hide_handler(event) {
    		bubble.call(this, $$self, event);
    	}

    	const mouseover_handler = j => moveBgRect(y(j));
    	const mouseover_handler_1 = j => moveBgRect(y(j));

    	$$self.$$set = $$props => {
    		if ('data' in $$props) $$invalidate(0, data = $$props.data);
    		if ('parameters' in $$props) $$invalidate(1, parameters = $$props.parameters);
    	};

    	$$self.$capture_state = () => ({
    		css,
    		cx,
    		d3,
    		onMount,
    		createEventDispatcher,
    		colors,
    		windowHeight,
    		margin,
    		cell,
    		groupPadding,
    		gridNamesHeight,
    		header,
    		iconSize,
    		namingDim,
    		nameContainer,
    		SortByGroupDivider,
    		OptionToggle: Toggle_hide_option,
    		OptionJoin: Toggle_join_option,
    		gridCollapse,
    		exclude_options,
    		join_options,
    		parameter_scale,
    		option_scale,
    		drag_options,
    		drag_parameters,
    		dragSortDivider,
    		data,
    		parameters,
    		parameter_name,
    		option_names,
    		options_container,
    		selected_option,
    		bg_rect,
    		cellHeight,
    		cellWidth,
    		param_n_options,
    		n_options,
    		cols,
    		x2,
    		order,
    		bgRect,
    		mvWindow,
    		bc,
    		openFile,
    		moveBgRect,
    		y,
    		h,
    		w,
    		$gridCollapse,
    		$parameter_scale,
    		$option_scale
    	});

    	$$self.$inject_state = $$props => {
    		if ('data' in $$props) $$invalidate(0, data = $$props.data);
    		if ('parameters' in $$props) $$invalidate(1, parameters = $$props.parameters);
    		if ('cellHeight' in $$props) $$invalidate(16, cellHeight = $$props.cellHeight);
    		if ('cellWidth' in $$props) $$invalidate(8, cellWidth = $$props.cellWidth);
    		if ('order' in $$props) order = $$props.order;
    		if ('bgRect' in $$props) bgRect = $$props.bgRect;
    		if ('mvWindow' in $$props) mvWindow = $$props.mvWindow;
    		if ('y' in $$props) $$invalidate(9, y = $$props.y);
    		if ('h' in $$props) $$invalidate(7, h = $$props.h);
    		if ('w' in $$props) $$invalidate(10, w = $$props.w);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$self.$$.update = () => {
    		if ($$self.$$.dirty[0] & /*$gridCollapse*/ 131072) {
    			{
    				$$invalidate(16, cellHeight = $gridCollapse ? 2 : cell.height);
    			}
    		}

    		if ($$self.$$.dirty[0] & /*$gridCollapse*/ 131072) {
    			{
    				$$invalidate(8, cellWidth = $gridCollapse ? 8 : cell.width);
    			}
    		}

    		if ($$self.$$.dirty[0] & /*data, cellHeight*/ 65537) {
    			$$invalidate(7, h = cell.padding + data.length * cellHeight + margin.bottom);
    		}

    		if ($$self.$$.dirty[0] & /*data, h*/ 129) {
    			$$invalidate(9, y = band().domain(sequence(data.length)).range([0, h - (margin.bottom + cell.padding)]).padding(0.1));
    		}
    	};

    	$$invalidate(10, w = cell.width * n_options + cell.padding * (n_options - cols) + (cols + 1) * groupPadding);

    	return [
    		data,
    		parameters,
    		parameter_name,
    		option_names,
    		options_container,
    		selected_option,
    		bg_rect,
    		h,
    		cellWidth,
    		y,
    		w,
    		$parameter_scale,
    		$option_scale,
    		x2,
    		openFile,
    		moveBgRect,
    		cellHeight,
    		$gridCollapse,
    		join_handler,
    		hide_handler,
    		mouseover_handler,
    		mouseover_handler_1
    	];
    }

    class Grid extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init$1(
    			this,
    			options,
    			instance$4,
    			create_fragment$4,
    			safe_not_equal,
    			{
    				data: 0,
    				parameters: 1,
    				parameter_name: 2,
    				option_names: 3,
    				options_container: 4,
    				selected_option: 5,
    				bg_rect: 6
    			},
    			null,
    			[-1, -1]
    		);

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Grid",
    			options,
    			id: create_fragment$4.name
    		});

    		const { ctx } = this.$$;
    		const props = options.props || {};

    		if (/*data*/ ctx[0] === undefined && !('data' in props)) {
    			console.warn("<Grid> was created without expected prop 'data'");
    		}

    		if (/*parameters*/ ctx[1] === undefined && !('parameters' in props)) {
    			console.warn("<Grid> was created without expected prop 'parameters'");
    		}
    	}

    	get data() {
    		throw new Error("<Grid>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set data(value) {
    		throw new Error("<Grid>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get parameters() {
    		throw new Error("<Grid>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set parameters(value) {
    		throw new Error("<Grid>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get parameter_name() {
    		return this.$$.ctx[2];
    	}

    	set parameter_name(value) {
    		throw new Error("<Grid>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get option_names() {
    		return this.$$.ctx[3];
    	}

    	set option_names(value) {
    		throw new Error("<Grid>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get options_container() {
    		return this.$$.ctx[4];
    	}

    	set options_container(value) {
    		throw new Error("<Grid>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get selected_option() {
    		return this.$$.ctx[5];
    	}

    	set selected_option(value) {
    		throw new Error("<Grid>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get bg_rect() {
    		return this.$$.ctx[6];
    	}

    	set bg_rect(value) {
    		throw new Error("<Grid>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    const file$3 = "src/components/toggle-gridSize.svelte";

    function create_fragment$3(ctx) {
    	let div2;
    	let p;
    	let t1;
    	let div1;
    	let div0;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			div2 = element("div");
    			p = element("p");
    			p.textContent = "grid collapse?";
    			t1 = space();
    			div1 = element("div");
    			div0 = element("div");
    			attr_dev(p, "class", "svelte-1np2212");
    			add_location(p, file$3, 20, 1, 358);
    			attr_dev(div0, "class", "state-indicator svelte-1np2212");
    			set_style(div0, "width", /*r*/ ctx[1] + "px");
    			set_style(div0, "height", /*r*/ ctx[1] + "px");
    			toggle_class(div0, "active", /*active*/ ctx[0]);
    			add_location(div0, file$3, 22, 2, 480);
    			attr_dev(div1, "class", "toggle-button svelte-1np2212");
    			set_style(div1, "height", /*r*/ ctx[1] + "px");
    			toggle_class(div1, "active", /*active*/ ctx[0]);
    			add_location(div1, file$3, 21, 1, 381);
    			attr_dev(div2, "class", "toggle svelte-1np2212");
    			add_location(div2, file$3, 19, 0, 336);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div2, anchor);
    			append_dev(div2, p);
    			append_dev(div2, t1);
    			append_dev(div2, div1);
    			append_dev(div1, div0);

    			if (!mounted) {
    				dispose = listen_dev(div1, "click", /*handleClick*/ ctx[2], false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*active*/ 1) {
    				toggle_class(div0, "active", /*active*/ ctx[0]);
    			}

    			if (dirty & /*active*/ 1) {
    				toggle_class(div1, "active", /*active*/ ctx[0]);
    			}
    		},
    		i: noop$4,
    		o: noop$4,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div2);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$3.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$3($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Toggle_gridSize', slots, []);
    	let active = false;
    	let r = 20;

    	function handleClick() {
    		$$invalidate(0, active = !active);

    		if (active) {
    			gridCollapse.set(1);
    		} else {
    			gridCollapse.set(0);
    		}
    	}

    	const writable_props = [];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Toggle_gridSize> was created with unknown prop '${key}'`);
    	});

    	$$self.$capture_state = () => ({
    		d3,
    		text,
    		header,
    		cell,
    		iconSize,
    		gridCollapse,
    		active,
    		r,
    		handleClick
    	});

    	$$self.$inject_state = $$props => {
    		if ('active' in $$props) $$invalidate(0, active = $$props.active);
    		if ('r' in $$props) $$invalidate(1, r = $$props.r);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [active, r, handleClick];
    }

    class Toggle_gridSize extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init$1(this, options, instance$3, create_fragment$3, safe_not_equal, {});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Toggle_gridSize",
    			options,
    			id: create_fragment$3.name
    		});
    	}
    }

    var code = [
    	"df <- data.raw.study2 %>%",
    	"  mutate(ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast) %>%",
    	"  filter(branch(cycle_length))",
    	"df <- df %>% dplyr::filter(branch(certainty))",
    	"df <- df %>%",
    	"  mutate(NextMenstrualOnset = branch(menstrual_calculation)) %>%",
    	"  mutate(",
    	"    CycleDay = 28 - (NextMenstrualOnset - DateTesting),",
    	"    CycleDay = ifelse(WorkerID == 15, 11, ifelse(WorkerID == 16, 18, CycleDay)),",
    	"    CycleDay = ifelse(CycleDay > 1 & CycleDay < 28, CycleDay, ifelse(CycleDay < 1, 1, 28)))",
    	"df <- df %>% mutate(Fertility = branch(fertile))",
    	"df <- df %>% mutate(RelationshipStatus = branch(relationship_status))"
    ];
    var parameters = {
    	cycle_length: [
    		"\"cl_option1\" ~ TRUE",
    		"\"cl_option2\" ~ ComputedCycleLength > 25 & ComputedCycleLength < 35",
    		"\"cl_option3\" ~ ReportedCycleLength > 25 & ReportedCycleLength < 35"
    	],
    	certainty: [
    		"\"cer_option1\" ~ TRUE",
    		"\"cer_option2\" ~ Sure1 > 6 | Sure2 > 6"
    	],
    	menstrual_calculation: [
    		"\"mc_option1\" %when% (cycle_length != \"cl_option3\") ~ StartDateofLastPeriod + ComputedCycleLength",
    		"\"mc_option2\" %when% (cycle_length != \"cl_option2\") ~ StartDateofLastPeriod + ReportedCycleLength",
    		"\"mc_option3\" ~ StartDateNext"
    	],
    	fertile: [
    		"\"fer_option1\" ~ factor(ifelse(CycleDay >= 7 & CycleDay <= 14, \"high\", ifelse(CycleDay >= 17 & CycleDay <= 25, \"low\", NA)))",
    		"\"fer_option2\" ~ factor(ifelse(CycleDay >= 6 & CycleDay <= 14, \"high\", ifelse(CycleDay >= 17 & CycleDay <= 27, \"low\", NA)))",
    		"\"fer_option3\" ~ factor(ifelse(CycleDay >= 9 & CycleDay <= 17, \"high\", ifelse(CycleDay >= 18 & CycleDay <= 25, \"low\", NA)))",
    		"\"fer_option4\" ~ factor(ifelse(CycleDay >= 8 & CycleDay <= 14, \"high\", \"low\"))",
    		"\"fer_option5\" ~ factor(ifelse(CycleDay >= 8 & CycleDay <= 17, \"high\", \"low\"))"
    	],
    	relationship_status: [
    		"\"rs_option1\" ~ factor(ifelse(Relationship == 1 | Relationship == 2, \"Single\", \"Relationship\"))",
    		"\"rs_option2\" ~ factor(ifelse(Relationship == 1, \"Single\", \"Relationship\"))",
    		"\"rs_option3\" ~ factor(ifelse(Relationship == 1, \"Single\", ifelse(Relationship == 3 | Relationship == 4, \"Relationship\", NA)))"
    	]
    };
    var code$1 = {
    	code: code,
    	parameters: parameters
    };

    var code$2 = /*#__PURE__*/Object.freeze({
        __proto__: null,
        code: code,
        parameters: parameters,
        'default': code$1
    });

    const file$2 = "src/components/ParamOptions.svelte";

    function get_each_context$2(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[4] = list[i].name;
    	child_ctx[5] = list[i].content;
    	child_ctx[7] = i;
    	return child_ctx;
    }

    // (27:4) {#each options as { name, content }
    function create_each_block$2(ctx) {
    	let div;
    	let h3;
    	let t0_value = /*name*/ ctx[4] + "";
    	let t0;
    	let t1;
    	let code;
    	let t2_value = /*content*/ ctx[5] + "";
    	let t2;
    	let t3;
    	let div_id_value;

    	const block = {
    		c: function create() {
    			div = element("div");
    			h3 = element("h3");
    			t0 = text$2(t0_value);
    			t1 = space();
    			code = element("code");
    			t2 = text$2(t2_value);
    			t3 = space();
    			attr_dev(h3, "class", "svelte-60at9z");
    			add_location(h3, file$2, 28, 12, 890);
    			add_location(code, file$2, 29, 12, 918);
    			attr_dev(div, "class", "param-option svelte-60at9z");
    			attr_dev(div, "id", div_id_value = "" + (/*param*/ ctx[0] + "-" + /*i*/ ctx[7]));
    			add_location(div, file$2, 27, 8, 834);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			append_dev(div, h3);
    			append_dev(h3, t0);
    			append_dev(div, t1);
    			append_dev(div, code);
    			append_dev(code, t2);
    			append_dev(div, t3);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*param*/ 1 && div_id_value !== (div_id_value = "" + (/*param*/ ctx[0] + "-" + /*i*/ ctx[7]))) {
    				attr_dev(div, "id", div_id_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block$2.name,
    		type: "each",
    		source: "(27:4) {#each options as { name, content }",
    		ctx
    	});

    	return block;
    }

    function create_fragment$2(ctx) {
    	let div;
    	let div_id_value;
    	let each_value = /*options*/ ctx[2];
    	validate_each_argument(each_value);
    	let each_blocks = [];

    	for (let i = 0; i < each_value.length; i += 1) {
    		each_blocks[i] = create_each_block$2(get_each_context$2(ctx, each_value, i));
    	}

    	const block = {
    		c: function create() {
    			div = element("div");

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			attr_dev(div, "class", "options-container " + /*optionsContainer*/ ctx[1]);
    			attr_dev(div, "id", div_id_value = "paramOptions-" + /*param*/ ctx[0]);
    			add_location(div, file$2, 25, 0, 704);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(div, null);
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*param, options*/ 5) {
    				each_value = /*options*/ ctx[2];
    				validate_each_argument(each_value);
    				let i;

    				for (i = 0; i < each_value.length; i += 1) {
    					const child_ctx = get_each_context$2(ctx, each_value, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    					} else {
    						each_blocks[i] = create_each_block$2(child_ctx);
    						each_blocks[i].c();
    						each_blocks[i].m(div, null);
    					}
    				}

    				for (; i < each_blocks.length; i += 1) {
    					each_blocks[i].d(1);
    				}

    				each_blocks.length = each_value.length;
    			}

    			if (dirty & /*param*/ 1 && div_id_value !== (div_id_value = "paramOptions-" + /*param*/ ctx[0])) {
    				attr_dev(div, "id", div_id_value);
    			}
    		},
    		i: noop$4,
    		o: noop$4,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			destroy_each(each_blocks, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$2.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$2($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('ParamOptions', slots, []);
    	let { param } = $$props;
    	let { optionsData } = $$props;

    	const optionsContainer = css`
        background-color: ${colors.inactive + "80"};
        margin: 5px;
        padding: 5px;
        border-radius: 5px;
    `;

    	let options = [];

    	for (let optionData of optionsData) {
    		let option = { name: "", content: "" };
    		let index = optionData.indexOf('"', 1); // assumed to exist
    		option.name = optionData.slice(1, index);
    		index = optionData.indexOf('~'); // also assumed to exist
    		option.content = optionData.slice(index + 2);
    		options.push(option);
    	}

    	const writable_props = ['param', 'optionsData'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<ParamOptions> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ('param' in $$props) $$invalidate(0, param = $$props.param);
    		if ('optionsData' in $$props) $$invalidate(3, optionsData = $$props.optionsData);
    	};

    	$$self.$capture_state = () => ({
    		css,
    		colors,
    		param,
    		optionsData,
    		optionsContainer,
    		options
    	});

    	$$self.$inject_state = $$props => {
    		if ('param' in $$props) $$invalidate(0, param = $$props.param);
    		if ('optionsData' in $$props) $$invalidate(3, optionsData = $$props.optionsData);
    		if ('options' in $$props) $$invalidate(2, options = $$props.options);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [param, optionsContainer, options, optionsData];
    }

    class ParamOptions extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init$1(this, options, instance$2, create_fragment$2, safe_not_equal, { param: 0, optionsData: 3 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "ParamOptions",
    			options,
    			id: create_fragment$2.name
    		});

    		const { ctx } = this.$$;
    		const props = options.props || {};

    		if (/*param*/ ctx[0] === undefined && !('param' in props)) {
    			console.warn("<ParamOptions> was created without expected prop 'param'");
    		}

    		if (/*optionsData*/ ctx[3] === undefined && !('optionsData' in props)) {
    			console.warn("<ParamOptions> was created without expected prop 'optionsData'");
    		}
    	}

    	get param() {
    		throw new Error("<ParamOptions>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set param(value) {
    		throw new Error("<ParamOptions>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get optionsData() {
    		throw new Error("<ParamOptions>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set optionsData(value) {
    		throw new Error("<ParamOptions>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    const file$1 = "src/components/Code.svelte";

    function get_each_context$1(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[5] = list[i];
    	return child_ctx;
    }

    function get_each_context_1(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[8] = list[i];
    	return child_ctx;
    }

    // (53:8) {#each codeHTML as line}
    function create_each_block_1(ctx) {
    	let pre;
    	let raw_value = /*line*/ ctx[8] + "";

    	const block = {
    		c: function create() {
    			pre = element("pre");
    			attr_dev(pre, "class", "code-line " + /*codeLine*/ ctx[0]);
    			add_location(pre, file$1, 53, 12, 1707);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, pre, anchor);
    			pre.innerHTML = raw_value;
    		},
    		p: noop$4,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(pre);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_1.name,
    		type: "each",
    		source: "(53:8) {#each codeHTML as line}",
    		ctx
    	});

    	return block;
    }

    // (58:8) {#each displayParams as param (param)}
    function create_each_block$1(key_1, ctx) {
    	let first;
    	let paramoptions;
    	let current;

    	paramoptions = new ParamOptions({
    			props: {
    				param: /*param*/ ctx[5],
    				optionsData: parameters[/*param*/ ctx[5]]
    			},
    			$$inline: true
    		});

    	const block = {
    		key: key_1,
    		first: null,
    		c: function create() {
    			first = empty$3();
    			create_component(paramoptions.$$.fragment);
    			this.first = first;
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, first, anchor);
    			mount_component(paramoptions, target, anchor);
    			current = true;
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    			const paramoptions_changes = {};
    			if (dirty & /*displayParams*/ 2) paramoptions_changes.param = /*param*/ ctx[5];
    			if (dirty & /*displayParams*/ 2) paramoptions_changes.optionsData = parameters[/*param*/ ctx[5]];
    			paramoptions.$set(paramoptions_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(paramoptions.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(paramoptions.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(first);
    			destroy_component(paramoptions, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block$1.name,
    		type: "each",
    		source: "(58:8) {#each displayParams as param (param)}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$1(ctx) {
    	let div2;
    	let div0;
    	let h2;
    	let t1;
    	let t2;
    	let div1;
    	let each_blocks = [];
    	let each1_lookup = new Map();
    	let current;
    	let each_value_1 = /*codeHTML*/ ctx[2];
    	validate_each_argument(each_value_1);
    	let each_blocks_1 = [];

    	for (let i = 0; i < each_value_1.length; i += 1) {
    		each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
    	}

    	let each_value = /*displayParams*/ ctx[1];
    	validate_each_argument(each_value);
    	const get_key = ctx => /*param*/ ctx[5];
    	validate_each_keys(ctx, each_value, get_each_context$1, get_key);

    	for (let i = 0; i < each_value.length; i += 1) {
    		let child_ctx = get_each_context$1(ctx, each_value, i);
    		let key = get_key(child_ctx);
    		each1_lookup.set(key, each_blocks[i] = create_each_block$1(key, child_ctx));
    	}

    	const block = {
    		c: function create() {
    			div2 = element("div");
    			div0 = element("div");
    			h2 = element("h2");
    			h2.textContent = "CODE";
    			t1 = space();

    			for (let i = 0; i < each_blocks_1.length; i += 1) {
    				each_blocks_1[i].c();
    			}

    			t2 = space();
    			div1 = element("div");

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			add_location(h2, file$1, 51, 8, 1648);
    			attr_dev(div0, "class", "code");
    			add_location(div0, file$1, 50, 4, 1621);
    			attr_dev(div1, "class", "param-options-container svelte-75ms8b");
    			add_location(div1, file$1, 56, 4, 1791);
    			attr_dev(div2, "class", "code-container svelte-75ms8b");
    			add_location(div2, file$1, 49, 0, 1588);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div2, anchor);
    			append_dev(div2, div0);
    			append_dev(div0, h2);
    			append_dev(div0, t1);

    			for (let i = 0; i < each_blocks_1.length; i += 1) {
    				each_blocks_1[i].m(div0, null);
    			}

    			append_dev(div2, t2);
    			append_dev(div2, div1);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(div1, null);
    			}

    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*codeLine, codeHTML*/ 5) {
    				each_value_1 = /*codeHTML*/ ctx[2];
    				validate_each_argument(each_value_1);
    				let i;

    				for (i = 0; i < each_value_1.length; i += 1) {
    					const child_ctx = get_each_context_1(ctx, each_value_1, i);

    					if (each_blocks_1[i]) {
    						each_blocks_1[i].p(child_ctx, dirty);
    					} else {
    						each_blocks_1[i] = create_each_block_1(child_ctx);
    						each_blocks_1[i].c();
    						each_blocks_1[i].m(div0, null);
    					}
    				}

    				for (; i < each_blocks_1.length; i += 1) {
    					each_blocks_1[i].d(1);
    				}

    				each_blocks_1.length = each_value_1.length;
    			}

    			if (dirty & /*displayParams, code*/ 2) {
    				each_value = /*displayParams*/ ctx[1];
    				validate_each_argument(each_value);
    				group_outros();
    				validate_each_keys(ctx, each_value, get_each_context$1, get_key);
    				each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value, each1_lookup, div1, outro_and_destroy_block, create_each_block$1, null, get_each_context$1);
    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;

    			for (let i = 0; i < each_value.length; i += 1) {
    				transition_in(each_blocks[i]);
    			}

    			current = true;
    		},
    		o: function outro(local) {
    			for (let i = 0; i < each_blocks.length; i += 1) {
    				transition_out(each_blocks[i]);
    			}

    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div2);
    			destroy_each(each_blocks_1, detaching);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].d();
    			}
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$1.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    const branchRegex = /(\bbranch\(([a-zA-Z]|\.[a-zA-Z_.])[\w.]*\))/;

    function instance$1($$self, $$props, $$invalidate) {
    	let displayParams;
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Code', slots, []);

    	const highlight = css`
        background-color: ${colors.inactive + "80"};
        cursor: pointer;

    `;

    	const codeLine = css`margin: 0;`;
    	const codeHTML = code.map(line => line.replace(branchRegex, `<span class='highlight ${highlight}'>$1</span>`));

    	function branchOnClick() {
    		const currBranch = this.textContent.match(/(?<=\().*(?=\))/)[0]; // get branch name
    		const index = displayParams.indexOf(currBranch);

    		if (index !== -1) {
    			displayParams.splice(index, 1);
    			this.style.backgroundColor = colors.inactive + "80";
    		} else {
    			displayParams.push(currBranch);
    			this.style.backgroundColor = colors.active + "80";
    		}

    		$$invalidate(1, displayParams);
    	}

    	onMount(() => {
    		document.querySelectorAll('.highlight').forEach(el => el.addEventListener('click', branchOnClick));
    	});

    	const writable_props = [];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Code> was created with unknown prop '${key}'`);
    	});

    	$$self.$capture_state = () => ({
    		css,
    		onMount,
    		colors,
    		code: code$2,
    		ParamOptions,
    		highlight,
    		codeLine,
    		branchRegex,
    		codeHTML,
    		branchOnClick,
    		displayParams
    	});

    	$$self.$inject_state = $$props => {
    		if ('displayParams' in $$props) $$invalidate(1, displayParams = $$props.displayParams);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$invalidate(1, displayParams = []);
    	return [codeLine, displayParams, codeHTML, highlight];
    }

    class Code extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init$1(this, options, instance$1, create_fragment$1, safe_not_equal, { highlight: 3, codeLine: 0 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Code",
    			options,
    			id: create_fragment$1.name
    		});
    	}

    	get highlight() {
    		return this.$$.ctx[3];
    	}

    	set highlight(value) {
    		throw new Error("<Code>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get codeLine() {
    		return this.$$.ctx[0];
    	}

    	set codeLine(value) {
    		throw new Error("<Code>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    const { Object: Object_1, console: console_1 } = globals;
    const file = "src/App.svelte";

    function get_each_context(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[23] = list[i];
    	child_ctx[24] = list;
    	child_ctx[25] = i;
    	return child_ctx;
    }

    // (147:3) {#each m.outcomes as outcome, i (outcome.id)}
    function create_each_block(key_1, ctx) {
    	let first;
    	let vis;
    	let updating_term;
    	let updating_sortByIndex;
    	let updating_sortAscending;
    	let current;

    	function vis_term_binding(value) {
    		/*vis_term_binding*/ ctx[8](value, /*outcome*/ ctx[23]);
    	}

    	function vis_sortByIndex_binding(value) {
    		/*vis_sortByIndex_binding*/ ctx[9](value);
    	}

    	function vis_sortAscending_binding(value) {
    		/*vis_sortAscending_binding*/ ctx[10](value);
    	}

    	function changeOutcomeVar_handler() {
    		return /*changeOutcomeVar_handler*/ ctx[11](/*i*/ ctx[25], /*outcome*/ ctx[23]);
    	}

    	function remove_handler() {
    		return /*remove_handler*/ ctx[14](/*i*/ ctx[25]);
    	}

    	let vis_props = {
    		i: /*i*/ ctx[25],
    		data: /*outcome*/ ctx[23],
    		allOutcomeVars: /*m*/ ctx[1].allOutcomeVars
    	};

    	if (/*outcome*/ ctx[23].var !== void 0) {
    		vis_props.term = /*outcome*/ ctx[23].var;
    	}

    	if (/*m*/ ctx[1].sortByIndex !== void 0) {
    		vis_props.sortByIndex = /*m*/ ctx[1].sortByIndex;
    	}

    	if (/*m*/ ctx[1].sortAscending !== void 0) {
    		vis_props.sortAscending = /*m*/ ctx[1].sortAscending;
    	}

    	vis = new Vis({ props: vis_props, $$inline: true });
    	binding_callbacks.push(() => bind(vis, 'term', vis_term_binding));
    	binding_callbacks.push(() => bind(vis, 'sortByIndex', vis_sortByIndex_binding));
    	binding_callbacks.push(() => bind(vis, 'sortAscending', vis_sortAscending_binding));
    	vis.$on("changeOutcomeVar", changeOutcomeVar_handler);
    	vis.$on("setSortIndex", /*setSortIndex_handler*/ ctx[12]);
    	vis.$on("changeSortDirection", /*changeSortDirection_handler*/ ctx[13]);
    	vis.$on("remove", remove_handler);

    	const block = {
    		key: key_1,
    		first: null,
    		c: function create() {
    			first = empty$3();
    			create_component(vis.$$.fragment);
    			this.first = first;
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, first, anchor);
    			mount_component(vis, target, anchor);
    			current = true;
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    			const vis_changes = {};
    			if (dirty & /*m*/ 2) vis_changes.i = /*i*/ ctx[25];
    			if (dirty & /*m*/ 2) vis_changes.data = /*outcome*/ ctx[23];
    			if (dirty & /*m*/ 2) vis_changes.allOutcomeVars = /*m*/ ctx[1].allOutcomeVars;

    			if (!updating_term && dirty & /*m*/ 2) {
    				updating_term = true;
    				vis_changes.term = /*outcome*/ ctx[23].var;
    				add_flush_callback(() => updating_term = false);
    			}

    			if (!updating_sortByIndex && dirty & /*m*/ 2) {
    				updating_sortByIndex = true;
    				vis_changes.sortByIndex = /*m*/ ctx[1].sortByIndex;
    				add_flush_callback(() => updating_sortByIndex = false);
    			}

    			if (!updating_sortAscending && dirty & /*m*/ 2) {
    				updating_sortAscending = true;
    				vis_changes.sortAscending = /*m*/ ctx[1].sortAscending;
    				add_flush_callback(() => updating_sortAscending = false);
    			}

    			vis.$set(vis_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(vis.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(vis.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(first);
    			destroy_component(vis, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block.name,
    		type: "each",
    		source: "(147:3) {#each m.outcomes as outcome, i (outcome.id)}",
    		ctx
    	});

    	return block;
    }

    function create_fragment(ctx) {
    	let main;
    	let div0;
    	let t0;
    	let div2;
    	let div1;
    	let h1;
    	let t1;
    	let t2;
    	let togglesize;
    	let t3;
    	let div3;
    	let button;
    	let svg;
    	let path0;
    	let path1;
    	let t4;
    	let div6;
    	let div4;
    	let each_blocks = [];
    	let each_1_lookup = new Map();
    	let t5;
    	let div5;
    	let grid;
    	let t6;
    	let code;
    	let current;
    	let mounted;
    	let dispose;
    	togglesize = new Toggle_gridSize({ $$inline: true });
    	let each_value = /*m*/ ctx[1].outcomes;
    	validate_each_argument(each_value);
    	const get_key = ctx => /*outcome*/ ctx[23].id;
    	validate_each_keys(ctx, each_value, get_each_context, get_key);

    	for (let i = 0; i < each_value.length; i += 1) {
    		let child_ctx = get_each_context(ctx, each_value, i);
    		let key = get_key(child_ctx);
    		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
    	}

    	grid = new Grid({
    			props: {
    				data: /*m*/ ctx[1].gridData,
    				parameters: /*m*/ ctx[1].parameters()
    			},
    			$$inline: true
    		});

    	grid.$on("join", /*joinOptions*/ ctx[5]);
    	grid.$on("hide", /*hideOption*/ ctx[4]);
    	code = new Code({ $$inline: true });

    	const block = {
    		c: function create() {
    			main = element("main");
    			div0 = element("div");
    			t0 = space();
    			div2 = element("div");
    			div1 = element("div");
    			h1 = element("h1");
    			t1 = text$2("Multiverse Visualisation");
    			t2 = space();
    			create_component(togglesize.$$.fragment);
    			t3 = space();
    			div3 = element("div");
    			button = element("button");
    			svg = svg_element("svg");
    			path0 = svg_element("path");
    			path1 = svg_element("path");
    			t4 = space();
    			div6 = element("div");
    			div4 = element("div");

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			t5 = space();
    			div5 = element("div");
    			create_component(grid.$$.fragment);
    			t6 = space();
    			create_component(code.$$.fragment);
    			attr_dev(div0, "id", "leftDiv");
    			add_location(div0, file, 132, 1, 4349);
    			set_style(h1, "margin", header.top + "px 72px");
    			attr_dev(h1, "class", "svelte-2uql09");
    			add_location(h1, file, 135, 3, 4429);
    			attr_dev(div1, "class", "row svelte-2uql09");
    			add_location(div1, file, 134, 2, 4408);
    			attr_dev(div2, "class", "container-flex");
    			add_location(div2, file, 133, 1, 4375);
    			attr_dev(path0, "d", "M0 0h24v24H0V0z");
    			attr_dev(path0, "fill", "none");
    			add_location(path0, file, 141, 134, 4811);
    			attr_dev(path1, "d", "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z");
    			add_location(path1, file, 141, 173, 4850);
    			attr_dev(svg, "class", "add-vis-icon svelte-2uql09");
    			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
    			attr_dev(svg, "height", "32px");
    			attr_dev(svg, "viewBox", "0 0 24 24");
    			attr_dev(svg, "width", "32px");
    			attr_dev(svg, "fill", colors.active);
    			add_location(svg, file, 141, 3, 4680);
    			attr_dev(button, "class", "svelte-2uql09");
    			add_location(button, file, 140, 2, 4565);
    			attr_dev(div3, "class", "button-wrapper svelte-2uql09");
    			add_location(div3, file, 139, 1, 4534);
    			attr_dev(div4, "class", "" + (/*container*/ ctx[0] + " vis-container" + " svelte-2uql09"));
    			set_style(div4, "height", windowHeight + "px");
    			add_location(div4, file, 145, 2, 4946);
    			attr_dev(div5, "class", "" + (/*container*/ ctx[0] + " grid-container" + " svelte-2uql09"));
    			set_style(div5, "height", windowHeight + "px");
    			add_location(div5, file, 161, 2, 5772);
    			attr_dev(div6, "class", "main svelte-2uql09");
    			add_location(div6, file, 144, 1, 4925);
    			attr_dev(main, "class", "svelte-2uql09");
    			add_location(main, file, 131, 0, 4341);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, main, anchor);
    			append_dev(main, div0);
    			append_dev(main, t0);
    			append_dev(main, div2);
    			append_dev(div2, div1);
    			append_dev(div1, h1);
    			append_dev(h1, t1);
    			append_dev(div1, t2);
    			mount_component(togglesize, div1, null);
    			append_dev(main, t3);
    			append_dev(main, div3);
    			append_dev(div3, button);
    			append_dev(button, svg);
    			append_dev(svg, path0);
    			append_dev(svg, path1);
    			append_dev(main, t4);
    			append_dev(main, div6);
    			append_dev(div6, div4);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(div4, null);
    			}

    			append_dev(div6, t5);
    			append_dev(div6, div5);
    			mount_component(grid, div5, null);
    			append_dev(div6, t6);
    			mount_component(code, div6, null);
    			current = true;

    			if (!mounted) {
    				dispose = listen_dev(button, "click", /*click_handler*/ ctx[7], false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*m, $join_options, $exclude_options*/ 14) {
    				each_value = /*m*/ ctx[1].outcomes;
    				validate_each_argument(each_value);
    				group_outros();
    				validate_each_keys(ctx, each_value, get_each_context, get_key);
    				each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, div4, outro_and_destroy_block, create_each_block, null, get_each_context);
    				check_outros();
    			}

    			const grid_changes = {};
    			if (dirty & /*m*/ 2) grid_changes.data = /*m*/ ctx[1].gridData;
    			if (dirty & /*m*/ 2) grid_changes.parameters = /*m*/ ctx[1].parameters();
    			grid.$set(grid_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(togglesize.$$.fragment, local);

    			for (let i = 0; i < each_value.length; i += 1) {
    				transition_in(each_blocks[i]);
    			}

    			transition_in(grid.$$.fragment, local);
    			transition_in(code.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(togglesize.$$.fragment, local);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				transition_out(each_blocks[i]);
    			}

    			transition_out(grid.$$.fragment, local);
    			transition_out(code.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(main);
    			destroy_component(togglesize);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].d();
    			}

    			destroy_component(grid);
    			destroy_component(code);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance($$self, $$props, $$invalidate) {
    	let $join_options;
    	let $exclude_options;
    	let $group_params;
    	let $option_scale;
    	let $parameter_scale;
    	validate_store(join_options, 'join_options');
    	component_subscribe($$self, join_options, $$value => $$invalidate(2, $join_options = $$value));
    	validate_store(exclude_options, 'exclude_options');
    	component_subscribe($$self, exclude_options, $$value => $$invalidate(3, $exclude_options = $$value));
    	validate_store(group_params, 'group_params');
    	component_subscribe($$self, group_params, $$value => $$invalidate(6, $group_params = $$value));
    	validate_store(option_scale, 'option_scale');
    	component_subscribe($$self, option_scale, $$value => $$invalidate(15, $option_scale = $$value));
    	validate_store(parameter_scale, 'parameter_scale');
    	component_subscribe($$self, parameter_scale, $$value => $$invalidate(16, $parameter_scale = $$value));
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('App', slots, []);

    	const container = css`
		height: ${windowHeight}px;
		overflow-y: scroll;
	`;

    	let m = new multiverseMatrix(data);
    	let showInstructions = false;
    	m.initializeData();
    	const parameters = m.parameters();
    	const param_n_options = Object.fromEntries(Object.entries(parameters).map(d => [d[0], d[1].length]));
    	const n_options = Object.values(param_n_options).reduce((a, b) => a + b, 0);
    	const cols = [...Object.keys(parameters)].length;

    	// initialise parameter and option scales
    	// these are updated as stores whenever there
    	// is a relevant interaction
    	set_store_value(
    		parameter_scale,
    		$parameter_scale = ordinal().domain(Object.keys(parameters)).range(Object.values(param_n_options).reduce(
    			(acc, val, index) => {
    				if (index == 0) {
    					acc.push(0);
    					acc.push(val); // acc.push([val[0], val[1]]);
    				} else {
    					acc.push(val + acc[acc.length - 1]); // acc.push([val[0], val[1] + acc[acc.length - 1][1]]);
    				}

    				return acc;
    			},
    			[]
    		).reduce(
    			(a, v, i, arr) => {
    				if (i > 0) {
    					let opts = arr[i] - arr[i - 1];
    					a.push(opts * cell.width + (opts - 1) * cell.padding + groupPadding + a[i - 1]);
    				} else {
    					a.push(groupPadding);
    				}

    				return a;
    			},
    			[]
    		)),
    		$parameter_scale
    	);

    	Object.keys(parameters).forEach(function (d, i) {
    		let n = Object.values(parameters)[i].length;
    		set_store_value(option_scale, $option_scale[d] = band().domain(sequence(n)).range([0, n * (cell.width + cell.padding)]), $option_scale);
    	});

    	function hideOption(event) {
    		let parameter = event.detail.parameter;
    		let option = event.detail.option;

    		if (!event.detail.state) {
    			set_store_value(exclude_options, $exclude_options[parameter] = [...$exclude_options[parameter], option], $exclude_options);
    			selectAll(`button.join.${option}`).property("disabled", true);
    		} else {
    			set_store_value(exclude_options, $exclude_options[parameter] = $exclude_options[parameter].filter(d => d !== option), $exclude_options);
    			selectAll(`button.join.${option}`).property("disabled", false);
    		}
    	}

    	function joinOptions(event) {
    		let parameter = event.detail.parameter;
    		let option_pair = event.detail.option_pair;
    		let indices = event.detail.indices;

    		if (event.detail.state) {
    			set_store_value(
    				join_options,
    				$join_options = [
    					...$join_options,
    					{
    						parameter,
    						'options': option_pair,
    						indices
    					}
    				],
    				$join_options
    			);
    		} else {
    			set_store_value(join_options, $join_options = $join_options.filter(i => JSON.stringify(i['options']) !== JSON.stringify(option_pair)), $join_options);
    		}
    	}

    	function sortDirecitonCallback(event) {
    		$$invalidate(1, m.sortIndex = event.detail, m);
    	}

    	onMount(() => {
    		let isSyncingLeftScroll = false;
    		let isSyncingRightScroll = false;
    		let leftDiv = select('.vis-container').node();
    		let rightDiv = select('.grid-container').node();

    		leftDiv.onscroll = function () {
    			if (!isSyncingLeftScroll) {
    				isSyncingRightScroll = true;
    				rightDiv.scrollTop = this.scrollTop;
    			}

    			isSyncingLeftScroll = false;
    		};

    		rightDiv.onscroll = function () {
    			if (!isSyncingRightScroll) {
    				isSyncingLeftScroll = true;
    				leftDiv.scrollTop = this.scrollTop;
    			}

    			isSyncingRightScroll = false;
    		};

    		document.querySelector('body').style.overflow = "hidden";
    		console.log(showInstructions);
    	});

    	// defining color variables for use in CSS
    	document.documentElement.style.setProperty('--white', colors.white);

    	document.documentElement.style.setProperty('--activeColor', colors.active);
    	document.documentElement.style.setProperty('--bgColor', colors.background);
    	document.documentElement.style.setProperty('--grayColor', colors.gray);
    	document.documentElement.style.setProperty('--hoverColor', colors.hover);
    	const writable_props = [];

    	Object_1.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(`<App> was created with unknown prop '${key}'`);
    	});

    	const click_handler = () => {
    		m.initializeOutcomeData();
    		m.updateHandler($join_options, $exclude_options);
    		((($$invalidate(1, m), $$invalidate(2, $join_options)), $$invalidate(3, $exclude_options)), $$invalidate(6, $group_params));
    	};

    	function vis_term_binding(value, outcome) {
    		if ($$self.$$.not_equal(outcome.var, value)) {
    			outcome.var = value;
    			((($$invalidate(1, m), $$invalidate(2, $join_options)), $$invalidate(3, $exclude_options)), $$invalidate(6, $group_params));
    		}
    	}

    	function vis_sortByIndex_binding(value) {
    		if ($$self.$$.not_equal(m.sortByIndex, value)) {
    			m.sortByIndex = value;
    			((($$invalidate(1, m), $$invalidate(2, $join_options)), $$invalidate(3, $exclude_options)), $$invalidate(6, $group_params));
    		}
    	}

    	function vis_sortAscending_binding(value) {
    		if ($$self.$$.not_equal(m.sortAscending, value)) {
    			m.sortAscending = value;
    			((($$invalidate(1, m), $$invalidate(2, $join_options)), $$invalidate(3, $exclude_options)), $$invalidate(6, $group_params));
    		}
    	}

    	const changeOutcomeVar_handler = (i, outcome) => {
    		m.updateOutcomeData(i, outcome.var, $join_options, $exclude_options);
    		((($$invalidate(1, m), $$invalidate(2, $join_options)), $$invalidate(3, $exclude_options)), $$invalidate(6, $group_params));
    	};

    	const setSortIndex_handler = event => {
    		$$invalidate(1, m.sortByIndex = event.detail, m);
    		m.updateHandler($join_options, $exclude_options);
    		((($$invalidate(1, m), $$invalidate(2, $join_options)), $$invalidate(3, $exclude_options)), $$invalidate(6, $group_params));
    	};

    	const changeSortDirection_handler = () => {
    		$$invalidate(1, m.sortAscending = !m.sortAscending, m);
    		m.updateHandler($join_options, $exclude_options);
    		((($$invalidate(1, m), $$invalidate(2, $join_options)), $$invalidate(3, $exclude_options)), $$invalidate(6, $group_params));
    	};

    	const remove_handler = i => {
    		m.outcomes.splice(i, 1);
    		((($$invalidate(1, m), $$invalidate(2, $join_options)), $$invalidate(3, $exclude_options)), $$invalidate(6, $group_params));
    	};

    	$$self.$capture_state = () => ({
    		css,
    		cx,
    		onDestroy,
    		onMount,
    		d3,
    		data: data$1,
    		multiverseMatrix,
    		windowHeight,
    		header,
    		margin,
    		cell,
    		groupPadding,
    		nameContainer,
    		gridNamesHeight,
    		colors,
    		exclude_options,
    		join_options,
    		parameter_scale,
    		option_scale,
    		group_params,
    		Vis,
    		Grid,
    		Popup: Grid,
    		ToggleSize: Toggle_gridSize,
    		Code,
    		container,
    		m,
    		showInstructions,
    		parameters,
    		param_n_options,
    		n_options,
    		cols,
    		hideOption,
    		joinOptions,
    		sortDirecitonCallback,
    		$join_options,
    		$exclude_options,
    		$group_params,
    		$option_scale,
    		$parameter_scale
    	});

    	$$self.$inject_state = $$props => {
    		if ('m' in $$props) $$invalidate(1, m = $$props.m);
    		if ('showInstructions' in $$props) showInstructions = $$props.showInstructions;
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$self.$$.update = () => {
    		if ($$self.$$.dirty & /*m, $join_options, $exclude_options, $group_params*/ 78) {
    			{
    				m.updateHandler($join_options, $exclude_options, $group_params);
    				((($$invalidate(1, m), $$invalidate(2, $join_options)), $$invalidate(3, $exclude_options)), $$invalidate(6, $group_params));
    			}
    		}
    	};

    	return [
    		container,
    		m,
    		$join_options,
    		$exclude_options,
    		hideOption,
    		joinOptions,
    		$group_params,
    		click_handler,
    		vis_term_binding,
    		vis_sortByIndex_binding,
    		vis_sortAscending_binding,
    		changeOutcomeVar_handler,
    		setSortIndex_handler,
    		changeSortDirection_handler,
    		remove_handler
    	];
    }

    class App extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init$1(this, options, instance, create_fragment, safe_not_equal, { container: 0 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "App",
    			options,
    			id: create_fragment.name
    		});
    	}

    	get container() {
    		return this.$$.ctx[0];
    	}

    	set container(value) {
    		throw new Error("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    const app = new App({
    	target: document.body
    });

    return app;

}));
